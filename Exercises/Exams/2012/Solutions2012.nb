(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1052819,      20371]
NotebookOptionsPosition[    991536,      19288]
NotebookOutlinePosition[   1020055,      19883]
CellTagsIndexPosition[   1019227,      19860]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Graphics", "Section",
 CellChangeTimes->{{3.4758837028249073`*^9, 3.475883721583129*^9}, {
  3.484434919633348*^9, 3.484434922548567*^9}, {3.516666408718433*^9, 
  3.5166664091335983`*^9}, {3.548912229222934*^9, 
  3.5489122324100103`*^9}},ExpressionUUID->"94a9e6d4-e1b3-4b73-94c3-\
8727087bb80c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Elliptic curve ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Exercise",
 CellChangeTimes->{{3.415598897630817*^9, 3.4155988993253393`*^9}, {
   3.415792063240962*^9, 3.415792063417357*^9}, 3.479964551056511*^9, {
   3.517694181448888*^9, 3.517694185904394*^9}, {3.5176953112556057`*^9, 
   3.517695315094222*^9}, {3.517748832811035*^9, 3.517748833263063*^9}, {
   3.517748953595207*^9, 3.517748954019075*^9}, {3.5489122410151243`*^9, 
   3.54891224455052*^9}, {3.548916828892213*^9, 3.548916835819696*^9}, {
   3.548917030701303*^9, 
   3.548917030841792*^9}},ExpressionUUID->"55ff5a7a-5633-4911-8128-\
ea4931fe6883"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["Manipulate",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Manipulate"]],ExpressionUUID->
  "682decbd-1d6d-4ee7-b9cb-5e42aaad6e06"],
 " and ",
 Cell[BoxData[
  ButtonBox["ContourPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ContourPlot"]],ExpressionUUID->
  "a67bf303-0243-47ef-a050-9b94e5426fc2"],
 " to visualize the ",
 StyleBox["elliptic curve",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["y", "2"], "\[LongEqual]", 
    RowBox[{
     SuperscriptBox["x", "3"], "+", 
     RowBox[{"a", " ", "x"}], "+", "b"}]}], TraditionalForm]],ExpressionUUID->
  "eb763627-654b-4540-9396-86b486d597b0"],
 " over ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "3"}], ",", "3"}], "]"}], "\[Times]", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "3"}], ",", "3"}], "]"}]}], TraditionalForm]],
  ExpressionUUID->"4d0fe576-ec17-4053-9f91-ae6d0babce78"],
 " as a function of the parameters ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "791e37e7-6c7f-4011-b7d4-cca59dbe7f67"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "0f6be904-c0ad-4983-a990-1860e5379eff"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "3"}], "\[LessEqual]", "a", "\[LessEqual]", "3"}], 
   TraditionalForm]],ExpressionUUID->"256e2acd-711b-450b-928d-b53dfb67b280"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "3"}], "\[LessEqual]", "b", "\[LessEqual]", "3"}], 
   TraditionalForm]],ExpressionUUID->"7fa54556-fe20-4767-a121-c74cc9dc70ed"],
 ". ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.548916541231421*^9, 3.548916708919136*^9}, 
   3.548916839254724*^9, {3.548917033279071*^9, 
   3.548917033430394*^9}},ExpressionUUID->"69927255-218f-4f55-adc7-\
3f67e03fd8e9"],

Cell[CellGroupData[{

Cell["Solution", "Solution",
 CellChangeTimes->{{3.450492134067934*^9, 3.4504921365634604`*^9}, 
   3.512197033318738*^9},ExpressionUUID->"37e0dbbe-4676-4ba1-a1bb-\
7e3b1504fde4"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["Manipulate",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Manipulate"]],ExpressionUUID->
  "cb075f1f-4621-4774-933d-44253ca18de1"],
 " to control ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "8188704b-d914-4d3f-a849-06b56f8ebcb1"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "a61dc331-004e-4770-9370-29d90ff3b26b"],
 ": ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.548859283019734*^9, 3.54885929375389*^9}, {3.548871275982442*^9, 
   3.548871276902484*^9}, {3.548916872452943*^9, 3.548916964779751*^9}, {
   3.54891705093748*^9, 
   3.5489170713479233`*^9}},ExpressionUUID->"a076e683-4a35-4904-a4ce-\
ef62d403e4a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["y", "2"], "\[Equal]", 
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       RowBox[{"a", " ", "x"}], "+", "b"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "1"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4162682057084837`*^9, 3.416268235318902*^9}, {
   3.416268462896914*^9, 3.416268536942585*^9}, {3.416268569327133*^9, 
   3.4162685783184557`*^9}, {3.416268652856097*^9, 3.4162686576756763`*^9}, 
   3.416268699166246*^9, {3.4162687406397457`*^9, 3.416268771981387*^9}, {
   3.416268939352356*^9, 3.416268978456306*^9}, {3.416269063769278*^9, 
   3.416269122952526*^9}, {3.416269183825532*^9, 3.416269184034986*^9}, {
   3.416269245146948*^9, 3.416269245558378*^9}, {3.4162701367591553`*^9, 
   3.4162701428756027`*^9}, {3.548590990182321*^9, 3.548591031262414*^9}, {
   3.548591084109837*^9, 3.5485911413380213`*^9}, {3.5485911917461452`*^9, 
   3.548591222944269*^9}, {3.548916722385063*^9, 3.548916722551017*^9}, 
   3.548916778991177*^9, {3.5489169731640663`*^9, 3.548917012394261*^9}},
 CellID->1503548123,ExpressionUUID->"b10b7beb-933f-42c6-8ae7-0f42aa150e02"],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`a$$ = -2.04, $CellContext`b$$ = 
      1.7400000000000002`, Typeset`show$$ = True, Typeset`bookmarkList$$ = {},
       Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
      Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
      Typeset`specs$$ = {{{
         Hold[$CellContext`a$$], 1}, -3, 3}, {{
         Hold[$CellContext`b$$], 1}, -3, 3}}, Typeset`size$$ = {
      450., {220., 227.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = True, $CellContext`a$173007$$ = 
      0, $CellContext`b$173008$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, TraditionalForm, 
        "Variables" :> {$CellContext`a$$ = 1, $CellContext`b$$ = 1}, 
        "ControllerVariables" :> {
          Hold[$CellContext`a$$, $CellContext`a$173007$$, 0], 
          Hold[$CellContext`b$$, $CellContext`b$173008$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
        ContourPlot[$CellContext`y^2 == $CellContext`x^3 + $CellContext`a$$ \
$CellContext`x + $CellContext`b$$, {$CellContext`x, -3, 
           3}, {$CellContext`y, -3, 3}, PlotPoints -> 50], 
        "Specifications" :> {{{$CellContext`a$$, 1}, -3, 
           3}, {{$CellContext`b$$, 1}, -3, 3}}, "Options" :> {}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{505., {286., 293.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    TraditionalForm],
   Manipulate`InterpretManipulate[1]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.548917013172163*^9},ExpressionUUID->"c70088e5-0422-4a66-abb8-\
3ec29abaf1e2"]
}, Open  ]],

Cell[TextData[{
 "Alternatively, rewrite ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "x"}], "+", "b"}], "\[LongEqual]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ".", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1"}], "}"}]}]}], TraditionalForm]],ExpressionUUID->
  "a324ff9a-5423-4564-8c19-596b2f090a2b"],
 " and control the point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "430c6e2a-226d-442c-9fd9-eb86de1ab40a"],
 " using a ",
 Cell[BoxData[
  ButtonBox["Locator",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Locator"]],ExpressionUUID->
  "06f49b4e-d0a1-4cd0-9397-14ca04854bea"],
 ", here displaying the coordinates of ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "19747832-901e-4e28-9692-934fbd17daeb"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.548859283019734*^9, 3.54885929375389*^9}, {3.548871275982442*^9, 
   3.548871276902484*^9}, {3.548916872452943*^9, 3.548916964779751*^9}, {
   3.548917082309409*^9, 3.5489170873474092`*^9}, {3.548963372826466*^9, 
   3.548963398821678*^9}},ExpressionUUID->"844dcd8d-d1f5-4bd8-80b3-\
2bfde6a33273"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["y", "2"], "\[Equal]", 
      RowBox[{
       SuperscriptBox["x", "3"], "+", 
       RowBox[{"c", ".", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1"}], "}"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "c"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4162682057084837`*^9, 3.416268235318902*^9}, {
   3.416268462896914*^9, 3.416268536942585*^9}, {3.416268569327133*^9, 
   3.4162685783184557`*^9}, {3.416268652856097*^9, 3.4162686576756763`*^9}, 
   3.416268699166246*^9, {3.4162687406397457`*^9, 3.416268771981387*^9}, {
   3.416268939352356*^9, 3.416268978456306*^9}, {3.416269063769278*^9, 
   3.416269122952526*^9}, {3.416269183825532*^9, 3.416269184034986*^9}, {
   3.416269245146948*^9, 3.416269245558378*^9}, {3.4162701367591553`*^9, 
   3.4162701428756027`*^9}, {3.548590990182321*^9, 3.548591031262414*^9}, {
   3.548591084109837*^9, 3.5485911413380213`*^9}, {3.5485911917461452`*^9, 
   3.548591222944269*^9}, {3.548916722385063*^9, 3.548916722551017*^9}, 
   3.548916778991177*^9, {3.548917010100478*^9, 3.548917010282572*^9}},
 CellID->1052680053,ExpressionUUID->"2900c603-e09f-47a3-b8cd-db7a19cee0fe"],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`c$$ = {1, 1}, Typeset`show$$ = True, 
      Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`c$$], {1, 1}}, {-3, -3}, {3, 3}}}, 
      Typeset`size$$ = {450., {220., 227.}}, Typeset`update$$ = 0, 
      Typeset`initDone$$, Typeset`skipInitDone$$ = 
      True, $CellContext`c$173209$$ = {0, 0}}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, TraditionalForm, "Variables" :> {$CellContext`c$$ = {1, 1}}, 
        "ControllerVariables" :> {
          Hold[$CellContext`c$$, $CellContext`c$173209$$, {0, 0}]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
        ContourPlot[$CellContext`y^2 == $CellContext`x^3 + 
           Dot[$CellContext`c$$, {$CellContext`x, 1}], {$CellContext`x, -3, 
           3}, {$CellContext`y, -3, 3}, PlotPoints -> 50], 
        "Specifications" :> {{{$CellContext`c$$, {1, 1}}, {-3, -3}, {3, 3}, 
           ControlType -> Locator, Appearance -> Dynamic[$CellContext`c$$]}}, 
        "Options" :> {}, "DefaultOptions" :> {}],
       ImageSizeCache->{513., {258., 266.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      SynchronousInitialization->True,
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    TraditionalForm],
   Manipulate`InterpretManipulate[1]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.548591119615526*^9, 3.548591141909052*^9}, {
   3.548591210219635*^9, 3.548591223370047*^9}, {3.548916718184575*^9, 
   3.548916723110815*^9}, 3.548916779957787*^9, 
   3.548917092983293*^9},ExpressionUUID->"9d092bdd-76e1-4f30-b703-\
4f414445d69d"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Programming", "Section",
 CellChangeTimes->{{3.4758837028249073`*^9, 3.475883721583129*^9}, {
  3.484434919633348*^9, 3.484434922548567*^9}, {3.516666408718433*^9, 
  3.5166664091335983`*^9}},ExpressionUUID->"22fb40ad-1c28-4c98-80f1-\
99944f110433"],

Cell[CellGroupData[{

Cell[TextData[{
 "Iteration ",
 StyleBox["[5 Marks]", "ExerciseMark"]
}], "Exercise",
 CellChangeTimes->{{3.415598897630817*^9, 3.4155988993253393`*^9}, {
   3.415792063240962*^9, 3.415792063417357*^9}, 3.479964551056511*^9, {
   3.517694181448888*^9, 3.517694185904394*^9}, {3.5176953112556057`*^9, 
   3.517695315094222*^9}, {3.517748832811035*^9, 3.517748833263063*^9}, {
   3.517748953595207*^9, 3.517748954019075*^9}, {3.548858561481941*^9, 
   3.54885857100417*^9}, {3.548859570056308*^9, 
   3.548859570748363*^9}},ExpressionUUID->"b380e599-33f8-43bb-9d84-\
68595b49c4e1"],

Cell["Given the vertices of an triangle in the plane,", "Text",
 Evaluatable->False,
 CellChangeTimes->{
  3.548857683925725*^9, {3.548857772171279*^9, 3.548857772681532*^9}, {
   3.548857803881645*^9, 3.5488578128585463`*^9}, {3.54885816871493*^9, 
   3.548858169208218*^9}, {3.548858667446269*^9, 3.5488586678623753`*^9}},
 AspectRatioFixed->
  True,ExpressionUUID->"ec5bf058-fef1-417c-95f0-e17e8fb440b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vertices", "=", 
   RowBox[{"N", "[", 
    FormBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "0"},
        {"1", "0"},
        {"0.3", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     TraditionalForm], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.548858176580695*^9, 3.548858190253805*^9}, {
  3.5488583061180964`*^9, 3.548858307919189*^9}, {3.548871299068261*^9, 
  3.548871304866579*^9}},
 AspectRatioFixed->
  True,ExpressionUUID->"84dfc3c9-0b33-492e-90c8-8d046a6bc7cf"],

Cell[TextData[{
 "displayed using ",
 Cell[BoxData[
  ButtonBox["Polygon",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Polygon"]],ExpressionUUID->
  "f08f6755-dc0e-4726-a7fe-8fe606e4babe"],
 ","
}], "Text",
 CellChangeTimes->{{3.548858649951954*^9, 3.548858681469586*^9}, 
   3.548959861501462*^9},ExpressionUUID->"65597341-f86b-4463-a574-\
5c4c13077392"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"triangle", "=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
      RowBox[{"Polygon", "[", "vertices", "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.548857946535977*^9, 3.548858025049609*^9}, {
   3.548858361783445*^9, 3.5488583706998777`*^9}, 3.548858692340468*^9, 
   3.548858916663458*^9, {3.5488712420596*^9, 
   3.548871245209643*^9}},ExpressionUUID->"1385d2ba-6dfe-4afa-a4cc-\
496c6f394abf"],

Cell[BoxData[
 FormBox[
  GraphicsBox[
   {RGBColor[0, 0, 1], Opacity[0.2], 
    PolygonBox[{{0., 0.}, {1., 0.}, {0.3, 1.}}]},
   AspectRatio->Automatic,
   ImageSize->{183.33333333333323`, Automatic},
   PlotRange->{{0, 1}, {0, 1}}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.548857949851948*^9, 3.548858025375741*^9}, {
   3.548858184424405*^9, 3.548858193705903*^9}, 3.548858372361124*^9, 
   3.548858697621593*^9, 3.5488712466592503`*^9, 
   3.5488713102877693`*^9},ExpressionUUID->"6c8edf46-6db3-4ad2-b882-\
bea1130f7d49"]
}, Closed]],

Cell["and an arbitrary starting point:", "Text",
 Evaluatable->False,
 AspectRatioFixed->
  True,ExpressionUUID->"c892cbca-b5f6-4be8-a83b-2cf05fa03d96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"start", "=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.548845706707036*^9, 3.548845719722324*^9}, 
   3.548858310982909*^9, {3.5488586884655647`*^9, 3.548858699352854*^9}, 
   3.548858911891464*^9},
 AspectRatioFixed->
  True,ExpressionUUID->"35dd11be-6081-4205-b630-2cea62103a4f"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.49828208568965415`", ",", "0.3268019824125661`"}], "}"}], 
  TraditionalForm]], "Output",
 Evaluatable->False,
 CellChangeTimes->{
  3.548845720195842*^9, 3.548857953114324*^9, {3.548858182768694*^9, 
   3.5488581923521547`*^9}, 3.548858311657461*^9, 3.5488583882802467`*^9, 
   3.548858699834134*^9, 3.548871312014965*^9},
 AspectRatioFixed->
  True,ExpressionUUID->"064062ce-46c2-45b1-8922-03bb736f3d6a"]
}, Closed]],

Cell["consider the following iterative scheme:", "Text",
 Evaluatable->False,
 CellChangeTimes->{
  3.548857683925725*^9, {3.548857772171279*^9, 3.548857772681532*^9}, {
   3.548857803881645*^9, 3.548857831286645*^9}},
 AspectRatioFixed->
  True,ExpressionUUID->"8aa6f2a2-8a52-4499-a817-0e170efc7ba1"],

Cell[TextData[{
 "At each step, define a function called ",
 StyleBox["next[point_]:=...", "Input"],
 " which selects ",
 StyleBox["one",
  FontSlant->"Italic"],
 " of the vertices at random (using ",
 Cell[BoxData[
  ButtonBox["RandomChoice",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RandomChoice"]],ExpressionUUID->
  "f9343e33-dafd-4f32-a9ad-93193d5a8fa7"],
 "), and computes the next point in the iterative sequence by taking the ",
 StyleBox["midpoint",
  FontSlant->"Italic"],
 " between the current point, ",
 StyleBox["point", "Input"],
 ", and the selected vertex. ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 
   3.5488592434735117`*^9}},ExpressionUUID->"24febce9-fe3c-416f-8416-\
b1c2285ec0fb"],

Cell[TextData[{
 "Iterate this operation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"5", " ", 
    SuperscriptBox["10", "4"]}], TraditionalForm]],ExpressionUUID->
  "eb85b9da-6a15-4eae-af02-505881aa67db"],
 " times from ",
 StyleBox["start", "Input"],
 " using ",
 Cell[BoxData[
  ButtonBox["NestList",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NestList"]],ExpressionUUID->
  "d967590e-1906-4715-aa9c-f06f5744414a"],
 ". ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.548857887644259*^9}, {
   3.548858413154546*^9, 3.548858420870763*^9}, {3.5488587882807903`*^9, 
   3.548858791339239*^9}, {3.548859099953499*^9, 3.548859100228373*^9}, {
   3.548859185694812*^9, 3.548859200220784*^9}, {3.548859394202323*^9, 
   3.548859402147458*^9}, {3.5488714096371613`*^9, 
   3.5488714201281977`*^9}},ExpressionUUID->"f89f4da8-8845-482b-bf9f-\
ba87c4f64508"],

Cell[TextData[{
 "Display the sequence of points overlaid onto ",
 StyleBox["triangle", "Input"],
 ", using ",
 Cell[BoxData[
  ButtonBox["Take",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Take"]],ExpressionUUID->
  "324a04df-5d43-4a2a-9e8d-9f5d3070d829"],
 " and ",
 Cell[BoxData[
  ButtonBox["Manipulate",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Manipulate"]],ExpressionUUID->
  "a3305514-1ed6-40ec-8e71-8911414b6f8a"],
 " to control how many points are displayed. ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.548857914466654*^9}, {
   3.5488584271110086`*^9, 3.548858459781661*^9}, {3.548858512001157*^9, 
   3.548858533570794*^9}, {3.548858808569306*^9, 3.548858811697015*^9}, {
   3.5488593710787783`*^9, 3.548859410668892*^9}, {3.548859515927478*^9, 
   3.5488595160154676`*^9}, {3.5488714290798807`*^9, 
   3.548871430031649*^9}},ExpressionUUID->"e1f32a8f-80df-4b84-95ec-\
9c536b6897d0"],

Cell[CellGroupData[{

Cell["Solution", "Solution",
 CellChangeTimes->{{3.450492134067934*^9, 3.4504921365634604`*^9}, 
   3.512197033318738*^9},ExpressionUUID->"a9c11107-07e2-4745-b867-\
147ccab6c3e9"],

Cell[TextData[{
 "Define ",
 StyleBox["next", "Input"],
 ": ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.548859283019734*^9, 3.54885929375389*^9}, {3.548871275982442*^9, 
   3.548871276902484*^9}},ExpressionUUID->"ad0d6968-7259-49e6-a68f-\
5d342467cafb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"next", "[", "point_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"RandomChoice", "[", "vertices", "]"}], "+", "point"}], 
   "2"]}]], "Input",
 CellChangeTimes->{3.548845752812405*^9, 3.548858931809805*^9},
 AspectRatioFixed->
  True,ExpressionUUID->"754154bc-79a2-4253-b293-8ef3158701e7"],

Cell["For example,", "Text",
 Evaluatable->False,
 AspectRatioFixed->
  True,ExpressionUUID->"dc1e9092-0f55-452f-a408-b3328d76232e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"next", "[", "start", "]"}]], "Input",
 AspectRatioFixed->
  True,ExpressionUUID->"aef6cd44-2814-459d-b877-0df75b6731c0"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.7491410428448271`", ",", "0.16340099120628304`"}], "}"}], 
  TraditionalForm]], "Output",
 Evaluatable->False,
 CellChangeTimes->{3.5488457680631523`*^9, 3.548858087161313*^9, 
  3.548858203735393*^9, 3.548859303837698*^9, 3.5488713205864687`*^9},
 AspectRatioFixed->
  True,ExpressionUUID->"d1d5efc4-f7fa-482f-a21f-a2841d637889"]
}, Closed]],

Cell[TextData[{
 "Iterate this operation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"5", " ", 
    SuperscriptBox["10", "4"]}], TraditionalForm]],ExpressionUUID->
  "5b9488d4-0118-4204-b1bb-c8de8878ee0f"],
 " times using ",
 Cell[BoxData[
  ButtonBox["NestList",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NestList"]],ExpressionUUID->
  "52f3164f-2b42-4bc4-a776-e64f37b248c9"],
 " to obtain a sequence of points: ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 Evaluatable->False,
 CellChangeTimes->{{3.548859314879751*^9, 3.548859336270164*^9}, {
   3.548859478714642*^9, 3.548859495192458*^9}, 3.54887128172694*^9},
 AspectRatioFixed->
  True,ExpressionUUID->"7c44bcba-81b9-4128-8ba8-c9640fcf3c45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"points", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{"next", ",", "start", ",", "50000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.548845785465188*^9, 3.548845792093754*^9}, {
  3.5488458655568027`*^9, 3.548845865962701*^9}, {3.548845952663577*^9, 
  3.548845953175208*^9}, {3.548858237907619*^9, 3.5488582766943817`*^9}},
 AspectRatioFixed->
  True,ExpressionUUID->"576c7dad-5d0f-4f32-9074-f9a0abab605a"],

Cell[TextData[{
 "Display the sequence of points overlaid onto ",
 StyleBox["triangle", "Input"],
 " using ",
 Cell[BoxData[
  ButtonBox["Take",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Take"]],ExpressionUUID->
  "83d5124f-1c4d-41f8-a126-8c1261edc915"],
 " and ",
 Cell[BoxData[
  ButtonBox["Manipulate",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Manipulate"]],ExpressionUUID->
  "92942c10-de75-4602-bd49-7bc25bc2f199"],
 " to control how many points are displayed: ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "MathCaption",
 Evaluatable->False,
 CellChangeTimes->{{3.5488595034733257`*^9, 3.548859512503971*^9}},
 AspectRatioFixed->
  True,ExpressionUUID->"87414360-ac02-4ae2-9034-e00d04e57e11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsolutePointSize", "[", "0.5", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"Take", "[", 
          RowBox[{"points", ",", "i"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     "triangle"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "400"}], "}"}], ",", "1", ",", "50000", ",", "20"}], 
    "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.548845807489204*^9, 3.548845832849805*^9}, {
  3.5488458735647163`*^9, 3.54884604902174*^9}, {3.5488461992192173`*^9, 
  3.5488462740105667`*^9}, {3.548846401195581*^9, 3.548846445171033*^9}, {
  3.5488577117475843`*^9, 3.548857715400723*^9}, {3.5488580336410713`*^9, 
  3.5488581444629917`*^9}, {3.548858225524541*^9, 3.5488582817283373`*^9}, {
  3.548858466940597*^9, 3.5488584856089077`*^9}, {3.548859546402689*^9, 
  3.548859547320943*^9}},ExpressionUUID->"900fc69a-9854-4466-9714-\
dacfb393b592"],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`i$$ = 7821, Typeset`show$$ = True, 
      Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`i$$], 400}, 1, 50000, 20}}, Typeset`size$$ = {
      450., {221., 228.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = False, $CellContext`i$6186$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, TraditionalForm, "Variables" :> {$CellContext`i$$ = 400}, 
        "ControllerVariables" :> {
          Hold[$CellContext`i$$, $CellContext`i$6186$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[
          Graphics[{
            AbsolutePointSize[0.5], 
            Point[
             
             Take[$CellContext`points, $CellContext`i$$]]}], \
$CellContext`triangle], 
        "Specifications" :> {{{$CellContext`i$$, 400}, 1, 50000, 20}}, 
        "Options" :> {}, "DefaultOptions" :> {}],
       ImageSizeCache->{505., {273., 280.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      Initialization:>({$CellContext`points = CompressedData["
1:eJw03HdUVNcaBfCh2EvsLRbs2BGNUaNusLfYYy/YiDUxtmeLAhpjRcReoqjY
YgkgdtShFwGn0dt0ZoZiiYnGGH3nXjZ/vfVbc+fss79h5t6Tl5W2i36cstRZ
oVBMjlUopP91qxe4P9dUhEn3b+dPcehQ4Rd0HFxjfpq89aOJjoSz4cG1wZ/s
dCidQx+lk+ldyFUnunRprsKP8x5e1nXRY3fAz1/2vKLGA+nlRjY6ms7Gxrev
vcZWTcXtbvePDqxipaPoTPomnQB5e3cSsNFyfMpVpRH9e644tCPTSGvQsund
RKy00zF0Dh2BxBFlr1/MttIX6Uw6mK5cPwAPRbtZzyvXX4spQ7NO/LkkHzIb
6HFU9ZdlUPNiWkVn0Up0XP/zgIkJFjqMzqBD6Hg6iL5L+0GOm2ug1yB/Te+D
n/7KxQmJ9fT4eu74SzueWGkVWophP5tfQiuRZzp/t/s2I6Y6Gs10djbSGlqD
d++/71HrvJmOQVCwU2Jo/0KM/c15nJeXEaFLlL27BBbTGrT5fHOp4Yge8vJB
Zjw4OfLzlh65uD7Vp0b10Q7I8futdC7MUpyYk7x8sJVW0Zm0kk6gw+h7dAh9
BXK8X+V6x+GXGfFqjJeN3o06/TvFvy7Vo2uYq2uHHnrI29mdi8bSy01sdAqd
DZfAMT8N+kaFKsf9/ELF398ZnyGar++rIbd1LqGj6Tw0TB31wdrPSD9HTWv7
n9d9aacfQyMtP9sAOT7MgFWz3ndwe5uLijgb5jQZUqO6+LwqnE1n0kl0Av2A
vkdfg69or1ppoE/SanoPxu8z5fhP1KCKFN9bjyPGTRv1R8y0CmKY9bb0KIST
05haq2qb6XRaRz+l4+jbdCTkuNd6OhTS8O9ustFH6Wx6F51Er6cf0Evwx4hh
t3wmJ8M/tEq/qjX1uLfsWuPuXU20itbSSrxNWx36R08tgiKVCV5ORhyVtuOh
xejZPotDFHZ0dHs7e1Cqmc6BtPvWvg46mc6lH+Lihelh11IzIS8fZIAcd8dC
i7+DoX/Ex44vwnL/g/7OS8yoiCumdZDanLSX0HEoU3aucSraCDHsSX4HjNg9
O/qi55x8NMlu5u410o6LUlyTYjqHzqKTIcfHW+iH0NVscizH6KCv42vNjBMD
hhgRLdp7puhpDa1C4NuMpYGHzLQSoz44PBNHOegwOpcOQfDTR6mvD1vpIDqT
9oPx/d87go06BIp2R9vq6ThaBfFhrNsWmoYlIYrmS6ub6Se0jr5Fx+HnDadM
7cv0dCTkuI02OhRS+8bVDXCpkuQ+LEQPqX3NXTZaRWfTSnRYUrXW+bwMyG9v
ZMTN5y3bLP9VBzF8T9eadqz53LnLhAItxPCaO/9Siimnetz22qNFI7dLtf2H
lmOa7/5u9YxmuhDlnzvEX99aCHn5oGJ8xJifHOeK6Sx8Oh/af8OLEjoRqVJc
pBFOUvwbI62hNVC4i/g/NZDjo8w4LcU31EKOm++gY+lcKMbum/ouKhXy8ies
aNF92w9ZSSqIYU9KGldCK+k8eEnbO/EcFXFWyHFrTXQmYmKKNx6sXQA5PtKC
D1vqfKdvk42KOPF3NcMtbu/1DEzZ7dW21+oySO3n/6BDFyn+Xjkq4rWQ4+a8
RFjWpCqf/LVIqeduvnzrJdZWGXr25GwtKuIqHUsX0XfoF/Ql+hkM6x6P3H0u
HnL8fwb6Lq2G+HDidKeT0E6K32GmH9A6uLSdMP7WXgMdR6vpSDqaDqXD6aNY
L8UdS4S3FDdZj7Kg6RudP6VDav/J3YaMwb2+bjFLDfnyRqXY8OL5wZHTzXQ+
HhVbRrbv5qBT8bsSa+YbDai5eXnJoQATxLD793pto7V0Nh2Lxu+rpY8bZKXv
4PbhC99bMopwWIrvL+4fS2yzNv9VTKvh8lm5eW+iHmL4qDnBDDHMhu0X5kIM
s02Vzg46hc6FvB3xux8V+deo6L1WWklnouHUlYs6jH8Oqf2aixbM/6FvxMVV
KpyU4xy0ks7FohXfHti1/DmuSPGRVohhHvZYbaIzaS2dQMfS95BT4/3W5/ZU
5H64pB8u7mMVjqLV9E06mj5Lh9MH6Av0Nvowakpsqaf9UeXjE8v6ujb6Jzh/
Klw7sFopvRBOO34c8JtLOT2ZLqS9oSyaM6HYr5jujVtRH9Z5HdTDS7Rp4qTH
9Pn/DQgZaaNVkONf6REU0PDWCIUZwY2X7ry3V9xvxLDbKRwQw85bXyjuN2K1
+ooyOoEuoO/RaRg/qOoKlSMJjc4u6+EcYqIf0FqMjIn8tnh1Mqp0nr1fYTPT
D2kd4haHVL0VmAw5fqAFm2rrQjJ6m+gMWkvH07H0XRzybxE50NdIX4b7l5Hf
6j7nQW57XY+eV9cpd57Kghw3zYZU0d7HaqGz4Svaf9hRhH3S2xtbkRuy+uKn
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
2ug0Opt+QidhtP+mN+aQFAwSbac6mehHtBaN9nSeWPd3Ax2L222jbVeH5WHP
OdclXX2MWNP1w8HV32RhuBTvYYdGtJ/0dQYuSsufLIXc9lsLnY/cjAa1HVcc
dCoefZ2p8XYzQl7+iInW0FpI03h0XQMx7GlKs5mOoXV0BC2+hz5vtRcKEuEu
LX/WSN+nNZgxzuPama7JGOt1xbnTVTMKZ46r5p/0Ah2luKkO+hmdC/HhbJja
Udz/pOWPWunHdCZ9g06AvHyOnr4Hc7L3V3Frc+E/vsr4CcsN2Lx2Up3ws1Za
DfntX+ohx8024+L5umVPI3MQdN0vuUsPB8SwH/dabaVz6Uw6BR/sqvJxZyz0
IzqD/h3H6zofxvc6VMTpYQ5psWhAmhZS+8hlNogPY2w/P3FuleL7liJEihfP
z79Lb29RDodbvX/WjdTiO9GmSZ2XqPt72+PaQVp09Vk7dv/ulwj54fclLv21
aOwx4PKIWHFeleK/0kIa9kVDpWPpIkjTUaSnQo5/X4xdXuYXzdNUkOM/ltBK
Og/19nwccKm5kX4OOf5OHuR4cQ6o8HNaC9d2O9KX7VahIs5MK2kdHUbHwe1N
8QHf6gY6ElLbPrtsdCi+S666xlrXAIto//mKHuWLQmr4XcuFHDfVRqfQ2fgu
wunsw2EqyG9vZMWxVYrvy+uZ6UyIYff5X3UHnUDn0vfoFPoKul/d7Hv/SxWO
SfFhejxffi6nrKqZVtE6WpwnRbt6v2mhld4unp/FsPPbLtNihfrVjzVr2elY
Ooe+Qydj+R3f37+pk4QeLT59u7CtCTYxHfWAF5CXD7JDJ4ZfZ5kaUtuZSaVw
7b/u15BvNRgZ+6xL9yXlOPvV1ILlSg0uSfGeL/F92rT/tQgz00W0jn6BbxXD
M668Fr/XH8/EDLWa0FAx+e7yj2ZaS+voWFxqPnR9elMd5PhtRjqO1qDvsD3p
/wQY6Ricbju8eJu3nY7A6YIfvPavNuD917/8ktrZQKtpNR1NR0NqG97DSIfT
GvoCyja6zF6130wfpnW0Px4X+DXJa2ehf6Iz6IUQn32Hat10OCvaHamup+No
FR1JKyGGvTZsqIEOg9vA4lpj83PRtfuSIXsVBjqFVkNqv3eOiY5GoRT/Vz6k
9Prid7fCqbQGLVWL5oSeM9ExqCvaTnlhpyOg87ts2hBpgBhmA6d2BqxQal4P
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
sMvVw47Oov3KMCudg8TuK47UGliE6+3nnVPsKKEz6Wy8KZk4ddglK51M6+nb
OHZA6TdwmR7jpbhvzHQSraWj6QT6PH2LPkqfw/tBs3OrL1HhyC1/RYJ47lY5
htZAmkbMRDWk9pFtbXQsLb7H/1q3LGxUGsSwvK57lGDDw5t1DJ2sdDYGS8uF
OOlkOo++jf5jq53JmpeDKCnO30yn0Fo8yb29vdmCLMhx0230Q9pA36RV9Fk6
hj5ER9Db6BCI4Z9JvZ6EKVLcFBPEsP8KXWehNbSOVmK6xjl44RkbHYlni3fm
/NevGFKbRtXMCJ5UENT0tnjv9/gqaP8OByy+NWb6vMqGi/tnfiOHVUCOO2qA
Ykejc+Hez2gVXUzH0Fl0BP0Qa/N9Mi4nJ8P7m3pdalnMEMM/UaNxFuT4Px2o
a+j0l1Kc16psRI0lIRsDxHmtymo6j46FNPyx+3MgtfH61QxH4OOgh8UGBIy8
3GlvqgMDTb3O/fFFCW2ks2k1nUzH0rfpy/Ar/7l56+1qSO0Hp5joWFpDX6aV
ONXjfOOvh6dAvryJBfJ2pmeh7fSGqnmeTvohnYcGCw2WJep0SG2aDLejVfSk
qTHjNRDD33CgTTmkaax5pIW8fHAl0gdHvigU59EqF2G+aL++ZjGk9j3nl+LE
uiPh3+8opXMhhnv2n4MmVMWVQGr3W8d8iOH33F1RRqfT+fB59ffFlyOsdDqt
p+/RSfRVjPr85u7r2RmoijPRD2gNfZ1W0qfpSMjbUyRDar++jhn9hrr23BSd
Can9/d0OdOyc32FDdS2ktt8Pr8A40fbsMBtdiA4j77s/8S6jMzB7RZfJfYrM
EMOP+nGvldbSehhPpTeY+JONTkLFxJJ9FweV0dF4LbVtWUmfxxjvUSvufGeF
vPxpE62nNXQSraSj6Uj6PB2Gwf9r7nL1bDJ67a5oZgkywbGtnW92tIXW0Dpa
iXtPPfz/vm6jIzF9Y7jz0KhizFPfbDPJw4wvzy66d/5wKa2F3FZdTidg7quF
9/vessAzr6+qZhsL3h9UfPlkXCHk5bycCDU1HeHyKBdi+Kv89lbALqbRbGM2
2t7f3b/NiGd0Ml2MIdq1o9uJc0mVsyDHf+2kH9J59E10Ovlske1LO30Wib33
um57/hSVUvxGE154hgc+/aeU1tC5tBKDd3Yy/e9DCR2JnBaJGw+HPsUfot3h
Gma4X970lWVBHoxeHYPUOx04XZmj2j8hB0v3NvCziefVD6J926MldCGk9g+6
PkVzaTmvUjQT7f/XPQ91RfvBe8vpNLqAjqMfw6/hi83/iXNOle+jTa038T+L
c06Vr8Gr2vviR/Mr6FOQ4/6zQAz/pfdyE62jNXQirUTxyW8Op0VlQAyrlaqO
eI4rn/87XjxnTnu1/cRS3Qmp/aP34v1EtF+1s4JOoAvpW3QGIg5/3XReVCpq
ScsHW9HnZZd5E15baD2abfytp89mJ52EGfuOl8zeb4Ycv9pCa2kdxLDfHp9r
oxNpAx1Fq+hwzGpv7/7z/EzIyx814YDqfcmv1620htbTSrTr+fPbduU2OhJH
RJvD68roMIzNmP1BPbCSDqaL6EDU/0u8C0wqpVdi39vHrb+9VE4H0AW0P/2Y
9oUcv/bj/nrQH/fnjV7fHvvsk+l6eKzaeTpIYaKTaA0dTSsRmNbkQz8PNdqI
q70U4j2sadLT6i5WWofQA+YVOwOddCKaHo0PqnvQDDG8+q6+FhxIm+W3J8VB
63C05/tlXj3MkJcPttFa2kAn0Cq8H99zyaDHjyEvf8SC0IoOaxcd0OAL9VgP
xVgn7GL4mU+1aGFr7x4YUUEn0IX0LToDXb9uddlHvJ8EScuHWGFPd8ue/7eF
1iNw/pnlHw4Vok3HNor2JTZ4f3vp1KN2pbQBwdJyh8tpFV1Ax8AiprFvbi6k
tlMnmfGmwDsg3FhCayG1myK+t6qcADHc0E7rK+lbmODQNDGL87W8XEMz7NuX
RG0S5+sQ0X71fgedSRvpeFoNqd2nOjMdS2vpy3QCHUrfovdih7Rcy4/Xb0AL
9wkN79/JRz2JTUx0Oq2h79FK+ClH3PpRvP9UOZLW0mG493bQ6skrdHAJDpmm
CjRh/bG7U4dpdVCMSe8819cBw/y//Qa66iG17+ldQSfRhThTcmO6f0wGFGMH
jPT0KKUf0Lk4eX3WmNEB6RDDrOeWKP3vWiK+pwbenS/tdTGX4Z0UH6WFHL+y
kk6gi/Dz6GfOif0sdCaU7f73yqe5k46H6fDmTUcPVtA36EL6DDbYzhbPF78v
VT5I59JbkVPb6THhs2z8JrGliU6mNWgVd+mLPHUmpLYza9joeNqAI3KcmVbR
WjqGTqAjILU7PMhCh8BTji/AdCnO3wTvumfRPSgXXeb6xtbt5KBTaSN9l1bj
/p1mbmiYBmnYLtWsdBytx9JrPV8MP2ymk3Anu8mbc2oHHY2CJZ7v/cX3S5XF
e7irftzfHyyQlw810TpaA3n5puJ90eumWy0fG8TNiGvno4d8eYMyxKeNerY3
zUbn46t5pj1t5xXDLXGdb0KQHSMe7yvq8li8D5gHhgX4lWPwz7M8uv+Xje2i
fY9zlXQyXQTHk9rmkkcWOpPW0fF495ffhrd/2Ogb+Hdjmwfvvy6jz0COe2OG
HL/eBLtq+W8L3jtoDXy7Bx3/b5wZ8sdb2pCvbtnzhC0fctu6ZXQ6nQ+p7dGZ
VjodhwrrHR1700nfw2jRvn1uBX0V7X9SzT/y4zP6JGaLdr+52jBItB+0yEQb
aA3SpLiTenwifbyZjU6ixXt44uOfLygy4V7LJ2Zn9RIMF+0bivfpKmdD3s6A
ImzfUbMybFgJnUlnw2vWh8+qOTSQ4/xLILV3GWijs9FKji+CHDe9BJ162Wv/
sNOIhhMW1ahztQz7D7xNzPO20/loL6ax5t5TiHs9bOdVO653tY7Wr8+DHPdl
OV50/2WI25fifUoMO+xqJY70nN2/uUq8T8lxzzA/49Os6j1L6GI6m86ik+mH
9G36JlK2mJd6TTPTZzHv4cp+e6846EO0kd6Gx2+0Md8/y4bMViY6mdagKU7e
eRxvoZWIMvb2X/B1IeS2bha83BU9bEJyLsSwv6x0cdKpdB59l06jL9Fx9HH6
Cr2HPoF5T3x/+/5Pcb+bTb9dY76JjqY1eO05Pa8RzLQSm6tfrdj/u4OOpI10
GK2mgyFN482OJ5DaBQ8zQQyz0ewXVlqDH3aG7u/+xkmL80bdpkdsajOk9r08
LLSW1iFs+O72A1bb6ETaQEfRKjoca9XB7UcfstBHUHdul4emjoW4vOQTtfcY
E8LSb77ZdyMX0m692jtQ9uHFb7NWZkP+eP0KOpkW10V9tm1ueSauvg703OFe
SsfTufQNOhVS+99fpEBqF2yy0HdoHcSwG3z3XA05PtaGaOnyllbagPxGuPX3
ISetQqUY9qbUCjoG65MnL42f94yOoIvpEMySlg8tpYPwh2j7U0Y5vZYuoOfT
j+npaCzFb/y4nxG0nu5DJ9Ht8VBX++a75xnw3umdcEGcL8ceajEyNFsDqe1U
hQNH2o2ut7CvjTbSBlqNuZ8NCZ8Qo4cY9sxaCiudROvpaDqJPk9HQ5rOgyvJ
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
+gTKh+5q37afjg6hVfQWDJwS0WBPQxO9jNbSc2glPRYV3V/rQncY6IEITD74
fY8PSzG1uU/DIHH9062NOpdRv4JW0QW0Au6i/fu2eZDa+zoYIB1tax8tpNVa
OdhwSbVzZH13M12EGdbEDvV22el0/KW4/tXkxgb09G/lXM/bSGvoXAxb++0v
uTtNdDKtpeNoJR0F19XV678PrVvvCCJFW68epRi+0LNh4EQd5Hj3ClqFRClu
mg7yx8XzYq1VtBby8uI6W2slEm5n2oa72+l4upiOxqYNPx26fy4fUruT4vvd
vux81I2LZlqFhE2DPh87vBy+rvX9uvqY6Ge0ln5CK7FSin+tp+NpNR1NJ9JH
YXvfduPnvbPQQYoT949aP6RV9DVaQZ+hxfddTKfBn0oEOYa6ubvosTjcX684
Z6DVeD/I/v3cgaUIcFgcNGK4ic6itWjtM2NgzEUV5OU8zbhwPfn2umo1xLD9
fULsWLn2hw3S70OUjtZrVDWdRJfRsXQ2pJPxv4KncExz3hV0yQj7cPe31rcG
Ohd/eLv8uOFHG52M70ODht1/XEXHwb25R1X3XkbI8YP1dC6tppPpREQk7fh8
1xIDfQuD531Y0P6/EsjLNdPDoyD19tP/LLQaUtsY8b3qNzzC2z7KhB5tC6fP
6WqltXQhraTT6HjsqveDe6azkY5G+7Ne0YvPlcLd3WVqt0jxft/NpfvJbhW0
CusCpiw8GaCDNOy94vsjTaPf2yLIu3vZIbU/sN1CF2P4R18tGINKOgOr5v3w
bs1KA8Rwz4aMEPedP72Ou9UvhZd75ORRETY6iy6C1P7D0ypIbacus9AKOp+O
oVPpcPoO7v35prwwWEdfoOvWO44bn7//bEAHE70bYwt+UT+7Xwa5bS8dhu1a
EuS4uRDy5hZWOo0uhOaPJa/jVj+D1O6UiwVS+/xqI50Puf2fNjoVN/pEnd/4
TxV9B2LYZ/aMN0Jq+0WAns6l1ajKtH5TNiwXctwcE/7p9/aLu89MtJbW0ko8
keI/MdPxdB4dTafQR3FCtP3xgoEORr9vl89o6VcKqX2Mj/heTckZ+eu9AnhJ
m73E9yoxcMjKTXnY59P/g17uVZDjZ2gxWrRp4VJDK+nnkNqf3GegcyC1nzja
Rj+mi+gbkOOH5kOOf6mjU2kVfYdW4NAk10Ejk9Ig797eADn+6DO4Zzvtd2ps
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
7wzMr4KbFPeqmi5ESFDpV4Pf1tDpdBmdQOfQ0QidtbP/pB+N9En0l+I7VmCl
FLdIh9iWUbua9CrGMNEubICFzqSLURhw4qMkJyOdifWdB2YtvFAOqf2dRkaU
75sad7J3Na3BmJDfep4Wz/mB8b0ta5JMEMN/OvhtCSaI9gl+Nmxpavzu8A9V
dCldSGfT6fQDOoG+RkfTZxEobc8xHdKwA1fp6ARaCZ8/20wb5KenFTCE3jBn
/VkKqf2gFgY6m1ZjzhOnts19lRDD6jBtj4lW0OJ75ZRfoH0zA50K89RBSf6N
rHQ8pPaKwFo6ii6nT9C5dBDk5UOM9Gb4Xrhx+WXfCsgU3+cNzqOVGCTadTAp
IQ3bTZzDG6ygtXQsnYq2ov0EcW5ocDya9uoY67bfQkehkRQ/sZY+QZfTQXQu
vZl+RC+H1H5U6rv15yF7YaeL6iVlWJs0zMe+kY7OoZX0Q1qBKnEzrjTNxsDT
zn3D7QwYN+rLv+aJ55gGq2kNnYyRwye/5z1aA2eR1s7TgKPT1Y2O5ZtoNTJ6
WQN9vrHRyXQpHUdn05Eo6bHE1TrNSIdi45PXVwOryiGGPctusg7nb+2+Fj6q
mlYiv2j8fOX5GlqB6m8v9luZX0fH4tXdme2HVdfT4ci4srnoa08TOkX5O/gE
6mCa++DboW42WkmX0go6m46lH9DhGH/54XDHSD0dAjHMc/YqC+1PF9PrIbXt
5FAIma46PHBTn9nnb6bFc5W0fKfnEMMNdXMy0c9oLf2UTqVv0fH4QUzn+w4Z
cGzq1sTLU49Zon2+wUCrYPslz3/lrnIESHGzTJAv/6Ca1uKaGPbni3WQl2tn
hncX/63/+70EYniuDgdtaN04vGLX7iq6lC6ks+l0+gEeiem83JCPRiFO7uEx
evoJraJ/oZOQ8L7rkZ/+p6Nv00o6AuucvY3GsSb6GK2lA+hUegMdTy/FN57D
xudP1NOzMUxqH2GhJ6CTFDerlh5Ml9PuiHb3W9o2uQg9Xew/OWKnw2oX3+Kg
F2ZaiY+d+q/xemOjxecx3+BQ72NAI3F1a/H3JIZ/fr+hDNKwXeyskOPfVNEl
kON21dBZmH/8xKTfDxoghtnJ3s1Iq2kNCnpcnv040kSnYN2T8TULxlbCy3N2
d7vlBjqfVtNP6GRU19xZl2bU03Hw3zvd5cvdZXBq97GDZy89Fi5WdJ3sWwR5
+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
jjPR2egVo9hyzVSEJtdrO3RcYUHY+xYzv6svnnel+Cg7nUIXIGdY/M3vxHm7
xmn49lff7Af+NjoGD7LCVs1TVtI3cb1fx4C/ephQE6entbT4fkzcEzLshZlW
0jo6DOOmeVzP6mOhQ3Clq6tu+Wk7HUwX0P5YOc7ptzlXy+g1kOOmVdCLILVf
stEIadirxPN11Ms6V3oPsdEqFIhhnzpfSSsRE9RowOlWJohhz23oYMR0aTv3
pX8/welOoMKG4872yAk9y+l8OpdOhfn8wbfwzIaU7uJuwn7roqOPekvnXbF8
sI1OoPMhLsaHTydkiPNtVEvHpWXYLG9HBTm+TwVmFjous36qgbz86Sp4f3I2
/cBFcd4NmDnSP70aQ9uU/7LILs67w2+181r2ko6jS6GO7bRuyfV01MSV00/o
XMjxC9Igx7+3QI73VEGO/9tOK+kCTG4ZebRNHSOdRmvoGDqOvklH0GeQ/Ofn
p2KikrGiv1NK5bd6+iGtwrn/tt8Y/5OBVkJcjJGWpoWQ2v/c0Ih+yzoPadAh
F1L7Z3VsiJrQ8+Gv3bMhtf3fjkr0nPaiqnychS6iP76ejhc6v78fTf34+hP6
4+u38V+taSffj9BB2m1Ls55OoFXwF8NeGGSklfDy3LDyC28bHQZ30aZ5aCUd
gmK3btfy2ojnVzFs9916bIyI9/J7WASpXfBIK51O5+HLwLSuG5NVkD/uUob7
RdvuTv9HDam9n3MFpLYzfjHThThRmHX8Juz0C8htP6+iH0Nefr4JcnyYAfm+
7o/m3bXRajqfjoUcvyYHcvwAI2ridZCXa2WjE+h8XPTbW9z7XAbE8FrH+ZRh
xIAPLlcVakTeG97It30FHUsXYvqk8CGBkS9QJbVNKaMf0zmwNH28ZOBjA50E
OW56IbbJcUaEiPb9sstoDZ1Dx8Eq2k+8b6EjEGD+/lHZpFLkiXaHexogtX2k
LafVWHDjr0s3HugxIKXd6qXjzXg/4thXIycXoJVoH9HRjmcu32S5HCujC/C/
oIjlzuMq6DS6kI6hX9A36cf0GQR2+SkwJMpA76XV9I8o6plbZFungcyWejqO
VqFd2oV2Xb5Lx6CdB1bvqWOmn9A6hFa2CNAkGegEDA2MbLV6USHktuL+dshQ
WadVXhmtgdx2oB4eon2/EDPk5VpbaR36nCteVKtQ3L9a5Tdu2MWC9P6b/jq3
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
LuXBUTWxXeeI53jxm7dh8co87JDjPjiJfkbfoZ/Sl+gn9G/0bYiHc6RyeTLk
+P90dAwtziei7YWRelpBq+hI/Dqlk0X68/71LUc1qhL7wDon0io6mk7AJN+H
q35ITIPU/p27AY33nrwp/X3HOqsR5tFrVMWRUoSJ9tsDTbjmm63a3KmC1sD9
9+i7jb7Xoau4+/95iPPppqLigC+tdD7EsAcfNukghv9qj6+ZVtIfXlfQKego
xYlzVp3v4mGmzq97bAkGSXFT9HjzX6OZt9cXQgwfPteteLx9R0H3MjOtpfPp
dMi3I+4zTFqulZFOpvPw/GLwq9E/56CraDspxUQ/ojX0TToZ7x1vTo+v0tEx
8JPiNljpMHgNrzpeO7iaPoZg6fL2tXQAXU6vh215S0wN10JmS3Gebpvybatu
FlpJF9AKOpWOxBpFq5JhvrkQw5461l5PP6ZV+PbSm2veKZl4LdpOFp+HK6S4
GUZa7PNuaWuH/1GK/6TlnM0496L+kXhXLd47X1vQONBGp9PFdBydicbfO1/r
7q+n42kVfR2Jn/jYRs8z0Weg/8hjQ+eeNnofHqnn7Hlm0sNDiu+no1W0kk6g
FZgRX/Xi7FADHYkeZRvejOtQSQdj4YOGGX/O0uNItyt+4f46RJftNP1900or
aS2twLrAkv0nXuRDvtzZQKfQaqz6y23ztu65mNKrvk/TABPWF+oHbO6kwvVT
DqENvG2Ysmtfv4LuaohhT6znXoOpIQsOvtpnostwfUJU6pavbXSONPyFjzxq
6EeQl59rRF2cns6jVRDPfsZt3zzI8eL7pM5JtIa+QydDju+rp2Mgx5+x0mEQ
w9/3vI0e3dxWuIVd0qHZk4yOe+8Uo5UUN9FKZ9JaOp5Op6/TcRDD/+Zcvo4O
x9suhzvlrrDSp7Dtt1GuS/tV04F0Kb2JzqaXYc0fvoaI3UZ6Bp1H+9JJ9ECM
l+LXGGhPWO8Z+v3YuBTX/IMOJdrp6GxaiWNS3DklpPY9xfmzzgpag3fTHlrG
+WehrVOlZxM7M7677duiZrMSYngtG/jZaAVdDN2+wodd12Shnnv7XfbBFkz6
5alT2AYldkhxE6rQ8lkfh+XtTXQJraGz0Gnvnbbjw/Mgbr613QojvhHtWthM
dB46rZ2W1GiDjU7C9/U33ZrY0ADvwY3ref1gwJsLLr5VwSWQ4/tX4uPlocOa
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
+Wz3SjqeLqKvo0OTL1x8xb4vSo7TwWnnGMejYt9XZyVC25nPd+/0DHK82IfW
+SmtQaLO1T9sgQpS2wlNzfinUcfiqtFifxHRzDV8tw0nOtzY3fyJGgtF2ykj
anBFtE+6baLLkLcw/4V+uo3OQey2ASmPxOdits3Nf0W4EbOenDXMfWul87Al
ou1Xb0frId19W5sJLcXwj5vEPlSK32BD2MOfdpk+KsRNKX5wDZ1Gl2GXS82G
zvdzcWOn4/WQ8RXoFfroVqdCI12IzCHTfR+vKUOVHGemc+h8HFh2u3vGKyWG
SPHrzZDarhtmovNpDZ0Cqf2kuDxI7c7fMkAM/+/EDXkIkOKmV0IM/+OtU/Lg
7ZA/4eqNasi3MyIP7lLc1Fo6iS6n79C59CX6MSoaZ3xy62wKpLZzzHrMkeLu
GGgVraYTIMf/qYYcP9SAo/tSOuQ/NNFqfJOy4PCKuTY6kS6mo+lMOhTVon3f
XkrIyx/RwVm07xOtgtT+D18rnUBr8eDo7ObjmmRDvtzVQj+kC9BDDDtZoadT
ccK0ZdkCnZWOxRgpbk01fQVd7nc403pgLX2CLqd307n0RnQuHNGiXpqRXoKj
VSF7/Y2V9DTI8b9/WH8kXUr3hxw/tILugt1VS8yOK3UYItpH2ungtstu+wXH
YlwQbWfYWeHrrrj4mb+F1iLMWff0N68qOh2TnF5UfBNcQ8fhtRR3zghbt8MB
9cX+P2jF3Jn7+5dhw/FRiQ5i/x925mRB6LgKWotJOWNWqq5U0em4Zrl8d1le
DR0HOT7WiOmbO/WwO6BH/HeDEtpOKEPEUNeP7VKtdA6tRd3tKNFdiu9lgcPb
za7LhpjoApw73iLCPr8MWR3n2887YMZS0d5L7C/qnA8/fOvwwx4d/hRtWi8U
+74i69kG7sXYIsVH2TCy/z9Xhgda6GLIcc7iPNzoI7uFERbs8zcO2nO9CHLc
tCrI7VcXwFe0aX2jhk6ly+hYOgdXpPZL9PQj5M2Mqdx4x0rfpLX0edRL+6nZ
1D/zIcdv1NEptBIxH/8QX9YjF/Lb25sghn/vbIqR1kD8LEzo930ZIu16pq5o
aEa7p4Om5EyvoPNxqKLddcuNKjoFdXE19F36w/WX6Rz6OKR2HzdXoZ4UN0WH
S1K8OEfVWQn1lZIcg7uNVqB/cHyfx2V6iOHf3dnYgE8nlLV5Vmul1She/+C7
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
RV/GrLGD336+8AV9nC6md6M6rozeTOfSy+mn9Ez6Lj2avkQPxnEp/rGB7oZ+
DXfVnjcjH3V6nfVIVRjoVFqNXXGRygbiea3aSiT4zTDsFM9r1Y5E7//ePfzj
rBHq16PDpP9/nmpraA3GYtgL83cWOg4X25/9+1V/Ox2F0DmnkhPF+UNezsWI
CWL4C/+00hp0bdllbdTmCjqOLqSjkJq4e86qz8roc4i+2eS94xwD/vGYWMc/
yIC83KBfHHpbaTWk9oqWFbTo49in5zi9CfLHxe90tbW0Fu8/jeqjrJ2Frrv7
KXzE7/STURUN1sRZaB2kadSb/RxjRJsm4jk8SdrOUz06ScuH2OlkOp+OpVMR
PnVM5r+LU9BJiptkRsyYlJlne5rpLDqLTqAT6Fv0Lfo85O387ynk5U8Y6Lu0
mr5EK+mjdCT9Gx1Kb6RD6O9of3o6vYb+mvajv6An0F1oL7ol7YkjnVf9M198
D6vtBk9l7YP/HBe/v2LYgeL/3nBN3OJtS0tpNZ1DK1Frjufxs8dL6Eic+iul
3+D+xfDy8R3nLL6f3/0SPTYzvYzWwL9B5z/73xLnoiaTmjl6WWg1raOVtIqO
pGPoUDoc598cjTounnfE5l0UYQYE9vrYQCGed+S4iVb8u/j4qePieadDeGcn
/64VGDaz83elIyx0Ia2j02kV/RDa+UlLO0/NgPcKb0VQvBH7+n7T31ylhvvn
7gofo5VW0nr0W7p8aWE7E52M1rcG9K9qZKNjIS8/xQhp9677jOh5sP+f7les
tAaLjixNKnI3QgzTZeciC62hdUizpG8N6q6FvFyrEkhti25oIbVfs8dOx9P5
dDSdiv4D+1+2P38KOW6iGeLi/BbR4RnqO7jVfxphQ+rxf1ymWsx0Hhb3P3il
6pciSO37rihFXnr4lZ/nl9E5dC6dBHn53BL6Dk4en7LhRbmdvogTrTf+pvI2
QY4X34Nqa2k1xLCL3t/XQm7b04L0nj5BLf8Wlj7ewg5F5IO5nZpnQWr/eYNK
KCq+nz460UIX0To6g1bRj+BfVNn98jETfR3Kqp8OTxlro0/TefReyHGTS+lf
IIZ5ILhbOb2aLqDnYpfzK9O83rmYOGhUhrd4nqz2U1pN36WVkKaT+r9kiGHP
tIrn92rH0lo6go6nj9HRCOr+2tg+QYUf95zY2cjNSMfQGmQ/utnj/aJktD2/
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
F/E8Wu04WkWH4/2Ng92DJ6ohL9dUj5M/z7/902M1mkYFuTntt2CJd9rLp+/U
EMN03jOmAvLyLTXYvWq5n2enKijENM520UBezuUFnUA/p+/Sz2BcmP9g9ocU
5O3d697FYIS8nf7PIMe/stJP6HwM7/Xblwf/S4ccv7UUfktfLHs130jnIDFi
0913d6x0Mp1PR9Fp9BX6Pn2Svkbvhb+YxoAfkxEs2r/rpaOjaCXOiDbHlulp
Ba2iw+g4OpAOpwPQQ1quZc3rfeia16+ha16/gK55vRcen0vakbU5BWL4Ixs4
6LBZ7L7NCwOtxMPZH3L9N1lpBZ1Ph2Fz8qk6C2bkQAz/roednk6mVXj2LsLu
ZrqBjqPVdDgdTweh7fyWPjNm15x/hK45fye6pYXMHpOsxoTEH3baddJhkmhz
JNxEi+fMM4MOpn5roxU4Ovns2CW9KukwTOyW1WnAySo6EK/mDywxtxL3S6KN
804dpPavG9hoJarjxO/qM/taY1xNWDTyz+L5Kwshv9zZRmfQBfQDOh2Z9mE9
vmqcjne9nD0cPI2QtyN+17e2dHS1D7Li2DKXNl/VM9H5tJZOoxPp+1D36rTY
6mOgr2Fl8oMPu9oWIdLDzsUxS4dzr/o8CaxbRovvh82n5nv5ltMK/PAwo29o
XCUdhkGivVZXRQei7MGTvMEjxPeTvZ/H8r06vBFtznWw0UqkyHF67BLtzrqZ
sGDGyXaRGwoxSnq5mMekRNPVX6bnwtXHcfcyx0o07f+PtV22mS6ms+ksOol+
hE7dcP5SrIG+Ravp8/BLm1oWettE/05r6W1Y9Frzv+s9a/JW4cPBVZrRSSUQ
wx+4u7EO/y0qfOMVXkYr4RO+aktoXjmtwO+Xazu53Rfvf6ltLQOS1bX2BMy1
0mo6n46n0+gISNP4Tf8MUnp7cf8gLsamd0dUkJcPsEBqe2KRGvZBbTzrTajA
ycbuu03i87BT2TCodpcqXJHiI0x0Ca2ln8Lm4znhdi8z/Ri7xcUYn1wCMfyh
HgY9/ZRWwct32IfUPCMdh9C49tuXVFjpcATdKmzwX7we8nId9Bg6fsPl03ML
IbVpKn7Xqp1B50EMu/mxFUY6FfJ26hRDXs7FiEDnoz2/GlVGa+DlmHbicmA5
nYC3XuGnOp43oK1oP3yRgVbTajT3XLe0u0UNefnTJojhznaKNdFayHHf2+hE
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
+4Fo1yLKgOrd9w3t4m2Dsxz/UY8qok3DVqUY9OXuwf6fJToPQY2+az1km51O
oXPoSChtf7fSN/B23vCLtnEldCCdSx9ARVzl9Zsxu+a++v8urrx+KZT4iDJ6
Jp1Pj0ZY3uOCxquzcHRRbOudTkZ0eX/ra5cvrLSGzqDVeP6k5OCgPYV0KKwF
f8UHxdjpIDqHDoCynX8yIIbnVtvLSMfTGrQ+HIxlL820GpGdvsl22ZCHXvPc
ox1czXQKrYPS/r4GYvjLVdvFc6lo/66rRBtoAx0Lue2WGoV0BAranBrb6FIB
9g1xreohvmd7rxd6tS3Ngrxbt4s2OpHOwnvXy/ohV18gzNWkcu5oRWazHbVL
dmihLFe/BLva53r8OkOHLt59VYP8yzCza9VOPyTo0LBVc1+PuHI6mi7ADXn5
aWY6ja68/imW1+x/o068DnLbCaUmOprW4tCgPX9FifdXOAod5Pg3uVDivzUj
uU+i5cQnK63Dj82kFaO2ltDRdOX14Rh9Zf+EZ9MyobRtY6ITaC19n46ir9Bh
6D/r2Me4R0b6PM52G/nvvFk2+jCUuH+MqO0VMO/XwUbIH0aj4zkQww8b1tqG
1dNaHmgrzs/O8uXupfgio+r8ag8L6Tzc++X8p+AJL+Hg3PHdcOci+gWdST+j
E/BPw+QvO/1lou/jWOj8pJhDuVDil5ugbGduJpT4BzY6gc6C+DDehFrSIIZ7
2LWbFbu+GNVibZ6FzqD1dDwdQ99DmBy3yUxfRlaY9EPCt8X0CTqb3o3db/aP
3NI3A3LbmV2MCBZtWh4qpDV0Oq2GvVGJ99W5BtTf5Ll9fxUzDrWtM6A8SQ//
b+tGxTkWY26XVvcDtuoR12KfcZ5fKRqPSux68aVE50EMu6HuFzudQufQkZh7
o8al7doMyLtrmGhC8i8tS6c7pkMMs1ENyYat46/WSWhqgBK/spSOpfPwJrfq
4xNeqWgpL9e8CCcCZgx/VqxBwODlYV6HSiC331Bb/B23fjDNI6EMB+T2QeJ3
U7QLsJTT0XQBJsjLTzLTaSgV7SPKclERZ8Fjn06Nl/1jpfWY3aHBgXtbSugY
fJqbWTdkvxlKvPhcTnxcfmNQ2zwo8eJzkdv3v5EJZflzpagp2t/7JR1y+xXj
yuk4uoC+S6dhbd7RIo9fEyGG3688yYJfN71pLrlbaD2U7VzPgxL/RqJTaAOU
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
+iH2VV79OUScPxT2zpPsxfvggcfvQx6+V0GOf25B37H6vddHmmhxzind0n1i
QQnk+BFlEPd6ovumcjqPzqeTIS9fYqZv0bn0eQSLtvODtHCQ4qN1tJJW4deK
k12W/JwJqf1mcX7/4cHBLpXXjLQWcXKclVaix/0XuX/E6dHPt77L/t8N8Ch9
axtTbKE1dAGdAKmt25AyOgbt1V+FXlI9hdR2jpceXgFJxmr/QgRIy4da6FS6
AGOjNhd/3s9Ip9A5dBzk7fTPgVedwMejxXP1D1vfdFybYaLVGCrFf2Oj49F2
0W9BbT6toqPpEjocXhMLvu7+aQHE8JpP2qNDn4e/T+h9Ixcebu0bdB1nwZ4f
Os5IX2OmC+ja6ylYPP3S6P++EPNOWBaudDFijmj7X1MznYOXvX1W/3W1FFL7
/gkmhETdm/aNuO9Sm5ZLbHQKXUTH0Wmod69iufN+PX0XgSUbB+x4bKEv0bXr
HcOSn09m6PqX0bshL9eygt6Ccz1f/+cz1wCZ4vm2xhpahcprB1uNSNZAanfU
2UQn0FqUSnFzDLSSrn19LIK0A+b/m6RBjO/SwFXeepQ6fjr+6AcN5or2A8Ms
eKvIaNLtkYkuoLV0Ckb2+ykwta+ZjkNBqmv7Zaml2OneeYr4IsUmKS6mnFbT
+XQ8/ZiOpm/T4RA3Z0Vqh1RIbX3F/W7z6QNzi8RsTNrTr6GXuN81fkQX0Nfp
FPo0HUfvpyOR0XbJy8n9lZDa90/Q4VjnKdt67DTQKmSKth5jrLSCLqSj6FQ6
DK1HJIc80GZD2n2TnTr6Ea2ir9MK6Psfrjz3UUdH0So6DLtjTPsrW4rzhGjf
L1BHJ9AqTD/84UC7MQZaAa/JH1P2dbTSUQjtun354+BKOgxHFrlu79fMiBy/
pYEdxXo1zqFVEMMu7N8lB4PCWi5x6WiiE2ktfYNWYk/XXy/iw2PU9ejs2jHQ
gHdJz+vO7J8NJ7F7t9FW+hFdiOjlfd/88V8a/KU43zJIbZ8vMtJ5mPz3jO1v
r1vpZHSTls+vpG/RxfR5OoM+jBXS8sdq19tJ59CbMKV/6Netvs3BMonNdZjp
uuKr5EITLT5P0nZ+KkUr0S60jgny8ifKaS2dTyuxyNb4v0HlZjoW/aS4Vzb6
LI6+T9ye+UsVHYpWadf23NhlhBznq0PMsgndpnYuQYLbaK8GXhasT3/Qy/uT
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
7NiY1f1fQl7+tAXXf5xSJ81koHPh9qb88mLvQvgOcXBLWWjCoGMNlqfOzIEc
37scUtt1TiY6n86ik9FetDu/u4R+QmfSt+lY+hzE8C9avU+FGO6Z5BVaHNw9
xKp5EzXk+P5mzG870TtuhJHOwX8R5mZexYWQ2p2tZ6JT6Sx4Nfm+RoV4Hq12
HJ1BP0LOiJeKf6uM9DWsLV7id2JfEeT4IHF+k6ZRmAM5ztOMaTsefNw8wETn
0Fl0Ak5qVwwtOlxCh0EMt82ruDL6BjoMPPfnpvmV9Bk0PJ8a/yS4it5HF9Gb
6TR6CS4qDh+0HamGGFaL7uL6Xe1IWgVH/zUOkZ31tJJOp4PoKNqfDqF9IYbt
cMhFR3vTX/NW01/zvOhgehLk5Rp+Pd4NqrB9Xo77zbQr+nVx+DzDQYeeDyKj
FOJ8mhZ169TrW3k4nes111thppPoHMzyzGz483QDnYC/3qy6809VAfqI1ewV
Bvz+tEX5s8GldAbE8P8uulBOR0MMf+urtEr6AXw3zX+2qbSKvkIX0cdhLPR8
VRj+db2ddDa9jo6n56PD5eKuLvYvUd+plq13HS39ghbPq5/uuli/0dFKSO19
PpjpIDqH9ofHi+kezkNNtC+dRXvTcfRq+hHtRV+jJ9GnaDfIcZ5a2hV/3N7n
tq371/04Q367UwVtTxfQCjqFfj007IBtTPwOw9f+Q+eMsNHPj7R87T/0nmgf
rP26nnJo+6LxsR2+N8DKytXKWqHF802lP7/IKoC34ozCSnz+m6fXG/3RJgdu
inHeCkUFnUAX4P6ttl0uic+92ikY5fEkaqBfAaTNKrwNdAqdgTvLRiV1Uqpg
7WVto9Aacbv5sbd1XI20Bh6h3Q5dSSyEHD+wBE/X3f9l+R85kJc/X4ZXBeXZ
fm1MdB6dRSfRcXQELv72eda7aD19i06n/ego+gAdQm9F9fbiIbO5FsOnDLXa
85+eFt8n0X64uH+rthI/z205vuqgDnai7dQaetx3PdLxn1gznY72JY28Er7V
QW7rbYS8/GkzrYEYbtO3YyvoGARus677sUMVHQo5vuErOhDvl6c2GDvDCGeF
4nqtQHE//dC0t0O3MlpF59FKOokOoiNof4Rou5/871kixPD7Oe/WIk5tfN5U
/G6kdr7DzJC3I54vFIoJ9Ua1rUCOX5tTd8TzhXy4fRVqLb5pfJUqLNpOsX2F
qJldP/72wEgX0xr6JVafGvOlqHsJ/QIDx3bY/uupMvo+zl899mLA2Er6Es5J
cWsNkOO3adE3/NuR1nXF90WKH2qmU+kc+hmdQN+lw+gL9A36MH0Gn4MWjDje
IgZS+w/S33GW4nfqaRXsx87oG+5uoZWY/vafRTdX6jBN7LZNXT3kto/MdDrm
JR7oOKCzDpnejlG1dxrx37z2SlVkHpa52el2upehafLtjz6fsiCG/zrSuZKO
owvxomkd1/VBaZDau44qRWLxuauPRqgh7bZpYDnk+MlGOp/W0Mn479nMZbMd
S+gnEMN/2ONAGX0bYvh5TiMq6XN0IX0QM9XGWh2GiPsNKX6AFlL7Og1MtIrO
opWI6bNxUOsADbrsalDLUktPx9DpdCgdhSHzrxscxujoEFwMznhje9VMX8bL
HMvmXVMq6GNYUrF+yLAuVfQOWA2vXb5SJ+77xLDrtdfSGbQKYthbZ38w0kp4
mb2e9dhWRgfhs9vvtw12ekjDdrPW4Q//55lralpoNeq2uvN490QdpHa+bkZa
TWvoSDqGDqZDoZbiHb8eHwjxYfx99F4edrlH+Nhc1tJJtIqOoJX0LToI+Zdv
/Lk+U0v7Q5pG/V/zILWxF7/fVn9OOhB9zkSrIB8uzmM719eo49HWiL/uHuk2
KjQXw6TD7csgtW+40kTnQWq/v385nQSpjcMSPaTdOw4zICs/6rptXwudQefS
0Xj/6HUX6/EmWlzv5e0UQ47vq4M+8uffSg/lQl7eT9zffxr1Yz2vLIhhT7Yd
X0HH0QX0IzoFWdL2khPQcpSzXcB+Ax1GZ9A36Gj8KdrOjNPSD9A5Vjf+3S95
2CHFD9TRSbSajqAjMaVlUd//XdXRwah4uCntDPIhL9dIRyfTavoJHYl7zupF
zWokQWq/xkVPR9DpkKbx8UEipHbn9xmx4tX5Xtv7G2gNHknLnbPQMXQuHYqq
C31MLxeZ6EDEnDO96Cuu6/uGLdF7iOvDz/28Z6adzYUcN8VMJ9I5dDidQN+k
w1D83fwvKxbFwXFYo04uu3UYsjjlUmqKnlYjS7Hou8WLCrBbFbN/1Fwj+kuH
NyulNWih7F6acqicjkFe9/lufY7r4eA30KHLIfH8FPdfbkp3cf8gdu840kKn
0LmQ2p7dbaAT6Qw6HHL8nAzIy5/QQY7PNtJqyPHLy+hIeJ1atyiuXyUdjM+n
aymCFhsgL9dMR2fQajqajkTv7f37fFOaggONjkZ1bqdHdbwKsdJyDhbMkuL7
GulcWkMnQo6vV0KHI/m7Pga/PWX0TYQsXTRU+rujEzzsrhxK0NLptApr01LC
rgWkw1GK723E+T597i29YaQ16J+a8kONYUUYEeiatK9uCSb0eaf29i2lM7Fe
ij+phRh+b5fhJRgkxY8x05lYJsW91UKOm1QCG0XOg5sH8+Cye/LIBdL/fvXs
7nWrirMgx02rpOPoQvR9sDqtMl9PpyJtnN2SvRsKMKXpQo89twzoe9w6b26r
UjoDi53Swn+frYUY7tGAMnHfELR4apO/cyHHbyijE+k8+ElxTirIy18wYZHu
fP7jmkZa3Bf+1n/D5EuFkNpOv14C5cXxP2kWl9KZ8Hp5rWfZg3I6ls6nH2KM
VWXQkXXZkONm6eh4Wk0/piOxR9qOfSJOODS7NaGbng6n0+mbdBQCrdo26D89
DtKwl47Q04/odIjhe01dqKOjUM92S9DNEDMdgoxJda627aiD1HZGex2tptV0
JB1JB9PBdAAdQB+lj8ItYef4kyNikCjaHfXQQvowPk9PxYIbg+6OcjGj7PLQ
Jy/E51jtHOwakjNtpkchpHbHbE0oeFzTI25wDsQwG4+2Kce+DeefbHucCfFZ
H2i/o5KOpQvxz0qro2/qp+FyWajLfq9SyHGt1JgsxQeV05F0Ph1MJ0N81r9k
iufZaj9B2cBNH1fdzoMc/0SHQWk/Pc+/ZaLVKHvw7+1BLlqIYTaMXGXELtFW
8yQXcvyAMsydutDh71UmOo/OopMwZvg4F0e1BmJYDhUjDXQMnYGl+0bvcvHT
09HoG9N+mMN4C/0ApT2LV05fp8MyKV5cD9effvXoVriZVmPvGY/Ol7voILVp
MV7c5/cuihwcnQdp2Ic7luFWyL6tA/7Ngrxco0o6ji7EvkObXqeJ+0Unqa1H
KcRwi5plGehsJGyu/apuuYWOR6/9kzymRonvk2jnZ9ajOt5Mp9M5dBQ6OhxY
MmagiQ7BcdsRfTu0LKcvw2nyq0XFs/SQlz+txcEbmx782sNCqzBSDPvxqQpa
SRfQQXQK7U8/pX3pO7Q3fZ5eDan9xf9iINNeS4fSKjqQVtIn6CB6F+0P3YW5
33/soqV9IQ3/WHQuxLB/GuampRNpFaT2awcaaCWdQQfhqdhtyzQj7Y+iitlj
6y8uo30xJHrr26kKPVqOX1/Hyl2LrDmOhyrP5uNIx4hd3s5m2CRc+cV3UTZ+
kN5uXwGrt+YmgbkldAGdSafAr+GRq8v3aLD08lhb2x0GmC57rXhZkIG+6g42
NpEW1C1PnGi1LwN+5obWO7QVqI430gW0hk6hY+indCh9B3c6oabzBB19HlnH
L1nbXzfThxAm2k9z1kGO/05Lq2kVHUkr6WA6CDrPiEWjfouH1O58DR0CpWm8
TkPPts62aT5m+jmdQ9+jE+iLdBi2u/v9FP2blr6Bpvl9/pnTOA9i+Kvrx2jp
JFoFL+nw1irI8b2MtJLW0EF0DGot3VjvlZWODsXOvk/2/ONtpgNRf3FX31H1
dBDDabkvQIu9fRqPCtxjplWIOWvXfsrwClqJ+83SizZU6SEf7ijuyx8s39xg
XwGk3Te1s9ApdC79lE6k79Dh9Hn6JlLv6b53Xqulz0IMOzv8mzw4D6w9r/MC
LZ1Eq1Bv6atBm9wNtJLOoIMwPO9J2k8qI+1Pa2hfOob2pkPp1Qh8Vl5Qc7yO
9sLQH3dvvGTKg9S+t62WTqJVMN9SVWXMMdBK7PBYtm/l+wKsd94zrJaVnk6h
0+mndBR9hw6hz9OX6UP0MezX2OdXiO9xtXdAfrmlmV6LV1ZHa4zKF/OU2FCL
D94JVoErzbQKo+sFp14U3+N9Ab7u3jZG6K+NWTzwQh5iJiU4u1mX0Ul0HqYM
X/GgVJxnpHa+3uK57cnEdfUi1Ghq18xmlFs5xPCn+m9MR93dda3b+1fSUXQh
HUKnYn2TvjWXddLRz1Bf2k5kHibLcTo6iVbD5VHuOmdPAx0JB9He/o6FDqZz
6QA6kT6Kn1WONy7YqNB2p6LOkh+0tJJW0UG0kvang2hf2h9Sm4biPFxtX+TJ
8bmoJ9q0EufPaifSKjqcViJNtPO7oKODaDXtT0fSYn3R/kEfPe2N9fUi3oxL
zYcY/uAdzlpMk7bjnQ35ZXszHU/n4Kedq4ZMfZcGabf2Nib6OZ1F36Pj0GK9
4azfP1r6EULr/d6n79E8+HpvtHH30mHl8OK64wNNtBqPAn7d03FKOR1J59PB
WGU+F7Bf8/X9AXQWfZSOo32wrJOVzeYLabCqtN2hFPdNle29FfczDLSKzqCV
dDQdhIs29toNW/W0PyZa274e9L2F9kVnafmLFbQ35qam7WvR0oA8BxufEWKe
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
TZN9A2pcNWKrFN8iD0+luCllkOP3mOg8iM/6x83Dy+kkLOlb1e1pQCUdQRfS
t+hU2o9+Rh+g79JbUb29OHSR2FyLgW2cfqws0NMqOp1W0lF0EKS2F2Z/fb8/
vH/a5jHg73zIbb21dDKtwicp7pQKUvu+zkZaSWvoIDqG9qdDaV86kPamT2De
msy0Hm219C76a956jJli4+N6S43LEh21dCStguech+vG2qbA7Nalnm1NI/2U
1mD0AWf7kf2SMGjSmBrDrEroCDqTvkWL65U0jS1xqD1mqVtnfz3k7axOg40U
N8mCe3nhHWzSDHQunUEn4s7GVXV83hnpcFpD38TtC7OHaYeU0Gchx2UVQQx7
kttCLZ1GqyCGZT9wohry25sZIceJ6121NVg/9cWFxeJ6J7WdJu63CjW/ls4U
17tqZ9LZdCwdTz/E5VblHbWv05AhxU3SIXR+oU3LIgOtpjPoSFR6DrDa+4+R
Dsaetyo/56NFkJdrrMPlIaEdRwWW0mq0lpa/qIUY7kn3EUaE7VJuOTBQPD8G
eCf5u5TRSXQeHUEnYe60K+rpkYmQ2k7zMCBklXX9V3VUsLe7UbfrZQutpHPp
IDqR9qfDsbHR6s0Txfe82jfxpM7Ap53czPRZOofej00XH266G54JOb6Plo6l
VZCXt0+D3LaukX5Oa9BJtFfodHQMraZDcbdOQ0uzA+kQw3RIddPRUbSaDqEj
6ct0MJaun756465YyMs56uiHtJq+Skfiyu0dD9rd0dLBtIoOoJX0Udjs/6vu
iP3JkNpO8pCuf1kFZb+pIIbTrLOLGXv+sbH9U9wfy293qKAj6QK8EW3fDNLT
KTgw0G/rQU0+Alz8fFzE/U7RQ9OM4p3ZkNo4RFqwWQz7H20JnUtn0on4efmq
v7/f/PX1cNzv9/hT66dl9E3k+M3+vcHPlfRZfCfF/WbAiL41Rtgs1qLl+Gcj
yp5ZaBWOXCty+buoglbSBXQQtBW23RzFc5jUfnUtHQYOjrIbIZ7Dqq1GumZ2
YNG5Ykjtzrsb0fdvp5v/mEppDRb/4BkwSqmFvJx9Ca2iM5HnMKNzQ1cjHYtK
Ka5pGf0QwyfrZ6hzdJDjJusghv962dp8NO/sMnDnDTPEsB1eTslGPSlumrh/
m7vbxWp4JmodsE1z7lqFzmMKujYfrIG8XONXdAxdjBH7Z4+Yv1dPv8TlmLuX
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
bxv7g4719DDW+a7vHD8zLb6P0nZel2DNGO/OPvZmOovWQmrfyk0Nqe0UOwuk
9vXGmOlcdHy1Se3QqYJOogvpm7jU8muHdlfy0FaKm2Kgk2k1HB/Oj1UEZUOO
m2HGJ+Ojk9NGqNHJvXmYXc8KjJ12dc3fk810IfSVXzTeZytBwyDf7v57rdgr
td+vgyjr6v1FJYydHpdt6GSliyCG//yeSyWdAbltUDV9D2L471Yra+graPxo
/MS6fc2ojdPTWlpFK2kFHUtH0RF0KF59Ocdzo3guqXUwDknbGVGIcQEOkctH
6yHH/26lVfh7y9YhC8dW0gqMEW1//dEIMcyW3zsaoY/osqN1o2JI7QfXFefS
VVfnnBfnSWn37XZU0Sl0MYau2KPf5fAY0rAD3cvQrbfL/Sl6E50PRfLlmRW/
lEAMP9Yj1UJn0bn0AzoJJvOZ1Gvifi/H3zFC0zy+sXS/l+PmlsOh06aOp+PU
aBQa3mTU9So6ni6mo+lM/COmMScsBfLyR030bToHj9pF/9Fyk4FOxOybEz7/
s0UR5Pi1RjqD1tD36AT6Ch2D0j3FbS8dTYYYbvCn3QwQF0fRYGs25OUP2+iH
tI6+TqdCXJxP/3FIgbxccxMmm/PGXYvNhtR+2J5yXJv2uFI5Rg2p3WllFa5o
nw+PnmqmizGr4pczuu4VdCY+fXF/8irXavo+jm2a323w3hr6KtwabdGXifPq
945rLZ2telpLq2glraBj6SjcGTTt02tDUrHb/evJC5sacHvMyvMv6ptoNeZ2
uqnZtLOcjsdmKf53A1zM6eMzPYy0mtYgX7Qt9dNAav9TkBmDpeVDzLSW1tJK
WknH0rF0BMRwO4z6JhViuCGjI/R0HC3uT6LNkV0GWoFWm7Zf6d2xCPLbXY2I
mDXnB68e+RDDH+bbqByXjua1m5RuoQvoXDqNTqLvwFGKc8vGMWn5YAP9kFbT
1+l4+iwdjVe/1F2yYKOeDsO7z3bEeH1mow9iYmWTrhZxrhDDPegzRnzfAy4+
2hpQiG79do/z6GTDMEP5nx3DrLSOzqNTIYa/pkeFFl2szj0W1zXRSjoHkze+
qRwbmQWpTZt4M/2A1tLXaCUScr6DT7WejsXc71/rigILcULs1mWSAV9/O/Ll
LbGfWqshv729HnLcdDOtorU4++GNy8oGZlqJr7a9d7xZp4KOxbp9E6dezDZA
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
+2PSvkE/H19sQNCcAPtQdz2sXR437fehEPKfnW10Oq2j79KpEMNzNv1poOMg
tf8r30ZHYnFDx4NJQw1Y6VLff4f4vtVaTavoeFoBy5Dbb48+zoD8dnH+q/U9
WoOtP9377vV9A51Aq+kY6Itrvh75g5kOxyZpO46lkJcXz7di2O8G7SijVXQ+
raBT6CjEjt73aMwzIx2KySVdvtHvKUY/O9e6geJ50juoV/Ke0ny42TVyGO1j
o1NoHX2bTsXomQ8jcnumoY73KL9xjiZEph+PndPFRIvnkMX9Jv/zsBj2YvfN
E8y4OzFG0eJ1Puy6Ozo1XFBBp9CF2DC+1UbP/4x0OsTFcLkfUgy7ets9PCaZ
4PnbmvB/LfmQdu98oRw9v9OsPLovF7VxVZDjF1noYvrj3zOx1fJ8TK+JWsjL
nzTB7/V9l4zmFjoHbw7NurL4aimkdiFWM51Na+mHtBJeK25OSBbntFrH0mo6
Av1F+3e/ayC1H3hRj30tHvR99IeZVtFaWkEr6SjI29uVBan9T40M0DnOn1T6
RgWp/bBdNgze0frw7ZFmWgdVu+heU3Ul8OocsGKyh5XOovPwuz7JfK2ZGlLb
6UEWdN7Y75dKcV+vdS4eSnHieUnavetCC51Ff/z7AzoJ4mJsOHI5HWK4p32u
GiFvx1cFOW5WOa2gC/Bs4d95ux2NdBqtoe+gubT8GQ3k5Y8aoIzxXbDhoplW
01o6HnJbcR6pdTSdS4fh774Ju4L6aCGG6Xxlnx6HojcVl0TlQGo7c4yNTqR1
ePfbjx7hjbMgv93FSj+g8+hrdDL8Ahq7zLPp6Vu0ir6A9G87eqY20WCQFB+l
h9R27U4zLa6/tFz7UmT1UPbs1MuMTnODbD67y2gtnU8r0bC1512VwULH0rl0
BJ1EH4HBx7f18PtGOgBy+5nFmCHazu6uR4cNQ6rWtSyjVZDjvtajpdh9q0Zm
vPTYUez+VwEaRac7Nq5XgSOXCxv0PJSHXbOXBOxyqKaT6RL8GuQ+ZNyWbHjM
arMgzLuMfkjn09fpFPjWvTPK+FxP30bpmWlFm/cXQo5fJ+7j8nbyIMfftdHJ
tI6+RadiZnWdluMrUyEv19pEx9E5COqzbmO91WmYJbVNMtN3aC1yR045GPt7
Go5J8f0sOCtt581jZEjLh1Rg1OrgV5+FqLFUtJ03qRrB7TqPbLbUTJfQWjqL
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
mdGrjA6CvPyxSnojXUQvR+Tc+UF7LVZ6Nv1xf+NQk5JaMt8pF2LYs+3q6Okk
WgV5e3eyIMq2Uojf21o/oLX44Han6LewdFSL9l52FhQ82R38bpQK0upu/hV4
+a9H523OZroQwQfvPXC7XIKHLaPt6ov73sKFG16dX63DEyluSiWdShdhsXl1
38CVjxEnx1npR3QextS8XBj50kAnQy/FBxfhaznOiFdyvJXW0Hl0Ap1MxwAB
5mY7io10OHTtt15qt74YnaTlj+kRGDl79UVtPpo39rNbOdFGp9Di3Ncyo/rI
GyOdCjHs9RN+Lafj6AI6EmKYZ6Z9Z6VD6Dw6CPLyxy30RjqXXk4n0bOx+7uK
wPb/ZaGO2H3z+nr6Aa2CvL2YdNjXD70VYG/GIilulonWIqZ48qW+V8ppJbqO
WBe2ONwAqb2Xv5FW0xo6nk5A8pTqnUvqZkKOm2KEHHdSBSfv7xvW6V4OMexW
z61qyMsfqUJBWOMuLfZrUGfKtwl2E2roBFo8J9S9k3T/l0zYS8sfKkOA++2Q
IQdMdD6dQ6eguMeLJYMW5ECO/9uIDRN+/eZLnZnW0Fo6AWdF+xaDLXQMhla9
enr1cSkiey+w69LXQGfTavohHQ/l7/9lv6ky0NGY3/3E8iOBRZCXay7OX72t
Waa5+ZDa/7LHhq1R+/wbj8uF1P6+bxXce3XSO0yz0MVwPubyo/2lCjoTucdz
A770MOK4aHc8yERr6BxIbacHmelEiGFH9fCtoG9gQte25w01BsjxQw0wP7ox
cnNQEeTlT9uw75fnQ/Pn5UMMe77n5Cr4iWnsEvuT2rh0q6GT6FIsKv0s++f8
LLh5p01U7ilD5qmUOzV3TXQ+pLYbSsrpFCikuHsGyPF/GWk1rcGzq487GFeb
6QTsHbMibrOj+L2T4uYbET61bU2HHWW0BmdfFIwu3q+HvPxxM4Ye+Knk527i
Oc3cxaicWIFsKX6PlS6k8+h0Opm+i02nK6+PUBvpy3CV2q8sRm2cHhEDiz+v
+zgfYpgt+q4Q56cbu+Pabc+FHD+wCsFS/Bwt5Le3rYFZWr6VhRa/3y+dN3SK
KoXU7lBgGUI/V5Y4Xi2j83FGig/XQwz/foTBQqvoXCxvtmaIQ6UaIVL8RgsK
RXvFJjOdS2vpJMhxHSz0TTqXPk8n0Ufpm/Qu+jz9M4JE2xeRenoJPKfdbHvA
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
QY6PEOdh5+dhu/TZkONmW+AqppFfKwvO42x0C7pZsWdZ3Md7Q010Adzs5p6c
VFAEqZ1/7RLs8z7V3uV+CZ1D59CJaKNdXDO+wkTfR30p7k0Z/ReyhneoN3iU
HnJ8uBarih4H5+jyIceJ/SjFNHYfyIG0+yZiP3L83CzIX29SiTNJxugao9Wo
5TY7dXftZzB/Orip5aNMVHfuZo7Z/dWxdDF9m34KaRqRbZJgK8U/N2B6wneT
fxJ/V1XOpDPpWDqWvk3fpi9D3s7rRMjLX9RCDN9t/2c9rcS4b7b4Dt9eSisg
ht3o10M6yF9vqKczaBU+3Rsa33yhkY6B1P7ux0JI7bcN1UOOO6WB1B6tS+kk
OpcOp5PpYDoCq7+dGtVjZAISpOWP6rBq94F+CUl6OgP3pfhFpXQ0nUuH4t/v
tnR8MjYb8nJNdXC5/1PX7Y/VkNr5HrLQcbQG+jfXTc9O6ekkrNmc9fLt2FI6
nM6lg+lk2h/W5+e7dM99CifRvucCLdSNoheZxHlrjxTfw0JH0xq0fHTM1P7D
E+hjJo4a6WRG6/2fGywUz701uo7t2jqUo3ORa9snpgxIbervrMAtxw7fbj+k
wux3NZP3RVdCjisW59yPuxbFeT2D1PbNfSNdTKvpp3Qc/RgvElxndvszDbFS
/Bsdpj8p7r74kxJ6Kf6DBdmi3UwYaQ2tppPoODocP3/e5l6+V08H4/Up19hd
rQsgt03U0qm0Eicfz0v5L1CJSVJ8DyPMz06FbetkpNW0mo6j4+g7+PRpcna9
3Xo6CHL80FL6OJ1L76KT6d+gFW0ndTLQi/BcWv741+9PxTvRziXFSg9H8to/
rNk9DBDDH7zHTosFTg33rH5SADHMVsNsLXQqrUHY7G8erE9VQmo7ycaMl4md
fld/ycAhV+vCTjblOPqpa9bO0ypIq7t4V9AxdCHCHl/Z5DFFT6fRX3/+IeTt
xKpQFaejY+gMOoyOpi/RofRROpD2of3w5WRZ9LjkWOzc6lTd6wctpOnkNklD
jGgf0taCkRGXP/9ZrMR86cfri/fKyuAvhn5GugDuou2L5mV0Kp1HR9Ep9E06
kj5HX6cPwTWm67rQDQmAFN9fC+niHFyVDjfp4xbiPfub1OOD+mTAN9DG6ljX
SkfTBXQonUoH0lH41+uq8dp+LX0TR/7DtmFt8yC1X63V0im0Et/7u/+xvI0S
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
MCttwPxtG5dem+akxblWtJ3UsZR+ROfRIZDaeY4qok9CjvM3wjT6T/PuOUZs
/tQs73W1bMjxXe2Q2n4MtNEGWk8n0HH0I7x7Zd81W2WmQ3Bob6DXh8W56Jm4
/+tdkUb45We3O5GWidPW2JrRfnYkue++Yw3IwBgpvmsJ5PgZ4vtEurxhGU62
dT9yPk58n4jdNvR4BXEz5jo2azFy1seuHrteYZNo36/AShfQOjodU8aVxvaq
ooMc/9oC/aRfwsa4FNJarJSmcSYfcvxHKybWaoWDRQbI8VuciLrQoa9fdT3k
eJRi05IuD0aIc7q8/PkyOobOpyPoNIT8PfeM60gT/YJW03foSPoPSNP41pAM
OX6TEerjTUPdfrHQKthH1pi2/bmDVsLnT+2GQzdN2NLQLXpcTTOy9y+v03Zo
DuCx3XStsgPiZlzsNCATXlLb7SV0PJ2LN9VmROwsMtMpeF+pU3bUagf9jM6i
b9GJ9Fn6MX0AYWteOFoGJZbH9xW/T2m9f3XtbqFV6LpIXf+P5FxE+713+NSw
0im0Dm7ScqcsdAytpSMgTWPSQi3EsL6yepvoaFoNn/0PXs+0pUCOG2+FvPxZ
C61DxKJq6QvSHHQMpPbdi0roCMhxq8voy7D0vbPrlJsVHvguYdtF8fnQDvfq
EZwHOW6CHeJmtLu32AAxfP/gtiXQ+/2ctKyxjc7Fyv+5z3eLKMAb7fambasW
0el0Jv2Sjkf6qm9TenolY8umoIpDTWb6Ka1Bs6nRoyuGm+goWk2H05H0RTqM
PgI57nw8nD41PHeOMtIPaRX8pbgmiZBfXseKkjGnxkQr0+X2K6s46Zd0NqTp
zG+ZDKntTPE9oe+qDVg230KL7wkxDbdPudgh2v0eXIiz3c/s2oYiOoPOpGNx
LeXqHGN6IX2fzqCv0LH0cRzP6unx8bGZ3gk5bqaDXosFvapX3HqnhF4AOW5q
Gf09FjYOOrhMPO9X3hfVelElI3pUTxjW66ODVmGhtuvroiQTAkXbGRWstJrW
IVuK97fSMViTduX4JI98jPfs7NMhwIxzqxcXem4vojV0Jh1Fx9Ph9EP6Ivr9
PmVstw0m+gjOjepwraH4HSx3IOQ48TtYbn86l55Lp9AT8STCf1/kfgs9iNbS
3dH59tm5r81WugWto+vQMbQLrkrLnzXTfw4st+ZLfzrqS/+B96W4SV9eHzVw
Rt9YY2w7x5f+dNaX/nTil/704y/9B+7bNv/m5V8TEThF0VqhMOL96sI9lf4U
z29iswqFHSf/1vzb+IQawfW8qygUJXQknYutd5qGeX9KxqJK410UiiKojres
n7DVQmfSWjqejqYfosmnIQMbvE2BHL/SBK+s9otn61WQ4x/Z4ftgZPbv31pp
A1r90Lo0ubGTTsDsTbOju2ebIC/XwEKraS1O5meGHlhnpaNpHX0PNtG2QKeF
HC/O1+WOptX0PToSh6Z5fR7znYkOw/COQZ+v/mGnL9AG+jDqVLO+vP6Njd6G
vdJydYvpVXQOPQdzt33s/VfMl9dPoPW0Dx1Hd0N5nJluTmvo2nQUXQFuUtwP
X17/ZmC5v7zeRH95vXqgz6czm+aO+vL6SPrL68MGPjlZpB/5UljRoG4F8f7p
bHt8X3PXSquQsHXSuGXiuVahjB2iUFixZfrgyHEvxHyMc1soFE46gc6mH9FJ
OPmt50frfhP9hFbTN7CweiV8mGulT9M6eh9mSMs1LKQ34V3uDMfU8HzIbGyE
p/vwQ7F/GiBmpVBUt9MJtAHfPZzyv+O30jFztKvCu6INdtH2yF8WWk9r6Tg6
mn6APClui5m+inXvAt+MapgrzrsiPtSIr577fazjVkSrMLPDfyP146T/34Yi
wK2jFXeOb2ld/I2d1iFTWr5uCR2DPv4dT8TrzZCGHbDTjKZ96yfPW+qgNXQW
HQW57QwbHQ7jN7MP+L8rgNR2WlsT3ic2uNT0vyJajcSwaV/9kGyEtPv6I62w
Tuv42+0FdlpHG+gYyHGNbHQEracvQ47fVUgfQ/zcjcs6RTvpHei6pcr2eZ3F
+020O9bWiCRpO/Hi8yH92dOOP2PbDv/8xkYbaD2dgM3dktRbnxXSj+gMOoSO
pU9C3Iymq2unQWo7wU88b9067/d3MzXkePH8Xu5I2kCH0QmQphO6SXyvBeys
U8nNQj+ktbCF3fe4ud5ERyNg1LirQ2rnoHHo+ItKPzOdTGvop3QUHr2bP9Iz
zESHY+KhT5bbI8V5s1rrqh5tTIgyntz/emAmtknLH7Xjf1UWFtTumwHloL0u
20eUYEtg1vohYwvpXCCypH+La046hc6mn6Hv/3572L5UD6ndyRgT5LinhbSa
zqAj6Vg6DJqtz75f/NBMX4AD+TcifnDQh+ksehvkuCk2ehX+i//h+LoOxfQc
OoeegJO/DrdO7pIJqf0qVyPktsmFtAqKjTc1KxYUQGrTVDxvNJ7yymXC6CwM
2RbZ6pD4vtmV8dTbc5KNzobXz99n3y4pwAS/rntbBtjQfkLMrte/ZUFKq+1d
DDH85h/n2egcWk8no87QZe6fTxbST3Erv9LFk90LIMdHmHBz/ba2V1OKaDWd
SUfS8XQY/upcK/bYBzN9AZsa7JmbtNlBH6az6G2YciUv6dNUPdyO9nFZ1NKI
IdJ2YnWQ/1zbjmfpzRot/CjO71Jb9xJskOJ+12JOneGK5a5lmCLab12ghdS+
l8srnFjX4d/ZWVa6AF2l7fjnY7TZPfigsgjhon19rQHSsIcZi+F/4/fkVuJ7
UI5/XQox/M8dzojzoxT/vgxi+Ke6FGnRWorf/ArS8JM/WOkCeO1r97Zws5NO
p7Ppl5Da9j1vo+9iSLcFL86OK6bP0zn0b3QyvZV+Sv8MOV7cl3LPxh3R/ujY
HLSS2lY24vVv00dbvDNRx7vJtlcV7XQ8bcCnbvsXN7Wb6QSIYfesscZBP0JA
ytzGlZ+U0CGo3uPTdFU7CyqItK+VRojhv10cnQsx/Bc1xfm9vdS2axFtoDPp
BHQ+6mFw654BMfx/KnhY6FhaS9+no+kr9D2cmq/sFXTdSF+iVfRRWklvh3x5
PTO9Gh2vrgpOvpODQxLrGulkWoU40T5rrYVWwi/tWvXVNfNQ5/3AgDkuZjqV
1iDlQ8ScsgsWOgo20fYflYMOh3e1fgt875sghtewjZeJVtNqOpKOhLaPakFm
9RS8/lUR7drKTD+jNfQtOgrx2zo/XWE00uHwa5Iw2X1TNgoqdx3t3cIEqX3g
HzZajWUVT1X1Ee+3ckfiwbbRO4OvldJhyPG+OkilLaMvoF/p12URvayAaFNn
r5HW0SqM/Xd3/9vVC2klrv0XfU6/y0mHQvfJNHbp4FI6GEs+r7x2/0IZHYRA
Kb6ZFRV2VfFtNchI62gVvCY1ty+uXEgr8aTkybaKF/Kh7Fph7xB3M/6uuX5G
E6cBficDhrRwdeBY84xh12roIe2+dmAJHUfnovvlbLsu0kynoNHE5Wucfg76
GbLWVqw86FcTxDDrNE8wwb/mueCc+jmYK3Zby2pH7uBv7A9ibbSB1tMJ2COm
sfajDvJyTS2Y1Xull66BDm28Drv7HHJA3Pvr269oUTfId4dXfAnK4610Lq73
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
liEu8GO/u5c0kNodq/KKjqIL6HA6HdZJf1b4OjceZtG+u8mCzSMHGrf/a6a1
GNj669eRvzroaDqLvgdxMw5vmqaHHD/QRMfRauxu/e3EmslmOhJeL9OKQ+bn
wvVUxwVR35jR/kNAzbLkTARKy9V10PF0FuS4D2Y6kdbQj+koWnxfiGn8eTcF
UrvzCUb6Ga2ib9FK1J9xIWhroZEORbXb4xNe+tvpYIhhh3Z0M0EM//2QXUZa
TavoSFpJh9GhcN+8cvaLNfGYnrRj3Hx3E7aJdr+XmWk1raEjIYb/55WnVjoM
ctsfnfQFOps+TCfR21C/6oepNbqpcFzsvlYLIy5/dSLWK1wN+c+17SgJmf/x
ur8GYvjdd7iXoH/7RltvnLXSubSOTsFvI+POt/+mkH4G39aWccePOulbuHzk
zbWkEaX0WUxMfD+p8HIZfQDXpbiJr+jNmNz90+S+1794GV1Az6TT6dH0S3oA
xM3Zs61ZMja3GLxHWcEIqW3oPAutwscOuxsawhy0Eslza2U9umLCeNG+j8KM
hd32LMvV2GkNbaCj6AQ6HJ3cDh/8obGFvoj62xPiOh100EcwTYo/asLh5kOM
Cl8jraZVODHYo8Qw30or0TXvyk7/T3kQZZoqqpgxev3iC2e3FtHi9/dpxPi0
l8V0FJ1Dh2PZP28jAzZmQmoX5GWi42k1HJ07HXv7Kg21W6xUtPK1ojzOQuto
LR0DOf4fKx2BZ1LcL076Mjp889e9W1XF88q2il4+F404cfR/06dUctAqnKyf
9GH9OBOkdtK/P6+7aF/bkQ35ck8npPZDntjobLitW9a9xY/FdBIq9u/V6PCd
UvoJApudOeCbWUbfQOShMcMuL31Fn6YL6H0ojyuiN8EQlrhnTemX9ZdAjv/7
y/oz6Dx6JOT4X79c3w/On6bXu7zfiMregUMuiPdXuVW0ilbSSrQtKviu0kbx
PCba9xTvr3I/pTX0TToKfT+XtUvIMdLh0JzcEz1nbTYCXPcOqijuZ7mTaDX9
hI7Ewb19mk65ZqLD0Kal5v4r7xzIy9UxIUm076+y0WpaT0dCDP/fGhGFdBhS
nv59LGRMAeTlaot1//G0LvfOgtQuaI8dM6T2ffUQ91rhO6SEjqNz6Qd0CvZJ
24tMgK9nY8XePeJ9tzva2bOhhdbSWjoa8nZaayHHrxLnxswXFZcnWmkNxL3e
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
a/OWQ3fgXPfkjnqESW3F80iN1bQaDqL91r80kNoPrGOmY2kdHUnH02fpaEht
5+zX0+EIe+n22z+dCyCltwrV06m0GiF/GCMejzbRSvQavGX8psdFkL8u3l9q
nE5r6Xu0ir5CR0EMX/WiVE+H0Wo6GD/vifv5k0ZaSG19ffS0ilbj6zUzfwwb
aaSVdO3xEXTt8aHo1rhi4gCf2uODEP9nYFmGoRDeU/p7tR+pp9NoNeS4YPH7
kw53MdNKWkdH0PF0KB1NB9HhtB8dgq+dM3+PuxUHOc5Xj26GzevebDTSasRL
h7sUQT7czYzIx6O3eziU0TpI7VwDKuh4XPlc4+4cW0VHI+f3ZUGB+mo6nH5M
h+BV59Ye7WNq1wvEL3Jc7Xrr6UJ6MWZ0DDWe/S0Xjp4eTvXr6+kkWg15e68f
wb6+c0CAvRmaFXfCZs/QwG6Hw8iRdjbYZ76yjR2jhZ93QGiooopW0cXQ588r
vijOT40z8HTl36umeljp+3Q+fRWuvs/Ucd1z4ObqULduuZ5OpNWw79bu500J
RlqJU3G3PnH9tgjy1z810um02Nee39rNixTn293T0+s3M62kdZCXb26k43Fx
U7mhWQMrHY2pw18+3bOjkg6HHC/eR2ocAmOh8+7e1SbIcVP0dBatpuNoJbYM
a/8sQVzfaxyBB6eD3hhHWOlQlEzy2bLmTCUdRBfRfnQ6vZq+R89HdWB8i9cp
BtqX1tBeGC7FrzXTfWgd7Y6vpeXaWmgXSNMYcvMxttuv9xmp0NOPaDX9gFbS
1+gINPl7ZnLkP3o6FBd9ni+YcLAAbqGj6tv76VF9P3g8DDmor25f186rHFv+
Dtd+HWOh89B83IiV1sklkL/uUkpn0jnomPJbzy/E/bXGiXQWfZOOoy/A49+I
81+K+df4KK2ld0Je/oyZ3giPz26+vPi1jV6K4CZzftZ1qaKn4+jUt8635psg
ZqUIrKuns2g1Oh/ZpuqZZ6aVOCzaNl9poyPQfO3KL/Lsjegg2s5UGCCG126l
nZXWYGfbOU1u+lXSsXCR4huZEO6ucGrgbqSzaC3ij7b7Z1ycmVZh4YSDb8MX
2OgoREpt+1TRYXQxHQx5O/3ysF3h3sNPXJ/Fyaj7e1Q2vBUuzb08yvHyk1Wx
F1Za6DwcuFpvjpdjCaQ2Ls6lmL/606TbbfPhpFDZ73KoQOpkz62vuuTAQbHA
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
RdvXw0rp47gixWWXQGrfZ6GezqTV9ENaicevE5ce80zDjmpXxVhxPXwvdu+6
xERrcXTT2p1XPojrq2jTdLuZTqd1ePj5oLuj89Uo72U3P97dAnk7jlrIywfZ
MK9nxn8H/M10Aa2jU+l4+g4dTV9Gjmjb0sdAn6Q19B7clOKm1K7/M+acfPdp
na42egVdQM9Gkmjb5loOOiv2tQyX3tfzO6Xu/MtCq/HVuoeL3MeUoL6io+Ml
OzOy5LgyWocV1T81DC+voONhH++U1S5WvJ+L9gPF9cduYeDyg/OttBZSG7et
Biha9vVpJK4/NdbQOjqWjsedkr5BYb2NdDStpcNpFR0Cqf3LMbXHB+K9aPu2
g5Vejw/S8ocq6cV0ET0VLRcUdJxpzMXYhlPqeNbVo7OYRsKebEjtQuzL6QQ6
D2OPv3I6+iYDu0euUJxXlMJZtHd9aKJzELYyZvaVmcVYGNTaq6ufBWLYzbtP
L6Oz6Vw6gU6ib9C36PP47/bjN/edUrBdpxhvd0VP36bV9CVaCfU/iU/GiPtu
jSOw4uD83SULCiDKuinrGzDJMG7e7tQchDv61p+/o5xOpPPQbXhK98ni+abG
yYjPXphgW1sEeTkXE51OZ9H36DjM7Tn9Sq8kA30dr6TtzC+EHN/XQKfRGszY
2+yvtDXifd2zboT3V2aM+dbjx1+14n09xH5m+842OpYugHWvuerroUY6ldbS
d2gVfZmOok/ioc/jD+EdDfQezJeWP1RO/4w+wbdg9amkV8By5OLKkc+MkNp8
0kiPbb29HQv3FOG8Yvqu3Y7l0O8Nir3ZoYzOw1PRbs6hCjqZLqRjsKVpv7zp
5lL6IvZmWwa/GaGH1H6AUk+raTW+DWx4s9ltcb+W4vuYkVJ4Zr3HRvHnQfp6
SxutogvoKDqVDqPv0MH0ZUjt88T7XY1PwqnVyu5rTfkQ5VvPF89LNU6h1SiS
vu6qhnx4azNed/l0t/T3cNRYh/eHD8RLfw9HjeOR1tyt98sMAxr01ShGbTfS
GlqL63UTGmxdZ6ZVKAgw7ngwxEZHYWjjB02uWA1oKtoP8DTQGlqDm6Gbzv54
QIv40XUaNhpvRi/PeeW/nzPTOlpHx6PhnhZvSz0tdDQcpfgQGx2O7VL8+Co6
BN7PvEvanq+mA7FqzKrhcz4zY49oF+Ip5lNSL+dlTDHGSB+7lUP12n/gF6vK
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
x/T+r46Na5iHeouC3J1czUi63dTyUSct6gzw2akItUMM+11OfStdSOfRGZDj
fWuP36drj1+hU+lTSFTO8OyrzYa0e49vDPRjWoWvuqT/MCY6E/LpbSyQ42aZ
aS3qnT+yJKJaD/ewzoqF9awIvtx1bvRH5XQeXUCnwtBrT0tHjpW+C6nt+nIH
fZEuoo9jVDe1X8n9MnoHvvtyyMqHvcR9x1hFkntvA+Jvtb1XIr4/aqxCtBxn
gBh+/5AGFswUbc59Z6O1eDvLHH9GfI4HunhlhTtbEfZya8CQs0WQ2gZsd2BR
U51vXHk+xPAHRftUYY7LBo+q+1a6hM6js9Fye4dxW1bWHn+MGGk7ri/QVI4z
0s9pNSYE1lefn6eGHL/eAk8pbraF1uL66uIp219J/15ALNfBSmfTefRjOhXn
m1zdOeNWJsRwWkRfMNEPaA1qtpMBn5O+dR3RFsjtPzLTWqyRljtnp1PoQjoO
+g0zvLZ+W0ZHQQzf48mgCvoYXUyH0s/odfRDejF9jZ6JmjgDPY5W0YNpJd0V
8svbmejmKBXtTjWq3b8Lvm8Q+jJrZyX9Zszwukk/fDO2urY/XVrbf8xUafmw
8tr+Yy77/JWzPL22X9yYmaL9UEtVbf8xb/V7FbYnZvQOmHhRIZ7ft64cr1gn
/e+JslVoKMU/Er8T2mm9FAoLraa1dCKdguF/XD21oWkWto/sXVcRZKIf0RrI
2xuWifCD/k6KcAsetHBSbeuhghwX4MCGrqe3z7mhRvSF6QpFzyo6kS6hb9PZ
mBjZZndeWyP9mK59/Q269vXn6NrXH4C8XNPa12+DuBivJ1wrQpTEDgZsHHTZ
c/TLfEwX7Y41tmH2oCrv4U3zcKW5QuFfvxLjBnlcG+KtxcwGCsXFOtVQu6cs
O+BqpUvpPDoHzuF/TzV00EJqv05pplPoXAyuc3tuF79syPGvLPRjWkvfoFPo
c3QcfYCOwpSHrlPHifXrKHzsQZcNdBytEt/LdyeEjkyHkyJgpKGXBUMtB2av
D3gO+eXNHfSvdBF8rufvDqj/DFL7UTvKcHXc84crxPOp1O68XwWtpIvpGPoZ
vnDpEdnY/ymktjOWmOl7dC783zwqjq+bgZo4C/ac/6E43stMa+lcOgWR5SXx
fdMtdBxGbf8h4OnCUgRpnD6NmGKkc2g1bJvurWg4UA05boaFTqS1GP0yfoVv
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
0bSSPknHYPbzhHS/xylw3eur2CHup2scR6sht/3YSCfiYPduaSusRZDaeIjf
p6jJe1bPu19Ga/CLaLu5lwEB7s49x+220CpaiyXzF0d80cBCp8D5z39H/nWh
BPLyh00I2vZr4/+WlNMauoBOQuCLWyEostKxdB4dCX9pO9K/H5OWPyae6xbp
Z9+U/v2YbBWdRyvpVDoG/vuLM4dEmehwSG3bTrfTYZDj1ot5iLbTxed74+QO
hWubFIvP/26PXp1tmD2m584ZnQsgny6+H0802WucmW6l9XhWP3VVb4uDzkJs
wId1TWNMkHbvGWymNXQuxPC3Jxyy0Mlo6bjoo5/ooO/QRfQF7Nzcy+Pt4TL6
KJ1Ph9Bp9FpMk+Nq87+ia/Nn0En0WMhxc2vPH4RQaRq/F0NqP1w8H9b4Ga3C
q4kP+20Vz2s1VkKaRgvx3NzUu5tLD4UJXzRI2RbVTQdptWYKO046r+601K2M
LqTz6QyUtZ3ea+p5LcTwVzl7meF+2e+m0pYLefkwO7yqHrx6dyAXYrhnFemV
mCTHW2g9oha0GvPragedhV+26L67XtcEeflTZlpD59JJdDLWNdly4K5P7fl3
8GDX47S5Xnb6Aq6GfdD//XwjjkvLnxXPd71TM47+WQR/16mKxVNtdCatw6SL
wzdpvjDT6RDD9lz+lx5uiW5BWW5mNLjvfOF5Cx1CDS4+ZaF2SG3X1i2jCyEu
RnCjX15Aaj9iYRn9nM7HP5M+jjH+bqbTcMJkmbzlQAnE8Af2yDLB0mD/mM8C
dZB23+wbO51OF9IJdAYqh+Q7T/44A2L4a5P6mCEuRlyB7jnk5U/Y0bVv4s7n
h9SQ2vd/Vok+YhrbF2ogtTv5dTWdRJfSsXQOHUk/oY/QN5Eo2u+cbKDPI/DN
fefkrjb6IP5N6zW13wsDnKT4UQacCEwuf7pRfD6kwx1tdCatQ7Plf/3T+lMz
nU7n0gkQw2/d3TcXYtifl2030sm0GnK8+H2tsfh+nHF2/hMnPeT4/iY6i9Zg
201lf7fTKojhD2yy30IraS1U0vLNTHQKraHjEBx1sc/ICxqI4f+unGSkk2g1
wuKOjf92polORG8xDUV1MaQ2rXuZ6Ge0hn5IJ+FJ2n/L7vTLRIM7WXW6jDdB
p/tyRf54M63B8spbQysi7XQSXUjHQnXot8FNvsvHANF2elexv4Wegzs/10Je
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
OgpOQ1aa3f54jH5ndnju9DbCoWnhkLTH5bQa9rt/6mB5UkknQI5XmiC1C+xq
ojW0Bs0tirt9blnoRIjh+6RPLMGvoo3rWBOdTWtwd+pH3eekm+lEFF6qfzTc
UkFH0vl0KOTtiOe9I9LyQQY6hVbh5fJRnXpsykYnz26ee8V9q9bxtI6+QSvp
s3QUpOkkt0vG6KDRoePFfauD/mWnY4osiGF/7SnuW8FTW3f8u5Eacpy4b1m1
yWmrRlvoIvj/tHBxoyLx/CYt16KczqLz8HZdv+enXNSY0HiPR6PkUoycv/99
Z28LnYNzvcf93tzDRidDbltshBwfbaLVtAaX9x16vCNAg2njW0zoesOCn+V4
8bwmxX1jgxj22d1OWojhue6V/k6Y7CS6GGL4/7gsMtFZUD5ffODqW/H7JNqv
uWCmH9JaOpZOoq/Rt+lT9HnI23muhLz8GQMdRYvnu2OK4l5TjbQCzb8y1By7
ZKUjMOv5CO/j4r1NbtvISKtpNZ1AJ2BB+Ncz/0h6CKn9MHcTHUtrkNJu5r+D
44x0IpaI3bYvsdKREMPPKBgu5i1239zDiDbXY5esyymAvPwhKzqv3vBwumMe
gnzmVewYX4XGok2LhFK6CGG/bth/Y+5jyMu5lmN58Sfnr+WW03l0Hp2KuRtS
rVf/LaXvQY57a6MvIbe4X8yKrdX0X6isaTP/TnwNvRujvef81qWnBV1vrBvt
2dtA62gVraQVCOj645MdO010BK2hg1HSa2qzeUUaSO3XbDPQibQK0nQWhWRC
ajvPzULH0TqEhj9o3irDSCsxYtw3128uKUTPMy57Ptphwp/qmZWV+jJaQ+fS
iVgq2g+7W0pH4kOTVUd0Ux9D2+hQtFdXI/2IVkNhPBD0tsJMJ9Ba+hZWbzwf
9vtbCx2Cxq5fjGxzpARTA5T1R4v3XH/vPz9ucKGcVmFUaGrD7ZpKWoHqMxE+
Te+a0Fg6vZkJuwZPtF2aWoSdot0RJ/EcdSf+4E8JeRDDc5m4owrjX7z29dmc
A3fX1k6dRtdAjltQSpcgPDfvVq/XJZCXDyyns+k8yNv5Rg0xbB8PSymdQOfA
+iwh+IV4nqy1eI/Z9+2wg+J5Uo6PM8FgOnaw47MyWgM5fqwBYpiu7jcttIrW
QV6+mYUWn5Mr50Y+u1oMefmjJjqL1tAP6ERs/aTQ/8mZDMhx00x4I9q3HKWC
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
q4rUiPac7uIdW4nbR3taMutpMT/Y0+mCvoqOo4sxWwz7H3FOr3EGXhxYuOlY
QSEOSvExJhwtTZ5p2pOLCXKcDXLcgmxc9HZ3rfvcTifQRfRdOh0n9IhSzzLQ
MZj8oss863UrfZPOo89CXIzExs+z0UKK36DH1sXV292O6LBfih9pxa8ho7tM
7FZG52HE4Oxow+MSSO03N7HQmXQOPEXb5p9rILU7t6uMjqWz8dnl9sNjctMg
hr+l3LcMfcb5Xgn8RQ05PryCVtIFWOZib/lHMyOdisFOm/a/cbHRD9HOcfT4
7QF2+jpdRJ/GHuW0Zl3cy+n9kJcPqqS3wSP8S9VnyVX0KjTL62Xsaq6m59El
9CTI8Q9q1xuFmrja9XrD/5zHp2Ora9drDzn+de16Deja9f799F8vj169W+VD
fre4n34aNHH/pPEWWg0x/PGXPCppJVy7Hb0w40gVHU4X06G4cMNYMXZxHgxi
2ApxvqlxMq2mo2klfZUOx4JWX7VpHq+nQ/Hq9ovwG/ML8LzjTWeF+N0RF2P9
86QcbGkyu45irBVy/H86fFzvhoPC3U6r6CJ4z5jZO/I3I52Oksqq+Mkji2D1
/UjhFmDCm21vX8xoUk5n0bl0PFpL23HLRicpfp2RTqC1eFLyaUxwfAbk5c+a
8fn0a8k7GmgQIHbvOq2CjqUL6Ag6lT5PP8T8BRMb7ZqZgDmNFS6GMAN9l9ZA
XJxXXwYmQ2o/YqUZ8sebmWgdxDDbhl0vQo60XPsyPAxq63ytdzmdDXGtv3Bf
LM4tot2xCWW0ms5G/257xlxP1aCJFDe9DGL4D6t3aFFPanu1AvbeJ28/+s1M
F2CPauDEWSNL4CjaD71uQdHbiE+87+XBQYqbVYnXO1Y3PdLPQhfSOXQanUg/
wu31todvP8+EHH/XgNn9F2xGionW4EXSK9f8xcWQ2s5cY6YzaB39mFbRt+go
+hwdhsjfxqp86yfANe7zi6su6iGG27bveSOtprW0EsHxxZcGVGghf7ylEUt/
DFwd0SQLUvthDWzI7+zx9c14M51P6+gUWkU/QOG4pQd+EOfRGl/DxuL/ujUd
XASp7fRkPaT2uxqV02o6l1bSSXQ4fZ8OxabXxz5OFs8pNQ7Co7efd14abaX9
cD31j8L34rlhkmgXJH4HZ5W9WfNzsJVWQ16ujQHiWnsudTEj5jfzmD0HrLSO
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
S2voCJxRpsZ/vN5Mn8c037JFnUdW0EfoAtqfTqW/x60/mg829FTDTWIzPcTF
GLz/lgZBjcZ87u9ihdajMnLhOi0m7gkN83KyIyr54c02Z810Ea2j0/HXf6++
u1SehRTX4JaBfib89PS/r23/mOkstJ578u+dx0ow2Kl7XQ+9GRNylj3Wh5XT
OjqXVuHoD3MHjLCV0VF0Ni3O+wtyGk7bVvt6MCL7V9bt+biCDoAct7CK3kgX
00shx31Vmz+Trs33ppPooXgk2v5VYaS7YeaEiI8Oi/uYZy9XhysKPZ1Oq+kY
WknfpMPxXkxHFZ8IMfx1DRQGiIsR3up4JsTwR9QVz1uWIxfrln6qgRjuWUcv
O7aZV8Te/8JMi9/1HY5fT7cVQ17OtRy7f1POnrmtnM6lc+kkyMuXlNH38aJF
3v5JzyvoK3hTf/X4S5ur6JN453TvglY8b9Z4L+S4Bc/pzXQp/S39jP6Kfkp/
Bk8p/m8DPZzW0D1x+/tu5sBgLeqL9tFinjWOo9V0JK2kL9DhWCmmo9qdAP8v
FYENxTz7vXm1LzrcSGuQeCSo64xJRdC3VBgdvczYblx0I+5JLsTwv3dwq6CT
6AL4fLx6Vt5rI50Kz873ett/tNEPYSjsaYzbb4DYfBuFOH/XWENrsH/vrQZv
F2rRW6Gq67fCDHn5k2Zahz/CZy0qnVxBqyCG/1PMSwOkNq6HjLSG1tKxdByu
/XX7l68+NdKRtJa+gOoW3y9KiNZCXj5YT8fRavR+XGk6Lu4/Upv23c2Qlz9i
onV0Fq2i42lxv3z+/ZG+79IhtZ0+1kDH0Br6Jh2LLb8cWGoo19MRiEkaH/li
g5U+jxvhz7snOIv7oNh98/16zM57fXTxLiutxpvoia13NDGgv8L7YoCHmdbQ
OjqWVtERdBR9ng5DshQfqKeDsbh08v7GHgVwkOJ89Ji07+nC0Os5UAROqD/e
00on0uI8J20vMBPS7ps1sNBP6Bz6Np1I/0rfow/Tl/FCtG/2iZ4+gTfSy52t
9B58LnbfrEgPabct++ph/L3N1es/FEB+ubUV+7+/VLVWlwON53mXug3tWDhj
taumTjZWBPsE7KxbjeS4Z+47O+gwdJLn2FjH55DbO5fRpZj7ZqT3ul0V9DO6
gH5Kp9K/I1yKHyWeK6T4N3paSavpcFpJh9LheOI161aWv54OxZyC6glrOhSg
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
L6bniW/zw58mWkvpCXQ+7YkebdaOiDuQAzHsOQ5iv9I03s/Nwm6f/j0cHG14
1T3h7YnRWngpzjb1cSiDvJ0YDdroM+p4OlSgzaqf2qWv06DBC2t1D4fnuD4p
8cb/xO+ptLqrz3NUDNu0/LSXeO6OXu/ooqhyPP0M16e8tG/NSocc/6IY0jTe
ZSohx/9Xio9+Cb80Ee8RcvzHcrgbNz5pd0YNOf5zBa7s++l/N6xqyPFbn0MM
+/TzuhrI8Y+fw3X0kEUNPDSojHuONjH3xwV20qAo2sFZ/1zsd92/j5d210CO
f1vlePoZ9jzvdtQ7LR3npPhPxdgk2vdOVyJTiv9ciumi/Z3/qVAsxf+vnI6l
CzFX2k7vdGyQ4rcW09F0DqaJtj3jDXQyuqRtWnzKYKPvo4kUt6KMvorpou03
1U2oK8U/1OPVqRE+6RcKUEOKm22j02kdHU2nYMVpr8nWmWlwFO0f1zHhjWg7
uacSctudJfh8+8yTRnXNdC5Oje7z663LhZDar51vxSJpO7/rIMf3LMUZ0aZF
cyudjz57r6TfjXgGMfz/dU+3Ynxgpz+7lRfT2eigOvbgxJtSOonOp+9hjBT3
yUpfobPpE5Dj3bMgx/2spxNpJdzGn/5tyeMMyKc3MdOPaC0q4wx0AqT2fmvy
Ibf1NUJqv7DQSqvpbDqOTqLD6Xt0IKLGxXpm/2Gg/TH7yjyP0ns22pfW0avo
FHoB0qXlmpjoSVgk2v8VWoDPa+ffC3DW0+m0Ehli2PVPmGgFrDPzltd8UkKH
0rl0AKJE+9hVVtoPs8d+KJ83sJT2ofPpFfQTeh5+X/K4ZdfFVXkTUKPajPuJ
DoWYc6pbR/GZQpxo38uzmFbSObSCTqZD6ft0AH2V9oMc3zwJUpqrpx5yfLyR
VtJqWkHH0aF0OB2AepcGfa5rTsad6u19HHz1WDAl+e9t4vm70kp8lOJOFOCP
obU8fDzMOOU6pt9Vcw7ky13tsF6M6VO+Pws/T3By8XAppxPpQnyrPXllc5iR
zoDUpunYAtQZ4+DofNFEp9MaOpqOR2GTaqvDEgz0HSzb7xg13WijL0EMe3bX
lWX0UQT3GP9hgfg9EMNy3fGDntbQSjqeVuDfy0vmhswz0qF4r47oMa1nCR0A
qe3bhQZI7VeL+Zifem458jkPUvtBQ204IG3HPQdSu/MeZZh35k1i7Q5ZkC93
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
6MCy52ZaTWvpJOwtzpvw+q2FvoFRyyrPv93ioM9g5baA6OyGJki7ayb9/Wmy
NbQKpT5eF38Ls9BKLPdyn7ox0EHH0cV0NFRnTg7/PLEAufMU0QHhBojhRx4S
59Naq9DYdWu3XuJ8KrXx8rUgXI6rpHV0IZ0KXyn+pZVOoPPpWFw+U+1dclCH
bEXAVvczBjqVVtEJtBKnjte87jotE/Lbm5kgb2fWU0i792pgR/HgeeeWrBL3
b0WDEe7Svw9q/KV9+gwLXQo5/o8yuIa6Ng3yrYTb5Qc+W7ZU0oV0IZ0Befln
VvoOAg61jL3+3EFfgLjWp2JHmCDH3zPg9rilkyb72WkVXUQrsfbxpKTkbgWQ
397ShLLnU+LipL/PVrYGUrtpaQ46mS6m4/H3lgYtPr9RQcfgiRj2t50MkJeP
NNAqWkUraSVaDW77wfORTyC/3dsEw4WQ2c2XqCCGG9nQw44/pbg2FroIfzfr
fmVOIwedhXGFJr/vtUaI4a/29TXj/JJVTR/bbbQW2lt3I56tddIpcEyfkbpi
SA19E+t69DQNbPecPovEFi1fHN/3zgfx9Z49f07IeOdtuJY28u/z5ndeAzn+
xTvPxaBh5Xtup1nQVLSL9DBAalcyx0Gr6GJaSWfT4rxjfrjwq/FmOhrfb/nC
9Q9rKT7N3B4+Xpw3Qp4dCtgyuJJWIe752OhHJ6poJV1Cx8F53/tir8oKOhqv
vvbQ/bzm3esj8faam+PJvWo6FGM7Pk2Kv2TG/oYeRxW+BnQ6UBlSpLPTKrqI
VtJZdBw6iGk8bayCtHsvcT+ptZJW03F0EsTw/3MqjPQNiOH/sF6cm2t9BmL4
GBrgpPfTpfRWOodehVbL9iy6eEmF/RKbGmglraLjaCU2Nj484eTXGfDu6xLk
42qi79Aa2KS264x0MsLerF6+pkkJgjoHuI8IMNFPaA2GTBuwbv3XKsjLR1pw
O81fNzVTjUw3963uox1Y3qdR/+arLXQx7hzZcazBYAedjS6tvdpMthshhunl
Ip6Tk+Mv3awKK8H4UK+I0Fg7/YQuou/TWbCcbudTI85VDaR4fzP+vlkndUuQ
mdbi3yIX07AzdjoFYvirTquc9E2MHz5he9v+ZrhI8f2MqCitaH87rxTy8kdt
GHLn3s6r/SppPU6WlKYUHK2iM5G3rGZ2VU41fRcJUvxNM6R2x3YZUSzFF9lp
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
ONRBp8Blo2fD/gHV9E1M8JgyuXKpGXL8ECMqYpxVofXKIC9/0obELm+HRAdW
0nq6kM5Ez+xHjReqrPRdOp++iLh//4zO3apDveSOI22p4vdV2k6xFlL7tXNs
dAqthzSNNT65CJTe3qoC4mKsuW1UwWf85PCJnlW0ki6BGH7egLYm+gnk+Fsl
kIa9a7aZfkJrUVTo0ihxvZlOgdT26/t2+iZerQvYdq3MSZ9FZv1ljWOlf/4l
LX/cQGtpFX4LPF7HnmehlfhLtF27wEHHYbOqIiCxXzUdLbcrO1pDR9LldCid
R6+Euxz3Lj+EfpcfTKfQATgjxW8y0b1pDe0DMewpuQUadBDDDlcY6GRaBTn+
VA48TrYa4KuwYO1to1dAkjjXiHd7KRy0ki6m4+hsLHi/sUszTyOdiIRGOxUN
dtjoy7SePoa1UlxpPob0WRqkWCjOx10jKmw7dZDj/cX7rpV57ivTQn55GyfO
LBm4be5rC10K1a3jSTe+c9A5sBXnGvT/q6Yf0GX0FSSu7zdo/aRK+gRdSO/F
q6k3b00NzEdrKX6QgU6jVTi9+PbhbhdNtBLB/b8a13yqnY7DxWNXzzW47KSj
4Xvs7AcaXzNueLhEJ4n7q1euuok90k6r6CJaiRFrXg4fMq+CFud/qf0/zyDt
rq27Ee7RIRHbjhRhoruiUeNwG51F6yFNZ+1/T9HMNWBbHd8KLFjpPFXzn5ku
oLV0OuT4o1qI4a/0Ed/XoWG+jefMF+c1sXsv8X1dG2ehi2gdnYUurUw+8wdY
6XtIvvFd4n9PyyEvf9gIOe5mJa2mC+kkaKT4NfmQ4/uaILefYaU19LufJ9Np
dDy+H70z58QvJjqG1tAH6GQ6jI6nVyNibWbOvW5Geg5GSMsfstGT8dz+L75r
aYQY/o29buJcIdo3u1EMMexpo1xtdDatpxPpTPoyfRexw+fnfbYrHcaAiG86
hhrp27QacvxCI50E3T8/vOrpWgI5vreJfkJr6Pt0Mi721f766PcsuPke3q8Y
ZcJn89uUfzvMTGvQrV+j50NP2+lkHDq64/XJp046Hj+3jsw87m+G15zWHiHi
OajWWlpNp9BJ9E36Bn2WPoPc0BHlsUcN9H7MD/BboRlvo7dCUf2124DfDUjt
660c7WfAMWk7e4sh/7ipDeeNWyr7na2g9ZDaHf20is6kS+i76P/g+eb5unev
v4jKyyMaKgYa8GS0osMupYFW0eL5tJvaVdnIQisxNXXxiS8vlEF+eysTUt/m
LRi1TA8x3APunnZsbrk192Px/TbKtdUYtx1OPBsZ0q/JWitdig3P/sq52OgZ
DihGeW/1rYQYfr/FKZV0IcTwW98yVtEZdAl9h35CX8ChhS6GegdUqCvF3zPQ
SlpFx9FK7GqhWO7jYaTj4Bd3tH5iTDGkdpENjbi8av7JV44ChO4fEZK53Uan
03r0z7uinVlmojMhtf9zfSnk5bzMCBXtm+cXQmo7I8JOZ9BF9B06CwfnB13Y
0CULcnwfM8TF2bEi4ykOSMsfsdOP6SIslOL+NtJZ8D87YPNQcZ6s9T1aT1+C
f1XCF3fEebKT6/CeqTkG5A6pzu+xw0qrILVrkeKglQh9f3TQtJ4mjJTe3tqE
NmL4LzJK4NfbEpQjrq8c/6KCLqIL6CxMfv9Rux8eWOl7cErxnz+DvHykEV5r
R/5xbkQRtvq2nDM/0wa3rz/d0vXTClqPsGsXH0V1qaIz6RL6LqI/utyrU/a7
11+EGObP3t+8e/0R+t3rIxDWMdzqN74QcnwfA4p/+crzF+TDT/pxKxvk9pOs
tJ5+9/NMPEpMi3sz5d3P79Lvfn6RTqOP0LfoCFyR4j4z0hswSmpfUwyZrQx0
Nq2iE2lxjoibEW6vycLwHM/WdeqY6Hu0hr5EJ0Nq+614vqt1PJJXNz1/Xzzf
1TqG1tMH8GZyzNJvc/PRp988T8/RBkjD/nqNlVZh1tio6mv3HLQSf784PDy2
qwnzd+zd6uJhwuE9vcv+l1KCfsPTlaFudsx71idi0HeFOOY7NyQgzEln0KVw
Dq3XdMFzE51Da+gHiLzT1m9CUy3a9K1Xr2OmeA7940K3AD/xPCB2622xQd5O
N/E8IMWvdtIpdCl2xZf1/+IbE50DMcxjv/S10w+wYvCIY37zjRDDjfTJMNJq
Wo0Zjfefj/jSQifhlRT/u7jfSfGDTPj3UoPIzM2VtAb/Ta07et6jKjqZLqHj
6Sd0DH2fPoA1Ef4jc/yyIYYbaRbzr3UircLO0VNSu8cYaXH+ie06p4XaRov7
l6ZZnz0LnXQ0XUpHQl6uTSUdCqlt0x+r6JV0CR0Cqf0IcwUdjOY++/9aPswA
abfe4vu91ipaBXk7d9XY6jZ4n5uLBYt2Hxnpv9xC6yDHD3TQqZDj3q+mE+gy
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
TxhspQvoXDodq1tpXx7cZ6Hv0zn0ZUw579R8oZ8WNXF6eK882TkjLRuKNyu8
vJbbIMdvFZbiB1ZCjp+VDfnwttV0Al0Cqf3Z0kxI7Q7tLKMf0nnA6Wv/vRbX
jRqnQGr/+9JCyPHPjXQGrcEUKX6tCnL8QzOtpLWwr7Q8/aGxkU5EsMu25fUi
CxElLX/USGfQGqj0/fo4rDfR8Vj2/OiRgPvldDQcklq3bnTZgO9F+409DAhY
0HCvS46NVqPRe437lM8MaCfazhtvhrz8SRutxfbHMc7aSZV0Ivb37vb0zgsj
nBzHJ0zYY0T3ZOWyKfuK4Ohw3nDep5zOpPMhxx8w0WmYF33zwpe9iiG1O9Td
hNQ1f60c3k8HeflD5Yg+9XlhVgMrnY+Jg3PXLTtfCqmN+2Irft836KNvysvo
XDqPTsbihZN2zXhjoe9Ajntnpy9AnOtzh7dW0UcwdNOd0632iud3KW62ns6m
VZh8ZlVZHZOZVtJaOgpS2/YNxPdAtDtexwDPttM6pzhaaDWdQ8dBDD/1plft
6zfRNWz1ggkFJZCXa2rA1XLV+Mcu+WjU75P03rttdBqtw2CprbifrXEqnU3H
YrJoPyjVTEfiomjfdpGdPgY57r0BYvi3PBboaTWtgl2KO66B/Hbp3yON0dwY
ecFMa6GdtHJcIUowcc+ABp1cLHQWnUP/SSchcvT+Oj0T0tFz6pKRieI+psb3
aQ1WmGeFDbhqoOPhvPWvoZmjCiHHTTPSGbQGyq9G7Lq3zETHQ9/tbMKcmHI6
ms6nwxHSZ/nblLW5kJc/qMc8z8lHt2RrIbWdMk7cj+7NXlw60ELrEP3Jqg8b
s0ogH+5upbPoXPpPOhnfal79VlZpoO/QavoCHUcfoW/SO9FVWq5D7fEb8Pud
bZ8v/c1GL6F19AyY1uV/NsmQAzHcw8F19GgwbecgrxAtXNy2j493tEFqf68k
G9t3j/xkvkMlpPavdmfDW7SPUlTTCXQJ5PgfjXQWXI67L4utXwQpraXSRGfS
2ej4tWOjmYEmOgGhPQJ3XlGW07eQesgrYbq+kv4D/Vutuv7P5ybIy5/R49iv
g/N+PlNOq+h8Wkmn0VH0PToM95etfVR23ECHYq5o+yLTRgfQOtofqaJtM0Uu
zkkUv29/nfrC6BxgoVXYJNo7Ku20ki6go+h0OgxP8ztPVswy0aGwVbp1U1wt
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
i/dNMqnQul4fV9d1ZrgN++Pj5iNNdA7k5Tva6CQcef7P4XFNq+lIiOE5v5xp
hBw3R09n02qYqgYn/qU10XHY+0Pm4nMbSyG3FX8Htc6iNXQsHY81qcWzreV6
OpxW08F0HH0aX//YpfRmj0yIYc+4M0lHP6VVaCJNY3Q65Lc3N6FEau+ugtSm
VUMb/AqeNbK/L84dzs6R/g7VdBxdgkFPvvNUDjXQz3Gh5ImrTpxnav0MmTWL
nTcfr6Lv0cX0z3j4fRuHRd0q6OO44Z+ftVv8/crxo3SYOX7D1/8bYKFV2PHy
gM96kw6OfgvGH2hqghy/xUJr6Xw6Ed/NjtkVocmB3Ha/gU6iNZC30zELUvtt
gSY6ltbi/pThJ+fEpEPaXSd3M+aIYU+Za6Rz8ErazqtijLvX1fOjKWY6k87B
Emm5K0Y6Ce9vNewZNbwEIbPdLB63DDi/sfO9bUPzIcfNskIM/9XMiBxIbb1u
V9FJdDGuX5rYZ3GTLEjtzvauoGPpPHRsX3+vf5S4nqcC611PN0NcjJGjJ6og
tf3SbMNtKf6ZGnOk+C3VdBxdQofRz+kg+hmmjQh7Zj2uo++hx+X80t8nWOif
Ice90kGO366D1L6bOC/UWkXn00o6lQ6lo+lA5KXqRx4Q54VaB2CD6VXHuIS6
9XxQD+MX3uuvhxjuuUpXHa2mVYj7Qj3nzucmWklr6VDs9rQfv+nXbIjhP25q
r8eSAA910UsTrcaASYGW6u9sdBxdSIdBmkZATi7k5Zz1dDKthhieS3ihgY5D
0aVSx/nfWOkwxLQfPWPXQT3k5cTzQK3VtJqOo+Mgb+/3DIhr7ena1YBYKe68
CvJyLlZs3t1tZWR3E10Ap5bP/pn+awm+NI9yHDeuHGK4bT135ePWlk4OXbtW
wuLYeYJX53K6CNscmnVzb1ZJZ9BF9BN0iktwTE+oe/8dSMMO669DbZyOVtEq
THw18MCbUDXk+GEmSNNovkUD+eMdbHQ8XUiH0+l0MB1Dn6Zv0wfoi/QW2h+7
//p571/eCfhUih8inq+l7bzORGfp5fYW+imdT9+lUyGGP2OtOhm+HuNWflbP
SEfR2fQNOgGLg79avEycf5z9/DasWWago2gNfYOOx76bZWPKfk+CvcupJk2m
GvCmwVVNcL8s7PdL/aFBDysdSxdg08De/QoNejoNI9qea/3Nawv9GNZ5beYd
HK+HvPxpPa2m1Wg64fr4haM1kNpdWGlC4OgNo1MeaSDHD7bR8XQhzh4+XvF+
joFOR3pC8lbvPlY6BublxpGx56ro2xDD61g2pYa+iF35O09s6v6S9qfL6N3o
POyKcWFaBb2OzqMXwE+Kf2OmpyBRiv/TRo/CCineu5rujb2x1jttjhrxjdRW
oaOzaRWdQCvph3QofZUORL31oe7nryXhs3pnjkn/flTEmqMT99bPQvD+yRPq
eVgghp/6QGmk8+lsOhVuXs33vt6VjSED09YoHI10Ap0NhynxA8ZsMtAJtIZ+
SMfTV+lw+gwdTB+EvPwZHb0V7g1/ff90soX+is6nZ6J/5z9b7YzNwdTB7RXx
DjpIbXN2atGjXRPFcnsL3twzrXfIzYbUfqBdFcTw2+9/a6LFfTzpdET7k6Xo
ftXOdaqiAm5/G37roc+HGJ5zD59K3G1ztEU/p1xIaS2U1ahMMow7esBMl9A5
9HM6iX5GR9L3cF/azplUiOFeUNTocN77uHJ3cyOtwsDWPRe0vFsMjRT/qQnh
bveSr77Mw1rp451seNPnlff6UzkYovBtqBPPbX87jS5bsNJMl9B1rz9H21+G
N0wR9wu5bZCRTqSzYRRtdx4x0Am0hn4Iqf2cUg3k+FF6GEWbc49MtBrepW4d
B8wohRj+5sPTTXQWrcUIdfAycz815OVamDHMvnLysYEayG2P2HBCtO92zEQX
wl20f9q9FFL7beL5t9ZZdC7cQq8kOnZTQ2r3s3j+vfva8lenPhrUxtmwfvSH
vSn+JroQYthtl7uVQo6PLMdlX2P3dHFuk+MWVKKnaPumdzldBHk7iWWojSun
X9C5mDJiSfBTfzWcpPhIMx1H52DeFyt8T73PgH30Zz3XfWOG1Lb5PiOdg3du
E9oe+dVKJ9EFdCTGHHGZYNhUTl+nc+lzdDJ9iI6it0NcnMQ+L1IhU5y3Qt+c
32luZ6RVmLfr86dvjllpJV1Ah9JpdCD6bDoy98qgus8H0Nm0DzIWGs59nWmi
N9Naehn2pfivfP6f+D1pERnl5KijE2gV/ZBWooV59rEen6RCDHuOnZ2BjqY1
dAgdj14PVgz5KU5Hh+Ps3EEXM5dZ6GA6nz6NlePDy/9Ly4H/goX1HcR5Yv6p
u3/u22KmVXjTe8KZdo3LIL9dnCeaPxj91Y2PCzBj/R0fhThP1DqNLoTU9vdu
Rjod3gPsVp94VgxR3tnV00hn0tl41V2ZGfajkU6gs+mH8G44cGuV2URfRazD
hZHvttjoM+j74oJ1YgMDomZ7+DhME78fUnw9K61CxierP5zaX0Ur6WI6lM6k
AyGG2fbfxyrct7d3W3NAB13fh9cvvFNjrmg/xNMCJ2k7ZzW4K9pddK2i4+li
jMjY0OvGnkxx3vI40MOxAl//1C8p4qSRzoPik5Ql03uVoJFjQGDDeDP9nM7B
gtWfD6o2qlBPit9sppV03euhdBJWR7XMHtNUT0dC4XV/Q/7NQshxc/V0Oq2G
Iv1ck79mGek4OpsOoxPoIEjTCC3JhNQ+2l+HGx+3S62vVkFqu2i8BbaJDbZ4
DjHR+Xjbrd5j1/Y2OhVy2wI9XD1b+N4R98tl7yvid2wtgtR2tq8V8vLF5XQB
nUun0cn0YzqKvoX/A0gZrsc=
          "], $CellContext`triangle = Graphics[{
            RGBColor[0, 0, 1], 
            Opacity[0.2], 
            Polygon[{{0., 0.}, {1., 0.}, {0.3, 1.}}]}, 
           PlotRange -> {{0, 1}, {0, 1}}, AspectRatio -> Automatic]}; 
       Typeset`initDone$$ = True),
      SynchronousInitialization->True,
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    TraditionalForm],
   Manipulate`InterpretManipulate[1]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.548858080584146*^9, 3.548858145277643*^9}, {
   3.548858227038352*^9, 3.548858284356546*^9}, 3.548858488815915*^9, {
   3.5488595337037354`*^9, 3.548859549092793*^9}, 
   3.548871328872613*^9},ExpressionUUID->"ad4d4e5e-36f1-448c-9885-\
97701304f927"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Linear Algebra", "Section",
 CellChangeTimes->{{3.513423480399478*^9, 3.5134234906488132`*^9}, {
  3.548842415487805*^9, 3.5488424177281857`*^9}, {3.548912345405633*^9, 
  3.54891234941143*^9}},ExpressionUUID->"afc170a6-1de0-4239-937e-\
3368a5936ff1"],

Cell[CellGroupData[{

Cell[TextData[{
 "Conic sections ",
 StyleBox["[5 Marks]", "ExerciseMark"]
}], "Exercise",
 CellChangeTimes->{{3.475884903064666*^9, 3.4758849048615427`*^9}, 
   3.484461173820545*^9, {3.4850445630825977`*^9, 3.4850445680698977`*^9}, {
   3.485044658980051*^9, 3.485044661378015*^9}, {3.4850449367621517`*^9, 
   3.485044941224503*^9}, {3.515467508853146*^9, 3.515467509683137*^9}, {
   3.517695403581285*^9, 3.517695404915094*^9}, {3.5177219095845613`*^9, 
   3.517721911635532*^9}, {3.517721962298813*^9, 3.517721965145336*^9}, {
   3.517750711571588*^9, 3.517750711721921*^9}, {3.548912663968132*^9, 
   3.548912680847474*^9}},ExpressionUUID->"071dbaf2-6b62-46d5-b3a6-\
4b48475932e4"],

Cell["Conic sections have the form of a second-degree polynomial:", "Text",
 CellChangeTimes->{{3.4161112109657927`*^9, 3.4161112115782843`*^9}, {
   3.416111755660698*^9, 3.416111775355237*^9}, {3.41611185160119*^9, 
   3.416111858257153*^9}, 3.516602977221156*^9, {3.5176954066021233`*^9, 
   3.5176954136510563`*^9}, {3.517720153629072*^9, 3.5177202507492533`*^9}, 
   3.517720290499755*^9, {3.5177203440725307`*^9, 3.517720384030203*^9}, {
   3.548912376234676*^9, 3.548912378777701*^9}, {3.548912529352399*^9, 
   3.548912542239088*^9}, 3.5489125924847116`*^9, {3.548912688594042*^9, 
   3.548912689663179*^9}, 
   3.548913738714793*^9},ExpressionUUID->"8c3e197e-600e-4570-a6f8-\
c0fd0591a247"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"b", " ", "x", " ", "y"}], "+", 
    RowBox[{"c", " ", 
     SuperscriptBox["y", "2"]}], "+", 
    RowBox[{"d", " ", "x"}], "+", 
    RowBox[{"e", " ", "y"}], "+", "f"}], "\[LongEqual]", "0"}], 
  TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.416111838935772*^9, 3.4161118494364223`*^9}, 
   3.4162647941344213`*^9, {3.517695419518927*^9, 3.517695455689138*^9}, {
   3.517720254237466*^9, 3.517720272358139*^9}, {3.517720391529714*^9, 
   3.517720445670163*^9}, {3.548912619448855*^9, 3.548912651981161*^9}, 
   3.54891270753695*^9},ExpressionUUID->"dbb44fdb-a99e-4a0a-b5ac-\
6c9261e46fb4"],

Cell[TextData[{
 "A curve passing through five points ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "i"], ",", 
      SubscriptBox["y", "i"]}], "}"}], 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", "\[Ellipsis]5"}]], TraditionalForm]],
  ExpressionUUID->"5df15862-6cdd-4b2d-8b3f-a0fa7a099035"],
 " can be computed by solving the following determinantal equation:"
}], "Text",
 CellChangeTimes->{{3.4161112109657927`*^9, 3.4161112115782843`*^9}, {
   3.416111755660698*^9, 3.416111775355237*^9}, {3.41611185160119*^9, 
   3.416111858257153*^9}, 3.516602977221156*^9, {3.5176954066021233`*^9, 
   3.5176954136510563`*^9}, {3.517720153629072*^9, 3.5177202507492533`*^9}, 
   3.517720290499755*^9, {3.5177203440725307`*^9, 3.517720384030203*^9}, {
   3.517720500362355*^9, 3.517720547081105*^9}, {3.517721385935679*^9, 
   3.5177213980467253`*^9}, {3.548912718152226*^9, 3.548912731787527*^9}, {
   3.5489597988401403`*^9, 
   3.548959803378286*^9}},ExpressionUUID->"072f93ef-c76a-4ceb-b8d2-\
e3c114fa035f"],

Cell[BoxData[
 FormBox[
  RowBox[{
   TagBox[
    RowBox[{"\[LeftBracketingBar]", GridBox[{
       {
        SuperscriptBox["x", "2"], 
        RowBox[{"x", " ", "y"}], 
        SuperscriptBox["y", "2"], "x", "y", "1"},
       {
        SubsuperscriptBox["x", "1", "2"], 
        RowBox[{
         SubscriptBox["x", "1"], " ", 
         SubscriptBox["y", "1"]}], 
        SubsuperscriptBox["y", "1", "2"], 
        SubscriptBox["x", "1"], 
        SubscriptBox["y", "1"], "1"},
       {
        SubsuperscriptBox["x", "2", "2"], 
        RowBox[{
         SubscriptBox["x", "2"], " ", 
         SubscriptBox["y", "2"]}], 
        SubsuperscriptBox["y", "2", "2"], 
        SubscriptBox["x", "2"], 
        SubscriptBox["y", "2"], "1"},
       {
        SubsuperscriptBox["x", "3", "2"], 
        RowBox[{
         SubscriptBox["x", "3"], " ", 
         SubscriptBox["y", "3"]}], 
        SubsuperscriptBox["y", "3", "2"], 
        SubscriptBox["x", "3"], 
        SubscriptBox["y", "3"], "1"},
       {
        SubsuperscriptBox["x", "4", "2"], 
        RowBox[{
         SubscriptBox["x", "4"], " ", 
         SubscriptBox["y", "4"]}], 
        SubsuperscriptBox["y", "4", "2"], 
        SubscriptBox["x", "4"], 
        SubscriptBox["y", "4"], "1"},
       {
        SubsuperscriptBox["x", "5", "2"], 
        RowBox[{
         SubscriptBox["x", "5"], " ", 
         SubscriptBox["y", "5"]}], 
        SubsuperscriptBox["y", "5", "2"], 
        SubscriptBox["x", "5"], 
        SubscriptBox["y", "5"], "1"}
      }], "\[RightBracketingBar]"}],
    {Det}], "\[LongEqual]", "0"}], TraditionalForm]], "DisplayFormulaNumbered",\

 CellChangeTimes->{{3.416111838935772*^9, 3.4161118494364223`*^9}, 
   3.4162647941344213`*^9, {3.517695419518927*^9, 3.517695455689138*^9}, {
   3.5489127764055977`*^9, 3.548912814139145*^9}, {3.548920213774105*^9, 
   3.548920219922447*^9}},
 CellTags->
  "determinantal \
equation",ExpressionUUID->"f91f35d8-cdff-4a55-86a8-d9cc6b7d930e"],

Cell[TextData[{
 "Use the determinantal equation (",
 
 CounterBox["DisplayFormulaNumbered", "determinantal equation"],
 ") to compute the equation of the curve passing through 5 randomly chosen \
points, computed using ",
 Cell[BoxData[
  ButtonBox["RandomReal",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RandomReal"]],ExpressionUUID->
  "51b2df36-46dc-453b-8ba4-72acb93ee6cc"],
 ". ",
 StyleBox["[3 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.5176385916714487`*^9}, {3.51765414684319*^9, 3.517654174375705*^9}, {
   3.517694321357823*^9, 3.517694351437441*^9}, {3.517694544030953*^9, 
   3.517694647222076*^9}, {3.5176946775610743`*^9, 3.517694743453536*^9}, {
   3.517694773477655*^9, 3.517694774440851*^9}, {3.517694812913557*^9, 
   3.517694818924179*^9}, {3.517720582244282*^9, 3.517720622352458*^9}, {
   3.517720788128921*^9, 3.517720796399218*^9}, {3.517720984609191*^9, 
   3.517721006805491*^9}, {3.517721041130808*^9, 3.517721044281329*^9}, {
   3.517721297274198*^9, 3.517721371864374*^9}, {3.517721439185177*^9, 
   3.517721493234713*^9}, {3.517721544364993*^9, 3.517721544535983*^9}, {
   3.548912876324791*^9, 3.548912955449771*^9}, {3.548912988249124*^9, 
   3.548912988937111*^9}, {3.548913501495562*^9, 3.548913504166258*^9}, 
   3.5489137610678453`*^9},ExpressionUUID->"74be4a2e-3f17-4af3-b186-\
092f849d2180"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["ContourPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ContourPlot"]],ExpressionUUID->
  "7e7c5454-b179-450a-9d09-c932e5439c1d"],
 " to visualize the curve. ",
 Cell[BoxData[
  ButtonBox["Show",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Show"]],ExpressionUUID->
  "9c3b1776-f3c1-4fd9-9723-631d4cab9908"],
 " the curve together with the points. ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.5176385916714487`*^9}, {3.51765414684319*^9, 3.517654174375705*^9}, {
   3.517694321357823*^9, 3.517694351437441*^9}, {3.517694544030953*^9, 
   3.517694647222076*^9}, {3.5176946775610743`*^9, 3.517694743453536*^9}, {
   3.517694773477655*^9, 3.517694774440851*^9}, {3.517694812913557*^9, 
   3.517694818924179*^9}, {3.517720582244282*^9, 3.517720622352458*^9}, {
   3.517720788128921*^9, 3.517720796399218*^9}, {3.517720984609191*^9, 
   3.517721006805491*^9}, {3.517721041130808*^9, 3.517721044281329*^9}, {
   3.517721297274198*^9, 3.517721371864374*^9}, {3.517721439185177*^9, 
   3.5177214761466208`*^9}, {3.517721510580914*^9, 3.5177215107050467`*^9}, {
   3.5177215541298027`*^9, 3.517721590524994*^9}, {3.5489137650912237`*^9, 
   3.548913765869079*^9}, {3.5489139029732313`*^9, 3.548913903568225*^9}, {
   3.548916476010653*^9, 
   3.548916477000745*^9}},ExpressionUUID->"eb6866f1-41ee-4b0c-afb5-\
5d66b7626dd6"],

Cell[CellGroupData[{

Cell["Solution", "Solution",
 CellChangeTimes->{{3.450492134067934*^9, 3.4504921365634604`*^9}, 
   3.512197033318738*^9},ExpressionUUID->"1321b44b-8309-418a-80b9-\
6ad378f75005"],

Cell[TextData[{
 "Each row of the matrix can be constucted from a point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], TraditionalForm]],ExpressionUUID->
  "69358e7e-f240-462a-adeb-28788fb22bec"],
 " using a function:"
}], "MathCaption",
 CellChangeTimes->{{3.5177209279540873`*^9, 3.517720958661766*^9}, {
  3.517721071515003*^9, 
  3.517721095032322*^9}},ExpressionUUID->"1111ee27-6157-4ac7-bf6c-\
68825b4d843c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeRow", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["x", "2"], ",", 
    RowBox[{"x", " ", "y"}], ",", 
    SuperscriptBox["y", "2"], ",", "x", ",", "y", ",", "1"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{
  3.416106747295074*^9, {3.41610855403436*^9, 3.416108554955532*^9}, {
   3.416264781811369*^9, 3.416264783829411*^9}, {3.517695465802915*^9, 
   3.517695466498384*^9}, {3.548912455210753*^9, 3.54891246037212*^9}, {
   3.548920227885536*^9, 
   3.548920230032322*^9}},ExpressionUUID->"183455e2-eccf-4623-aa68-\
28f793d5b36e"],

Cell["\<\
Compute the equation of the curve by constructing the matrix and computing \
the determinant:\
\>", "MathCaption",
 CellChangeTimes->{{3.517721771934085*^9, 3.5177217902624693`*^9}, {
  3.548913794493819*^9, 3.548913795243615*^9}, {3.548913830100398*^9, 
  3.548913845098414*^9}},ExpressionUUID->"1bd80901-3565-4557-ac10-\
d4faf239af58"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"conic", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "[", "pts_", "]"}], ":=", 
  RowBox[{"Det", "[", 
   RowBox[{"makeRow", "/@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "}"}], ",", "pts"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.416262552869493*^9, 3.416262575006143*^9}, 
   3.416269290828609*^9, {3.5176954802764893`*^9, 3.5176954829301147`*^9}, {
   3.5489131044995613`*^9, 
   3.5489131050005283`*^9}},ExpressionUUID->"c39a0e0d-9389-449f-824d-\
2f5916f65d95"],

Cell["Check that it works on a random set of points:", "MathCaption",
 CellChangeTimes->{{3.517721794490615*^9, 3.517721806841064*^9}, {
  3.548913850203039*^9, 
  3.548913876980027*^9}},ExpressionUUID->"7d060865-b22c-4260-8e13-\
b7f97f24407c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pts", "=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.517720810095044*^9, 3.517720816632703*^9}, {
   3.517721201812346*^9, 3.517721222780387*^9}, {3.517793840914324*^9, 
   3.517793860757442*^9}, {3.548913002986216*^9, 3.5489130071136303`*^9}, {
   3.5489134753266973`*^9, 3.548913477113879*^9}, 3.548913576977179*^9, {
   3.548913613997469*^9, 
   3.548913614356142*^9}},ExpressionUUID->"4e68c846-ea33-4d12-8601-\
626457247975"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.6220876239803541`"}], 
      RowBox[{"-", "0.05785396088237693`"}]},
     {"0.9457325184326102`", 
      RowBox[{"-", "0.4546331492321305`"}]},
     {"0.40560993846496896`", 
      RowBox[{"-", "0.5298542482672777`"}]},
     {"0.3735520566186561`", "0.6276692694649215`"},
     {"0.13153106129930459`", 
      RowBox[{"-", "0.5589301502934458`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.5177208170635843`*^9, 3.517720820338077*^9}, 
   3.517721223506551*^9, {3.517793842437072*^9, 3.51779386111197*^9}, 
   3.5183288595742083`*^9, {3.548913007887375*^9, 3.548913023541699*^9}, 
   3.548913477486456*^9, 3.548913577712922*^9, 3.548913614775057*^9, 
   3.548920232795011*^9},ExpressionUUID->"707e136c-5096-4e58-bd92-\
e84da2bd2e5b"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"conic", "[", 
   RowBox[{"x", ",", "y"}], "]"}], "[", "pts", "]"}]], "Input",
 CellChangeTimes->{{3.517720089687092*^9, 3.517720102379035*^9}, {
   3.517720640886341*^9, 3.517720782473957*^9}, 3.517720815319202*^9, {
   3.5177208929820766`*^9, 3.51772089339604*^9}, {3.548913108326111*^9, 
   3.548913109035996*^9}},ExpressionUUID->"bc6e7b7a-1c87-43b4-9e82-\
54585dff3aa6"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"0.010274467636785842`", " ", 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{"0.059804356924001115`", " ", "x", " ", "y"}], "-", 
   RowBox[{"0.028263297211074324`", " ", "x"}], "+", 
   RowBox[{"0.0835086641109469`", " ", 
    SuperscriptBox["y", "2"]}], "+", 
   RowBox[{"0.014488188902214923`", " ", "y"}], "-", 
   "0.018847332971947323`"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5177201030007763`*^9, {3.517720662408791*^9, 3.517720782884101*^9}, 
   3.517720893786069*^9, 3.517721662006061*^9, 3.517721808858945*^9, 
   3.517793909240518*^9, 3.548913109437224*^9, 3.548913818433921*^9, 
   3.5489138856121473`*^9, {3.548914017139319*^9, 3.548914037518746*^9}, {
   3.548914082839259*^9, 3.548914097568021*^9}, 
   3.548920232959181*^9},ExpressionUUID->"6ba2ccca-d4db-4b7d-b98a-\
b948064069d9"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"%", "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Point", "[", "pts", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.548914005540052*^9, 
  3.548914095911248*^9}},ExpressionUUID->"af471828-265f-4185-a56f-\
bfe0bd2ff8da"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
aGUTrt4eJfwhqh2Otr6Gx/xNeOq6VbeUaCeUdf+lXBjZiGScvjwi4YLInUZc
ovg07FZ/J9xM5zUStW7E+CPOPB1lXXCipNpMYU0jknlEFavEq6aeBtS2r3dx
U+2BMd7O7F1pDfjq9BnzFM8eOLrcpjX5WQN6L4/UtdbrhYML+U4DknnPSsXH
hkvMGnDysZ686L99sCi20cZGuAEdQiV7PPz74PW9xHEtSgOS+Vd+2cpm6/R6
TOThc4nv/AUuXzgr7fzrsfm5VdxL+36Y5stSq99dj2S+JyfefhDE6lFceFvG
3qJ+iFU+lizKWY8iml1eJ0MHQOAgW//srTok80urLaI+xe51GAhfS+gvB8CG
jWg77VqHRq6bhrnm81rSD6a0jfq8uDYI08VvEw16fyKZz6ZvqK+wo/7ERRli
UgV5g2CiffORW9ZPtGmuzrDWH4KK/nojXdOfSObPV6jLgk/J/cRCPqtVHKND
sDcjvzJ+qBbtnLyyz8kOQ+dpNV3t4lok8/Va3bgjWvNxlWONTN8Pyghwi19k
xO2sxaHjIX26EiPw7Kh28lPJWiTrA2sH8t+KVdWgyNm4KDHqCMQ9FwujvarB
S/qiMSX6o+BlFtKRqleDZD2CfncDe6tMDebtutGfHzcKNlKrE87w1uB9Ha/p
R9fGmHGfpIFGXPKNMWgOp14ad6tGsh6yd9w5Yt983x+tXJtvjYG4e1nqDddq
vCfaFp13eBw8hygH5VuoSNZbMhpFVI7lU1EgZpenU8o4cMV+fKcfSUW1KKWg
3bITYK4ySGc7QEWyvvMpI3xqgoeK3vvjR6+2T8C2Eeu/DXKrMH6DrofI3AQs
DRy6uS+5Cg0E2K8kb52EIwt2qEKyvlR8UjGM83gVtqzdcyWhfBLGgq5sdxGs
Ql5vqn3SiingLF2+O7S5Esl61spwuey/n1eiVe8aXPNqCmb77sptvFyJoTsj
DTx0puFnsVr1ibkKJOtndruMO427K3DF8ZXsc5fnn7eIivk0zMdHLZiRWDPN
jLu3Tymu4NWeAb3bm0wyVCuQrNflfll5qGtjBcYztsURt2bgIZd2qL9QBS4x
zWuOWD0LL5RXmtPCypGsD/YIaYyvP1OOkcXhXVnps5Amzfrp/fpy/NhG440a
nIXT9yVnimfLkKw/vm9x4TkZW4aTYi6Ht+TOwdloyY5O0zKkDoBST98cNJ6l
vhKAMiTrnZp7R8oedpXijKw+n+sBCuEc58Mz9KEUBd5AylgghbjzcMvMWp1S
JOupLO/t7iXJleLptOt64e8pxHeVsHaGUCnW6ru73J6kEOS5PXyX1+2ZKAth
Lv9qX1RnMZL13C8xBUUp5cV49liZGG5kIaJbJ9zZUouxtZ1n6wZPFsIBYm0P
hBYhWS8+wb+FTxKKcPDqktXDBSyEqr9wXXveD7zU7eU52cdCvKU+1u/R+4Fk
ffrw7Uztk1mFqOhqsSJEiZXIW8C5EFlyG+zfG7ESpkXqBYaLCvEF3za1k6dZ
iVWpa9plagqQrIcvXeW4jV+sAKkMkwejyEokLTr8Qj01HzNpprdU2NmIu56a
fB9peUjW39UYXUfvPs7DN5sFLK5IsxHy6saEtnUebrXe4pV0gY0g45Ien6rG
7vtshIBifMNm4e9I1vs3eOyprWb/jhqUGlutCDZiYpPhz7nWbyjpkCHaM85G
JAiZ3KPk5CJ5v3Bwv/ODpydysUnCTRBV2QkN75dmi1u/otj+5pubLNgJhxGJ
CFb7r0jeX/CcTl0TnJuD+fq2rUb57MR0b/MdA9EcnPRqOXKqnp14Mt5vmE/7
guR9ycnydVy+cl/QOUIwc9UWDqJYaiz1Xk42Pjk3+snqCgcRtfm2AVf1ZyTv
Y3x9Bb5oPvyMA1XlaTJPOAiPH4u2Lj73GV+t7W9Vq+QgyDjLSFTxwyIWToKx
S0jojtwnJO+DqBER51s7s9D3quml8OWcBJ3zzsTxB1moU37jUZg1JzEbKrs7
yz4Dyfumv/cmSBgFfUSztQpdq9M4Cc8LSjtDzn/AD5a75V1KOYn9ryZUvD+n
4571LCZUChfxccH+aUjedy2mtjzstEzDL/fTaUuVuIjnzTv8qzhTUXFq2cvm
w1yE5hOKme/uFCTv0xI6w2y9Ke+xRHVMy/kZF3HZ4s2TkD3JOGGmeKpheP7/
lsGpGX+/RfI+T3Dd4QpHTML/ASLLu80=
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1fOfEAYYBvC7bFvXZdu2edl1mZfNy91l27ZtDrWFsYbaagtD3GoL3/v0
w/d5/4LneYNDw0L6BQYEBJwSUTca0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJ
QUpSkZo0pCUd6clARjIRRGaCyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlCUYpR
nBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNCaEJTWlG
c1rQkla0pg1taUd7OtCRToTSmS50pRvd6UFPetGbPvSlH2H0ZwADGcRghjCU
YQxnBCMZxWjGMJZxjGcC4UxkEpOZwlSmMZ0ZRBDJTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjOc5RznucBFLnGZK3zCp3zG51zlGl/wJde5wU1u8RVf8w3f
8h3fc5s7/MCP/MTP3OUev/Ar93nAb/zOQx7xmCf8wZ/8xd885RnPecFLXvEP
//KaN/zH/7zlHe+JKn8g0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorU
pCEt6UhPBjKSiSAyE0wWspKN7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSl
KE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGNaEwITWhKM5rTgpa0
ojVtaEs72tOBjnQilM50oSvd6E4PetKL3vShL1HjHUZ/BjCQQQxmCEMZxnBG
MJJRjGYMYxnHeCYQzkQmMZkpTGUa05lBBJHMZBazmcNc5jGfBSxkEYtZwlKW
sZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5x
nBOcDPz49z4AdtXJkw==
          "]]},
        RowBox[{
          RowBox[{
            RowBox[{"0.010274467636785842`", " ", 
              SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"0.059804356924001115`", " ", "x", " ", "y"}], "-", 
            RowBox[{"0.028263297211074324`", " ", "x"}], "+", 
            RowBox[{"0.0835086641109469`", " ", 
              SuperscriptBox["y", "2"]}], "+", 
            RowBox[{"0.014488188902214923`", " ", "y"}], "-", 
            "0.018847332971947323`"}], "\[LongEqual]", "0"}]],
       Annotation[#, -0.018847332971947323` - 
         0.028263297211074324` $CellContext`x + 
         0.010274467636785842` $CellContext`x^2 + 
         0.014488188902214923` $CellContext`y - (
          0.059804356924001115` $CellContext`x) $CellContext`y + 
         0.0835086641109469 $CellContext`y^2 == 0, "Tooltip"]& ]}], 
    PointBox[{{-0.6220876239803541, -0.05785396088237693}, {
     0.9457325184326102, -0.4546331492321305}, {
     0.40560993846496896`, -0.5298542482672777}, {0.3735520566186561, 
     0.6276692694649215}, {0.13153106129930459`, -0.5589301502934458}}]},
   AspectRatio->1,
   Frame->True,
   PlotRange->{{-3, 3}, {-3, 3}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.548914019742239*^9, 3.548914040153173*^9}, {
   3.5489140850342817`*^9, 3.548914099134543*^9}, 
   3.5489202332113857`*^9},ExpressionUUID->"5ab2bd16-e4f1-4627-8259-\
82aea2641760"]
}, Closed]],

Cell["Make this dynamic:", "MathCaption",
 CellChangeTimes->{{3.517721818162561*^9, 3.517721864298563*^9}, 
   3.548913538136397*^9},ExpressionUUID->"6bf64ce6-21ba-4142-b9bb-\
1e0ba4d7888a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"conic", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "[", "r", "]"}], "\[Equal]", "0"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", "Locator"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.548913357900056*^9, 3.5489134012414722`*^9}, {
  3.5489141143597603`*^9, 
  3.548914114669162*^9}},ExpressionUUID->"3feb5c6d-1a75-4cfe-8708-\
2f14c55ba57d"],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`r$$ = {{-0.8026669078630855, \
-0.40698354136928483`}, {-1.365, 0.3200000000000003}, {-0.4588584766013013, 
      0.370655737911902}, {0.351924061163178, -0.01168756176861896}, {
      0.41000000000000014`, -0.71}}, Typeset`show$$ = True, 
      Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
      "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`r$$], {{-0.8026669078630855, \
-0.40698354136928483`}, {-0.5347734598642147, -0.16199650083403494`}, \
{-0.4588584766013013, 0.370655737911902}, {
         0.351924061163178, -0.01168756176861896}, {-0.4741091016902663, \
-0.1648653643777136}}}, {-3, -3}, {3, 3}}}, Typeset`size$$ = {
      450., {220., 227.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = False, $CellContext`r$184651$$ = {0, 0}}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, TraditionalForm, 
        "Variables" :> {$CellContext`r$$ = {{-0.8026669078630855, \
-0.40698354136928483`}, {-0.5347734598642147, -0.16199650083403494`}, \
{-0.4588584766013013, 0.370655737911902}, {
           0.351924061163178, -0.01168756176861896}, {-0.4741091016902663, \
-0.1648653643777136}}}, "ControllerVariables" :> {
          Hold[$CellContext`r$$, $CellContext`r$184651$$, {0, 0}]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
        ContourPlot[$CellContext`conic[$CellContext`x, \
$CellContext`y][$CellContext`r$$] == 
          0, {$CellContext`x, -3, 3}, {$CellContext`y, -3, 3}, PlotPoints -> 
          50], "Specifications" :> {{{$CellContext`r$$, \
{{-0.8026669078630855, -0.40698354136928483`}, {-0.5347734598642147, \
-0.16199650083403494`}, {-0.4588584766013013, 0.370655737911902}, {
            
            0.351924061163178, -0.01168756176861896}, {-0.4741091016902663, \
-0.1648653643777136}}}, {-3, -3}, {3, 3}, ControlType -> Locator}}, 
        "Options" :> {}, "DefaultOptions" :> {}],
       ImageSizeCache->{513., {258., 266.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      Initialization:>({$CellContext`conic[
           Pattern[$CellContext`x, 
            Blank[]], 
           Pattern[$CellContext`y, 
            Blank[]]][
           Pattern[$CellContext`pts, 
            Blank[]]] := Det[
           Map[$CellContext`makeRow, 
            
            Join[{{$CellContext`x, $CellContext`y}}, $CellContext`pts]]], \
$CellContext`pts = {{-0.6220876239803541, -0.05785396088237693}, {
          0.9457325184326102, -0.4546331492321305}, {
          0.40560993846496896`, -0.5298542482672777}, {0.3735520566186561, 
          0.6276692694649215}, {
          0.13153106129930459`, -0.5589301502934458}}, $CellContext`makeRow[{
            Pattern[$CellContext`x, 
             Blank[]], 
            Pattern[$CellContext`y, 
             
             Blank[]]}] := {$CellContext`x^2, $CellContext`x $CellContext`y, \
$CellContext`y^2, $CellContext`x, $CellContext`y, 1}}; 
       Typeset`initDone$$ = True),
      SynchronousInitialization->True,
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    TraditionalForm],
   Manipulate`InterpretManipulate[1]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.5489133948559637`*^9, 3.5489134017877197`*^9}, 
   3.548913547271627*^9, {3.548913930778903*^9, 3.548913934245811*^9}, 
   3.548914115126482*^9, 
   3.5489202333880367`*^9},ExpressionUUID->"e2d09e6b-8eff-46f2-9237-\
0a6ec9ddc48a"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Hermitian matrices ",
 StyleBox["[7 Marks]", "ExerciseMark"]
}], "Exercise",
 CellChangeTimes->{{3.415598897630817*^9, 3.4155988993253393`*^9}, {
   3.415792063240962*^9, 3.415792063417357*^9}, 3.479964551056511*^9, {
   3.517694181448888*^9, 3.517694185904394*^9}, {3.5176953112556057`*^9, 
   3.517695315094222*^9}, {3.517748832811035*^9, 3.517748833263063*^9}, {
   3.517748953595207*^9, 3.517748954019075*^9}, {3.548842499228348*^9, 
   3.5488425039399223`*^9}, {3.5488708360919037`*^9, 3.548870837672309*^9}, {
   3.548871573146418*^9, 
   3.548871586358947*^9}},ExpressionUUID->"7c44123e-15ec-4523-93f8-\
33c8bdfcc6fa"],

Cell[TextData[{
 "Consider the general ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "\[Times]", "3"}], TraditionalForm]],ExpressionUUID->
  "b045559b-c380-46fe-97a6-f7a47d2472be"],
 " Hermitian traceless matrix"
}], "Text",
 CellChangeTimes->{
  3.548842559492589*^9, {3.548859597064073*^9, 3.548859662051484*^9}, {
   3.5488596951758327`*^9, 3.548859705585771*^9}, {3.548860403359941*^9, 
   3.5488604147375402`*^9}},
 CellTags->{
  "Transpose", 
   "ComplexExpand"},ExpressionUUID->"a2bedb64-b500-4d89-9bc6-1fb7efced49a"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[ScriptCapitalH]", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\[Alpha]", 
        RowBox[{"\[Beta]", "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}]}], 
        RowBox[{"\[Delta]", "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]"}]}]},
       {
        RowBox[{"\[Beta]", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}]}], "\[Phi]", 
        RowBox[{"\[Eta]", "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}]},
       {
        RowBox[{"\[Delta]", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]"}]}], 
        RowBox[{"\[Eta]", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], 
        RowBox[{
         RowBox[{"-", "\[Alpha]"}], "-", "\[Phi]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.513073899045864*^9, 
  3.513073908925119*^9}},ExpressionUUID->"10e6b802-94f2-4ce6-abb0-\
c35d32fd9a42"],

Cell[TextData[{
 "where all the parameters ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Ellipsis]", ",", "\[Kappa]"}], 
   TraditionalForm]],ExpressionUUID->"836b5330-a5d4-4935-8e24-de021859bed0"],
 " are real."
}], "Text",
 CellChangeTimes->{{3.548860963062611*^9, 3.548861019363996*^9}, {
  3.5489634873453197`*^9, 
  3.5489635303677073`*^9}},ExpressionUUID->"33d63db7-ce22-4bee-bf9d-\
69e7e6f78f28"],

Cell[TextData[{
 "How many parameters are there in this matrix? ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.54885973442934*^9, 3.54885976860077*^9}, {3.548859809461206*^9, 
   3.548859843618287*^9}, {3.54885988286909*^9, 3.548859888977769*^9}, {
   3.548860042891416*^9, 3.5488600430901003`*^9}, {3.548861044573166*^9, 
   3.5488610449850283`*^9}},ExpressionUUID->"b2efbc95-8e82-4fae-b019-\
ac58928764e2"],

Cell[TextData[{
 "Verify that \[ScriptCapitalH] is Hermitian and has zero trace (",
 StyleBox["Hint",
  FontSlant->"Italic"],
 ": use ",
 Cell[BoxData[
  ButtonBox["ConjugateTranspose",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ConjugateTranspose"]],ExpressionUUID->
  "644e9cc0-df2e-4075-bca5-56856750d7e2"],
 ", ",
 Cell[BoxData[
  ButtonBox["ComplexExpand",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ComplexExpand"]],ExpressionUUID->
  "6f08de2d-8a5d-4a62-8d2e-123db66ec469"],
 ", and ",
 Cell[BoxData[
  ButtonBox["Tr",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Tr"]],ExpressionUUID->
  "e9536c92-9ff7-46fb-b7fb-9a5a23d678d9"],
 "). ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.54885973442934*^9, 3.54885976860077*^9}, {3.548859809461206*^9, 
   3.548859843618287*^9}, 3.54885988286909*^9, {3.548859945186142*^9, 
   3.548859975017909*^9}},ExpressionUUID->"c8ffa277-7b55-4c88-a1e6-\
de09bf73447d"],

Cell[CellGroupData[{

Cell["Show that the set of matrices", "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.54885973442934*^9, 3.54885976860077*^9}, {3.548859809461206*^9, 
   3.548859943706952*^9}, 3.5488600401141157`*^9, 3.548860156617709*^9, {
   3.548860451642043*^9, 3.5488604554031057`*^9}, {3.548860487389079*^9, 
   3.5488605127201843`*^9}, {3.548861061722053*^9, 3.548861063745206*^9}, {
   3.548870489268136*^9, 3.548870504638194*^9}, 
   3.548870962062462*^9},ExpressionUUID->"db3b22c9-567c-450b-acff-\
e956ce3fb41c"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"X", "/:", 
    SubscriptBox["X", "1"], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"1", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
   RowBox[{"X", "/:", 
    SubscriptBox["X", "2"], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}], "0"},
       {"\[ImaginaryI]", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
   RowBox[{"X", "/:", 
    SubscriptBox["X", "3"], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0"},
       {"0", 
        RowBox[{"-", "1"}], "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
   RowBox[{"X", "/:", 
    SubscriptBox["X", "4"], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "1"},
       {"0", "0", "0"},
       {"1", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
   RowBox[{"X", "/:", 
    SubscriptBox["X", "5"], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"0", "0", "0"},
       {"\[ImaginaryI]", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
   RowBox[{"X", "/:", 
    SubscriptBox["X", "6"], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "1"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
   RowBox[{"X", "/:", 
    SubscriptBox["X", "7"], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"0", "\[ImaginaryI]", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
   RowBox[{"X", "/:", 
    SubscriptBox["X", "8"], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0"},
       {"0", "1", "0"},
       {"0", "0", 
        RowBox[{"-", "2"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.513070814032769*^9, 3.513070835923259*^9}, 
   3.513070868052526*^9, 3.513071033096203*^9, {3.513071118257161*^9, 
   3.513071119265873*^9}, {3.548860170270072*^9, 3.5488602958474207`*^9}, {
   3.5488603276057863`*^9, 3.548860367505978*^9}, 3.548860743011282*^9, {
   3.548916399398015*^9, 
   3.548916424788437*^9}},ExpressionUUID->"21c52b90-8204-42b7-bbc3-\
5fd8cae1d880"],

Cell[TextData[{
 "form a ",
 StyleBox["basis",
  FontSlant->"Italic"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "\[Times]", "3"}], TraditionalForm]],ExpressionUUID->
  "c8f87988-5a5b-444d-8cc9-9f0ae7b3c1ba"],
 " Hermitian traceless matrices (",
 StyleBox["Hint",
  FontSlant->"Italic"],
 ": this means that \[ScriptCapitalH] can be written as a ",
 StyleBox["linear combination",
  FontSlant->"Italic"],
 " of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalChi]", "i"], TraditionalForm]],ExpressionUUID->
  "67d08fd0-8f86-4a35-9018-8786f6e7e12b"],
 "). ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "ItemParagraph",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.54885973442934*^9, 3.54885976860077*^9}, {3.548859809461206*^9, 
   3.548859943706952*^9}, 3.5488600401141157`*^9, 3.548860156617709*^9, {
   3.548860451642043*^9, 3.5488604554031057`*^9}, {3.548860487389079*^9, 
   3.5488605127201843`*^9}, {3.548861061722053*^9, 3.548861063745206*^9}, {
   3.548870489268136*^9, 3.548870504638194*^9}, {3.548870962062462*^9, 
   3.5488709905457582`*^9}},ExpressionUUID->"cb39f99c-f808-44a4-877e-\
d25aa5af2764"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 StyleBox["commutator",
  FontSlant->"Italic"],
 " of two matrices (or operators) is denoted "
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.54885973442934*^9, 3.54885976860077*^9}, {3.548859809461206*^9, 
   3.548859943706952*^9}, 3.5488600401141157`*^9, 3.548860156617709*^9, {
   3.548860451642043*^9, 3.5488604554031057`*^9}, {3.548860487389079*^9, 
   3.5488605127201843`*^9}, {3.548861061722053*^9, 3.548861063745206*^9}, {
   3.548870489268136*^9, 3.548870504638194*^9}, {3.548870962062462*^9, 
   3.5488709893771877`*^9}, 
   3.548871045980733*^9},ExpressionUUID->"95361fbc-b0da-40cb-8a9f-\
c51853b7b8cf"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"[", 
    RowBox[{"A", ",", "B"}], "]"}], "\[LongEqual]", 
   RowBox[{
    RowBox[{"A", ".", "B"}], "-", 
    RowBox[{"B", ".", "A"}]}]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{
  3.5488617751991587`*^9},ExpressionUUID->"c2eb0b61-bcc5-421b-ba54-\
a0664186c82c"],

Cell[TextData[{
 "Show that each commutator ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     SubscriptBox["X", "a"], ",", 
     SubscriptBox["X", "b"]}], "]"}], TraditionalForm]],ExpressionUUID->
  "bbb93ebe-ae73-4fac-ab93-0e8219d9a154"],
 " can be expressed as a ",
 StyleBox["linear combination",
  FontSlant->"Italic"],
 " of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "c"], TraditionalForm]],ExpressionUUID->
  "ce150782-3540-49a6-ac01-63d3f97a2a4e"],
 ". ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "ItemParagraph",
 CellChangeTimes->{{3.548861424890424*^9, 3.548861654881765*^9}, {
   3.5488616878829412`*^9, 3.548861798643231*^9}, {3.548862451429484*^9, 
   3.548862451911768*^9}, {3.548870544786327*^9, 3.548870547853306*^9}, 
   3.5488705804995623`*^9, {3.548870639015409*^9, 3.5488706643903837`*^9}, {
   3.5489141614452744`*^9, 
   3.548914161874939*^9}},ExpressionUUID->"f967074e-931d-4e2b-899e-\
124b9f1d85db"]
}, Closed]],

Cell[CellGroupData[{

Cell["Solution", "Solution",
 CellChangeTimes->{{3.450492134067934*^9, 3.4504921365634604`*^9}, 
   3.512197033318738*^9},ExpressionUUID->"45cbb97c-25ff-4c26-959e-\
9c292a050ae5"],

Cell[TextData[{
 "There are 8 free parameters: ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.548860031250432*^9, 3.548860031708148*^9}, {
  3.5488600948233843`*^9, 
  3.5488600962422657`*^9}},ExpressionUUID->"990e6aaa-80e0-4860-ac84-\
90278ea173e0"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Variables", "[", "\[ScriptCapitalH]", "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.548860018320406*^9, 
  3.548860021269401*^9}},ExpressionUUID->"e59a2d3d-0040-4815-8cbb-\
7fb0d81fc8ff"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", "\[Delta]", ",", 
    "\[Epsilon]", ",", "\[Eta]", ",", "\[Kappa]", ",", "\[Phi]"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.548860021748261*^9},ExpressionUUID->"23bf8dd0-d2c1-4cb4-b5f1-\
55412ea20d1b"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Length", "[", "%", "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.5488600241620827`*^9, 
  3.5488600267326927`*^9}},ExpressionUUID->"05496d28-838b-4fb5-bafe-\
0a3e71b94c67"],

Cell[BoxData[
 FormBox["8", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.548860027170492*^9},ExpressionUUID->"c46f269c-6da2-4c51-8f70-\
0206fd260633"]
}, Closed]],

Cell[TextData[{
 "Verify that \[ScriptCapitalH] is Hermitian: ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.548859283019734*^9, 3.54885929375389*^9}, {3.548860056903373*^9, 
   3.548860092043847*^9}},ExpressionUUID->"318153a9-215f-4bed-8330-\
a914e07f580a"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"ComplexExpand", "[", 
   RowBox[{
    TemplateBox[{"\[ScriptCapitalH]"},
     "ConjugateTranspose"], "\[LongEqual]", "\[ScriptCapitalH]"}], "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.548859776482246*^9, 3.5488598054453*^9}, 
   3.548860116252535*^9},ExpressionUUID->"5695f326-6c7d-40fc-8846-\
f950d95a8496"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{{3.548859791942574*^9, 3.548859805907447*^9}, 
   3.548859850836372*^9, 3.548859953167532*^9, 
   3.5488601174407377`*^9},ExpressionUUID->"9d6ccd6e-750e-467b-923e-\
a8674dc79db5"]
}, Closed]],

Cell[TextData[{
 "Verify that \[ScriptCapitalH] has zero trace: ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.548859283019734*^9, 3.54885929375389*^9}, {3.548860056903373*^9, 
   3.548860088704083*^9}},ExpressionUUID->"d41e7be9-92ee-46ef-a93b-\
448eb75347de"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Tr", "[", "\[ScriptCapitalH]", "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.548859928126967*^9, 
  3.548859932361897*^9}},ExpressionUUID->"c83e5b9d-71fc-4f07-893d-\
42f06800daa7"],

Cell[BoxData[
 FormBox["0", TraditionalForm]], "Output",
 CellChangeTimes->{{3.5488599328009377`*^9, 
  3.548859954659751*^9}},ExpressionUUID->"fa6a6d96-a4ed-4531-b658-\
6c996b5f2b08"]
}, Closed]],

Cell[TextData[{
 "Show that \[ScriptCapitalH] can be written as a ",
 StyleBox["linear combination",
  FontSlant->"Italic"],
 " of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalChi]", "i"], TraditionalForm]],ExpressionUUID->
  "a475b630-2092-44fc-8225-b0b907036185"],
 ": ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.548859283019734*^9, 3.54885929375389*^9}, {3.548860056903373*^9, 
   3.548860088704083*^9}, {3.5488611267897882`*^9, 
   3.548861164956718*^9}},ExpressionUUID->"8169eea9-91ba-488f-9bb6-\
9996b917898f"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"\[ScriptCapitalH]", "\[LongEqual]", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "8"], 
      RowBox[{
       SubscriptBox["c", "i"], " ", 
       SubscriptBox["X", "i"]}]}]}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      SubscriptBox["c", "i"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "8"}], "}"}]}], "]"}]}], "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.548862153178083*^9, 
  3.548862157333321*^9}},ExpressionUUID->"313fac57-3cbd-4e71-8dc6-\
cc4d4792d0d6"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", "\[Beta]"}], ",", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", 
      RowBox[{"-", "\[Gamma]"}]}], ",", 
     RowBox[{
      SubscriptBox["c", "3"], "\[Rule]", 
      FractionBox[
       RowBox[{"\[Alpha]", "-", "\[Phi]"}], "2"]}], ",", 
     RowBox[{
      SubscriptBox["c", "4"], "\[Rule]", "\[Delta]"}], ",", 
     RowBox[{
      SubscriptBox["c", "5"], "\[Rule]", 
      RowBox[{"-", "\[Epsilon]"}]}], ",", 
     RowBox[{
      SubscriptBox["c", "6"], "\[Rule]", "\[Eta]"}], ",", 
     RowBox[{
      SubscriptBox["c", "7"], "\[Rule]", 
      RowBox[{"-", "\[Kappa]"}]}], ",", 
     RowBox[{
      SubscriptBox["c", "8"], "\[Rule]", 
      RowBox[{
       FractionBox["\[Alpha]", "2"], "+", 
       FractionBox["\[Phi]", "2"]}]}]}], "}"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.548862157832114*^9},ExpressionUUID->"f2fdc481-fcc9-4c50-b472-\
f1748d98962a"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "8"], 
     RowBox[{
      SubscriptBox["c", "i"], " ", 
      SubscriptBox["X", "i"]}]}], "/.", 
    RowBox[{"First", "[", "%", "]"}]}], "//", "Simplify"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.548861173782941*^9, 3.5488611884029617`*^9}, 
   3.548861273275551*^9, 3.548861879394068*^9, {3.5488621632769403`*^9, 
   3.548862164460042*^9}},ExpressionUUID->"a46b78bd-d3b8-47fe-940c-\
0fe1532c4920"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\[Alpha]", 
      RowBox[{"\[Beta]", "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}]}], 
      RowBox[{"\[Delta]", "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]"}]}]},
     {
      RowBox[{"\[Beta]", "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}]}], "\[Phi]", 
      RowBox[{"\[Eta]", "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}]},
     {
      RowBox[{"\[Delta]", "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]"}]}], 
      RowBox[{"\[Eta]", "-", 
       RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], 
      RowBox[{
       RowBox[{"-", "\[Alpha]"}], "-", "\[Phi]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.5488611757030373`*^9, 3.5488611885549088`*^9}, 
   3.54886127375788*^9, {3.548861865569316*^9, 3.5488618834164658`*^9}, 
   3.548862164872013*^9},ExpressionUUID->"51a981f5-0ff1-438f-a5a0-\
c51fe168c5ce"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"%", "\[LongEqual]", "\[ScriptCapitalH]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.548861886232439*^9, 
  3.548861890517404*^9}},ExpressionUUID->"43b148db-5b3b-4004-b89c-\
b5398d2e485f"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{3.548861888892666*^9, 
  3.5488621661662083`*^9},ExpressionUUID->"f45bbf67-fe45-4b7e-8a37-\
a97ac9b7e35a"]
}, Closed]],

Cell[TextData[{
 "Show that the commutator ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     SubscriptBox["X", "a"], ",", 
     SubscriptBox["X", "b"]}], "]"}], TraditionalForm]],ExpressionUUID->
  "dc82f192-be85-4e39-8b39-cadcdc138a84"],
 " can be expressed as a ",
 StyleBox["linear combination",
  FontSlant->"Italic"],
 " of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "c"], TraditionalForm]],ExpressionUUID->
  "e5e4cdba-9000-4228-b365-8321acec1fc7"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.548861424890424*^9, 3.548861654881765*^9}, {
  3.5488616878829412`*^9, 3.548861798643231*^9}, {3.548870592949256*^9, 
  3.548870606882339*^9}},ExpressionUUID->"67b28d1a-7770-41f2-8208-\
855b78da2533"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"\[ScriptCapitalT]", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      SubscriptBox["f", "c"], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "8"}], "}"}]}], "]"}], "/.", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["X", "a"], ".", 
            SubscriptBox["X", "b"]}], "-", 
           RowBox[{
            SubscriptBox["X", "b"], ".", 
            SubscriptBox["X", "a"]}]}], "\[LongEqual]", " ", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"c", "=", "1"}], "8"], 
           RowBox[{
            SubscriptBox["f", "c"], " ", 
            SubscriptBox["X", "c"]}]}]}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["f", "c"], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "8"}], "}"}]}], "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "8"}], "}"}]}], "]"}]}]}], TraditionalForm]], "Input",\

 CellChangeTimes->{{3.54886218451537*^9, 3.5488622577962713`*^9}, {
   3.548870686740409*^9, 3.548870696489254*^9}, 
   3.548871169257615*^9},ExpressionUUID->"d0286a81-9b38-4042-854c-\
551beaf9ed4d"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", 
        ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "\[ImaginaryI]", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "\[ImaginaryI]", ",", "0", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", 
        ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "\[ImaginaryI]", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "\[ImaginaryI]", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", 
        ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "\[ImaginaryI]", ",", "0", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "\[ImaginaryI]", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "\[ImaginaryI]", ",", "0", ",", "0", ",", "0", ",",
         "0", ",", "\[ImaginaryI]"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "\[ImaginaryI]", ",", "0", ",", "0", ",", "0", ",", "0", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "\[ImaginaryI]", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
        "0"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "\[ImaginaryI]", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "\[ImaginaryI]", ",", "0", ",", "0", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "\[ImaginaryI]", ",", "0", ",", "0", ",", "0", ",", "0", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{"3", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", 
        ",", "0"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "\[ImaginaryI]", ",", "0", ",", "0", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "\[ImaginaryI]", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "\[ImaginaryI]", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", "\[ImaginaryI]"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}], ",", "0"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "\[ImaginaryI]", ",", "0", ",", "0", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "\[ImaginaryI]", ",", "0", ",",
         "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "\[ImaginaryI]", ",", "0", ",", "0", ",", "0", ",",
         "0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"3", " ", "\[ImaginaryI]"}], ",", "0", ",", "0"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"3", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "0"}], 
       "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
        "0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"3", " ", "\[ImaginaryI]"}], ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0"}], 
       "}"}], 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.54886223096214*^9, 3.548862258161371*^9}, 
   3.548862302550954*^9, {3.548870688171899*^9, 3.5488706970785017`*^9}, 
   3.548870800064522*^9, 
   3.5488711705802183`*^9},ExpressionUUID->"e6b8ce82-864e-4882-a752-\
e8ccda7fbfd0"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"MatrixForm", "/@", "\[ScriptCapitalT]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.548861972334971*^9, 3.5488620352782583`*^9}, {
   3.548862069350325*^9, 3.548862128794559*^9}, 3.548862263801075*^9, {
   3.548862307152567*^9, 
   3.548862308902781*^9}},ExpressionUUID->"6b38fa18-2bbd-4674-afae-\
0691aa52d7fa"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", 
         RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", "0", "0", "0"},
        {"0", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", "0", "0", "0",
          "0"},
        {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"},
        {"0", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
        {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
        {"0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "0", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {
         RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0", 
         "0"},
        {"0", "0", "0", "0", "0", "\[ImaginaryI]", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"},
        {"0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
        {"0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
        {
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", "0", "0", "0",
          "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
        {"0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0"},
        {"0", "0", "0", "0", "0", "\[ImaginaryI]", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "0", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0"},
        {"0", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
        {"0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "\[ImaginaryI]"},
        {"0", "\[ImaginaryI]", "0", "0", "0", "0", "0", "0"},
        {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", 
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}], "0", "0", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "0", "0", "0", "0", "\[ImaginaryI]", "0", "0"},
        {"0", "0", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0"},
        {"0", "0", "0", "\[ImaginaryI]", "0", "0", "0", "0"},
        {"0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}]},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0", "0"},
        {"0", "\[ImaginaryI]", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", 
         RowBox[{"3", " ", "\[ImaginaryI]"}], "0", "0", "0", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0"},
        {"0", "0", "0", "\[ImaginaryI]", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"},
        {"0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
        {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", 
         "\[ImaginaryI]"},
        {"0", "0", "0", "0", "0", "0", 
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}], "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "0", "0", "\[ImaginaryI]", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
        {"0", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
        {
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0", "0"},
        {"0", 
         RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
        {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", 
         RowBox[{"-", "\[ImaginaryI]"}]},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", 
         RowBox[{"3", " ", "\[ImaginaryI]"}], "0", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ",", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", 
         RowBox[{"3", " ", "\[ImaginaryI]"}], "0", "0", "0"},
        {"0", "0", "0", 
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}], "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", 
         RowBox[{"3", " ", "\[ImaginaryI]"}], "0"},
        {"0", "0", "0", "0", "0", 
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}], "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.5488620766451178`*^9, 3.548862131669348*^9}, 
   3.548862264210617*^9, 3.548862309336648*^9, 3.548870702583116*^9, 
   3.548870802493587*^9, 
   3.5488711724991093`*^9},ExpressionUUID->"a12cc9ef-35ff-4d97-a95a-\
f43575b879b5"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculus", "Section",
 GeneratedCell->False,
 CellChangeTimes->{{3.548855252684629*^9, 3.548855258371236*^9}, {
  3.5488715328097*^9, 
  3.548871536737239*^9}},ExpressionUUID->"87a5148f-0e12-43a8-a382-\
54efc303ac7d"],

Cell[CellGroupData[{

Cell[TextData[{
 "Nonlinear differential equation ",
 StyleBox["[3 Marks]", "ExerciseMark"]
}], "Exercise",
 CellChangeTimes->{{3.475884903064666*^9, 3.4758849048615427`*^9}, 
   3.484461173820545*^9, {3.4850445630825977`*^9, 3.4850445680698977`*^9}, {
   3.485044658980051*^9, 3.485044661378015*^9}, {3.4850449367621517`*^9, 
   3.485044941224503*^9}, {3.515467508853146*^9, 3.515467509683137*^9}, {
   3.5159204624636383`*^9, 3.51592046440809*^9}, {3.515976117285554*^9, 
   3.515976120779304*^9}, {3.51597634826644*^9, 3.515976353114334*^9}, {
   3.516361563218318*^9, 3.516361568927129*^9}, {3.516405717100922*^9, 
   3.516405722634286*^9}, 3.516410199494466*^9, {3.516410337533472*^9, 
   3.516410337940071*^9}, {3.5164177249926653`*^9, 3.5164177314859743`*^9}, 
   3.517695736444909*^9, {3.517696568743086*^9, 3.517696571051073*^9}, {
   3.517722029335977*^9, 
   3.5177220317089863`*^9}},ExpressionUUID->"ffeeb1a4-82ac-4520-8b89-\
becac3c462b3"],

Cell["Consider the nonlinear differential equation", "Text",
 CellChangeTimes->{{3.517695608784196*^9, 3.517695633759046*^9}, {
  3.517695692221323*^9, 3.517695705234302*^9}, {3.517695777007524*^9, 
  3.517695797477388*^9}},ExpressionUUID->"d99742ff-efeb-42fc-bbfc-\
a7cadcd9c1e8"],

Cell[BoxData[
 FormBox[
  RowBox[{GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["w", "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", 
       RowBox[{
        RowBox[{"2", 
         SuperscriptBox[
          RowBox[{"w", "(", "z", ")"}], "3"]}], "+", 
        RowBox[{"z", " ", 
         RowBox[{"w", "(", "z", ")"}]}]}]}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], " "}], TraditionalForm]], "DisplayFormulaNumbered",\

 CellChangeTimes->{
  3.447729824675041*^9, {3.4477302808980007`*^9, 3.447730501117795*^9}, {
   3.447730643741955*^9, 3.447730704995112*^9}, {3.4799781369040747`*^9, 
   3.479978391213366*^9}, {3.479978528167099*^9, 3.479978529842552*^9}, {
   3.4799843960517473`*^9, 3.479984399546309*^9}, {3.517636282249475*^9, 
   3.517636474406995*^9}, 3.517636959938141*^9, {3.517637273667652*^9, 
   3.5176372912418127`*^9}, {3.517637585439641*^9, 3.5176378364029217`*^9}, {
   3.517637893715158*^9, 3.5176378954220753`*^9}, {3.517638093922336*^9, 
   3.517638158220405*^9}, {3.517638422111635*^9, 3.517638429824793*^9}, {
   3.5176956727461042`*^9, 3.517695682849266*^9}, 3.517695786680909*^9, 
   3.517695840084791*^9, {3.548914299762157*^9, 3.548914308874936*^9}},
 CellTags->
  "nonlinear differential \
equation",ExpressionUUID->"106bcc0a-f94e-448c-b3b4-05414afe4f1b"],

Cell["with initial conditions", "Text",
 CellChangeTimes->{{3.517695842213624*^9, 
  3.517695846629078*^9}},ExpressionUUID->"8ea2a1da-d556-43b4-96a2-\
4d9ebd4008b2"],

Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"w", "(", "0", ")"}], "\[LongEqual]", "a"}]},
       {
        RowBox[{
         RowBox[{
          SuperscriptBox["w", "\[Prime]"], "(", "0", ")"}], "\[LongEqual]", 
         "b"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[LongEqual]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{
  3.447729824675041*^9, {3.4477302808980007`*^9, 3.447730501117795*^9}, {
   3.447730643741955*^9, 3.447730704995112*^9}, {3.4799781369040747`*^9, 
   3.479978391213366*^9}, {3.479978528167099*^9, 3.479978529842552*^9}, {
   3.4799843960517473`*^9, 3.479984399546309*^9}, {3.517636282249475*^9, 
   3.517636474406995*^9}, 3.517636959938141*^9, {3.517637273667652*^9, 
   3.5176372912418127`*^9}, {3.517637585439641*^9, 3.5176378364029217`*^9}, {
   3.517637893715158*^9, 3.5176378954220753`*^9}, {3.517638093922336*^9, 
   3.517638158220405*^9}, {3.517638422111635*^9, 3.517638429824793*^9}, {
   3.5176956727461042`*^9, 3.517695682849266*^9}, 3.517695786680909*^9, {
   3.517695849068901*^9, 3.517695849477028*^9}, {3.548915171952182*^9, 
   3.548915174127734*^9}},ExpressionUUID->"0a44d10c-55d8-4c85-b22d-\
78064c3a1b2f"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["NDSolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NDSolve"]],ExpressionUUID->
  "a0635b6f-c3e5-495e-9f96-63bc89a366da"],
 " to compute numerical solutions to (",
 
 CounterBox["DisplayFormulaNumbered", "nonlinear differential equation"],
 ") over ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "10"}], "\[LessEqual]", "z", "\[LessEqual]", "3"}], 
   TraditionalForm]],ExpressionUUID->"4775b0f3-c6c5-4918-949e-ce2c72db1ceb"],
 ". ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.517695608784196*^9, 3.517695633759046*^9}, {
   3.517695692221323*^9, 3.517695705234302*^9}, {3.517695859425982*^9, 
   3.517695899443802*^9}, {3.5176959499089937`*^9, 3.517695961200171*^9}, {
   3.517696023531057*^9, 3.5176960236989813`*^9}, {3.517696055970187*^9, 
   3.5176960648579617`*^9}, {3.517696573051716*^9, 3.5176965762177343`*^9}, {
   3.548915184699691*^9, 3.548915184699813*^9}, {3.5489152420351458`*^9, 
   3.5489152666928*^9}, {3.5489153156278257`*^9, 3.548915335336746*^9}, 
   3.5489153771059837`*^9, {3.5489154251342497`*^9, 3.548915476825935*^9}, {
   3.548915599056695*^9, 3.548915603861095*^9}, {3.548916045195734*^9, 
   3.548916078273875*^9}, {3.548916111895006*^9, 3.548916144787662*^9}, {
   3.548916176430957*^9, 3.5489161809847507`*^9}, {3.548916211222657*^9, 
   3.5489162192822533`*^9}, {3.548963615146558*^9, 
   3.548963669275598*^9}},ExpressionUUID->"3f9cfdaa-2c70-406a-9b18-\
91b00d6b73bc"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["Manipulate",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Manipulate"]],ExpressionUUID->
  "f36271cd-df9e-4872-bccb-d1bef2823c11"],
 " to plot ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "(", "z", ")"}], TraditionalForm]],ExpressionUUID->
  "a8eb641e-168f-4f10-a5f0-f825860ac117"],
 " as a function of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "ac3bab51-845a-467f-b280-8b72b3132581"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "83d1e74c-38ad-4bb5-afe1-612a787c3174"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", "a", "\[LessEqual]", "0.5"}], 
   TraditionalForm]],ExpressionUUID->"11dabe18-f13a-4b7c-a179-86eab4ca8edf"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "0.2"}], "\[LessEqual]", "b", "\[LessEqual]", "0"}], 
   TraditionalForm]],ExpressionUUID->"1fdd113b-fd30-44fe-bea9-7b4f5a434391"],
 " and compare with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], 
    FormBox[
     TemplateBox[{"z"},
      "AiryAi"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "cefa2f38-2e60-46d5-a30b-b4ac582c78e3"],
 ". ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.517695608784196*^9, 3.517695633759046*^9}, {
   3.517695692221323*^9, 3.517695705234302*^9}, {3.517695859425982*^9, 
   3.517695899443802*^9}, {3.5176959499089937`*^9, 3.517695961200171*^9}, {
   3.517696023531057*^9, 3.5176960236989813`*^9}, {3.517696055970187*^9, 
   3.5176960648579617`*^9}, {3.517696573051716*^9, 3.5176965762177343`*^9}, {
   3.548915184699691*^9, 3.548915184699813*^9}, {3.5489152420351458`*^9, 
   3.5489152666928*^9}, {3.5489153156278257`*^9, 3.548915335336746*^9}, 
   3.5489153771059837`*^9, {3.5489154251342497`*^9, 3.548915476825935*^9}, {
   3.548915599056695*^9, 3.548915603861095*^9}, {3.548916045195734*^9, 
   3.548916078273875*^9}, {3.548916111895006*^9, 3.548916144787662*^9}, {
   3.548916176430957*^9, 3.5489161809847507`*^9}, {3.548916211222657*^9, 
   3.5489162192822533`*^9}, {3.548963615146558*^9, 
   3.548963678278104*^9}},ExpressionUUID->"eeaf139a-cf07-4a85-a329-\
09f311664060"],

Cell[CellGroupData[{

Cell["Solution", "Solution",
 CellChangeTimes->{{3.450492134067934*^9, 3.4504921365634604`*^9}, 
   3.512197033318738*^9},ExpressionUUID->"e71eaa31-4b63-482b-bf3b-\
b1ca33461669"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["NDSolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NDSolve"]],ExpressionUUID->
  "958ead26-0f14-4bcf-83a8-a4fdfb85c555"],
 " to compute numerical solutions to the nonlinear differential equation over \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "10"}], "\[LessEqual]", "z", "\[LessEqual]", "3"}], 
   TraditionalForm]],ExpressionUUID->"56597c82-1a05-4b72-b004-377763b45210"],
 ": ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.517696303868222*^9, 3.5176963201939507`*^9}, {
  3.5489147267968893`*^9, 3.548914729718535*^9}, {3.548915302070116*^9, 
  3.548915305315303*^9}, {3.548916277544368*^9, 
  3.548916285158622*^9}},ExpressionUUID->"b7ba1d7a-ab88-419e-b48b-\
80358bec0610"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"nsol", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["w", "\[Prime]\[Prime]",
          MultilineFunction->None], "(", "z", ")"}], "\[LongEqual]", 
        RowBox[{
         RowBox[{"2", 
          SuperscriptBox[
           RowBox[{"w", "(", "z", ")"}], "3"]}], "+", 
         RowBox[{"z", " ", 
          RowBox[{"w", "(", "z", ")"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"w", "(", "0", ")"}], "\[LongEqual]", "a"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["w", "\[Prime]"], "(", "0", ")"}], "\[LongEqual]", 
        "b"}]}], "}"}], ",", "w", ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "10"}], ",", "3"}], "}"}]}], "]"}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.5176962764025917`*^9, 3.517696277614814*^9}, {
   3.5489144589981728`*^9, 3.548914732813753*^9}, {3.548914851443803*^9, 
   3.548914852464797*^9}, 
   3.548915036829867*^9},ExpressionUUID->"1e463ade-d300-4fbd-a382-\
7540ae9c4634"],

Cell[TextData[{
 "Plot ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "(", "z", ")"}], TraditionalForm]],ExpressionUUID->
  "b0a7d0f1-3f5c-41bd-a2c9-17678353ed3a"],
 " and compare with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], 
    FormBox[
     TemplateBox[{"z"},
      "AiryAi"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "610a5a3e-27b8-49c4-a662-043bd9d79528"],
 ": ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.517696333241452*^9, 3.517696339607768*^9}, {
  3.5489160899419613`*^9, 3.548916099586128*^9}, {3.548916261802205*^9, 
  3.548916290086836*^9}},ExpressionUUID->"91b04b86-9bfa-4a8e-95b6-\
2a75113c434c"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"w", "(", "z", ")"}], "/.", 
          RowBox[{"nsol", "[", 
           RowBox[{"a", ",", "b"}], "]"}]}], ",", 
         RowBox[{
          FractionBox["1", "2"], 
          FormBox[
           TemplateBox[{"z"},
            "AiryAi"],
           TraditionalForm]}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"-", "10"}], ",", "3"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"1", "/", "2"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", 
        FormBox["0.18",
         TraditionalForm]}], "}"}], ",", "0", ",", "0.5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", 
        FormBox[
         RowBox[{"-", "0.13"}],
         TraditionalForm]}], "}"}], ",", 
      RowBox[{"-", "0.2"}], ",", "0"}], "}"}], ",", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{
  3.5176962876769342`*^9, {3.548914539715619*^9, 3.548914569225956*^9}, {
   3.548914684502204*^9, 3.5489147795882607`*^9}, {3.5489148293165083`*^9, 
   3.548914878288496*^9}, {3.548914978652295*^9, 3.5489150064835997`*^9}, {
   3.5489150949312677`*^9, 3.548915117435087*^9}, {3.5489151963178883`*^9, 
   3.548915217069749*^9}, {3.548915359942958*^9, 3.548915361337076*^9}, {
   3.5489637047689857`*^9, 
   3.54896370787001*^9}},ExpressionUUID->"7164bd17-79ae-4dd9-ab46-\
8f12914d82a6"],

Cell[BoxData[
 FormBox[
  TagBox[
   FormBox[
    StyleBox[
     DynamicModuleBox[{$CellContext`a$$ = 0.18, $CellContext`b$$ = -0.13, 
      Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
      Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ =
       1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
         Hold[$CellContext`a$$], 0.18}, 0, 0.5}, {{
         Hold[$CellContext`b$$], -0.13}, -0.2, 0}}, Typeset`size$$ = {
      450., {135., 142.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
      Typeset`skipInitDone$$ = False, $CellContext`a$3068$$ = 
      0, $CellContext`b$3069$$ = 0}, 
      DynamicBox[Manipulate`ManipulateBoxes[
       1, TraditionalForm, 
        "Variables" :> {$CellContext`a$$ = 0.18, $CellContext`b$$ = -0.13}, 
        "ControllerVariables" :> {
          Hold[$CellContext`a$$, $CellContext`a$3068$$, 0], 
          Hold[$CellContext`b$$, $CellContext`b$3069$$, 0]}, 
        "OtherVariables" :> {
         Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
          Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
          Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
          Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Plot[
          Evaluate[{
            ReplaceAll[
             $CellContext`w[$CellContext`z], 
             $CellContext`nsol[$CellContext`a$$, $CellContext`b$$]], (1/2) 
            AiryAi[$CellContext`z]}], {$CellContext`z, -10, 3}, PlotRange -> 
          1/2], "Specifications" :> {{{$CellContext`a$$, 0.18}, 0, 
           0.5}, {{$CellContext`b$$, -0.13}, -0.2, 0}}, "Options" :> {}, 
        "DefaultOptions" :> {}],
       ImageSizeCache->{505., {201., 208.}},
       SingleEvaluation->True],
      Deinitialization:>None,
      DynamicModuleValues:>{},
      Initialization:>({$CellContext`nsol[
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`b, 
            Blank[]]] := 
         NDSolve[{
           Derivative[2][$CellContext`w][$CellContext`z] == 
            2 $CellContext`w[$CellContext`z]^3 + $CellContext`z \
$CellContext`w[$CellContext`z], $CellContext`w[0] == $CellContext`a, 
            Derivative[1][$CellContext`w][
             0] == $CellContext`b}, $CellContext`w, {$CellContext`z, -10, 3}],
          Attributes[Derivative] = {NHoldAll, ReadProtected}}; 
       Typeset`initDone$$ = True),
      SynchronousInitialization->True,
      UnsavedVariables:>{Typeset`initDone$$},
      UntrackedVariables:>{Typeset`size$$}], "Manipulate",
     Deployed->True,
     StripOnInput->False],
    TraditionalForm],
   Manipulate`InterpretManipulate[1]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.548914780593597*^9, {3.5489148396176767`*^9, 3.5489148791984673`*^9}, {
   3.54891498676541*^9, 3.548915007376073*^9}, {3.548915119134416*^9, 
   3.548915130176627*^9}, {3.548915198113028*^9, 3.548915217495894*^9}, {
   3.5489153455170107`*^9, 3.548915361966256*^9}, 
   3.548963712066168*^9},ExpressionUUID->"347590d8-21b1-421d-b1ad-\
91bd6705688d"]
}, Closed]],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "(", "z", ")"}], TraditionalForm]],ExpressionUUID->
  "ff2cd1d6-a17c-4b55-8c29-453d5e2d5bcc"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], 
    FormBox[
     TemplateBox[{"z"},
      "AiryAi"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "c368fcd3-5f14-48aa-bf17-a459f29d71bd"],
 " are similar, with a small phase difference. Suitable choices of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "0ee10641-1d15-4ed5-89d6-6e7397b4a5cf"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "7a8b5626-13fd-4a79-bcfe-96260f2a9ae3"],
 " can make them agree for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "4e2bd616-b781-4d45-a5aa-030b52f1973a"],
 "."
}], "Text",
 CellChangeTimes->{{3.548916295368754*^9, 
  3.5489163723748827`*^9}},ExpressionUUID->"9d7b3f27-b5d7-4022-9a8a-\
52054a04c91c"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Functional equation ",
 StyleBox["[3 Marks]", "ExerciseMark"]
}], "Exercise",
 CellChangeTimes->{{3.475884903064666*^9, 3.4758849048615427`*^9}, 
   3.484461173820545*^9, {3.4850445630825977`*^9, 3.4850445680698977`*^9}, {
   3.485044658980051*^9, 3.485044661378015*^9}, {3.4850449367621517`*^9, 
   3.485044941224503*^9}, {3.515467508853146*^9, 3.515467509683137*^9}, {
   3.5159204624636383`*^9, 3.51592046440809*^9}, {3.515976117285554*^9, 
   3.515976120779304*^9}, {3.51597634826644*^9, 3.515976353114334*^9}, {
   3.516361563218318*^9, 3.516361568927129*^9}, {3.516405717100922*^9, 
   3.516405722634286*^9}, 3.516410199494466*^9, {3.516410337533472*^9, 
   3.516410337940071*^9}, {3.5164177249926653`*^9, 3.5164177314859743`*^9}, 
   3.517695736444909*^9, {3.517696568743086*^9, 3.517696571051073*^9}, {
   3.517722029335977*^9, 3.5177220317089863`*^9}, {3.5489171561965322`*^9, 
   3.5489171602961817`*^9}},ExpressionUUID->"7447c5f9-5fd8-4a74-af70-\
446b46ca1dd0"],

Cell["Consider the functional equation", "Text",
 CellChangeTimes->{{3.548917173818305*^9, 
  3.548917175735816*^9}},ExpressionUUID->"0ab2d676-746a-4244-9f40-\
21c9bae41ef0"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"f", "(", "z", ")"}], "=", 
   RowBox[{"\[Alpha]", " ", 
    RowBox[{
     RowBox[{"f", "(", 
      RowBox[{"f", "(", 
       RowBox[{"z", " ", "/", "\[Alpha]"}], ")"}], ")"}], "."}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.548917767428589*^9, 3.548917767884816*^9}},
 CellTags->
  "functional \
equation",ExpressionUUID->"f6cc0b3e-cb8e-4db1-b05f-991460803c9c"],

Cell[TextData[{
 "One method for computing the value of ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]],ExpressionUUID->
  "488189aa-68e2-4e8d-abde-de90a5d9b693"],
 " for which ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "z", ")"}], TraditionalForm]],ExpressionUUID->
  "98bbb71c-b6e6-4d27-b36d-04b9a2db0eb1"],
 " exists is to assume that "
}], "Text",
 CellChangeTimes->{
  3.548917185452409*^9, {3.548918827190633*^9, 
   3.5489188415140953`*^9}},ExpressionUUID->"fce1bd0c-ca56-424e-a456-\
7eb9b16711bf"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["f", "n"], "(", "z", ")"}], "=", 
    RowBox[{"1", "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["c", "k"], 
       SuperscriptBox["z", 
        RowBox[{"2", "k"}]]}]}]}]}], ","}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.548918774594595*^9, 
  3.548918774853828*^9}},ExpressionUUID->"bd5d7811-7aa2-4b00-ad4f-\
e0752e37622e"],

Cell[TextData[{
 "and compute successive approximations to ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]],ExpressionUUID->
  "a8d42c95-b4f4-41a1-bf30-fefd94671f04"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "=", "1"}], ",", "2", ",", "3", ",", "\[Ellipsis]"}], 
   TraditionalForm]],ExpressionUUID->"838eb2a5-3efc-4b69-8b5c-41ef95f9faa8"],
 ", using series expansion of (both sides) of equation ",
 Cell[TextData[{
  "(",
  
  CounterBox["DisplayFormulaNumbered", "functional equation"],
  ")"
 }],ExpressionUUID->"067c73f5-cdf7-401e-9018-756679165fe7"],
 "."
}], "Text",
 CellChangeTimes->{{3.548917747591744*^9, 3.548917751516787*^9}, {
  3.548917784518715*^9, 3.548917784910384*^9}, {3.548917935607957*^9, 
  3.5489179363349953`*^9}},ExpressionUUID->"07a79c5d-7b8a-4486-9ed3-\
49ae245d51de"],

Cell[TextData[{
 "Use series expansion and ",
 Cell[BoxData[
  ButtonBox["Solve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Solve"]],ExpressionUUID->
  "e1ea3d26-39c0-4a32-afd7-cc15f1ffaf87"],
 " to compute approximate values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "<", "0"}], TraditionalForm]],ExpressionUUID->
  "ee2379b4-f6c8-4ba5-9a59-95c9fa6320d0"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "1"], "<", "0"}], TraditionalForm]],ExpressionUUID->
  "aced65ab-4e96-4ba3-974c-1ad8cb2b0b31"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "337e7483-00c0-4687-96e4-13d77536fe50"],
 ". These approximate values can be obtained exactly.",
 " ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.548917258095752*^9, 3.5489172582833567`*^9}, {
   3.5489173359678183`*^9, 3.548917337459876*^9}, {3.548917797747861*^9, 
   3.548917855050078*^9}, {3.548917971992467*^9, 3.548918011727407*^9}, 
   3.548918651027873*^9, {3.548918771165352*^9, 3.54891878772814*^9}, 
   3.5489188699788313`*^9},
 CellTags->
  "series expansion",ExpressionUUID->"13ed42f3-5843-4435-9764-0d2cb8f15505"],

Cell[TextData[{
 "Use series expansion and ",
 Cell[BoxData[
  ButtonBox["NSolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NSolve"]],ExpressionUUID->
  "379f9528-929b-4bce-932e-27785a3684f5"],
 " to compute approximate values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "<", "0"}], TraditionalForm]],ExpressionUUID->
  "f02d861b-89d0-471f-9137-d21cd48bb114"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "1"], "<", "0"}], TraditionalForm]],ExpressionUUID->
  "aa1374d9-cc42-4f34-88c9-4115bfdf804a"],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "2"], TraditionalForm]],ExpressionUUID->
  "c14b3183-8a08-4a73-be3b-8a0cef35ae4c"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "df3eeaa7-1a11-4831-aa41-cf8682206ae3"],
 ". ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.548917258095752*^9, 3.5489172582833567`*^9}, {
   3.5489173359678183`*^9, 3.548917337459876*^9}, {3.548917797747861*^9, 
   3.548917855050078*^9}, {3.548917971992467*^9, 3.548918011727407*^9}, 
   3.548918656722436*^9, {3.548918745325045*^9, 3.548918759416338*^9}, {
   3.5489187969395943`*^9, 3.548918797103002*^9}, {3.5489188723575697`*^9, 
   3.54891887843235*^9}},
 CellTags->
  "series expansion",ExpressionUUID->"878991db-65f1-4a3d-b772-ef5910222a13"],

Cell[CellGroupData[{

Cell["Solution", "Solution",
 CellChangeTimes->{{3.450492134067934*^9, 3.4504921365634604`*^9}, 
   3.512197033318738*^9},ExpressionUUID->"c809abc2-55f2-46ae-8761-\
040dcf0cd625"],

Cell[TextData[{
 "Use series expansion and ",
 Cell[BoxData[
  ButtonBox["Solve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Solve"]],ExpressionUUID->
  "caf5f871-bd9d-4b27-971a-01a4863ec915"],
 " to compute approximate values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "<", "0"}], TraditionalForm]],ExpressionUUID->
  "d6f13153-d089-48ea-8c8e-49b6291289a0"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "1"], "<", "0"}], TraditionalForm]],ExpressionUUID->
  "bf95d010-db54-4d7f-aec1-98a7d90f8784"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.548860031250432*^9, 3.548860031708148*^9}, {
  3.5488600948233843`*^9, 3.5488600962422657`*^9}, {3.548906937327622*^9, 
  3.5489069720692673`*^9}, {3.54891834939326*^9, 
  3.548918391921589*^9}},ExpressionUUID->"51d89582-fe2b-440b-b8e1-\
c2c66cd7e4ef"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["f", "n_"], "(", "z_", ")"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["c", "k"], 
      SuperscriptBox["z", 
       RowBox[{"2", "k"}]]}]}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.548918420006989*^9, 
  3.548918430702389*^9}},ExpressionUUID->"486b6be8-9873-41b6-a35a-\
835ccb61f5b7"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "(", "z", ")"}], "-", 
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"f", "(", 
            RowBox[{"f", "(", 
             RowBox[{"z", " ", "/", "\[Alpha]"}], ")"}], ")"}]}]}], "/.", 
         RowBox[{"f", "\[Rule]", 
          SubscriptBox["f", "1"]}]}], ")"}], "+", 
       SuperscriptBox[
        RowBox[{"O", "[", "z", "]"}], "3"]}], "\[LongEqual]", "0"}], "\[And]", 
     RowBox[{
      SubscriptBox["c", "1"], "<", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", 
      SubscriptBox["c", "1"]}], "}"}]}], "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.548851137027886*^9, 3.548851169183371*^9}, {
  3.54891828658722*^9, 3.548918302243795*^9}, {3.548918433794609*^9, 
  3.5489184347654943`*^9}},ExpressionUUID->"82c03a2d-60e4-4313-b3ec-\
731c96523bbc"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       SqrtBox["3"]}]}], ",", 
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         SqrtBox["3"]}], ")"}]}]}]}], "}"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.548851145497655*^9, 3.548851172415903*^9}, 
   3.54891736891643*^9, {3.5489182953044453`*^9, 3.548918302830996*^9}, 
   3.54891835915193*^9, 
   3.54891843908948*^9},ExpressionUUID->"1a94c91f-112b-4be5-8bc8-\
68b4e6065887"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"N", "[", "%", "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.5489183599982367`*^9, 
  3.548918360630728*^9}},ExpressionUUID->"c9cc1b72-0a93-4c4c-a6fa-\
3a5e267d11ff"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", 
      RowBox[{"-", "2.732050807568877`"}]}], ",", 
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", 
      RowBox[{"-", "1.3660254037844386`"}]}]}], "}"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.54891836110096*^9, 
  3.5489184414123573`*^9},ExpressionUUID->"1d9cc1a6-a30d-4406-915a-\
38ca038a9891"]
}, Closed]],

Cell[TextData[{
 "Use series expansion ",
 "and ",
 Cell[BoxData[
  ButtonBox["NSolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NSolve"]],ExpressionUUID->
  "a0b17503-d134-4968-9b7e-cbb9020fc044"],
 " to compute approximate values for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "fbd67f37-d7b2-4eeb-9824-5e58cf7a1243"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.548860031250432*^9, 3.548860031708148*^9}, {
   3.5488600948233843`*^9, 3.5488600962422657`*^9}, {3.548906937327622*^9, 
   3.5489069720692673`*^9}, {3.54891834939326*^9, 3.5489183991244183`*^9}, 
   3.548918893559142*^9},ExpressionUUID->"d3536c1b-108b-41e4-a50a-\
22385a00d878"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "(", "z", ")"}], "-", 
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"f", "(", 
            RowBox[{"f", "(", 
             RowBox[{"z", " ", "/", "\[Alpha]"}], ")"}], ")"}]}]}], "/.", 
         RowBox[{"f", "\[Rule]", 
          SubscriptBox["f", "2"]}]}], ")"}], "+", 
       SuperscriptBox[
        RowBox[{"O", "[", "z", "]"}], "5"]}], "\[LongEqual]", "0"}], "\[And]", 
     RowBox[{"\[Alpha]", "<", "0"}], "\[And]", 
     RowBox[{
      SubscriptBox["c", "1"], "<", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", 
      SubscriptBox["c", "1"], ",", 
      SubscriptBox["c", "2"]}], "}"}]}], "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{
  3.5489184100583897`*^9, {3.5489184431121893`*^9, 3.548918512097583*^9}, {
   3.548918676297887*^9, 
   3.5489186801168823`*^9}},ExpressionUUID->"f05762e8-79b7-4a96-a1ba-\
711f5ff79518"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", 
      RowBox[{"-", "2.534030094712464`"}]}], ",", 
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", 
      RowBox[{"-", "1.5222415617792406`"}]}], ",", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", "0.1276132572115043`"}]}], "}"}], 
   "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5489186805363073`*^9},ExpressionUUID->"6068dc62-568b-42b6-93b9-\
f7a00fbbca0d"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Variational Methods", "Section",
 CellChangeTimes->{
  3.480587644922535*^9},ExpressionUUID->"e4f30d5f-48aa-4edd-9cfd-\
fc20dd1572c0"],

Cell[CellGroupData[{

Cell[TextData[{
 "Coulomb potential inside heavy neutral atoms",
 " ",
 StyleBox["[7 Marks]", "ExerciseMark"]
}], "Exercise",
 CellChangeTimes->{{3.415598897630817*^9, 3.4155988993253393`*^9}, {
   3.415792063240962*^9, 3.415792063417357*^9}, 3.479964551056511*^9, {
   3.517694181448888*^9, 3.517694185904394*^9}, {3.5176953112556057`*^9, 
   3.517695315094222*^9}, {3.517748832811035*^9, 3.517748833263063*^9}, {
   3.517748953595207*^9, 3.517748954019075*^9}, {3.548842499228348*^9, 
   3.5488425039399223`*^9}, {3.5488708360919037`*^9, 3.548870837672309*^9}, {
   3.548871573146418*^9, 3.548871586358947*^9}, {3.548912022914546*^9, 
   3.548912028925762*^9}, 
   3.548915556809738*^9},ExpressionUUID->"bf3380b6-e8a3-40cc-94e0-\
93a992466624"],

Cell["The nonlinear differential equation", "Text",
 CellChangeTimes->{{3.5488497072655487`*^9, 3.54884970744941*^9}, {
   3.5488497450740232`*^9, 3.5488497508558073`*^9}, {3.548857513528285*^9, 
   3.548857513976269*^9}, 
   3.548906773065176*^9},ExpressionUUID->"c56a96e5-70df-41d2-acad-\
d7d0bc8e51c8"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "(", "x", ")"}], "\[LongEqual]", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"\[Phi]", "(", "x", ")"}], 
      RowBox[{"3", "/", "2"}]], 
     SqrtBox["x"]]}], ","}], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.54884983710885*^9, {3.548872649103849*^9, 3.548872708798029*^9}},
 CellTags->
  "Thomas-Fermi \
equation",ExpressionUUID->"a60a41d6-9b45-4ae1-8e03-f50a1252d469"],

Cell["along with the boundary conditions", "Text",
 CellChangeTimes->{{3.548872690941804*^9, 
  3.548872706946857*^9}},ExpressionUUID->"367717cf-a855-4873-9a9f-\
b314ab5a005c"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]", "(", "0", ")"}], "\[LongEqual]", "1"}], ",", 
   RowBox[{
    RowBox[{"\[Phi]", "(", "\[Infinity]", ")"}], "\[LongEqual]", "0"}], ","}],
   TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.54884983710885*^9, {3.548872649103849*^9, 3.548872687840089*^9}},
 CellTags->
  "boundary \
conditions",ExpressionUUID->"2a5718cb-3964-449c-a12e-f3ba506dda04"],

Cell[TextData[{
 "describes the screening of the Coulomb potential inside heavy neutral \
atoms. However, there is no closed-form solution of equation (",
 
 CounterBox["DisplayFormulaNumbered", "Thomas-Fermi equation"],
 ")."
}], "Text",
 CellChangeTimes->{
  3.548857520083982*^9, 3.548907499580562*^9, {3.548907726217786*^9, 
   3.548907749326147*^9}, {3.548911909371521*^9, 
   3.548911920547441*^9}},ExpressionUUID->"615182a1-c976-485b-90e2-\
667f2a9cc206"],

Cell["The Euler\[Dash]Lagrange equation", "Text",
 CellChangeTimes->{
  3.548857520083982*^9, {3.548907499580562*^9, 3.548907500250153*^9}, {
   3.548907545487865*^9, 3.5489075561974773`*^9}, {3.548907604133662*^9, 
   3.5489076097158823`*^9}, {3.54890769702556*^9, 3.548907697935957*^9}, {
   3.5489077707529182`*^9, 
   3.548907771058103*^9}},ExpressionUUID->"c5e63343-7ed7-4097-b602-\
172c9d0fe10d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "\[ScriptCapitalF]"}], 
     RowBox[{"\[PartialD]", "\[Phi]"}]], "-", 
    RowBox[{
     SubscriptBox["\[DifferentialD]", "x"], 
     FractionBox[
      RowBox[{"\[PartialD]", "\[ScriptCapitalF]"}], 
      RowBox[{"\[PartialD]", 
       SuperscriptBox["\[Phi]", "\[Prime]"]}]]}]}], "\[LongEqual]", "0"}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.510999235086218*^9, {3.511047030152636*^9, 3.5110470316487617`*^9}, {
   3.5110470665372057`*^9, 3.5110470688521957`*^9}, {3.548907788890625*^9, 
   3.5489077952120113`*^9}},
 TextAlignment->Center,
 CellTags->
  "Euler-Lagrange \
equation",ExpressionUUID->"a82419cd-7a10-44d2-bcae-9d4f8fe0cacf"],

Cell["applied to the functional", "Text",
 CellChangeTimes->{
  3.548857520083982*^9, {3.548907499580562*^9, 3.548907500250153*^9}, {
   3.548907545487865*^9, 3.5489075561974773`*^9}, {3.548907604133662*^9, 
   3.5489076097158823`*^9}, {3.54890769702556*^9, 3.548907697935957*^9}, {
   3.5489077707529182`*^9, 
   3.548907771058103*^9}},ExpressionUUID->"cebe917f-992b-45eb-a7ff-\
8b5f616c864d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalF]", "[", "\[Phi]", "]"}], "[", "x", "]"}], 
   "\[LongEqual]", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]"], "(", "x", ")"}], "2"]}], "+", 
    RowBox[{
     FractionBox["2", "5"], 
     FractionBox[
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", "x", ")"}], 
       RowBox[{"5", "/", "2"}]], 
      SqrtBox["x"]]}]}]}], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.54884983710885*^9, {3.548872649103849*^9, 3.548872687840089*^9}, {
   3.548907360840412*^9, 3.548907364066424*^9}, {3.548907434014715*^9, 
   3.548907461918111*^9}, {3.548911377385244*^9, 3.5489113846067123`*^9}},
 CellTags->
  "functional",ExpressionUUID->"bc99819e-5105-40f8-85cc-5d0f309df291"],

Cell[TextData[{
 "yields the differential equation (",
 
 CounterBox["DisplayFormulaNumbered", "Thomas-Fermi equation"],
 ")."
}], "Text",
 CellChangeTimes->{{3.548907623448184*^9, 3.5489076327386723`*^9}, {
  3.54890771109606*^9, 
  3.548907711911127*^9}},ExpressionUUID->"d511c0bd-06cc-455a-8b5e-\
6cd28ab0c5cc"],

Cell[TextData[{
 "Show that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Phi]", "0"], "(", "x", ")"}], "\[LongEqual]", 
    RowBox[{"144", 
     SuperscriptBox["x", 
      RowBox[{"-", "3"}]]}]}], TraditionalForm]],ExpressionUUID->
  "fab2b953-d0c6-4f43-8f3e-b1e78a8efffa"],
 " satisfies the differential equation (",
 
 CounterBox["DisplayFormulaNumbered", "Thomas-Fermi equation"],
 ") for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[GreaterEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "71f78134-7d32-4cf6-9e48-a252f8d3593c"],
 " and the second boundary condition ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Phi]", "(", "\[Infinity]", ")"}], "\[LongEqual]", "0"}], 
   TraditionalForm]],ExpressionUUID->"a7b8a8ca-c6f0-4030-bf19-af0dcbdf86f3"],
 ". ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.548873217320652*^9, 3.5488732190957336`*^9}, {
  3.5488732622966013`*^9, 3.5488732811491823`*^9}, {3.5488734669373903`*^9, 
  3.5488734856967173`*^9}, {3.5489067976138573`*^9, 3.548906833972898*^9}, {
  3.548906884889039*^9, 
  3.548906923096583*^9}},ExpressionUUID->"585ec35e-a793-4e0c-b18b-\
7942927ae01a"],

Cell[TextData[{
 "Show that the Euler\[Dash]Lagrange equation (",
 
 CounterBox["DisplayFormulaNumbered", "Euler-Lagrange equation"],
 ") applied to functional (",
 
 CounterBox["DisplayFormulaNumbered", "functional"],
 ") yields the differential equation (",
 
 CounterBox["DisplayFormulaNumbered", "Thomas-Fermi equation"],
 "). ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{
  3.548907040612986*^9, {3.5489078213792543`*^9, 3.548907877950078*^9}, 
   3.548911074120244*^9, {3.548911716025428*^9, 
   3.548911716299767*^9}},ExpressionUUID->"80fc8773-02b8-4c1b-a3b7-\
ac468e1a6d9d"],

Cell[CellGroupData[{

Cell["Consider the two-parameter trial function", "Item",
 CellChangeTimes->{
  3.548907040612986*^9, {3.5489078213792543`*^9, 3.548907877950078*^9}, {
   3.548911074120244*^9, 
   3.5489111097584476`*^9}},ExpressionUUID->"02d50657-9372-48c9-a5c5-\
ed9ec3a03a1b"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Phi]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "(", "x", ")"}], "=", 
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "/", "\[Beta]"}], ")"}], 
        RowBox[{"3", "/", "\[Alpha]"}]]}], ")"}], "\[Alpha]"]]}], 
  TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.548911101901215*^9, 
  3.548911112379187*^9}},ExpressionUUID->"2fee6cfb-f844-4a4f-834b-\
378fc2d7fd9e"],

Cell["Given that", "ItemParagraph",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.54885973442934*^9, 3.54885976860077*^9}, {3.548859809461206*^9, 
   3.548859943706952*^9}, 3.5488600401141157`*^9, 3.548860156617709*^9, {
   3.548860451642043*^9, 3.5488604554031057`*^9}, {3.548860487389079*^9, 
   3.5488605127201843`*^9}, {3.548861061722053*^9, 3.548861063745206*^9}, {
   3.548870489268136*^9, 3.548870504638194*^9}, {3.548870962062462*^9, 
   3.5488709905457582`*^9}, {3.5489111867461653`*^9, 
   3.5489111898092413`*^9}},ExpressionUUID->"c036150d-e645-485f-b239-\
c871e0103122"],

Cell[BoxData[
 FormBox[
  RowBox[{" ", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     SubscriptBox["\[ScriptCapitalF]", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "\[RightAngleBracket]"}], "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
      RowBox[{
       RowBox[{"\[ScriptCapitalF]", "[", 
        SubscriptBox["\[Phi]", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "]"}], "[", "x", "]"}]}], 
     "\[LongEqual]", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox["\[Beta]"], " ", 
        TemplateBox[{
          RowBox[{
            FractionBox["\[Alpha]", "6"], "+", "1"}]},
         "Gamma"], " ", 
        TemplateBox[{
          FractionBox[
           RowBox[{"7", " ", "\[Alpha]"}], "3"]},
         "Gamma"]}], 
       RowBox[{"5", " ", 
        TemplateBox[{
          FractionBox[
           RowBox[{"5", " ", "\[Alpha]"}], "2"]},
         "Gamma"]}]], "+", 
      FractionBox[
       RowBox[{"9", " ", 
        TemplateBox[{
          RowBox[{"2", "-", 
            FractionBox["\[Alpha]", "3"]}]},
         "Gamma"], " ", 
        TemplateBox[{
          RowBox[{
            FractionBox[
             RowBox[{"7", " ", "\[Alpha]"}], "3"], "+", "1"}]},
         "Gamma"]}], 
       RowBox[{"14", " ", "\[Beta]", " ", 
        TemplateBox[{
          RowBox[{
            RowBox[{"2", " ", "\[Alpha]"}], "+", "2"}]},
         "Gamma"]}]]}]}]}]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.548911204985729*^9, 
  3.548911242859432*^9}},ExpressionUUID->"4e241df0-b8e0-4f28-9bec-\
5726e83cb6bf"],

Cell[TextData[{
 "use ",
 Cell[BoxData[
  ButtonBox["FindRoot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindRoot"]],ExpressionUUID->
  "cb3bcc23-927d-4e34-9990-70ce62d890bc"],
 " to obtain the optimal values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "95356fa2-7c05-4ae8-8b8a-78a9aed5b96f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "be4371eb-bb27-485c-bfdd-a98c6582b91d"],
 " by determining the ",
 StyleBox["stationary value",
  FontSlant->"Italic"],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SubscriptBox["\[ScriptCapitalF]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "\[RightAngleBracket]"}], 
   TraditionalForm]],ExpressionUUID->"9de02db5-0754-4f31-924a-eefacf5baec0"],
 ", and plot the resulting variational solution ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Phi]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "(", "x", ")"}], 
   TraditionalForm]],ExpressionUUID->"69a4c6fe-aded-45dd-ae18-ec91fbab6231"],
 ". ",
 StyleBox["[3 Marks]", "ExerciseMark"]
}], "ItemParagraph",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.5176385653308067`*^9, 
   3.51763856844827*^9}, {3.517654695131918*^9, 3.517654697000943*^9}, {
   3.517748766645474*^9, 3.5177487670100727`*^9}, 3.517748917809057*^9, 
   3.548857796534132*^9, {3.5488578353026457`*^9, 3.5488578448083773`*^9}, 
   3.5488587155547657`*^9, {3.548858873464456*^9, 3.548858904109642*^9}, {
   3.5488589417742968`*^9, 3.548858969154518*^9}, {3.548859014923468*^9, 
   3.548859132141325*^9}, {3.548859229418792*^9, 3.5488592434735117`*^9}, {
   3.54885973442934*^9, 3.54885976860077*^9}, {3.548859809461206*^9, 
   3.548859943706952*^9}, 3.5488600401141157`*^9, 3.548860156617709*^9, {
   3.548860451642043*^9, 3.5488604554031057`*^9}, {3.548860487389079*^9, 
   3.5488605127201843`*^9}, {3.548861061722053*^9, 3.548861063745206*^9}, {
   3.548870489268136*^9, 3.548870504638194*^9}, {3.548870962062462*^9, 
   3.5488709905457582`*^9}, {3.5489111867461653`*^9, 
   3.5489111898092413`*^9}, {3.548911254685721*^9, 3.54891126438127*^9}, {
   3.548911450237026*^9, 3.548911580485916*^9}, {3.548911642964621*^9, 
   3.548911648922927*^9}, {3.548911769201602*^9, 3.54891178295002*^9}, {
   3.548911969101902*^9, 
   3.548911969288988*^9}},ExpressionUUID->"59c2a1d5-cbda-490f-a8b1-\
904ddb996b52"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Solution",
 CellChangeTimes->{{3.450492134067934*^9, 3.4504921365634604`*^9}, 
   3.512197033318738*^9},ExpressionUUID->"d66746a9-4d2b-413a-b5ed-\
730258784540"],

Cell[TextData[{
 "Define ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Phi]", "0"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"fe7d1152-872d-4dee-8725-bb558715d1eb"],
 ": "
}], "MathCaption",
 CellChangeTimes->{{3.548860031250432*^9, 3.548860031708148*^9}, {
  3.5488600948233843`*^9, 3.5488600962422657`*^9}, {3.548906937327622*^9, 
  3.5489069720692673`*^9}},ExpressionUUID->"cc11f1bd-2c9e-4cf8-9e7e-\
32313522e071"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Phi]", "0"], "(", "x_", ")"}], "=", 
    FractionBox["144", 
     SuperscriptBox["x", "3"]]}], ";"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.548873365365691*^9, 
  3.548873387987803*^9}},ExpressionUUID->"41c01bc3-1017-4bf2-98c8-\
c3d4ca410879"],

Cell[TextData[{
 "It satisfies the differential equation (",
 
 CounterBox["DisplayFormulaNumbered", "Thomas-Fermi equation"],
 ") for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[GreaterEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "17c4e6af-933b-4a72-a482-c986fa1bdfda"],
 ": ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.548860031250432*^9, 3.548860031708148*^9}, {
  3.5488600948233843`*^9, 3.5488600962422657`*^9}, {3.548906937327622*^9, 
  3.5489069660216618`*^9}, {3.548907007397056*^9, 
  3.548907007647718*^9}},ExpressionUUID->"cb88ac01-b09d-460e-8894-\
679fc5e1cbc4"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
        MultilineFunction->None], "(", "x", ")"}], "\[LongEqual]", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"\[Phi]", "(", "x", ")"}], 
        RowBox[{"3", "/", "2"}]], 
       SqrtBox["x"]]}], "/.", 
     RowBox[{"\[Phi]", "\[Rule]", 
      SubscriptBox["\[Phi]", "0"]}]}], ",", 
    RowBox[{"x", "\[GreaterEqual]", "0"}]}], "]"}], TraditionalForm]], "Input",\

 CellChangeTimes->{{3.548849841241909*^9, 3.548849901144144*^9}, {
  3.548873301007215*^9, 3.548873321054475*^9}, {3.5488733777483187`*^9, 
  3.548873378868719*^9}, {3.5489068896702013`*^9, 
  3.548906890806716*^9}},ExpressionUUID->"b9a8e9a9-99ce-4896-b700-\
e2c33bd81190"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.402609974778824*^9, {3.54884984290829*^9, 3.548849901665661*^9}, {
   3.54887331591051*^9, 3.548873321566975*^9}, 3.5488733792659073`*^9, 
   3.548906891282091*^9, 
   3.548906977077314*^9},ExpressionUUID->"1337cf53-80f0-4a41-ae76-\
d19c79e049eb"]
}, Open  ]],

Cell[TextData[{
 "It satisfies the second boundary condition ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Phi]", "(", "\[Infinity]", ")"}], "\[LongEqual]", "0"}], 
   TraditionalForm]],ExpressionUUID->"68cd8649-6585-45dc-9aac-ab61ea222454"],
 ": ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.548860031250432*^9, 3.548860031708148*^9}, {
  3.5488600948233843`*^9, 3.5488600962422657`*^9}, {3.548906937327622*^9, 
  3.5489069589370337`*^9}, {3.548906992019594*^9, 
  3.548907003211955*^9}},ExpressionUUID->"77f10b99-0bdb-498a-b1d6-\
752f283f9ead"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   UnderscriptBox["lim", 
    RowBox[{"x", "\[Rule]", "\[Infinity]"}]], 
   RowBox[{
    SubscriptBox["\[Phi]", "0"], "(", "x", ")"}]}], TraditionalForm]], "Input",\

 CellChangeTimes->{{3.548873235264974*^9, 3.548873240148839*^9}, {
  3.5488733829633636`*^9, 
  3.5488734096021357`*^9}},ExpressionUUID->"2516acf9-d203-4ac3-bc48-\
5082463cbee9"],

Cell[BoxData[
 FormBox["0", TraditionalForm]], "Output",
 CellChangeTimes->{3.548873240612144*^9, 3.548873410013188*^9, 
  3.548907010574872*^9},ExpressionUUID->"6b65f23b-538c-452f-9a7a-\
6e3185f75d71"]
}, Open  ]],

Cell[TextData[{
 "Define the functional (",
 
 CounterBox["DisplayFormulaNumbered", "functional"],
 "): ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.548860031250432*^9, 3.548860031708148*^9}, {
   3.5488600948233843`*^9, 3.5488600962422657`*^9}, {3.548906937327622*^9, 
   3.5489069589370337`*^9}, {3.548906992019594*^9, 3.548907003211955*^9}, {
   3.548907899057832*^9, 3.54890790422367*^9}, 
   3.5489079879295588`*^9},ExpressionUUID->"6890dc45-2249-44ee-993c-\
5f9c7bdc7c2e"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalF]", "[", "\[Phi]_", "]"}], "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]"], "(", "x", ")"}], "2"]}], "+", 
    RowBox[{
     FractionBox["2", "5"], 
     FractionBox[
      SuperscriptBox[
       RowBox[{"\[Phi]", "(", "x", ")"}], 
       RowBox[{"5", "/", "2"}]], 
      SqrtBox["x"]]}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.5489081851567717`*^9, 
  3.548908186079859*^9}},ExpressionUUID->"e6e50ffc-8059-4ff2-9312-\
96b39de1eec3"],

Cell[TextData[{
 "Show that the Euler\[Dash]Lagrange equation (",
 
 CounterBox["DisplayFormulaNumbered", "Euler-Lagrange equation"],
 ") applied to functional (",
 
 CounterBox["DisplayFormulaNumbered", "functional"],
 ") yields the differential equation (",
 
 CounterBox["DisplayFormulaNumbered", "Thomas-Fermi equation"],
 "):  ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.548860031250432*^9, 3.548860031708148*^9}, {
  3.5488600948233843`*^9, 3.5488600962422657`*^9}, {3.548906937327622*^9, 
  3.5489069589370337`*^9}, {3.548906992019594*^9, 3.548907003211955*^9}, {
  3.548907899057832*^9, 3.54890790422367*^9}, {3.5489079879295588`*^9, 
  3.548907989955268*^9}, {3.54891172732889*^9, 
  3.5489117282283287`*^9}},ExpressionUUID->"8fed5848-836f-4411-8ccd-\
7266bae161e1"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", 
       RowBox[{
        RowBox[{"\[ScriptCapitalF]", "[", "\[Phi]", "]"}], "[", "x", "]"}]}], 
      
      RowBox[{"\[PartialD]", 
       RowBox[{"\[Phi]", "(", "x", ")"}]}]], "-", 
     RowBox[{
      SubscriptBox["\[DifferentialD]", "x"], 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{
         RowBox[{"\[ScriptCapitalF]", "[", "\[Phi]", "]"}], "[", "x", "]"}]}], 
       RowBox[{"\[PartialD]", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]"], "(", "x", ")"}]}]]}]}], 
    "\[LongEqual]", "0"}], "//", "Simplify"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.548907928331462*^9, 3.548907960148138*^9}, {
  3.548908190111093*^9, 
  3.548908191639843*^9}},ExpressionUUID->"2681c9d5-3601-4eb7-a748-\
fa70f884c192"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
     MultilineFunction->None], "(", "x", ")"}], "\[LongEqual]", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"\[Phi]", "(", "x", ")"}], 
     RowBox[{"3", "/", "2"}]], 
    SqrtBox["x"]]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.548907911126936*^9, 3.5489079605661783`*^9}, 
   3.548908193004776*^9, 
   3.548909326275056*^9},ExpressionUUID->"2e11669c-2b39-4500-a1c9-\
95abb8e59123"]
}, Open  ]],

Cell[TextData[{
 "Define the two-parameter trial function and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SubscriptBox["\[ScriptCapitalF]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "\[RightAngleBracket]"}], 
   TraditionalForm]],ExpressionUUID->"950f577e-cf1c-4348-a457-aa317d278db2"],
 ": ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.548860031250432*^9, 3.548860031708148*^9}, {
   3.5488600948233843`*^9, 3.5488600962422657`*^9}, {3.548906937327622*^9, 
   3.5489069589370337`*^9}, {3.548906992019594*^9, 3.548907003211955*^9}, {
   3.548907899057832*^9, 3.54890790422367*^9}, {3.5489079879295588`*^9, 
   3.548907989955268*^9}, {3.548911683258251*^9, 3.5489116870744753`*^9}, {
   3.5489117320594883`*^9, 3.548911752234087*^9}, 
   3.5489118031940536`*^9},ExpressionUUID->"fbf5f9dc-c7e3-4331-87f6-\
adbb3805002d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Phi]", 
      RowBox[{"\[Alpha]_", ",", "\[Beta]_"}]], "(", "x_", ")"}], "=", 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "/", "\[Beta]"}], ")"}], 
         RowBox[{"3", "/", "\[Alpha]"}]]}], ")"}], "\[Alpha]"]]}], ";"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.548873365365691*^9, 3.548873387987803*^9}, {
  3.548873557934005*^9, 3.548873610186262*^9}, {3.548873821426415*^9, 
  3.548873824742038*^9}, {3.548908360640644*^9, 3.548908373760037*^9}, {
  3.548908682763946*^9, 3.548908700188347*^9}, {3.548909991265777*^9, 
  3.5489099939823437`*^9}, {3.548910277857535*^9, 
  3.5489103212923527`*^9}},ExpressionUUID->"3d759216-dcf7-47f8-b98d-\
a8f563fbf302"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     SubscriptBox["\[ScriptCapitalF]", 
      RowBox[{"\[Alpha]_", ",", "\[Beta]_"}]], "\[RightAngleBracket]"}], "=", 
    
    RowBox[{
     FractionBox[
      RowBox[{"4", " ", 
       SqrtBox["\[Beta]"], " ", 
       TemplateBox[{
         RowBox[{
           FractionBox["\[Alpha]", "6"], "+", "1"}]},
        "Gamma"], " ", 
       TemplateBox[{
         FractionBox[
          RowBox[{"7", " ", "\[Alpha]"}], "3"]},
        "Gamma"]}], 
      RowBox[{"5", " ", 
       TemplateBox[{
         FractionBox[
          RowBox[{"5", " ", "\[Alpha]"}], "2"]},
        "Gamma"]}]], "+", 
     FractionBox[
      RowBox[{"9", " ", 
       TemplateBox[{
         RowBox[{"2", "-", 
           FractionBox["\[Alpha]", "3"]}]},
        "Gamma"], " ", 
       TemplateBox[{
         RowBox[{
           FractionBox[
            RowBox[{"7", " ", "\[Alpha]"}], "3"], "+", "1"}]},
        "Gamma"]}], 
      RowBox[{"14", " ", "\[Beta]", " ", 
       TemplateBox[{
         RowBox[{
           RowBox[{"2", " ", "\[Alpha]"}], "+", "2"}]},
        "Gamma"]}]]}]}], ";"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.548910394109612*^9, 3.548910399479233*^9}, {
  3.5489104410166492`*^9, 3.5489104540391893`*^9}, {3.548910905109743*^9, 
  3.548910906097817*^9}},ExpressionUUID->"9031f724-19b0-4dc6-a725-\
63ebde9c368e"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["FindRoot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindRoot"]],ExpressionUUID->
  "de216b8c-da9a-40af-8c13-7a8d6d2eb320"],
 " to obtain the optimal values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "fb719daa-109e-491b-815c-7c21687df04c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "75a66b7b-445f-485f-9a6f-3f3ed64279a1"],
 " by determining the stationary value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SubscriptBox["\[ScriptCapitalF]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "\[RightAngleBracket]"}], 
   TraditionalForm]],ExpressionUUID->"eb28859b-26a1-4cd0-8ded-7f0dcf179df4"],
 ":",
 " ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.548860031250432*^9, 3.548860031708148*^9}, {
   3.5488600948233843`*^9, 3.5488600962422657`*^9}, {3.548906937327622*^9, 
   3.5489069589370337`*^9}, {3.548906992019594*^9, 3.548907003211955*^9}, {
   3.548907899057832*^9, 3.54890790422367*^9}, {3.5489079879295588`*^9, 
   3.548907989955268*^9}, {3.548911683258251*^9, 3.5489116870744753`*^9}, {
   3.5489117320594883`*^9, 3.548911752234087*^9}, {3.5489118031940536`*^9, 
   3.548911819812591*^9}, 
   3.548911854274995*^9},ExpressionUUID->"00652533-9cbe-48ff-ac5d-\
cad7cb5ed631"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"\[PartialD]", 
         FormBox[
          RowBox[{"\[LeftAngleBracket]", 
           SubscriptBox["\[ScriptCapitalF]", 
            RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "\[RightAngleBracket]"}],
          TraditionalForm]}], 
        RowBox[{"\[PartialD]", "\[Alpha]"}]], "\[LongEqual]", "0"}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{"\[PartialD]", 
         FormBox[
          RowBox[{"\[LeftAngleBracket]", 
           SubscriptBox["\[ScriptCapitalF]", 
            RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "\[RightAngleBracket]"}],
          TraditionalForm]}], 
        RowBox[{"\[PartialD]", "\[Beta]"}]], "\[LongEqual]", "0"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", "3"}], "}"}]}], "]"}], TraditionalForm]], "Input",\

 CellChangeTimes->{{3.548910541408155*^9, 
  3.548910559114252*^9}},ExpressionUUID->"43003611-74a1-4ac8-8cea-\
b77daa4dcbee"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "3.3616908368247276`"}], ",", 
    RowBox[{"\[Beta]", "\[Rule]", "3.967073788365864`"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.548910559612784*^9, 3.548910916070657*^9, {3.5489117921857357`*^9, 
   3.5489118387028217`*^9}},ExpressionUUID->"d2681028-8079-4fe9-ad60-\
887e2784641c"]
}, Open  ]],

Cell[TextData[{
 "Plot the resulting variational solution ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Phi]", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "(", "x", ")"}], 
   TraditionalForm]],ExpressionUUID->"a2a19453-5633-4fab-834c-bbadfe704e56"],
 ". ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.548860031250432*^9, 3.548860031708148*^9}, {
  3.5488600948233843`*^9, 3.5488600962422657`*^9}, {3.548906937327622*^9, 
  3.5489069589370337`*^9}, {3.548906992019594*^9, 3.548907003211955*^9}, {
  3.548907899057832*^9, 3.54890790422367*^9}, {3.5489079879295588`*^9, 
  3.548907989955268*^9}, {3.548911683258251*^9, 3.5489116870744753`*^9}, {
  3.5489117320594883`*^9, 3.548911752234087*^9}, {3.5489118031940536`*^9, 
  3.548911819812591*^9}, {3.548911854274995*^9, 
  3.548911865371448*^9}},ExpressionUUID->"ff3195f7-700d-4ab2-88c9-\
6b039db8ce57"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Phi]", 
        RowBox[{"\[Alpha]", ",", "\[Beta]"}]], "(", "x", ")"}], "/.", "%"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.5489106959872217`*^9, 3.548910716764276*^9}, {
  3.548910929255684*^9, 3.548910972261404*^9}, {3.5489118317481318`*^9, 
  3.548911837172227*^9}},ExpressionUUID->"768ad2b4-604e-4d22-8ef6-\
8d6045a3382d"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
UXEqMiuaWfgfd8BD1w==
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.548910700121213*^9, 3.548910717159905*^9}, {
   3.548910930816729*^9, 3.5489109729050493`*^9}, 
   3.548911840036957*^9},ExpressionUUID->"add0ef40-3a92-4dfa-bf22-\
b22baccae1e3"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Fourier Series", "Section",
 CellChangeTimes->{
  3.5120391260548077`*^9, 3.512041231816586*^9, {3.548954612009988*^9, 
   3.548954613741971*^9}, {3.5489564611402397`*^9, 
   3.548956466178022*^9}},ExpressionUUID->"0e10d379-b15b-4853-a985-\
54b39ed825a8"],

Cell[CellGroupData[{

Cell[TextData[{
 "Fourier Transform ",
 StyleBox["[8 Marks]", "ExerciseMark"]
}], "Exercise",
 CellChangeTimes->{{3.415598897630817*^9, 3.4155988993253393`*^9}, {
   3.415792063240962*^9, 3.415792063417357*^9}, 3.512189496788604*^9, 
   3.516626426280093*^9, 3.516626460460792*^9, {3.517657435731741*^9, 
   3.517657436228221*^9}, {3.5489564712498007`*^9, 3.54895647360991*^9}, {
   3.5489566808342333`*^9, 
   3.548956681408545*^9}},ExpressionUUID->"78637981-6f19-480d-a90a-\
2360b66f2535"],

Cell[TextData[{
 "The ",
 StyleBox["Fourier transform",
  FontSlant->"Italic"],
 " of a function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "d31c0de5-6477-4122-b1cf-b2067a336edc"],
 " is defined to be"
}], "Text",
 CellChangeTimes->{{3.512264544065971*^9, 3.5122645481779757`*^9}, {
   3.512264754022488*^9, 3.512264755635507*^9}, 3.51226493775747*^9, {
   3.5122653805805407`*^9, 3.512265384799396*^9}, {3.512265886071863*^9, 
   3.512265900847334*^9}, {3.516601333799036*^9, 3.516601337113138*^9}, {
   3.5176139243921537`*^9, 3.517614015259983*^9}, {3.517618697151593*^9, 
   3.517618697151973*^9}, {3.517716341411991*^9, 3.517716382513006*^9}, {
   3.548919148600623*^9, 3.548919149178811*^9}, {3.5489546562977962`*^9, 
   3.548954672753255*^9}, {3.548954737092086*^9, 3.548954761880506*^9}, {
   3.548954801024995*^9, 3.548954817688733*^9}, {3.54895561763655*^9, 
   3.548955617636716*^9}},ExpressionUUID->"53945112-7c14-4108-8569-\
f6f2b1472afc"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    OverscriptBox["f", "~"], "(", "\[Omega]", ")"}], "\[LongEqual]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "\[Pi]"}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      RowBox[{"f", "(", "t", ")"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "t"}]], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], 
  TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{
  3.548954690118601*^9, {3.548954750042046*^9, 3.5489547719041777`*^9}, {
   3.548955612526988*^9, 
   3.5489556146120987`*^9}},ExpressionUUID->"c7235201-6d4b-4261-ba9a-\
ca598e18e6a5"],

Cell[TextData[{
 "The ",
 StyleBox["inverse Fourier transform",
  FontSlant->"Italic"],
 " of a function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["f", "~"], "(", "\[Omega]", ")"}], TraditionalForm]],
  ExpressionUUID->"00f787d4-3d06-43c8-a38d-14385267d83c"],
 " is defined to be"
}], "Text",
 CellChangeTimes->{{3.512264544065971*^9, 3.5122645481779757`*^9}, {
   3.512264754022488*^9, 3.512264755635507*^9}, 3.51226493775747*^9, {
   3.5122653805805407`*^9, 3.512265384799396*^9}, {3.512265886071863*^9, 
   3.512265900847334*^9}, {3.516601333799036*^9, 3.516601337113138*^9}, {
   3.5176139243921537`*^9, 3.517614015259983*^9}, {3.517618697151593*^9, 
   3.517618697151973*^9}, {3.517716341411991*^9, 3.517716382513006*^9}, {
   3.548919148600623*^9, 3.548919149178811*^9}, {3.5489546562977962`*^9, 
   3.548954672753255*^9}, {3.548954737092086*^9, 3.548954761880506*^9}, {
   3.548954801024995*^9, 3.548954817688733*^9}, {3.54895561763655*^9, 
   3.548955617636716*^9}, {3.54895589775506*^9, 3.548955911982793*^9}, {
   3.5489564902167187`*^9, 
   3.54895649825874*^9}},ExpressionUUID->"4b159cd0-2de0-4e91-84d9-\
0a5b56ec2c4e"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"f", "(", "t", ")"}], "\[LongEqual]", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{
      OverscriptBox["f", "~"], "(", "\[Omega]", ")"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Omega]", " ", "t"}]], 
     RowBox[{"\[DifferentialD]", "\[Omega]"}]}]}]}], 
  TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{
  3.548954690118601*^9, {3.548954750042046*^9, 3.5489547719041777`*^9}, {
   3.548955612526988*^9, 3.5489556146120987`*^9}, {3.548955916700839*^9, 
   3.54895592814221*^9}},ExpressionUUID->"ceedc2eb-34b9-4bca-8999-\
02072fac6342"],

Cell["Consider the function", "Text",
 CellChangeTimes->{{3.548954943558992*^9, 
  3.548954959090494*^9}},ExpressionUUID->"39c9df37-7193-437e-b99c-\
6a98ea0d73ac"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"s", "(", "t", ")"}], "=", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"1", 
          RowBox[{
           RowBox[{"-", "1"}], "<", "t", "<", "1"}]},
         {"0", 
          RowBox[{
           FormBox[
            TemplateBox[{"t"},
             "Abs"],
            TraditionalForm], "\[GreaterEqual]", "1"}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.54895494844939*^9, 3.548954950048448*^9}, {
  3.548954982209858*^9, 
  3.548955022827866*^9}},ExpressionUUID->"901bb677-2ea6-49ad-a5e3-\
1e23e50e0c4e"],

Cell[TextData[{
 "Compute the Fourier transform ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["s", "~"], "(", "\[Omega]", ")"}], TraditionalForm]],
  ExpressionUUID->"cca6d6aa-9480-464e-ba10-cef62d1c0460"],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "4e290291-9d4d-4595-9455-e7b7daf0167d"],
 " and plot it for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "12"}], "\[LessEqual]", "\[Omega]", "\[LessEqual]", "12"}], 
   TraditionalForm]],ExpressionUUID->"d04c2a5c-c45c-4d10-911c-0e56609b1e59"],
 ". ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.5121914421540947`*^9}, {3.512265836669343*^9, 3.512265836850934*^9}, {
   3.512265871020197*^9, 3.512265871151739*^9}, {3.548954842446993*^9, 
   3.548954908019541*^9}, {3.5489550320908833`*^9, 3.548955033927906*^9}, {
   3.548955157557509*^9, 3.548955187626917*^9}, {3.5489555731510344`*^9, 
   3.5489555732948236`*^9}},ExpressionUUID->"f9788d2f-eaf0-4a7f-b5cf-\
47fbd6dc7fcc"],

Cell[TextData[{
 "Compute the ",
 StyleBox["complex Fourier coefficients",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "n"], TraditionalForm]],ExpressionUUID->
  "c8e01bb3-6fee-4f4a-aa16-dd8a2231af40"],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "7f11b098-4047-4cb7-8977-6c937864a412"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "\[Element]", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "]"}]}], TraditionalForm]],
  ExpressionUUID->"d9cd578d-9bae-4041-a81e-19cbda796bd4"],
 ", with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "3b579bb5-1da0-40e8-bfe4-d3ed69351c10"],
 " periodically extended outside this interval.",
 " ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.512191596645583*^9}, {3.512191761995517*^9, 3.5121917999124613`*^9}, {
   3.5121974531577587`*^9, 3.5121974554659643`*^9}, {3.512197989162529*^9, 
   3.5121980460006657`*^9}, {3.5122658195163107`*^9, 3.51226585920107*^9}, {
   3.516601680409733*^9, 3.5166016892429857`*^9}, {3.5489550499987583`*^9, 
   3.548955051565283*^9}, {3.548955241277574*^9, 3.5489552591766157`*^9}, {
   3.5489554003734426`*^9, 3.548955505150601*^9}, {3.548955562061822*^9, 
   3.548955580004525*^9}, {3.548955655061386*^9, 3.5489556868633623`*^9}, {
   3.548955791141231*^9, 3.548955799586829*^9}, {3.54895603694199*^9, 
   3.5489561592239923`*^9}, 
   3.548956637318555*^9},ExpressionUUID->"31462bb4-00f7-4d63-a355-\
72fe3fdb4dea"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["DiscretePlot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/DiscretePlot"]],ExpressionUUID->
  "69f819e7-b59b-4bec-8860-a72bc4e5e861"],
 " to visualize ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "n"], TraditionalForm]],ExpressionUUID->
  "3f948672-652b-4f5c-9272-cdd5ad55b9ca"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "12"}], "\[LessEqual]", "n", "\[LessEqual]", "12"}], 
   TraditionalForm]],ExpressionUUID->"ba32c33d-d938-49f2-9461-9ed21f2e8d1c"],
 ". ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.512191596645583*^9}, {3.512191761995517*^9, 3.5121917999124613`*^9}, {
   3.5121974531577587`*^9, 3.5121974554659643`*^9}, {3.512197989162529*^9, 
   3.5121980460006657`*^9}, {3.5122658195163107`*^9, 3.51226585920107*^9}, {
   3.516601680409733*^9, 3.5166016892429857`*^9}, {3.5489550499987583`*^9, 
   3.548955051565283*^9}, {3.548955241277574*^9, 3.5489552591766157`*^9}, {
   3.5489554003734426`*^9, 3.548955505150601*^9}, {3.548955562061822*^9, 
   3.548955580004525*^9}, {3.548955655061386*^9, 3.5489556868633623`*^9}, {
   3.548955791141231*^9, 3.548955799586829*^9}, {3.54895603694199*^9, 
   3.548956160627334*^9}, {3.5489566451548033`*^9, 
   3.5489566483861837`*^9}},ExpressionUUID->"ad771f02-d7a1-41cc-99d6-\
1517f360534c"],

Cell[TextData[{
 "Verify that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "n"], "\[LongEqual]", 
    RowBox[{
     OverscriptBox["s", "~"], "(", "n", ")"}]}], TraditionalForm]],
  ExpressionUUID->"0f2a1798-8227-4845-abda-fc8f17df60f0"],
 ".",
 " ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.512191596645583*^9}, {3.512191761995517*^9, 3.5121917999124613`*^9}, {
   3.5121974531577587`*^9, 3.5121974554659643`*^9}, {3.512197989162529*^9, 
   3.5121980460006657`*^9}, {3.5122658195163107`*^9, 3.51226585920107*^9}, {
   3.516601680409733*^9, 3.5166016892429857`*^9}, {3.5489550499987583`*^9, 
   3.548955051565283*^9}, {3.548955241277574*^9, 3.5489552591766157`*^9}, {
   3.5489554003734426`*^9, 3.548955505150601*^9}, {3.548955562061822*^9, 
   3.548955580004525*^9}, {3.548955655061386*^9, 3.5489556868633623`*^9}, {
   3.548955791141231*^9, 3.548955799586829*^9}, 3.54895603694199*^9, 
   3.5489562843637*^9, {3.5489566509531193`*^9, 
   3.548956655369014*^9}},ExpressionUUID->"1da94847-66c1-4456-a516-\
2721ccacba41"],

Cell[TextData[{
 "Compute the ",
 StyleBox["inverse Fourier transform",
  FontSlant->"Italic"],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["s", "~"], "(", "\[Omega]", ")"}], TraditionalForm]],
  ExpressionUUID->"f087f505-7d3e-41ef-8b1a-851e9e3ba955"],
 " and verify that you recover ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "9ea90b43-a7f6-4dd8-b668-eec8f125a23a"],
 ".",
 " ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.445504170067299*^9, 3.4455042039392776`*^9}, {
   3.445505092350593*^9, 3.4455051200533533`*^9}, {3.4455057547010508`*^9, 
   3.445505758076123*^9}, {3.476877875452804*^9, 3.476877895178447*^9}, {
   3.4769240589691153`*^9, 3.476924071106742*^9}, 3.476924141824258*^9, {
   3.510399335846137*^9, 3.510399346539407*^9}, {3.51039938957132*^9, 
   3.5103993989118567`*^9}, {3.510399470248554*^9, 3.510399535291092*^9}, {
   3.510399738670025*^9, 3.5103997388041887`*^9}, {3.5103999068407087`*^9, 
   3.5103999068408127`*^9}, {3.5104000676645393`*^9, 3.510400093310618*^9}, {
   3.512191348486341*^9, 3.512191362211871*^9}, {3.512191442153983*^9, 
   3.512191596645583*^9}, {3.512191761995517*^9, 3.5121917999124613`*^9}, {
   3.5121974531577587`*^9, 3.5121974554659643`*^9}, {3.512197989162529*^9, 
   3.5121980460006657`*^9}, {3.5122658195163107`*^9, 3.51226585920107*^9}, {
   3.516601680409733*^9, 3.5166016892429857`*^9}, {3.51761899697598*^9, 
   3.5176190419700937`*^9}, {3.5176191488263903`*^9, 3.517619150672271*^9}, 
   3.5176574216885*^9, {3.548955999362873*^9, 3.548956011576839*^9}, {
   3.548956359698655*^9, 3.548956373634256*^9}, {3.548956412518882*^9, 
   3.548956444835876*^9}, 
   3.548956660576571*^9},ExpressionUUID->"8bd2e057-0f8f-4aba-a9de-\
8e68e54ac46c"],

Cell[CellGroupData[{

Cell["Solution", "Solution",
 CellChangeTimes->{{3.450492134067934*^9, 3.4504921365634604`*^9}, 
   3.512197033318738*^9},ExpressionUUID->"0115f741-dfe8-4930-98f0-\
b4c3319ba1b2"],

Cell[TextData[{
 "Define ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "8e4d8ffd-f1d5-4a45-b5e0-10e184aacf11"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.517749829568082*^9, 3.517749835061864*^9}, {
  3.5489550593339167`*^9, 
  3.548955060247327*^9}},ExpressionUUID->"94a8565a-8f30-4394-bbdb-\
2f1a61e80df7"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"s", "(", "t_", ")"}], ":=", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"1", 
          RowBox[{
           RowBox[{"-", "1"}], "<", "t", "<", "1"}]},
         {"0", 
          RowBox[{
           FormBox[
            TemplateBox[{"t"},
             "Abs"],
            TraditionalForm], "\[GreaterEqual]", "1"}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.517614027771112*^9, 3.5176140343137913`*^9}, 
   3.517618423535974*^9, {3.5489191590694447`*^9, 3.5489191762380257`*^9}, {
   3.548919278947391*^9, 3.548919279099086*^9}, {3.5489194466311693`*^9, 
   3.5489194470598392`*^9}, {3.548919665608406*^9, 3.548919703507435*^9}, {
   3.548919785074848*^9, 3.5489198017907333`*^9}, 
   3.54895505737297*^9},ExpressionUUID->"6f3a2b55-bfd9-4468-bc3f-\
2b58520cf929"],

Cell[TextData[{
 "Compute the Fourier Transform of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "45b0c2b4-65ae-4407-94ab-9829b4ad16bf"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.512265868041502*^9, 3.512265882543372*^9}, {
   3.548955079275448*^9, 3.548955080386801*^9}, 
   3.548955197063896*^9},ExpressionUUID->"5f8c484a-f9ee-469d-8ccf-\
227fbd36bf99"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    OverscriptBox["s", "~"], "(", "\[Omega]_", ")"}], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "\[Pi]"}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      RowBox[{"s", "(", "t", ")"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "t"}]], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.548953012064785*^9, 3.548953144141646*^9}, {
   3.548953352180044*^9, 3.548953362790394*^9}, 
   3.548953593064844*^9},ExpressionUUID->"cde5d9ff-aefc-4be4-9d55-\
f54f14085627"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"sin", "(", "\[Omega]", ")"}], 
   RowBox[{"\[Pi]", " ", "\[Omega]"}]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.548953032074575*^9, {3.548953062295746*^9, 3.548953098129936*^9}, 
   3.548953144517851*^9, {3.5489533528627157`*^9, 3.548953363316062*^9}, 
   3.548953593628688*^9, 3.5489550893284388`*^9, 
   3.548955137034977*^9},ExpressionUUID->"ee37d95f-ff2f-46d4-ab0e-\
6bc667471ea8"]
}, Open  ]],

Cell[TextData[{
 "Plot ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["s", "~"], "(", "\[Omega]", ")"}], TraditionalForm]],
  ExpressionUUID->"e61cded4-5f82-41e7-b798-586b6a63d177"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "12"}], "\[LessEqual]", "\[Omega]", "\[LessEqual]", "12"}], 
   TraditionalForm]],ExpressionUUID->"1d489386-ea44-4946-8a1e-49710387bd6d"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.512265868041502*^9, 3.512265882543372*^9}, {
  3.548955079275448*^9, 3.548955080386801*^9}, {3.548955197063896*^9, 
  3.5489552140674543`*^9}},ExpressionUUID->"2280527a-7019-481e-abfb-\
6598a3906b18"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"plot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox["s", "~"], "(", "\[Omega]", ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"-", "12"}], ",", "12"}], "}"}]}], "]"}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.5122658058294687`*^9, 3.5122658066834106`*^9}, {
  3.5489192442162323`*^9, 3.548919244869062*^9}, {3.548919370172861*^9, 
  3.548919375649582*^9}, {3.548919671493762*^9, 3.54891967166765*^9}, {
  3.5489551257774878`*^9, 3.548955149806676*^9}, {3.548956222894557*^9, 
  3.54895622360207*^9}},ExpressionUUID->"30400dcd-490a-492b-ac64-\
bf59d52843a3"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
dswufA==
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{{-12, 12}, {-0.06914758553466001, 0.31830970517247614`}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5122658071177464`*^9, 3.512266076225926*^9, {3.512287457647406*^9, 
   3.5122874942466784`*^9}, 3.516601411526135*^9, 3.517614036190268*^9, 
   3.517617998174149*^9, 3.51761856394704*^9, 3.51775012566395*^9, {
   3.5489191630445023`*^9, 3.5489191859882803`*^9}, 3.548919245295074*^9, 
   3.54891928107241*^9, 3.548919376190299*^9, 3.548919448870085*^9, {
   3.5489196720482492`*^9, 3.54891970534874*^9}, {3.548919787648303*^9, 
   3.548919803798469*^9}, {3.548955132138217*^9, 3.548955150237439*^9}, 
   3.548956224170434*^9},ExpressionUUID->"0d221de0-223d-4bab-9d96-\
240e42c50eb2"]
}, Open  ]],

Cell[TextData[{
 "Compute the complex Fourier coefficients ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "n"], TraditionalForm]],ExpressionUUID->
  "14179413-7aa9-4dc8-8884-1ae8b0ef944d"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.512265167245957*^9, 3.512265171373848*^9}, 
   3.512265266195732*^9, {3.512265595251058*^9, 3.512265601688423*^9}, {
   3.5489552738240433`*^9, 3.548955274173647*^9}, {3.5489557402181587`*^9, 
   3.5489557496840363`*^9}, 
   3.548956262731669*^9},ExpressionUUID->"80f3a43d-530c-484e-b376-\
b115bfb3ad89"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"c", "/:", 
   SubscriptBox["c", "0"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "\[Pi]"}]], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Pi]"}], "\[Pi]"], 
       RowBox[{
        RowBox[{"s", "(", "t", ")"}], " ", 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}], ",", 
     RowBox[{"n", "\[Element]", 
      TagBox["\[DoubleStruckCapitalZ]",
       Function[{}, Integers]]}]}], "]"}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.5122647825367413`*^9, 3.512264782933*^9}, {
   3.5122649842660713`*^9, 3.512265001558024*^9}, 3.5122655891418*^9, {
   3.5166014219346647`*^9, 3.516601435587737*^9}, 3.516601468269273*^9, 
   3.517614052311102*^9, {3.548919400102404*^9, 3.548919400853118*^9}, {
   3.54891971753115*^9, 3.548919717682096*^9}, {3.548955286073414*^9, 
   3.54895530659277*^9}, {3.548956183150978*^9, 
   3.548956189332303*^9}},ExpressionUUID->"8913d411-5c80-409e-8c1c-\
acdf5b205083"],

Cell[BoxData[
 FormBox[
  FractionBox["1", "\[Pi]"], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.548956194368924*^9},ExpressionUUID->"c0665c1e-e781-4b49-8c2b-\
47337d7c4fdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"c", "/:", 
   SubscriptBox["c", "n_"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "\[Pi]"}]], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Pi]"}], "\[Pi]"], 
       RowBox[{
        RowBox[{"s", "(", "t", ")"}], " ", 
        FormBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "n", " ", "t"}]],
         TraditionalForm], 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}], ",", 
     RowBox[{"n", "\[Element]", 
      TagBox["\[DoubleStruckCapitalZ]",
       Function[{}, Integers]]}]}], "]"}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.5122647825367413`*^9, 3.512264782933*^9}, {
   3.5122649842660713`*^9, 3.512265001558024*^9}, 3.5122655891418*^9, {
   3.5166014219346647`*^9, 3.516601435587737*^9}, 3.516601468269273*^9, 
   3.517614052311102*^9, {3.548919400102404*^9, 3.548919400853118*^9}, {
   3.54891971753115*^9, 3.548919717682096*^9}, {3.548955286073414*^9, 
   3.54895530659277*^9}},ExpressionUUID->"68875f49-2db4-4bdb-a4cb-\
abb067eaa1d3"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"sin", "(", "n", ")"}], 
   RowBox[{"\[Pi]", " ", "n"}]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5122595405789223`*^9, 3.5122647855595303`*^9, 3.5122650136643257`*^9, {
   3.512265577011032*^9, 3.512265606501667*^9}, 3.51228749800644*^9, {
   3.516601414927907*^9, 3.5166014360281067`*^9}, 3.5166014686198263`*^9, 
   3.5166015526667337`*^9, 3.517614054328006*^9, 3.5176179995180397`*^9, 
   3.517618566517995*^9, 3.5177501263022137`*^9, 3.548919218045207*^9, 
   3.548919407229919*^9, 3.548919466187804*^9, {3.548919714709694*^9, 
   3.548919719435347*^9}, 3.548919814636105*^9, {3.5489553030024*^9, 
   3.5489553072073174`*^9}, 3.548955665137169*^9, 3.5489557513689127`*^9, 
   3.54895619662656*^9},ExpressionUUID->"e5c1213a-3604-4d41-9dd9-\
eeedfeecbbc6"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["DiscretePlot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/DiscretePlot"]],ExpressionUUID->
  "6d3affb5-5a36-44a2-b633-813fb6064636"],
 " to visualize ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "n"], TraditionalForm]],ExpressionUUID->
  "d5597d86-9c69-4779-bbd5-589262e2f268"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "12"}], "\[LessEqual]", "n", "\[LessEqual]", "12"}], 
   TraditionalForm]],ExpressionUUID->"cac15931-0409-4093-9522-5b0161b8b63f"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.512265167245957*^9, 3.512265171373848*^9}, 
   3.512265266195732*^9, {3.512265595251058*^9, 3.512265601688423*^9}, {
   3.5489552738240433`*^9, 3.548955274173647*^9}, {3.5489557402181587`*^9, 
   3.5489557496840363`*^9}, {3.548956262731669*^9, 3.548956263404072*^9}, {
   3.5489562935818977`*^9, 
   3.54895629695728*^9}},ExpressionUUID->"1279e756-6278-4449-a916-\
ddd1c75204ac"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"cplot", "=", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     SubscriptBox["c", "n"], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "12"}], ",", "12"}], "}"}]}], "]"}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.548953012064785*^9, 3.548953144141646*^9}, {
  3.548953185036449*^9, 3.548953232375853*^9}, {3.548953390230311*^9, 
  3.548953391572027*^9}, {3.5489534386598387`*^9, 3.548953444295567*^9}, {
  3.548953489920401*^9, 3.548953520263636*^9}, {3.54895364049648*^9, 
  3.5489536422883387`*^9}, {3.5489561759746647`*^9, 3.548956176556275*^9}, {
  3.548956227628056*^9, 
  3.54895622865763*^9}},ExpressionUUID->"b8e8c6f3-40e8-4305-959e-\
bdbfbd627d42"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{
    {RGBColor[0.24720000000000014`, 0.24, 0.6], 
     {Opacity[0.2], 
      LineBox[{{{-12., -0.014233038704835242`}, {-12., 
          0}}, {{-11., -0.028936978984732707`}, {-11., 
          0}}, {{-10., -0.01731672978887747}, {-10., 
          0}}, {{-6., -0.014823452571614545`}, {-6., 
          0}}, {{-5., -0.06104701534537953}, {-5., 
          0}}, {{-4., -0.06022442903626885}, {-4., 0}}, {{
         4., -0.06022442903626885}, {4., 0}}, {{5., -0.06104701534537953}, {
         5., 0}}, {{6., -0.014823452571614545`}, {6., 0}}, {{
         10., -0.01731672978887747}, {10., 0}}, {{
         11., -0.028936978984732707`}, {11., 0}}, {{
         12., -0.014233038704835242`}, {12., 0}}},
       VertexColors->None]}, 
     {Opacity[0.2], 
      LineBox[{{{-9., 0.014575709792393305`}, {-9., 0}}, {{-8., 
         0.03936531385971042}, {-8., 0}}, {{-7., 
         0.029875047066064784`}, {-7., 0}}, {{-3., 
         0.014973297901263985`}, {-3., 0}}, {{-2., 
         0.14471918022004823`}, {-2., 0}}, {{-1., 
         0.2678485334011638}, {-1., 0}}, {{0., 0.3183098861837907}, {
         0., 0}}, {{1., 0.2678485334011638}, {1., 0}}, {{2., 
         0.14471918022004823`}, {2., 0}}, {{3., 0.014973297901263985`}, {
         3., 0}}, {{7., 0.029875047066064784`}, {7., 0}}, {{8., 
         0.03936531385971042}, {8., 0}}, {{9., 0.014575709792393305`}, {
         9., 0}}},
       VertexColors->None]}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEaB95kiciZqfXuh/DVDrRt7Dy5fOFcKF/lAOeW
coGq3ROhfKUDtTP/Lbt3s9cewlc44D/bfv8G9SVQvsyByJ+lFROmz4PyJQ7s
MxVSOBTdB9UvcqCt/dabXsf1UL7AgZUSzk17rq6D8jkOfN2fwha0qg+qn+HA
cmHhSo22Q1D+h/1/Q87r5KlchMkzNJ84mWsQfwUmb48m74Cqn8MB1XwBB1T7
RRxQ3SfhgOp+GQdU/yk4oPpfyQE1fFQcUMNPzQE1fDUcYOEPAKLveFg=
      "]], {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   Method->{"MessagesHead" -> DiscretePlot},
   PlotRange->{{-12, 12}, {-0.06104701534537953, 0.3183098861837907}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.02]}}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.548953510311187*^9, 3.548953520728142*^9}, 
   3.548953598688855*^9, 3.548953642656135*^9, {3.548956177073587*^9, 
   3.548956197927236*^9}, 
   3.548956229096113*^9},ExpressionUUID->"a9ea33f1-de92-4426-bbf6-\
c837754f6e44"]
}, Open  ]],

Cell[TextData[{
 "Verify that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "n"], "\[LongEqual]", 
    RowBox[{
     OverscriptBox["s", "~"], "(", "n", ")"}]}], TraditionalForm]],
  ExpressionUUID->"9c743641-d295-494b-ac92-3bc9221c4de6"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.512265167245957*^9, 3.512265171373848*^9}, 
   3.512265266195732*^9, {3.512265595251058*^9, 3.512265601688423*^9}, {
   3.5489552738240433`*^9, 3.548955274173647*^9}, {3.5489557402181587`*^9, 
   3.5489557496840363`*^9}, {3.548956262731669*^9, 3.548956263404072*^9}, {
   3.5489562935818977`*^9, 3.548956313101152*^9}, 
   3.5489565251412277`*^9},ExpressionUUID->"f382a9e0-3bcc-4b57-970e-\
6dab68457f8a"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["c", "n"], "\[LongEqual]", 
   RowBox[{
    OverscriptBox["s", "~"], "(", "n", ")"}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.548955755398715*^9, 
  3.548955766872772*^9}},ExpressionUUID->"0a4f2e76-afad-4022-b7ff-\
751ccb6dd3a3"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{3.5489557673238897`*^9, 
  3.548956247420455*^9},ExpressionUUID->"d3f06280-3b2c-4558-aa20-\
ae3e1ceb4b7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Show", "[", 
   RowBox[{"cplot", ",", "plot"}], "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.548956230467741*^9, 
  3.548956234193657*^9}},ExpressionUUID->"9b85d3c4-6f70-405a-b1c3-\
3a4ba0ab81d4"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{
     {RGBColor[0.24720000000000014`, 0.24, 0.6], 
      {Opacity[0.2], 
       LineBox[{{{-12., -0.014233038704835242`}, {-12., 
           0}}, {{-11., -0.028936978984732707`}, {-11., 
           0}}, {{-10., -0.01731672978887747}, {-10., 
           0}}, {{-6., -0.014823452571614545`}, {-6., 
           0}}, {{-5., -0.06104701534537953}, {-5., 
           0}}, {{-4., -0.06022442903626885}, {-4., 0}}, {{
          4., -0.06022442903626885}, {4., 0}}, {{5., -0.06104701534537953}, {
          5., 0}}, {{6., -0.014823452571614545`}, {6., 0}}, {{
          10., -0.01731672978887747}, {10., 0}}, {{
          11., -0.028936978984732707`}, {11., 0}}, {{
          12., -0.014233038704835242`}, {12., 0}}},
        VertexColors->None]}, 
      {Opacity[0.2], 
       LineBox[{{{-9., 0.014575709792393305`}, {-9., 0}}, {{-8., 
          0.03936531385971042}, {-8., 0}}, {{-7., 
          0.029875047066064784`}, {-7., 0}}, {{-3., 
          0.014973297901263985`}, {-3., 0}}, {{-2., 
          0.14471918022004823`}, {-2., 0}}, {{-1., 
          0.2678485334011638}, {-1., 0}}, {{0., 0.3183098861837907}, {
          0., 0}}, {{1., 0.2678485334011638}, {1., 0}}, {{2., 
          0.14471918022004823`}, {2., 0}}, {{3., 0.014973297901263985`}, {
          3., 0}}, {{7., 0.029875047066064784`}, {7., 0}}, {{8., 
          0.03936531385971042}, {8., 0}}, {{9., 0.014575709792393305`}, {
          9., 0}}},
        VertexColors->None]}}, 
     {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, PointBox[CompressedData["

1:eJxTTMoPSmViYGCQBGIQDQEaB95kiciZqfXuh/DVDrRt7Dy5fOFcKF/lAOeW
coGq3ROhfKUDtTP/Lbt3s9cewlc44D/bfv8G9SVQvsyByJ+lFROmz4PyJQ7s
MxVSOBTdB9UvcqCt/dabXsf1UL7AgZUSzk17rq6D8jkOfN2fwha0qg+qn+HA
cmHhSo22Q1D+h/1/Q87r5KlchMkzNJ84mWsQfwUmb48m74Cqn8MB1XwBB1T7
RRxQ3SfhgOp+GQdU/yk4oPpfyQE1fFQcUMNPzQE1fDUcYOEPAKLveFg=
       
       "]], {}}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
dswufA==
       "]]}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   Method->{"MessagesHead" -> DiscretePlot},
   PlotRange->{{-12, 12}, {-0.06104701534537953, 0.3183098861837907}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.02]}}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.548956234662904*^9},ExpressionUUID->"6cfcaf34-0b94-4628-a2b6-\
02c49014c81d"]
}, Open  ]],

Cell[TextData[{
 "Compute the ",
 StyleBox["inverse Fourier transform",
  FontSlant->"Italic"],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["s", "~"], "(", "\[Omega]", ")"}], TraditionalForm]],
  ExpressionUUID->"8e0b75c7-1d4e-4bc5-b1e3-397df0d3047c"],
 " to recover ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "(", "t", ")"}], TraditionalForm]],ExpressionUUID->
  "ead43282-bfcd-4f19-8d84-9516c97e955f"],
 ", considering the two cases ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "t", "<", "1"}], TraditionalForm]],ExpressionUUID->
  "00e8081c-976d-49a6-a0dd-a17a6e1e51c5"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[{"t"},
     "Abs"], ">", "1"}], TraditionalForm]],ExpressionUUID->
  "630d0723-f113-4ea6-afeb-2141e47a451d"],
 " separately:"
}], "MathCaption",
 CellChangeTimes->{{3.512265167245957*^9, 3.512265171373848*^9}, 
   3.512265266195732*^9, {3.512265595251058*^9, 3.512265601688423*^9}, {
   3.5489552738240433`*^9, 3.548955274173647*^9}, {3.5489557402181587`*^9, 
   3.5489557496840363`*^9}, {3.548956262731669*^9, 3.548956263404072*^9}, {
   3.5489562935818977`*^9, 3.548956313101152*^9}, {3.5489565251412277`*^9, 
   3.5489565723014*^9}},ExpressionUUID->"32a6e397-d465-459b-9af5-\
96d7a06ec833"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"0", "<", "t", "<", "1"}], ",", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      RowBox[{
       OverscriptBox["s", "~"], "(", "\[Omega]", ")"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Omega]", " ", "t"}]], 
      RowBox[{"\[DifferentialD]", "\[Omega]"}]}]}]}], "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.5489537288350143`*^9, 3.548953736001343*^9}, {
  3.548953804632298*^9, 
  3.5489538120544863`*^9}},ExpressionUUID->"a6898f63-bea8-496f-a8e3-\
e976cc85926e"],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{3.5489538139037313`*^9, 
  3.54895640351097*^9},ExpressionUUID->"d775eca0-d760-45c5-862c-d9088e11ad1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     TemplateBox[{"t"},
      "Abs"], ">", "1"}], ",", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Omega]"}]], " ", 
       RowBox[{
        OverscriptBox["s", "~"], "(", "\[Omega]", ")"}]}], 
      RowBox[{"\[DifferentialD]", "\[Omega]"}]}]}]}], "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.5489537288350143`*^9, 3.548953736001343*^9}, {
  3.548953804632298*^9, 3.548953826854944*^9}, {3.5489563814193573`*^9, 
  3.54895638744293*^9}},ExpressionUUID->"6d0b37af-2504-4ff3-b54b-\
bb81484244a8"],

Cell[BoxData[
 FormBox["0", TraditionalForm]], "Output",
 CellChangeTimes->{
  3.548956396645739*^9},ExpressionUUID->"d2c4f8a2-faa1-4832-ace3-\
e50740a82736"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Special Functions", "Section",
 CellChangeTimes->{{3.516666362739209*^9, 
  3.5166663646624947`*^9}},ExpressionUUID->"3a2b388c-0601-4a43-a7d8-\
215c899ae8a1"],

Cell[CellGroupData[{

Cell[TextData[{
 "Roots of the Airy function ",
 StyleBox["[9 Marks]", "ExerciseMark"]
}], "Exercise",
 CellChangeTimes->{{3.475884903064666*^9, 3.4758849048615427`*^9}, 
   3.484461173820545*^9, {3.4850445630825977`*^9, 3.4850445680698977`*^9}, {
   3.485044658980051*^9, 3.485044661378015*^9}, {3.4850449367621517`*^9, 
   3.485044941224503*^9}, {3.516603682676893*^9, 3.516603698022788*^9}, {
   3.517716390266616*^9, 3.517716392320786*^9}, {3.517719678110669*^9, 
   3.517719683453628*^9}, {3.5177487348366003`*^9, 3.517748735338526*^9}, {
   3.548921208669094*^9, 3.548921231461205*^9}, {3.548959239507687*^9, 
   3.548959240227285*^9}},ExpressionUUID->"cbd6d980-a54d-46a9-b086-\
ba3685131287"],

Cell[TextData[{
 "The ",
 StyleBox["Airy function",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Ai", "(", "z", ")"}], TraditionalForm]],ExpressionUUID->
  "71ef5dbe-73e8-44bb-8169-30404a84d5b5"],
 " can be written as an ",
 StyleBox["infinite product",
  FontSlant->"Italic"],
 " over its roots,"
}], "Text",
 CellChangeTimes->{{3.485643450450076*^9, 3.485643473162241*^9}, {
  3.485644059473371*^9, 3.485644062295209*^9}, {3.485644938978764*^9, 
  3.485644952941442*^9}, {3.498870371297353*^9, 3.498870375076948*^9}, {
  3.515895231454483*^9, 3.515895231883279*^9}, {3.5158978364170303`*^9, 
  3.515897860437299*^9}, {3.515898068592968*^9, 3.515898093318346*^9}, {
  3.515898324365711*^9, 3.515898337825396*^9}, {3.515898372833913*^9, 
  3.515898374423888*^9}, {3.515898505819602*^9, 3.515898506170603*^9}, {
  3.5158993612629957`*^9, 3.515899361777128*^9}, {3.5166039093913317`*^9, 
  3.5166039093915157`*^9}, {3.5166039728872137`*^9, 3.516603979665983*^9}, {
  3.5489211996481323`*^9, 3.548921199901067*^9}, {3.548921234853148*^9, 
  3.548921256658505*^9}, {3.548921605308022*^9, 3.548921606048251*^9}, {
  3.548922089721161*^9, 3.548922090112759*^9}},
 CellTags->{
  "Infinite series representation", 
   "Infinite product \
representation"},ExpressionUUID->"45471980-a54f-4fc2-9a88-469b89a28cd7"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Ai", "(", "z", ")"}], "\[LongEqual]", 
   RowBox[{
    RowBox[{"Ai", "(", "0", ")"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"z", " ", 
      FractionBox[
       TemplateBox[{"0"},
        "AiryAiPrime"], 
       TemplateBox[{"0"},
        "AiryAi"]], " "}]], 
    RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"n", "=", "1"}], "\[Infinity]"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["z", 
         SubscriptBox["a", "n"]]}], ")"}], 
      FormBox[
       SuperscriptBox["\[ExponentialE]", 
        FractionBox["z", 
         SubscriptBox["a", "n"]]],
       TraditionalForm]}]}]}]}], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.515893469127755*^9, 3.515893491423584*^9}, {
   3.515893613359671*^9, 3.515893657851108*^9}, {3.515895223104548*^9, 
   3.515895224551713*^9}, 3.515898508650207*^9, {3.516603874896359*^9, 
   3.516603888986574*^9}, {3.516604107744645*^9, 3.5166041086325407`*^9}, {
   3.5166041449218407`*^9, 3.5166041593886223`*^9}, 3.548920623810544*^9, {
   3.548957737374003*^9, 3.548957740206541*^9}},
 CellTags->
  "infinite product",ExpressionUUID->"22504cff-c530-4193-8778-67394cda0f55"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "n"], TraditionalForm]],ExpressionUUID->
  "cc611389-6844-4dbd-9609-de84ed865f79"],
 " is the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],ExpressionUUID->
  "be77bcb8-be5e-4756-bd2c-4c28b02e1e80"],
 " zero of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Ai", "(", "z", ")"}], TraditionalForm]],ExpressionUUID->
  "bb58ab11-161a-4a41-a738-867ab2be6430"],
 ". The logarithmic derivative of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Ai", "(", "z", ")"}], TraditionalForm]],ExpressionUUID->
  "bb0f6f94-d75b-40fc-84e6-72dc7900b49b"],
 " reads"
}], "Text",
 CellChangeTimes->{{3.4524819603465567`*^9, 3.4524819940580072`*^9}, 
   3.4524822130720243`*^9, {3.452482261215513*^9, 3.452482301331118*^9}, {
   3.452482943612893*^9, 3.452482978206394*^9}, {3.45248686597244*^9, 
   3.452486879619877*^9}, {3.452486964679058*^9, 3.452486965813087*^9}, {
   3.4524870545484457`*^9, 3.452487059015534*^9}, {3.452490825771665*^9, 
   3.452490890451434*^9}, 3.452996387513204*^9, 3.453353752099185*^9, {
   3.4533538980291862`*^9, 3.4533538987820683`*^9}, {3.453353929429459*^9, 
   3.453353939020452*^9}, {3.4533539984176683`*^9, 3.453353999001596*^9}, 
   3.485153112122109*^9, {3.5158935925788507`*^9, 3.51589359772077*^9}, {
   3.515898354330166*^9, 3.5158984000790443`*^9}, {3.51660389387746*^9, 
   3.51660390148911*^9}, {3.5166039865692596`*^9, 3.516603987398471*^9}, {
   3.516604253801063*^9, 3.516604258080412*^9}, {3.5489212739434013`*^9, 
   3.548921331362874*^9}, {3.548956719683988*^9, 3.54895672185116*^9}, {
   3.5489639294376574`*^9, 
   3.548963930009687*^9}},ExpressionUUID->"3fdc483c-1d27-4960-956e-\
7d06289d8ab8"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["Ai", "\[Prime]"], "(", "z", ")"}], 
    RowBox[{"Ai", "(", "z", ")"}]], "\[LongEqual]", 
   RowBox[{
    FractionBox[
     TemplateBox[{"0"},
      "AiryAiPrime"], 
     TemplateBox[{"0"},
      "AiryAi"]], "-", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["z", "k"], 
      RowBox[{"Z", "(", 
       RowBox[{"k", "+", "1"}], ")"}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.515893469127755*^9, 3.515893491423584*^9}, {
   3.515893613359671*^9, 3.515893657851108*^9}, {3.515895223104548*^9, 
   3.515895224551713*^9}, 3.515898508650207*^9, {3.516603874896359*^9, 
   3.516603888986574*^9}, {3.516604107744645*^9, 3.516604166628186*^9}, {
   3.516604196790592*^9, 3.51660421279134*^9}, 3.5166042445603123`*^9, {
   3.5166042791346903`*^9, 3.516604309316999*^9}, {3.51771709892659*^9, 
   3.517717099588449*^9}, {3.517718238692601*^9, 3.5177182473693*^9}, {
   3.517719527250345*^9, 3.5177195362978477`*^9}, {3.548920648178809*^9, 
   3.548920649350494*^9}, {3.548957843983774*^9, 3.548957869147743*^9}, {
   3.548963920081998*^9, 3.548963925838634*^9}},
 CellTags->
  "logarithmic \
derivative",ExpressionUUID->"2dc06ec9-def1-456d-a44d-ae3a76c9469a"],

Cell["where", "Text",
 CellChangeTimes->{{3.5158995725828247`*^9, 3.5158995922454033`*^9}, {
   3.517717137623747*^9, 3.517717143262808*^9}, {3.5177172822289867`*^9, 
   3.5177172986877613`*^9}, {3.517718259496872*^9, 3.517718260654971*^9}, {
   3.5177194035548077`*^9, 3.517719421396616*^9}, {3.548920899973146*^9, 
   3.54892090643322*^9}, {3.548921306970953*^9, 3.5489213075134497`*^9}, {
   3.548921364225868*^9, 3.5489213661500063`*^9}, 3.548956766732252*^9, {
   3.5489568097225227`*^9, 
   3.548956809893588*^9}},ExpressionUUID->"f978f89d-8dc4-4ce2-b8fa-\
30789cbdfcfc"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Z", "(", "k", ")"}], "\[LongEqual]", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "\[Infinity]"], 
    FractionBox["1", 
     SubsuperscriptBox["a", "n", "k"]]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.4524823210393467`*^9, 3.4524823421242847`*^9}, {
   3.4524870695108232`*^9, 3.452487176690442*^9}, {3.452487344834797*^9, 
   3.452487350541161*^9}, {3.453195965555361*^9, 3.453196035357924*^9}, {
   3.453196147993039*^9, 3.453196184101716*^9}, {3.453196254072152*^9, 
   3.453196324683579*^9}, {3.453196382121133*^9, 3.453196392787159*^9}, {
   3.453342708796707*^9, 3.453342721134656*^9}, 3.48515311212337*^9, {
   3.4851534272826633`*^9, 3.48515352845982*^9}, {3.485153567065249*^9, 
   3.485153586048027*^9}, {3.4851536424379263`*^9, 3.485153697201332*^9}, {
   3.485643291794672*^9, 3.485643339671402*^9}, {3.485643420589031*^9, 
   3.485643422815756*^9}, {3.485643596137949*^9, 3.485643609808833*^9}, {
   3.485643685100698*^9, 3.485643828213097*^9}, {3.515893708921591*^9, 
   3.515893726423998*^9}, {3.5158939864625196`*^9, 3.515894063704772*^9}, {
   3.515894108469844*^9, 3.515894124204129*^9}, {3.515894244305942*^9, 
   3.515894246232586*^9}, {3.5166042660875473`*^9, 3.5166042696594687`*^9}, {
   3.5177195299053507`*^9, 3.5177195336803083`*^9}, 3.548920680365418*^9},
 CellTags->"root sum",ExpressionUUID->"447f224c-2e7d-4362-ac98-acf43707c516"],

Cell[TextData[{
 "Plot ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"z"},
    "AiryAi"], TraditionalForm]],ExpressionUUID->
  "54a4b5a5-0b28-428f-9a5a-6423f6672374"],
 " over ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "15"}], "\[LessEqual]", "z", "\[LessEqual]", "5"}], 
   TraditionalForm]],ExpressionUUID->"f3dd5d79-6cb9-48df-9df0-646741022dbf"],
 ". What do you observe about the location and spacing of the roots of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"z"},
    "AiryAi"], TraditionalForm]],ExpressionUUID->
  "b0dce418-fa93-415a-b34d-b3a23f8db7a0"],
 "? ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.389403450962063*^9, 3.389403475156763*^9}, {
   3.389403541605813*^9, 3.389403557531878*^9}, {3.389403640971109*^9, 
   3.389403644826618*^9}, {3.389404094484994*^9, 3.389404097130073*^9}, {
   3.3894041398745213`*^9, 3.389404317794935*^9}, {3.389404363013438*^9, 
   3.389404423005302*^9}, 3.3894044535109043`*^9, {3.38940467330986*^9, 
   3.389404777961268*^9}, {3.389404831343205*^9, 3.389404859413466*^9}, {
   3.389404898501586*^9, 3.389404899371022*^9}, {3.389405024961668*^9, 
   3.389405036404063*^9}, {3.389405076919979*^9, 3.389405125719294*^9}, {
   3.38940519059788*^9, 3.389405202139439*^9}, 3.38940526575896*^9, 
   3.389405320547624*^9, {3.389405362275704*^9, 3.389405368374941*^9}, 
   3.389405688523095*^9, {3.3894058230635433`*^9, 3.389405832746768*^9}, {
   3.419501629423006*^9, 3.4195016384563713`*^9}, {3.419502739976934*^9, 
   3.419502754985217*^9}, {3.480588836754006*^9, 3.4805888383187017`*^9}, {
   3.480588942243659*^9, 3.480588942841219*^9}, {3.480592356337225*^9, 
   3.480592357901823*^9}, {3.480592709410034*^9, 3.480592741565598*^9}, 
   3.480592898128221*^9, {3.480593025372312*^9, 3.480593027091935*^9}, {
   3.485044734354608*^9, 3.485044739904234*^9}, {3.485044780840474*^9, 
   3.485044829132888*^9}, 3.485207959702135*^9, {3.485208048101673*^9, 
   3.4852080575479527`*^9}, {3.4854096326075697`*^9, 3.485409653919175*^9}, {
   3.485409744315536*^9, 3.4854097537131367`*^9}, {3.485491389074404*^9, 
   3.485491389461884*^9}, {3.515895147660994*^9, 3.5158951709186993`*^9}, {
   3.515895349649315*^9, 3.515895349800663*^9}, {3.515895405290303*^9, 
   3.5158954281788683`*^9}, {3.515895862819726*^9, 3.515895914090831*^9}, {
   3.51589596757349*^9, 3.51589596949809*^9}, {3.515897913901973*^9, 
   3.515897913902151*^9}, {3.515898017283798*^9, 3.515898017284038*^9}, {
   3.515908479075502*^9, 3.515908511043642*^9}, {3.51771655785419*^9, 
   3.517716568701149*^9}, {3.51771666649689*^9, 3.517716668829702*^9}, {
   3.517717308945611*^9, 3.5177173090645323`*^9}, {3.548921410526567*^9, 
   3.548921424087818*^9}, {3.5489216418049803`*^9, 
   3.548921694498752*^9}},ExpressionUUID->"b5f8c661-869f-42da-941c-\
f4d4672deec7"],

Cell[TextData[{
 "The zeros of the ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"z"},
    "AiryAi"], TraditionalForm]],ExpressionUUID->
  "fca418b4-c2da-4111-9801-e1bac900d0d8"],
 " are built-in as ",
 Cell[BoxData[
  ButtonBox["AiryAiZero",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/AiryAiZero"]],ExpressionUUID->
  "8c211b9d-c949-414a-90a2-9dcf06a26821"],
 ". Use ",
 Cell[BoxData[
  ButtonBox["N",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/N"]],ExpressionUUID->
  "27644bef-34c7-43ff-a3de-aae154a05481"],
 " to compute ",
 StyleBox["numerical",
  FontSlant->"Italic"],
 " values of the first 1000 roots. ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.389403450962063*^9, 3.389403475156763*^9}, {
   3.389403541605813*^9, 3.389403557531878*^9}, {3.389403640971109*^9, 
   3.389403644826618*^9}, {3.389404094484994*^9, 3.389404097130073*^9}, {
   3.3894041398745213`*^9, 3.389404317794935*^9}, {3.389404363013438*^9, 
   3.389404423005302*^9}, 3.3894044535109043`*^9, {3.38940467330986*^9, 
   3.389404777961268*^9}, {3.389404831343205*^9, 3.389404859413466*^9}, {
   3.389404898501586*^9, 3.389404899371022*^9}, {3.389405024961668*^9, 
   3.389405036404063*^9}, {3.389405076919979*^9, 3.389405125719294*^9}, {
   3.38940519059788*^9, 3.389405202139439*^9}, 3.38940526575896*^9, 
   3.389405320547624*^9, {3.389405362275704*^9, 3.389405368374941*^9}, 
   3.389405688523095*^9, {3.3894058230635433`*^9, 3.389405832746768*^9}, {
   3.419501629423006*^9, 3.4195016384563713`*^9}, {3.419502739976934*^9, 
   3.419502754985217*^9}, {3.480588836754006*^9, 3.4805888383187017`*^9}, {
   3.480588942243659*^9, 3.480588942841219*^9}, {3.480592356337225*^9, 
   3.480592357901823*^9}, {3.480592709410034*^9, 3.480592741565598*^9}, 
   3.480592898128221*^9, {3.480593025372312*^9, 3.480593027091935*^9}, {
   3.485044734354608*^9, 3.485044739904234*^9}, {3.485044780840474*^9, 
   3.485044829132888*^9}, 3.485207959702135*^9, {3.485208048101673*^9, 
   3.4852080575479527`*^9}, {3.4854096326075697`*^9, 3.485409653919175*^9}, {
   3.485409744315536*^9, 3.4854097537131367`*^9}, {3.485491389074404*^9, 
   3.485491389461884*^9}, {3.515895147660994*^9, 3.5158951709186993`*^9}, {
   3.515895349649315*^9, 3.515895349800663*^9}, {3.515895405290303*^9, 
   3.5158954281788683`*^9}, {3.51589607259321*^9, 3.515896107803083*^9}, {
   3.51589643443167*^9, 3.515896503463028*^9}, {3.5158981095124693`*^9, 
   3.515898144403467*^9}, {3.515898713770959*^9, 3.515898714297907*^9}, {
   3.515898754231189*^9, 3.515898754841876*^9}, {3.515899464501128*^9, 
   3.5158994690841713`*^9}, {3.515919679703169*^9, 3.515919691321871*^9}, {
   3.517716794360105*^9, 3.5177168251612988`*^9}, {3.517748697461241*^9, 
   3.517748701555909*^9}, {3.5489214384650507`*^9, 3.548921441091098*^9}, {
   3.548921701342824*^9, 3.5489217649158583`*^9}, {3.548956957531033*^9, 
   3.5489569578511763`*^9}, {3.548958894986655*^9, 
   3.548958905699801*^9}},ExpressionUUID->"5d9a467e-c2d7-4c6c-8f33-\
d2241ab193db"],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "2", ")"}], TraditionalForm]],ExpressionUUID->
  "8a8f79a7-3d05-4011-8131-327faae14854"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "3", ")"}], TraditionalForm]],ExpressionUUID->
  "d30d8776-23a0-4bac-92be-280570cdae5d"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "4", ")"}], TraditionalForm]],ExpressionUUID->
  "59b97c29-6c7e-4b35-a325-5b681bc1f522"],
 " ",
 StyleBox["exactly",
  FontSlant->"Italic"],
 " by computing the Maclaurin series expansion of equation (",
 
 CounterBox["DisplayFormulaNumbered", "logarithmic derivative"],
 ").",
 " ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.389403450962063*^9, 3.389403475156763*^9}, {
   3.389403541605813*^9, 3.389403557531878*^9}, {3.389403640971109*^9, 
   3.389403644826618*^9}, {3.389404094484994*^9, 3.389404097130073*^9}, {
   3.3894041398745213`*^9, 3.389404317794935*^9}, {3.389404363013438*^9, 
   3.389404423005302*^9}, 3.3894044535109043`*^9, {3.38940467330986*^9, 
   3.389404777961268*^9}, {3.389404831343205*^9, 3.389404859413466*^9}, {
   3.389404898501586*^9, 3.389404899371022*^9}, {3.389405024961668*^9, 
   3.389405036404063*^9}, {3.389405076919979*^9, 3.389405125719294*^9}, {
   3.38940519059788*^9, 3.389405202139439*^9}, 3.38940526575896*^9, 
   3.389405320547624*^9, {3.389405362275704*^9, 3.389405368374941*^9}, 
   3.389405688523095*^9, {3.3894058230635433`*^9, 3.389405832746768*^9}, {
   3.419501629423006*^9, 3.4195016384563713`*^9}, {3.419502739976934*^9, 
   3.419502754985217*^9}, {3.480588836754006*^9, 3.4805888383187017`*^9}, {
   3.480588942243659*^9, 3.480588942841219*^9}, {3.480592356337225*^9, 
   3.480592357901823*^9}, {3.480592709410034*^9, 3.480592741565598*^9}, 
   3.480592898128221*^9, {3.480593025372312*^9, 3.480593027091935*^9}, {
   3.485044734354608*^9, 3.485044739904234*^9}, {3.485044780840474*^9, 
   3.485044829132888*^9}, 3.485207959702135*^9, {3.485208048101673*^9, 
   3.4852080575479527`*^9}, {3.4854096326075697`*^9, 3.485409653919175*^9}, {
   3.485409744315536*^9, 3.4854097537131367`*^9}, {3.485491389074404*^9, 
   3.485491389461884*^9}, {3.515895147660994*^9, 3.5158951709186993`*^9}, {
   3.515895349649315*^9, 3.515895349800663*^9}, {3.515895405290303*^9, 
   3.5158954281788683`*^9}, {3.515895862819726*^9, 3.515895914090831*^9}, {
   3.51589596757349*^9, 3.51589596949809*^9}, {3.515897913901973*^9, 
   3.515897913902151*^9}, {3.5158979805394707`*^9, 3.51589800545543*^9}, {
   3.515898307159143*^9, 3.5158983093304567`*^9}, {3.51589856606328*^9, 
   3.5158985884579363`*^9}, {3.515898639542699*^9, 3.515898639724763*^9}, {
   3.515898698557892*^9, 3.515898745337783*^9}, {3.5158987811055098`*^9, 
   3.515898821465901*^9}, {3.515899290006968*^9, 3.515899334506258*^9}, {
   3.515899442734736*^9, 3.515899497530634*^9}, 3.51589984892905*^9, {
   3.517718109508679*^9, 3.517718209220005*^9}, {3.517718368898582*^9, 
   3.517718457861116*^9}, 3.517718516260214*^9, 3.517748684792494*^9, {
   3.548921523848947*^9, 3.548921595817946*^9}, {3.548958129476007*^9, 
   3.5489581767102547`*^9}, {3.548958450116393*^9, 3.548958481880756*^9}, 
   3.548958785291007*^9},ExpressionUUID->"bc4a8611-8884-45e4-8cf6-\
e931ae31a303"],

Cell[TextData[{
 "Show that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "2", ")"}], TraditionalForm]],ExpressionUUID->
  "5ba55490-41fc-408f-8097-7a46200c6adf"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "3", ")"}], TraditionalForm]],ExpressionUUID->
  "1f0437dd-df9b-4ffd-b58b-c23f9dcf7b54"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "4", ")"}], TraditionalForm]],ExpressionUUID->
  "cb683c39-969d-47c7-8ea1-51d8f8ccf20f"],
 " are polynomials in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", 
    RowBox[{
     TemplateBox[{"0"},
      "AiryAiPrime"], "/", 
     TemplateBox[{"0"},
      "AiryAi"]}]}], TraditionalForm]],ExpressionUUID->
  "bfc2f45d-8832-4e15-afea-c5465207955e"],
 ". ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.389403450962063*^9, 3.389403475156763*^9}, {
   3.389403541605813*^9, 3.389403557531878*^9}, {3.389403640971109*^9, 
   3.389403644826618*^9}, {3.389404094484994*^9, 3.389404097130073*^9}, {
   3.3894041398745213`*^9, 3.389404317794935*^9}, {3.389404363013438*^9, 
   3.389404423005302*^9}, 3.3894044535109043`*^9, {3.38940467330986*^9, 
   3.389404777961268*^9}, {3.389404831343205*^9, 3.389404859413466*^9}, {
   3.389404898501586*^9, 3.389404899371022*^9}, {3.389405024961668*^9, 
   3.389405036404063*^9}, {3.389405076919979*^9, 3.389405125719294*^9}, {
   3.38940519059788*^9, 3.389405202139439*^9}, 3.38940526575896*^9, 
   3.389405320547624*^9, {3.389405362275704*^9, 3.389405368374941*^9}, 
   3.389405688523095*^9, {3.3894058230635433`*^9, 3.389405832746768*^9}, {
   3.419501629423006*^9, 3.4195016384563713`*^9}, {3.419502739976934*^9, 
   3.419502754985217*^9}, {3.480588836754006*^9, 3.4805888383187017`*^9}, {
   3.480588942243659*^9, 3.480588942841219*^9}, {3.480592356337225*^9, 
   3.480592357901823*^9}, {3.480592709410034*^9, 3.480592741565598*^9}, 
   3.480592898128221*^9, {3.480593025372312*^9, 3.480593027091935*^9}, {
   3.485044734354608*^9, 3.485044739904234*^9}, {3.485044780840474*^9, 
   3.485044829132888*^9}, 3.485207959702135*^9, {3.485208048101673*^9, 
   3.4852080575479527`*^9}, {3.4854096326075697`*^9, 3.485409653919175*^9}, {
   3.485409744315536*^9, 3.4854097537131367`*^9}, {3.485491389074404*^9, 
   3.485491389461884*^9}, {3.515895147660994*^9, 3.5158951709186993`*^9}, {
   3.515895349649315*^9, 3.515895349800663*^9}, {3.515895405290303*^9, 
   3.5158954281788683`*^9}, {3.515895862819726*^9, 3.515895914090831*^9}, {
   3.51589596757349*^9, 3.51589596949809*^9}, {3.515897913901973*^9, 
   3.515897913902151*^9}, {3.5158979805394707`*^9, 3.51589800545543*^9}, {
   3.515898307159143*^9, 3.5158983093304567`*^9}, {3.51589856606328*^9, 
   3.5158985884579363`*^9}, {3.515898639542699*^9, 3.515898639724763*^9}, {
   3.515898698557892*^9, 3.515898745337783*^9}, {3.5158987811055098`*^9, 
   3.515898821465901*^9}, {3.515899290006968*^9, 3.515899334506258*^9}, {
   3.515899442734736*^9, 3.515899497530634*^9}, 3.51589984892905*^9, {
   3.517718109508679*^9, 3.517718209220005*^9}, {3.517718368898582*^9, 
   3.517718457861116*^9}, 3.517718516260214*^9, 3.517748684792494*^9, {
   3.548921523848947*^9, 3.548921595817946*^9}, {3.548958129476007*^9, 
   3.5489581767102547`*^9}, {3.548958450116393*^9, 3.5489584922970953`*^9}, {
   3.5489586454958467`*^9, 3.548958647416366*^9}, {3.5489587922085953`*^9, 
   3.5489588099148073`*^9}, {3.5489591652359133`*^9, 
   3.548959168954692*^9}},ExpressionUUID->"e214ebd2-fe70-4799-b4da-\
dbd8aee43371"],

Cell[TextData[{
 "Compare ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "2", ")"}], TraditionalForm]],ExpressionUUID->
  "d6ac0733-70a9-42c7-adc5-999a53fdde57"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "3", ")"}], TraditionalForm]],ExpressionUUID->
  "04cfc962-3d82-4e83-a076-d7076c63d54f"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "4", ")"}], TraditionalForm]],ExpressionUUID->
  "0c116a35-f880-4672-9b43-361b332485b6"],
 " with the numerical value of the ",
 StyleBox["truncated",
  FontSlant->"Italic"],
 " sum (",
 
 CounterBox["DisplayFormulaNumbered", "root sum"],
 "), computed using the numerical roots. ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{{3.389403450962063*^9, 3.389403475156763*^9}, {
   3.389403541605813*^9, 3.389403557531878*^9}, {3.389403640971109*^9, 
   3.389403644826618*^9}, {3.389404094484994*^9, 3.389404097130073*^9}, {
   3.3894041398745213`*^9, 3.389404317794935*^9}, {3.389404363013438*^9, 
   3.389404423005302*^9}, 3.3894044535109043`*^9, {3.38940467330986*^9, 
   3.389404777961268*^9}, {3.389404831343205*^9, 3.389404859413466*^9}, {
   3.389404898501586*^9, 3.389404899371022*^9}, {3.389405024961668*^9, 
   3.389405036404063*^9}, {3.389405076919979*^9, 3.389405125719294*^9}, {
   3.38940519059788*^9, 3.389405202139439*^9}, 3.38940526575896*^9, 
   3.389405320547624*^9, {3.389405362275704*^9, 3.389405368374941*^9}, 
   3.389405688523095*^9, {3.3894058230635433`*^9, 3.389405832746768*^9}, {
   3.419501629423006*^9, 3.4195016384563713`*^9}, {3.419502739976934*^9, 
   3.419502754985217*^9}, {3.480588836754006*^9, 3.4805888383187017`*^9}, {
   3.480588942243659*^9, 3.480588942841219*^9}, {3.480592356337225*^9, 
   3.480592357901823*^9}, {3.480592709410034*^9, 3.480592741565598*^9}, 
   3.480592898128221*^9, {3.480593025372312*^9, 3.480593027091935*^9}, {
   3.485044734354608*^9, 3.485044739904234*^9}, {3.485044780840474*^9, 
   3.485044829132888*^9}, 3.485207959702135*^9, {3.485208048101673*^9, 
   3.4852080575479527`*^9}, {3.4854096326075697`*^9, 3.485409653919175*^9}, {
   3.485409744315536*^9, 3.4854097537131367`*^9}, {3.485491389074404*^9, 
   3.485491389461884*^9}, {3.515895147660994*^9, 3.5158951709186993`*^9}, {
   3.515895349649315*^9, 3.515895349800663*^9}, {3.515895405290303*^9, 
   3.5158954281788683`*^9}, {3.515895862819726*^9, 3.515895914090831*^9}, {
   3.51589596757349*^9, 3.51589596949809*^9}, {3.515897913901973*^9, 
   3.515897913902151*^9}, {3.5158979805394707`*^9, 3.51589800545543*^9}, {
   3.515898307159143*^9, 3.5158983093304567`*^9}, {3.51589856606328*^9, 
   3.5158985884579363`*^9}, {3.515898639542699*^9, 3.515898639724763*^9}, {
   3.515898698557892*^9, 3.515898745337783*^9}, {3.5158987811055098`*^9, 
   3.515898821465901*^9}, {3.515899290006968*^9, 3.515899334506258*^9}, {
   3.515899442734736*^9, 3.515899497530634*^9}, 3.51589984892905*^9, {
   3.517718109508679*^9, 3.517718209220005*^9}, {3.517718368898582*^9, 
   3.517718457861116*^9}, 3.517718516260214*^9, 3.517748684792494*^9, {
   3.548921523848947*^9, 3.548921595817946*^9}, {3.548958129476007*^9, 
   3.5489581767102547`*^9}, {3.548958450116393*^9, 3.5489584922970953`*^9}, {
   3.5489586454958467`*^9, 3.548958647416366*^9}, {3.5489587922085953`*^9, 
   3.5489588820364523`*^9}, {3.548958939838296*^9, 3.548958953376852*^9}, {
   3.5489592308567743`*^9, 
   3.5489592320525503`*^9}},ExpressionUUID->"0abf07d8-de51-43a7-aeb5-\
1453c775a4bb"],

Cell[CellGroupData[{

Cell["Solution", "Solution",
 CellChangeTimes->{{3.450492134067934*^9, 3.4504921365634604`*^9}, 
   3.512197033318738*^9},ExpressionUUID->"dca356bf-a6ce-42d2-9c8a-\
0b639798e61a"],

Cell[TextData[{
 "Plot ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"z"},
    "AiryAi"], TraditionalForm]],ExpressionUUID->
  "a523adf2-3825-4892-a7be-3ac823eb3fc9"],
 " over ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "15"}], "\[LessEqual]", "z", "\[LessEqual]", "5"}], 
   TraditionalForm]],ExpressionUUID->"caebdac5-c4f7-4d69-8765-b7bfeabe504a"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.51771666384663*^9, 3.517716677211877*^9}, {
  3.548920776285227*^9, 3.548920776285386*^9}, {3.548921397063386*^9, 
  3.548921400284568*^9}},ExpressionUUID->"3a363e8f-0cd7-4fa5-9831-\
bbe8c45da659"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Plot", "[", 
   RowBox[{
    FormBox[
     TemplateBox[{"z"},
      "AiryAi"],
     TraditionalForm], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"-", "15"}], ",", "5"}], "}"}]}], "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.5166033974272947`*^9, 3.516603415294416*^9}, {
  3.516603921495925*^9, 3.51660392224934*^9}, {3.517716574259454*^9, 
  3.517716632755313*^9}, {3.5489207524971113`*^9, 3.548920767548139*^9}, {
  3.548921393542184*^9, 
  3.5489213935562477`*^9}},ExpressionUUID->"f3b39ece-0b53-479d-95c0-\
ae920ae83942"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUmHk4FF4Xxy3JLvu+j2UMI1RK4pZK/VolSkSRhCihsitb9oRSimxJKmSX
dI99Z3ZLEiVJsqUdvfP+Nc95zrnnnPs995n5nFFzuWh9louDg+M/Hg6O/3+G
fjq4+O8fGYTrQzYc6aOiyWDp72+WySBX2NzvNkVFh0Tf/az5TYavSZqOk/+o
qKbg8Z+0H2Qg/0t71SNJQ6omPisXv5Hho2X5ehltGort3cJxYJ4MJ9IUTzQb
09CCMyc38SsZlmdztvXvpCH7H508a6bJsEfKE5kcoqGm+FS+sUkyFKgpEjmO
0ZCuioPgqw9kOK/4QZngQEPpFQSRu2NkmPP0e57rSEPLe2ZE/d+S4bPO8utg
tn12pFLCapgMecGCOS/saajPJ1Rab4AMRkzX1Z22NGTMYynHxyDDZrvOqQ0H
aejhPRHFCQoZnPeW90VY0BCf/oAy9JJh9vlKuNEmGrrU9FDtQRcZqFuS9HZr
0tDwMXeNgHYyaAYOnGkQpyGLLwbaNi1kqIo6L5m9QkVPw3/rGDSy76d2LmH6
IxVJSjbpCb0mg336O7/CbioKKYpfP/WSDMqaZixmCVtPqsKmnEoymFu++JXj
zdbz7MTmkBdkeEmuvW35HxWp/nm21a6EDI3a465+6lS0oG6+XbSIrdf3KwZB
vRRkX7N250wBGe4lOTBOP6Sgpv39uztyyXArfd/PTxcoKN3/9P5r98lgGLvw
cmktBa3w6Rw6eZcMF3YH2ks87EduWQtWW26TYV9tYVi9bj/a3BZxbD6ZDFiu
sqNrcx8alnnkfDqCDLsa/XZ/VOxBO595u24LJ0N7fWPCckI3erbd+JxsCBki
T58QI/3sQqEe7V6Uy+z7qF5PVW7qRKr1n69u92DXU3Eif9ZrR3GHy4MU3ciw
tVDbihTehhY/BIX+ciHDROJX0W19rahZSCiy7CQZRlGYw+YzLcjNST9Z1YoM
Xyjb1nmfb0RPOf0KODaTYeNBs5xfctVoy9Hitfc2kOFs6PyY1qFK1FYw7m5o
QIbDo7y/foeVo7E9VmQXHTIENu8Iii59jqSTydXNCuz4dlZrRF0WipCfao/h
IAMXZyQ8IGdjUS8VksqKHjj2Lp9MpuThrIZjiTW/9UDKt0liy41CXHu61Wpq
UQ+sr+4xfzP1HH8tzBv676MevM4xndlrXI3tNjh+EerSg3H/I9yty414Mir9
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
CP4HSQbW2Q==
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{{-15, 5}, {-0.41901171939995707`, 0.5356559632108137}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.516603405827599*^9, 3.516603415770855*^9}, 
   3.516603922674726*^9, {3.517716597957396*^9, 3.5177166331453657`*^9}, 
   3.517716680071271*^9, {3.548920764472633*^9, 3.548920768266131*^9}, 
   3.5489216353568783`*^9},ExpressionUUID->"8d324231-f9c8-482e-a1b3-\
5eceb8a999b9"]
}, Closed]],

Cell[TextData[{
 "All the roots are negative and are getting closer together as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", "\[Infinity]"}]}], TraditionalForm]],ExpressionUUID->
  "6c7f8d2c-91da-4e41-b8ff-c85ca4da6972"],
 "."
}], "Text",
 CellChangeTimes->{{3.548921662592753*^9, 3.548921668008937*^9}, {
  3.548956890097481*^9, 
  3.548956937829226*^9}},ExpressionUUID->"0c21dd3c-bcdb-4282-8d43-\
a468ffae81f9"],

Cell[TextData[{
 "Compute numerical values of the first 1000 roots of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"z"},
    "AiryAi"], TraditionalForm]],ExpressionUUID->
  "e22ce2e6-3c24-4396-ac86-ecfa407f803b"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.51771666384663*^9, 3.517716677211877*^9}, {
  3.548920776285227*^9, 3.548920776285386*^9}, {3.548921397063386*^9, 
  3.548921400284568*^9}, {3.548956974322589*^9, 
  3.5489569797377653`*^9}},ExpressionUUID->"28b8f5c0-d37f-40cf-8f76-\
55282e493900"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"zeros", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"AiryAiZero", "[", "n", "]"}], "//", "N"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1000"}], "}"}]}], "]"}]}], TraditionalForm]], "Input",\

 CellChangeTimes->{{3.548920799173275*^9, 3.548920820746694*^9}, {
  3.548921070933502*^9, 3.548921074046357*^9}, {3.548921148080593*^9, 
  3.548921158791339*^9}, {3.548921446263461*^9, 3.54892144716652*^9}, {
  3.548956953538087*^9, 
  3.548956961660907*^9}},ExpressionUUID->"3ad36b87-21ae-4a90-b33e-\
1a9ed09dec18"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "2.338107410459767`"}], ",", 
    RowBox[{"-", "4.087949444130971`"}], ",", 
    RowBox[{"-", "5.520559828095551`"}], ",", 
    RowBox[{"-", "6.78670809007176`"}], ",", 
    RowBox[{"-", "7.944133587120854`"}], ",", 
    RowBox[{"-", "9.02265085334098`"}], ",", 
    RowBox[{"-", "10.040174341558087`"}], ",", 
    RowBox[{"-", "11.008524303733264`"}], ",", 
    RowBox[{"-", "11.936015563236262`"}], ",", 
    RowBox[{"-", "12.828776752865757`"}], ",", 
    RowBox[{"-", "13.691489035210719`"}], ",", 
    RowBox[{"-", "14.527829951775336`"}], ",", 
    RowBox[{"-", "15.340755135977998`"}], ",", 
    RowBox[{"-", "16.132685156945772`"}], ",", 
    RowBox[{"-", "16.90563399742994`"}], ",", 
    RowBox[{"-", "17.66130010569706`"}], ",", 
    RowBox[{"-", "18.401132599207113`"}], ",", 
    RowBox[{"-", "19.126380474246954`"}], ",", 
    RowBox[{"-", "19.8381298917215`"}], ",", 
    RowBox[{"-", "20.537332907677566`"}], ",", 
    RowBox[{"-", "21.2248299436421`"}], ",", 
    RowBox[{"-", "21.901367595585132`"}], ",", 
    RowBox[{"-", "22.567612917496504`"}], ",", 
    RowBox[{"-", "23.224165001121683`"}], ",", 
    RowBox[{"-", "23.871564455535918`"}], ",", 
    RowBox[{"-", "24.51030123658968`"}], ",", 
    RowBox[{"-", "25.140821166148964`"}], ",", 
    RowBox[{"-", "25.763531400982757`"}], ",", 
    RowBox[{"-", "26.378805052137235`"}], ",", 
    RowBox[{"-", "26.986985111606366`"}], ",", 
    RowBox[{"-", "27.588387809882445`"}], ",", 
    RowBox[{"-", "28.183305502632646`"}], ",", 
    RowBox[{"-", "28.772009165237435`"}], ",", 
    RowBox[{"-", "29.354750558766288`"}], ",", 
    RowBox[{"-", "29.931764119086555`"}], ",", 
    RowBox[{"-", "30.503268611418505`"}], ",", 
    RowBox[{"-", "31.06946858518376`"}], ",", 
    RowBox[{"-", "31.63055565801266`"}], ",", 
    RowBox[{"-", "32.186709652952054`"}], ",", 
    RowBox[{"-", "32.73809960900027`"}], ",", 
    RowBox[{"-", "33.2848846819014`"}], ",", 
    RowBox[{"-", "33.82721494950866`"}], ",", 
    RowBox[{"-", "34.36523213386366`"}], ",", 
    RowBox[{"-", "34.89907025034531`"}], ",", 
    RowBox[{"-", "35.42885619274789`"}], ",", 
    RowBox[{"-", "35.95471026189863`"}], ",", 
    RowBox[{"-", "36.47674664437481`"}], ",", 
    RowBox[{"-", "36.9950738469945`"}], ",", 
    RowBox[{"-", "37.509795092005014`"}], ",", 
    RowBox[{"-", "38.02100867725525`"}], ",", 
    RowBox[{"-", "38.52880830509425`"}], ",", 
    RowBox[{"-", "39.03328338327251`"}], ",", 
    RowBox[{"-", "39.53451930072302`"}], ",", 
    RowBox[{"-", "40.03259768075417`"}], ",", 
    RowBox[{"-", "40.52759661388971`"}], ",", 
    RowBox[{"-", "41.01959087233249`"}], ",", 
    RowBox[{"-", "41.508652107805254`"}], ",", 
    RowBox[{"-", "41.99484903432643`"}], ",", 
    RowBox[{"-", "42.478247597308396`"}], ",", 
    RowBox[{"-", "42.958911130216556`"}], ",", 
    RowBox[{"-", "43.43690049989686`"}], ",", 
    RowBox[{"-", "43.91227424156371`"}], ",", 
    RowBox[{"-", "44.385088684339394`"}], ",", 
    RowBox[{"-", "44.85539806814583`"}], ",", 
    RowBox[{"-", "45.323254652670435`"}], ",", 
    RowBox[{"-", "45.7887088190573`"}], ",", 
    RowBox[{"-", "46.25180916491255`"}], ",", 
    RowBox[{"-", "46.71260259315652`"}], ",", 
    RowBox[{"-", "47.171134395206316`"}], ",", 
    RowBox[{"-", "47.62744832892739`"}], ",", 
    RowBox[{"-", "48.08158669175325`"}], ",", 
    RowBox[{"-", "48.5335903893368`"}], ",", 
    RowBox[{"-", "48.98349900006458`"}], ",", 
    RowBox[{"-", "49.43135083573678`"}], ",", 
    RowBox[{"-", "49.87718299868941`"}], ",", 
    RowBox[{"-", "50.32103143561221`"}], ",", 
    RowBox[{"-", "50.762930988294286`"}], ",", 
    RowBox[{"-", "51.20291544151057`"}], ",", 
    RowBox[{"-", "51.6410175682449`"}], ",", 
    RowBox[{"-", "52.07726917242965`"}], ",", 
    RowBox[{"-", "52.51170112936766`"}], ",", 
    RowBox[{"-", "52.94434342398932`"}], ",", 
    RowBox[{"-", "53.375225187085675`"}], ",", 
    RowBox[{"-", "53.804374729647854`"}], ",", 
    RowBox[{"-", "54.23181957543308`"}], ",", 
    RowBox[{"-", "54.65758649186871`"}], ",", 
    RowBox[{"-", "55.08170151939748`"}], ",", 
    RowBox[{"-", "55.50418999935962`"}], ",", 
    RowBox[{"-", "55.925076600500546`"}], ",", 
    RowBox[{"-", "56.3443853441867`"}], ",", 
    RowBox[{"-", "56.76213962840595`"}], ",", 
    RowBox[{"-", "57.178362250624176`"}], ",", 
    RowBox[{"-", "57.59307542956407`"}], ",", 
    RowBox[{"-", "58.0063008259683`"}], ",", 
    RowBox[{"-", "58.4180595624045`"}], ",", 
    RowBox[{"-", "58.82837224216613`"}], ",", 
    RowBox[{"-", "59.23725896731927`"}], ",", 
    RowBox[{"-", "59.64473935594259`"}], ",", 
    RowBox[{"-", "60.0508325586042`"}], ",", 
    RowBox[{"-", "60.45555727411669`"}], ",", 
    RowBox[{"-", "60.85893176460891`"}], ",", 
    RowBox[{"-", "61.260973869950426`"}], ",", 
    RowBox[{"-", "61.66170102156267`"}], ",", 
    RowBox[{"-", "62.06113025564863`"}], ",", 
    RowBox[{"-", "62.45927822587073`"}], ",", 
    RowBox[{"-", "62.85616121550507`"}], ",", 
    RowBox[{"-", "63.25179514909844`"}], ",", 
    RowBox[{"-", "63.646195603652814`"}], ",", 
    RowBox[{"-", "64.03937781936067`"}], ",", 
    RowBox[{"-", "64.43135670991325`"}], ",", 
    RowBox[{"-", "64.82214687240244`"}], ",", 
    RowBox[{"-", "65.21176259683564`"}], ",", 
    RowBox[{"-", "65.60021787528235`"}], ",", 
    RowBox[{"-", "65.98752641066972`"}], ",", 
    RowBox[{"-", "66.37370162524331`"}], ",", 
    RowBox[{"-", "66.75875666870917`"}], ",", 
    RowBox[{"-", "67.14270442607113`"}], ",", 
    RowBox[{"-", "67.52555752517787`"}], ",", 
    RowBox[{"-", "67.90732834399255`"}], ",", 
    RowBox[{"-", "68.28802901759747`"}], ",", 
    RowBox[{"-", "68.6676714449457`"}], ",", 
    RowBox[{"-", "69.04626729537064`"}], ",", 
    RowBox[{"-", "69.42382801486431`"}], ",", 
    RowBox[{"-", "69.80036483213419`"}], ",", 
    RowBox[{"-", "70.17588876444829`"}], ",", 
    RowBox[{"-", "70.55041062327749`"}], ",", 
    RowBox[{"-", "70.92394101974361`"}], ",", 
    RowBox[{"-", "71.29649036988155`"}], ",", 
    RowBox[{"-", "71.66806889972307`"}], ",", 
    RowBox[{"-", "72.03868665020981`"}], ",", 
    RowBox[{"-", "72.40835348194224`"}], ",", 
    RowBox[{"-", "72.77707907977165`"}], ",", 
    RowBox[{"-", "73.14487295724108`"}], ",", 
    RowBox[{"-", "73.51174446088162`"}], ",", 
    RowBox[{"-", "73.87770277436957`"}], ",", 
    RowBox[{"-", "74.24275692255014`"}], ",", 
    RowBox[{"-", "74.60691577533287`"}], ",", 
    RowBox[{"-", "74.97018805146368`"}], ",", 
    RowBox[{"-", "75.33258232217852`"}], ",", 
    RowBox[{"-", "75.69410701474294`"}], ",", 
    RowBox[{"-", "76.05477041588205`"}], ",", 
    RowBox[{"-", "76.4145806751051`"}], ",", 
    RowBox[{"-", "76.77354580792836`"}], ",", 
    RowBox[{"-", "77.13167369900049`"}], ",", 
    RowBox[{"-", "77.48897210513366`"}], ",", 
    RowBox[{"-", "77.84544865824402`"}], ",", 
    RowBox[{"-", "78.20111086820502`"}], ",", 
    RowBox[{"-", "78.55596612561625`"}], ",", 
    RowBox[{"-", "78.91002170449154`"}], ",", 
    RowBox[{"-", "79.26328476486857`"}], ",", 
    RowBox[{"-", "79.6157623553431`"}], ",", 
    RowBox[{"-", "79.96746141553054`"}], ",", 
    RowBox[{"-", "80.31838877845712`"}], ",", 
    RowBox[{"-", "80.66855117288353`"}], ",", 
    RowBox[{"-", "81.01795522556289`"}], ",", 
    RowBox[{"-", "81.36660746343576`"}], ",", 
    RowBox[{"-", "81.71451431576403`"}], ",", 
    RowBox[{"-", "82.06168211620594`"}], ",", 
    RowBox[{"-", "82.40811710483409`"}], ",", 
    RowBox[{"-", "82.75382543009849`"}], ",", 
    RowBox[{"-", "83.09881315073642`"}], ",", 
    RowBox[{"-", "83.44308623763078`"}], ",", 
    RowBox[{"-", "83.78665057561876`"}], ",", 
    RowBox[{"-", "84.1295119652524`"}], ",", 
    RowBox[{"-", "84.47167612451265`"}], ",", 
    RowBox[{"-", "84.81314869047829`"}], ",", 
    RowBox[{"-", "85.1539352209513`"}], ",", 
    RowBox[{"-", "85.49404119604002`"}], ",", 
    RowBox[{"-", "85.83347201970162`"}], ",", 
    RowBox[{"-", "86.17223302124475`"}], ",", 
    RowBox[{"-", "86.51032945679387`"}], ",", 
    RowBox[{"-", "86.84776651071685`"}], ",", 
    RowBox[{"-", "87.18454929701602`"}], ",", 
    RowBox[{"-", "87.52068286068473`"}], ",", 
    RowBox[{"-", "87.8561721790301`"}], ",", 
    RowBox[{"-", "88.19102216296274`"}], ",", 
    RowBox[{"-", "88.52523765825502`"}], ",", 
    RowBox[{"-", "88.8588234467683`"}], ",", 
    RowBox[{"-", "89.19178424765039`"}], ",", 
    RowBox[{"-", "89.52412471850391`"}], ",", 
    RowBox[{"-", "89.85584945652658`"}], ",", 
    RowBox[{"-", "90.18696299962417`"}], ",", 
    RowBox[{"-", "90.51746982749694`"}], ",", 
    RowBox[{"-", "90.84737436270039`"}], ",", 
    RowBox[{"-", "91.17668097168094`"}], ",", 
    RowBox[{"-", "91.50539396578732`"}], ",", 
    RowBox[{"-", "91.83351760225852`"}], ",", 
    RowBox[{"-", "92.16105608518875`"}], ",", 
    RowBox[{"-", "92.48801356647012`"}], ",", 
    RowBox[{"-", "92.81439414671368`"}], ",", 
    RowBox[{"-", "93.14020187614962`"}], ",", 
    RowBox[{"-", "93.46544075550678`"}], ",", 
    RowBox[{"-", "93.79011473687257`"}], ",", 
    RowBox[{"-", "94.11422772453327`"}], ",", 
    RowBox[{"-", "94.43778357579583`"}], ",", 
    RowBox[{"-", "94.76078610179134`"}], ",", 
    RowBox[{"-", "95.08323906826053`"}], ",", 
    RowBox[{"-", "95.40514619632215`"}], ",", 
    RowBox[{"-", "95.72651116322469`"}], ",", 
    RowBox[{"-", "96.04733760308126`"}], ",", 
    RowBox[{"-", "96.36762910758907`"}], ",", 
    RowBox[{"-", "96.68738922673303`"}], ",", 
    RowBox[{"-", "97.00662146947433`"}], ",", 
    RowBox[{"-", "97.32532930442441`"}], ",", 
    RowBox[{"-", "97.64351616050456`"}], ",", 
    RowBox[{"-", "97.96118542759145`"}], ",", 
    RowBox[{"-", "98.27834045714931`"}], ",", 
    RowBox[{"-", "98.59498456284874`"}], ",", 
    RowBox[{"-", "98.91112102117243`"}], ",", 
    RowBox[{"-", "99.22675307200879`"}], ",", 
    RowBox[{"-", "99.54188391923289`"}], ",", 
    RowBox[{"-", "99.85651673127556`"}], ",", 
    RowBox[{"-", "100.17065464168111`"}], ",", 
    RowBox[{"-", "100.48430074965333`"}], ",", 
    RowBox[{"-", "100.79745812059066`"}], ",", 
    RowBox[{"-", "101.11012978661056`"}], ",", 
    RowBox[{"-", "101.42231874706323`"}], ",", 
    RowBox[{"-", "101.7340279690352`"}], ",", 
    RowBox[{"-", "102.04526038784279`"}], ",", 
    RowBox[{"-", "102.35601890751599`"}], ",", 
    RowBox[{"-", "102.66630640127252`"}], ",", 
    RowBox[{"-", "102.97612571198283`"}], ",", 
    RowBox[{"-", "103.28547965262597`"}], ",", 
    RowBox[{"-", "103.5943710067365`"}], ",", 
    RowBox[{"-", "103.90280252884287`"}], ",", 
    RowBox[{"-", "104.21077694489726`"}], ",", 
    RowBox[{"-", "104.51829695269724`"}], ",", 
    RowBox[{"-", "104.82536522229944`"}], ",", 
    RowBox[{"-", "105.13198439642503`"}], ",", 
    RowBox[{"-", "105.43815709085807`"}], ",", 
    RowBox[{"-", "105.74388589483581`"}], ",", 
    RowBox[{"-", "106.049173371432`"}], ",", 
    RowBox[{"-", "106.35402205793304`"}], ",", 
    RowBox[{"-", "106.65843446620674`"}], ",", 
    RowBox[{"-", "106.96241308306486`"}], ",", 
    RowBox[{"-", "107.26596037061846`"}], ",", 
    RowBox[{"-", "107.56907876662696`"}], ",", 
    RowBox[{"-", "107.87177068484077`"}], ",", 
    RowBox[{"-", "108.17403851533764`"}], ",", 
    RowBox[{"-", "108.47588462485294`"}], ",", 
    RowBox[{"-", "108.77731135710403`"}], ",", 
    RowBox[{"-", "109.07832103310867`"}], ",", 
    RowBox[{"-", "109.37891595149785`"}], ",", 
    RowBox[{"-", "109.67909838882294`"}], ",", 
    RowBox[{"-", "109.97887059985746`"}], ",", 
    RowBox[{"-", "110.27823481789352`"}], ",", 
    RowBox[{"-", "110.57719325503291`"}], ",", 
    RowBox[{"-", "110.87574810247314`"}], ",", 
    RowBox[{"-", "111.17390153078875`"}], ",", 
    RowBox[{"-", "111.47165569020713`"}], ",", 
    RowBox[{"-", "111.76901271088018`"}], ",", 
    RowBox[{"-", "112.06597470315089`"}], ",", 
    RowBox[{"-", "112.3625437578155`"}], ",", 
    RowBox[{"-", "112.65872194638104`"}], ",", 
    RowBox[{"-", "112.95451132131866`"}], ",", 
    RowBox[{"-", "113.24991391631245`"}], ",", 
    RowBox[{"-", "113.54493174650423`"}], ",", 
    RowBox[{"-", "113.83956680873406`"}], ",", 
    RowBox[{"-", "114.1338210817768`"}], ",", 
    RowBox[{"-", "114.4276965265747`"}], ",", 
    RowBox[{"-", "114.72119508646608`"}], ",", 
    RowBox[{"-", "115.01431868741024`"}], ",", 
    RowBox[{"-", "115.30706923820858`"}], ",", 
    RowBox[{"-", "115.59944863072226`"}], ",", 
    RowBox[{"-", "115.89145874008605`"}], ",", 
    RowBox[{"-", "116.18310142491885`"}], ",", 
    RowBox[{"-", "116.47437852753063`"}], ",", 
    RowBox[{"-", "116.76529187412632`"}], ",", 
    RowBox[{"-", "117.05584327500587`"}], ",", 
    RowBox[{"-", "117.34603452476172`"}], ",", 
    RowBox[{"-", "117.63586740247246`"}], ",", 
    RowBox[{"-", "117.92534367189407`"}], ",", 
    RowBox[{"-", "118.21446508164742`"}], ",", 
    RowBox[{"-", "118.50323336540333`"}], ",", 
    RowBox[{"-", "118.79165024206449`"}], ",", 
    RowBox[{"-", "119.07971741594437`"}], ",", 
    RowBox[{"-", "119.36743657694369`"}], ",", 
    RowBox[{"-", "119.6548094007237`"}], ",", 
    RowBox[{"-", "119.94183754887717`"}], ",", 
    RowBox[{"-", "120.22852266909636`"}], ",", 
    RowBox[{"-", "120.51486639533863`"}], ",", 
    RowBox[{"-", "120.80087034798942`"}], ",", 
    RowBox[{"-", "121.08653613402267`"}], ",", 
    RowBox[{"-", "121.37186534715893`"}], ",", 
    RowBox[{"-", "121.65685956802089`"}], ",", 
    RowBox[{"-", "121.94152036428656`"}], ",", 
    RowBox[{"-", "122.22584929084037`"}], ",", 
    RowBox[{"-", "122.5098478899216`"}], ",", 
    RowBox[{"-", "122.79351769127095`"}], ",", 
    RowBox[{"-", "123.0768602122746`"}], ",", 
    RowBox[{"-", "123.35987695810633`"}], ",", 
    RowBox[{"-", "123.64256942186746`"}], ",", 
    RowBox[{"-", "123.92493908472468`"}], ",", 
    RowBox[{"-", "124.20698741604585`"}], ",", 
    RowBox[{"-", "124.48871587353385`"}], ",", 
    RowBox[{"-", "124.77012590335842`"}], ",", 
    RowBox[{"-", "125.05121894028599`"}], ",", 
    RowBox[{"-", "125.33199640780785`"}], ",", 
    RowBox[{"-", "125.61245971826621`"}], ",", 
    RowBox[{"-", "125.8926102729785`"}], ",", 
    RowBox[{"-", "126.17244946235999`"}], ",", 
    RowBox[{"-", "126.45197866604454`"}], ",", 
    RowBox[{"-", "126.73119925300351`"}], ",", 
    RowBox[{"-", "127.01011258166326`"}], ",", 
    RowBox[{"-", "127.28872000002076`"}], ",", 
    RowBox[{"-", "127.5670228457575`"}], ",", 
    RowBox[{"-", "127.84502244635205`"}], ",", 
    RowBox[{"-", "128.12272011919075`"}], ",", 
    RowBox[{"-", "128.400117171677`"}], ",", 
    RowBox[{"-", "128.677214901339`"}], ",", 
    RowBox[{"-", "128.95401459593597`"}], ",", 
    RowBox[{"-", "129.23051753356285`"}], ",", 
    RowBox[{"-", "129.50672498275352`"}], ",", 
    RowBox[{"-", "129.78263820258286`"}], ",", 
    RowBox[{"-", "130.0582584427669`"}], ",", 
    RowBox[{"-", "130.3335869437622`"}], ",", 
    RowBox[{"-", "130.60862493686327`"}], ",", 
    RowBox[{"-", "130.883373644299`"}], ",", 
    RowBox[{"-", "131.15783427932797`"}], ",", 
    RowBox[{"-", "131.4320080463318`"}], ",", 
    RowBox[{"-", "131.7058961409079`"}], ",", 
    RowBox[{"-", "131.97949974996075`"}], ",", 
    RowBox[{"-", "132.2528200517917`"}], ",", 
    RowBox[{"-", "132.52585821618797`"}], ",", 
    RowBox[{"-", "132.79861540451014`"}], ",", 
    RowBox[{"-", "133.07109276977866`"}], ",", 
    RowBox[{"-", "133.34329145675923`"}], ",", 
    RowBox[{"-", "133.61521260204677`"}], ",", 
    RowBox[{"-", "133.88685733414866`"}], ",", 
    RowBox[{"-", "134.15822677356653`"}], ",", 
    RowBox[{"-", "134.4293220328774`"}], ",", 
    RowBox[{"-", "134.70014421681321`"}], ",", 
    RowBox[{"-", "134.97069442233982`"}], ",", 
    RowBox[{"-", "135.2409737387347`"}], ",", 
    RowBox[{"-", "135.51098324766366`"}], ",", 
    RowBox[{"-", "135.78072402325662`"}], ",", 
    RowBox[{"-", "136.05019713218235`"}], ",", 
    RowBox[{"-", "136.31940363372243`"}], ",", 
    RowBox[{"-", "136.58834457984392`"}], ",", 
    RowBox[{"-", "136.85702101527147`"}], ",", 
    RowBox[{"-", "137.1254339775583`"}], ",", 
    RowBox[{"-", "137.39358449715616`"}], ",", 
    RowBox[{"-", "137.6614735974848`"}], ",", 
    RowBox[{"-", "137.9291022950002`"}], ",", 
    RowBox[{"-", "138.1964715992621`"}], ",", 
    RowBox[{"-", "138.46358251300063`"}], ",", 
    RowBox[{"-", "138.73043603218204`"}], ",", 
    RowBox[{"-", "138.9970331460739`"}], ",", 
    RowBox[{"-", "139.26337483730907`"}], ",", 
    RowBox[{"-", "139.5294620819492`"}], ",", 
    RowBox[{"-", "139.79529584954727`"}], ",", 
    RowBox[{"-", "140.06087710320952`"}], ",", 
    RowBox[{"-", "140.3262067996563`"}], ",", 
    RowBox[{"-", "140.5912858892826`"}], ",", 
    RowBox[{"-", "140.85611531621757`"}], ",", 
    RowBox[{"-", "141.1206960183833`"}], ",", 
    RowBox[{"-", "141.38502892755298`"}], ",", 
    RowBox[{"-", "141.64911496940843`"}], ",", 
    RowBox[{"-", "141.9129550635966`"}], ",", 
    RowBox[{"-", "142.17655012378592`"}], ",", 
    RowBox[{"-", "142.43990105772136`"}], ",", 
    RowBox[{"-", "142.7030087672794`"}], ",", 
    RowBox[{"-", "142.9658741485219`"}], ",", 
    RowBox[{"-", "143.2284980917496`"}], ",", 
    RowBox[{"-", "143.49088148155485`"}], ",", 
    RowBox[{"-", "143.7530251968738`"}], ",", 
    RowBox[{"-", "144.01493011103787`"}], ",", 
    RowBox[{"-", "144.27659709182464`"}], ",", 
    RowBox[{"-", "144.53802700150828`"}], ",", 
    RowBox[{"-", "144.79922069690923`"}], ",", 
    RowBox[{"-", "145.0601790294433`"}], ",", 
    RowBox[{"-", "145.3209028451702`"}], ",", 
    RowBox[{"-", "145.58139298484176`"}], ",", 
    RowBox[{"-", "145.84165028394906`"}], ",", 
    RowBox[{"-", "146.1016755727696`"}], ",", 
    RowBox[{"-", "146.3614696764136`"}], ",", 
    RowBox[{"-", "146.62103341486966`"}], ",", 
    RowBox[{"-", "146.88036760305016`"}], ",", 
    RowBox[{"-", "147.1394730508361`"}], ",", 
    RowBox[{"-", "147.39835056312128`"}], ",", 
    RowBox[{"-", "147.65700093985603`"}], ",", 
    RowBox[{"-", "147.9154249760906`"}], ",", 
    RowBox[{"-", "148.17362346201776`"}], ",", 
    RowBox[{"-", "148.43159718301524`"}], ",", 
    RowBox[{"-", "148.68934691968738`"}], ",", 
    RowBox[{"-", "148.9468734479066`"}], ",", 
    RowBox[{"-", "149.2041775388542`"}], ",", 
    RowBox[{"-", "149.46125995906087`"}], ",", 
    RowBox[{"-", "149.71812147044645`"}], ",", 
    RowBox[{"-", "149.97476283035965`"}], ",", 
    RowBox[{"-", "150.2311847916171`"}], ",", 
    RowBox[{"-", "150.4873881025419`"}], ",", 
    RowBox[{"-", "150.74337350700188`"}], ",", 
    RowBox[{"-", "150.9991417444474`"}], ",", 
    RowBox[{"-", "151.2546935499488`"}], ",", 
    RowBox[{"-", "151.5100296542332`"}], ",", 
    RowBox[{"-", "151.7651507837213`"}], ",", 
    RowBox[{"-", "152.0200576605633`"}], ",", 
    RowBox[{"-", "152.27475100267492`"}], ",", 
    RowBox[{"-", "152.52923152377252`"}], ",", 
    RowBox[{"-", "152.78349993340834`"}], ",", 
    RowBox[{"-", "153.03755693700498`"}], ",", 
    RowBox[{"-", "153.29140323588973`"}], ",", 
    RowBox[{"-", "153.5450395273283`"}], ",", 
    RowBox[{"-", "153.79846650455858`"}], ",", 
    RowBox[{"-", "154.0516848568236`"}], ",", 
    RowBox[{"-", "154.30469526940445`"}], ",", 
    RowBox[{"-", "154.55749842365262`"}], ",", 
    RowBox[{"-", "154.81009499702216`"}], ",", 
    RowBox[{"-", "155.06248566310163`"}], ",", 
    RowBox[{"-", "155.31467109164518`"}], ",", 
    RowBox[{"-", "155.56665194860395`"}], ",", 
    RowBox[{"-", "155.81842889615675`"}], ",", 
    RowBox[{"-", "156.07000259274042`"}], ",", 
    RowBox[{"-", "156.32137369308018`"}], ",", 
    RowBox[{"-", "156.57254284821917`"}], ",", 
    RowBox[{"-", "156.82351070554822`"}], ",", 
    RowBox[{"-", "157.07427790883486`"}], ",", 
    RowBox[{"-", "157.3248450982524`"}], ",", 
    RowBox[{"-", "157.5752129104083`"}], ",", 
    RowBox[{"-", "157.82538197837275`"}], ",", 
    RowBox[{"-", "158.07535293170636`"}], ",", 
    RowBox[{"-", "158.3251263964882`"}], ",", 
    RowBox[{"-", "158.57470299534307`"}], ",", 
    RowBox[{"-", "158.8240833474687`"}], ",", 
    RowBox[{"-", "159.07326806866257`"}], ",", 
    RowBox[{"-", "159.32225777134866`"}], ",", 
    RowBox[{"-", "159.5710530646037`"}], ",", 
    RowBox[{"-", "159.8196545541832`"}], ",", 
    RowBox[{"-", "160.06806284254733`"}], ",", 
    RowBox[{"-", "160.31627852888658`"}], ",", 
    RowBox[{"-", "160.56430220914675`"}], ",", 
    RowBox[{"-", "160.81213447605427`"}], ",", 
    RowBox[{"-", "161.05977591914086`"}], ",", 
    RowBox[{"-", "161.30722712476813`"}], ",", 
    RowBox[{"-", "161.5544886761518`"}], ",", 
    RowBox[{"-", "161.80156115338588`"}], ",", 
    RowBox[{"-", "162.04844513346632`"}], ",", 
    RowBox[{"-", "162.29514119031472`"}], ",", 
    RowBox[{"-", "162.54164989480162`"}], ",", 
    RowBox[{"-", "162.78797181476972`"}], ",", 
    RowBox[{"-", "163.03410751505658`"}], ",", 
    RowBox[{"-", "163.28005755751744`"}], ",", 
    RowBox[{"-", "163.52582250104766`"}], ",", 
    RowBox[{"-", "163.77140290160483`"}], ",", 
    RowBox[{"-", "164.01679931223092`"}], ",", 
    RowBox[{"-", "164.26201228307394`"}], ",", 
    RowBox[{"-", "164.5070423614097`"}], ",", 
    RowBox[{"-", "164.75189009166297`"}], ",", 
    RowBox[{"-", "164.99655601542887`"}], ",", 
    RowBox[{"-", "165.24104067149358`"}], ",", 
    RowBox[{"-", "165.4853445958554`"}], ",", 
    RowBox[{"-", "165.72946832174506`"}], ",", 
    RowBox[{"-", "165.97341237964628`"}], ",", 
    RowBox[{"-", "166.21717729731577`"}], ",", 
    RowBox[{"-", "166.46076359980327`"}], ",", 
    RowBox[{"-", "166.70417180947155`"}], ",", 
    RowBox[{"-", "166.94740244601556`"}], ",", 
    RowBox[{"-", "167.19045602648234`"}], ",", 
    RowBox[{"-", "167.43333306528996`"}], ",", 
    RowBox[{"-", "167.6760340742466`"}], ",", 
    RowBox[{"-", "167.91855956256956`"}], ",", 
    RowBox[{"-", "168.16091003690374`"}], ",", 
    RowBox[{"-", "168.40308600134045`"}], ",", 
    RowBox[{"-", "168.64508795743544`"}], ",", 
    RowBox[{"-", "168.8869164042274`"}], ",", 
    RowBox[{"-", "169.12857183825568`"}], ",", 
    RowBox[{"-", "169.37005475357827`"}], ",", 
    RowBox[{"-", "169.61136564178955`"}], ",", 
    RowBox[{"-", "169.85250499203764`"}], ",", 
    RowBox[{"-", "170.09347329104185`"}], ",", 
    RowBox[{"-", "170.33427102310984`"}], ",", 
    RowBox[{"-", "170.57489867015474`"}], ",", 
    RowBox[{"-", "170.81535671171184`"}], ",", 
    RowBox[{"-", "171.05564562495556`"}], ",", 
    RowBox[{"-", "171.29576588471576`"}], ",", 
    RowBox[{"-", "171.53571796349436`"}], ",", 
    RowBox[{"-", "171.77550233148153`"}], ",", 
    RowBox[{"-", "172.01511945657194`"}], ",", 
    RowBox[{"-", "172.25456980438037`"}], ",", 
    RowBox[{"-", "172.49385383825802`"}], ",", 
    RowBox[{"-", "172.73297201930788`"}], ",", 
    RowBox[{"-", "172.97192480640044`"}], ",", 
    RowBox[{"-", "173.21071265618892`"}], ",", 
    RowBox[{"-", "173.44933602312486`"}], ",", 
    RowBox[{"-", "173.68779535947283`"}], ",", 
    RowBox[{"-", "173.92609111532585`"}], ",", 
    RowBox[{"-", "174.1642237386199`"}], ",", 
    RowBox[{"-", "174.40219367514896`"}], ",", 
    RowBox[{"-", "174.64000136857942`"}], ",", 
    RowBox[{"-", "174.8776472604646`"}], ",", 
    RowBox[{"-", "175.11513179025908`"}], ",", 
    RowBox[{"-", "175.35245539533307`"}], ",", 
    RowBox[{"-", "175.5896185109862`"}], ",", 
    RowBox[{"-", "175.82662157046187`"}], ",", 
    RowBox[{"-", "176.0634650049608`"}], ",", 
    RowBox[{"-", "176.30014924365483`"}], ",", 
    RowBox[{"-", "176.5366747137007`"}], ",", 
    RowBox[{"-", "176.7730418402533`"}], ",", 
    RowBox[{"-", "177.0092510464792`"}], ",", 
    RowBox[{"-", "177.24530275356983`"}], ",", 
    RowBox[{"-", "177.48119738075474`"}], ",", 
    RowBox[{"-", "177.7169353453144`"}], ",", 
    RowBox[{"-", "177.9525170625934`"}], ",", 
    RowBox[{"-", "178.187942946013`"}], ",", 
    RowBox[{"-", "178.42321340708406`"}], ",", 
    RowBox[{"-", "178.6583288554194`"}], ",", 
    RowBox[{"-", "178.8932896987465`"}], ",", 
    RowBox[{"-", "179.12809634291972`"}], ",", 
    RowBox[{"-", "179.36274919193255`"}], ",", 
    RowBox[{"-", "179.59724864792994`"}], ",", 
    RowBox[{"-", "179.83159511122025`"}], ",", 
    RowBox[{"-", "180.06578898028712`"}], ",", 
    RowBox[{"-", "180.29983065180153`"}], ",", 
    RowBox[{"-", "180.53372052063344`"}], ",", 
    RowBox[{"-", "180.76745897986342`"}], ",", 
    RowBox[{"-", "181.00104642079432`"}], ",", 
    RowBox[{"-", "181.23448323296253`"}], ",", 
    RowBox[{"-", "181.46776980414967`"}], ",", 
    RowBox[{"-", "181.70090652039357`"}], ",", 
    RowBox[{"-", "181.9338937659996`"}], ",", 
    RowBox[{"-", "182.16673192355165`"}], ",", 
    RowBox[{"-", "182.39942137392327`"}], ",", 
    RowBox[{"-", "182.63196249628845`"}], ",", 
    RowBox[{"-", "182.86435566813253`"}], ",", 
    RowBox[{"-", "183.09660126526273`"}], ",", 
    RowBox[{"-", "183.32869966181912`"}], ",", 
    RowBox[{"-", "183.5606512302848`"}], ",", 
    RowBox[{"-", "183.7924563414967`"}], ",", 
    RowBox[{"-", "184.02411536465556`"}], ",", 
    RowBox[{"-", "184.2556286673367`"}], ",", 
    RowBox[{"-", "184.48699661549978`"}], ",", 
    RowBox[{"-", "184.71821957349925`"}], ",", 
    RowBox[{"-", "184.9492979040942`"}], ",", 
    RowBox[{"-", "185.1802319684584`"}], ",", 
    RowBox[{"-", "185.41102212619015`"}], ",", 
    RowBox[{"-", "185.6416687353221`"}], ",", 
    RowBox[{"-", "185.87217215233093`"}], ",", 
    RowBox[{"-", "186.10253273214707`"}], ",", 
    RowBox[{"-", "186.3327508281642`"}], ",", 
    RowBox[{"-", "186.56282679224867`"}], ",", 
    RowBox[{"-", "186.79276097474914`"}], ",", 
    RowBox[{"-", "187.02255372450568`"}], ",", 
    RowBox[{"-", "187.25220538885915`"}], ",", 
    RowBox[{"-", "187.4817163136603`"}], ",", 
    RowBox[{"-", "187.71108684327908`"}], ",", 
    RowBox[{"-", "187.94031732061336`"}], ",", 
    RowBox[{"-", "188.16940808709828`"}], ",", 
    RowBox[{"-", "188.39835948271482`"}], ",", 
    RowBox[{"-", "188.62717184599884`"}], ",", 
    RowBox[{"-", "188.85584551404978`"}], ",", 
    RowBox[{"-", "189.0843808225392`"}], ",", 
    RowBox[{"-", "189.31277810571976`"}], ",", 
    RowBox[{"-", "189.54103769643336`"}], ",", 
    RowBox[{"-", "189.76915992611998`"}], ",", 
    RowBox[{"-", "189.9971451248258`"}], ",", 
    RowBox[{"-", "190.22499362121187`"}], ",", 
    RowBox[{"-", "190.45270574256213`"}], ",", 
    RowBox[{"-", "190.68028181479173`"}], ",", 
    RowBox[{"-", "190.90772216245526`"}], ",", 
    RowBox[{"-", "191.1350271087548`"}], ",", 
    RowBox[{"-", "191.36219697554787`"}], ",", 
    RowBox[{"-", "191.58923208335563`"}], ",", 
    RowBox[{"-", "191.8161327513705`"}], ",", 
    RowBox[{"-", "192.0428992974643`"}], ",", 
    RowBox[{"-", "192.2695320381958`"}], ",", 
    RowBox[{"-", "192.49603128881867`"}], ",", 
    RowBox[{"-", "192.72239736328893`"}], ",", 
    RowBox[{"-", "192.9486305742728`"}], ",", 
    RowBox[{"-", "193.1747312331541`"}], ",", 
    RowBox[{"-", "193.40069965004176`"}], ",", 
    RowBox[{"-", "193.62653613377728`"}], ",", 
    RowBox[{"-", "193.8522409919422`"}], ",", 
    RowBox[{"-", "194.07781453086534`"}], ",", 
    RowBox[{"-", "194.3032570556301`"}], ",", 
    RowBox[{"-", "194.52856887008164`"}], ",", 
    RowBox[{"-", "194.75375027683413`"}], ",", 
    RowBox[{"-", "194.9788015772778`"}], ",", 
    RowBox[{"-", "195.20372307158604`"}], ",", 
    RowBox[{"-", "195.42851505872233`"}], ",", 
    RowBox[{"-", "195.65317783644733`"}], ",", 
    RowBox[{"-", "195.87771170132564`"}], ",", 
    RowBox[{"-", "196.10211694873274`"}], ",", 
    RowBox[{"-", "196.32639387286176`"}], ",", 
    RowBox[{"-", "196.55054276673022`"}], ",", 
    RowBox[{"-", "196.77456392218673`"}], ",", 
    RowBox[{"-", "196.99845762991768`"}], ",", 
    RowBox[{"-", "197.22222417945386`"}], ",", 
    RowBox[{"-", "197.44586385917682`"}], ",", 
    RowBox[{"-", "197.6693769563256`"}], ",", 
    RowBox[{"-", "197.8927637570032`"}], ",", 
    RowBox[{"-", "198.11602454618273`"}], ",", 
    RowBox[{"-", "198.33915960771407`"}], ",", 
    RowBox[{"-", "198.56216922432992`"}], ",", 
    RowBox[{"-", "198.7850536776523`"}], ",", 
    RowBox[{"-", "199.0078132481987`"}], ",", 
    RowBox[{"-", "199.23044821538807`"}], ",", 
    RowBox[{"-", "199.45295885754732`"}], ",", 
    RowBox[{"-", "199.67534545191708`"}], ",", 
    RowBox[{"-", "199.89760827465787`"}], ",", 
    RowBox[{"-", "200.1197476008562`"}], ",", 
    RowBox[{"-", "200.34176370453028`"}], ",", 
    RowBox[{"-", "200.56365685863625`"}], ",", 
    RowBox[{"-", "200.78542733507373`"}], ",", 
    RowBox[{"-", "201.00707540469196`"}], ",", 
    RowBox[{"-", "201.22860133729532`"}], ",", 
    RowBox[{"-", "201.45000540164924`"}], ",", 
    RowBox[{"-", "201.67128786548588`"}], ",", 
    RowBox[{"-", "201.89244899550974`"}], ",", 
    RowBox[{"-", "202.11348905740337`"}], ",", 
    RowBox[{"-", "202.3344083158329`"}], ",", 
    RowBox[{"-", "202.55520703445347`"}], ",", 
    RowBox[{"-", "202.77588547591506`"}], ",", 
    RowBox[{"-", "202.99644390186765`"}], ",", 
    RowBox[{"-", "203.2168825729667`"}], ",", 
    RowBox[{"-", "203.4372017488788`"}], ",", 
    RowBox[{"-", "203.6574016882866`"}], ",", 
    RowBox[{"-", "203.87748264889441`"}], ",", 
    RowBox[{"-", "204.0974448874335`"}], ",", 
    RowBox[{"-", "204.3172886596672`"}], ",", 
    RowBox[{"-", "204.53701422039612`"}], ",", 
    RowBox[{"-", "204.75662182346343`"}], ",", 
    RowBox[{"-", "204.97611172175982`"}], ",", 
    RowBox[{"-", "205.19548416722878`"}], ",", 
    RowBox[{"-", "205.41473941087162`"}], ",", 
    RowBox[{"-", "205.63387770275233`"}], ",", 
    RowBox[{"-", "205.85289929200277`"}], ",", 
    RowBox[{"-", "206.07180442682753`"}], ",", 
    RowBox[{"-", "206.29059335450887`"}], ",", 
    RowBox[{"-", "206.5092663214116`"}], ",", 
    RowBox[{"-", "206.727823572988`"}], ",", 
    RowBox[{"-", "206.94626535378256`"}], ",", 
    RowBox[{"-", "207.16459190743674`"}], ",", 
    RowBox[{"-", "207.3828034766939`"}], ",", 
    RowBox[{"-", "207.60090030340373`"}], ",", 
    RowBox[{"-", "207.81888262852732`"}], ",", 
    RowBox[{"-", "208.03675069214148`"}], ",", 
    RowBox[{"-", "208.25450473344353`"}], ",", 
    RowBox[{"-", "208.47214499075588`"}], ",", 
    RowBox[{"-", "208.68967170153056`"}], ",", 
    RowBox[{"-", "208.90708510235382`"}], ",", 
    RowBox[{"-", "209.12438542895052`"}], ",", 
    RowBox[{"-", "209.34157291618877`"}], ",", 
    RowBox[{"-", "209.55864779808417`"}], ",", 
    RowBox[{"-", "209.77561030780444`"}], ",", 
    RowBox[{"-", "209.99246067767353`"}], ",", 
    RowBox[{"-", "210.20919913917632`"}], ",", 
    RowBox[{"-", "210.4258259229626`"}], ",", 
    RowBox[{"-", "210.6423412588516`"}], ",", 
    RowBox[{"-", "210.85874537583615`"}], ",", 
    RowBox[{"-", "211.07503850208707`"}], ",", 
    RowBox[{"-", "211.29122086495704`"}], ",", 
    RowBox[{"-", "211.50729269098514`"}], ",", 
    RowBox[{"-", "211.7232542059009`"}], ",", 
    RowBox[{"-", "211.93910563462828`"}], ",", 
    RowBox[{"-", "212.15484720128993`"}], ",", 
    RowBox[{"-", "212.37047912921125`"}], ",", 
    RowBox[{"-", "212.58600164092437`"}], ",", 
    RowBox[{"-", "212.80141495817213`"}], ",", 
    RowBox[{"-", "213.0167193019123`"}], ",", 
    RowBox[{"-", "213.2319148923212`"}], ",", 
    RowBox[{"-", "213.44700194879803`"}], ",", 
    RowBox[{"-", "213.66198068996837`"}], ",", 
    RowBox[{"-", "213.87685133368845`"}], ",", 
    RowBox[{"-", "214.0916140970488`"}], ",", 
    RowBox[{"-", "214.30626919637803`"}], ",", 
    RowBox[{"-", "214.52081684724686`"}], ",", 
    RowBox[{"-", "214.7352572644718`"}], ",", 
    RowBox[{"-", "214.94959066211888`"}], ",", 
    RowBox[{"-", "215.16381725350735`"}], ",", 
    RowBox[{"-", "215.37793725121352`"}], ",", 
    RowBox[{"-", "215.59195086707453`"}], ",", 
    RowBox[{"-", "215.80585831219156`"}], ",", 
    RowBox[{"-", "216.01965979693412`"}], ",", 
    RowBox[{"-", "216.23335553094321`"}], ",", 
    RowBox[{"-", "216.44694572313503`"}], ",", 
    RowBox[{"-", "216.66043058170462`"}], ",", 
    RowBox[{"-", "216.87381031412937`"}], ",", 
    RowBox[{"-", "217.08708512717254`"}], ",", 
    RowBox[{"-", "217.3002552268868`"}], ",", 
    RowBox[{"-", "217.51332081861761`"}], ",", 
    RowBox[{"-", "217.72628210700688`"}], ",", 
    RowBox[{"-", "217.93913929599623`"}], ",", 
    RowBox[{"-", "218.15189258883044`"}], ",", 
    RowBox[{"-", "218.36454218806085`"}], ",", 
    RowBox[{"-", "218.57708829554892`"}], ",", 
    RowBox[{"-", "218.78953111246926`"}], ",", 
    RowBox[{"-", "219.0018708393132`"}], ",", 
    RowBox[{"-", "219.21410767589197`"}], ",", 
    RowBox[{"-", "219.42624182134008`"}], ",", 
    RowBox[{"-", "219.63827347411865`"}], ",", 
    RowBox[{"-", "219.85020283201837`"}], ",", 
    RowBox[{"-", "220.0620300921631`"}], ",", 
    RowBox[{"-", "220.27375545101282`"}], ",", 
    RowBox[{"-", "220.4853791043669`"}], ",", 
    RowBox[{"-", "220.6969012473673`"}], ",", 
    RowBox[{"-", "220.90832207450163`"}], ",", 
    RowBox[{"-", "221.1196417796064`"}], ",", 
    RowBox[{"-", "221.33086055587015`"}], ",", 
    RowBox[{"-", "221.54197859583624`"}], ",", 
    RowBox[{"-", "221.75299609140635`"}], ",", 
    RowBox[{"-", "221.96391323384321`"}], ",", 
    RowBox[{"-", "222.17473021377373`"}], ",", 
    RowBox[{"-", "222.38544722119215`"}], ",", 
    RowBox[{"-", "222.59606444546282`"}], ",", 
    RowBox[{"-", "222.80658207532332`"}], ",", 
    RowBox[{"-", "223.0170002988874`"}], ",", 
    RowBox[{"-", "223.2273193036478`"}], ",", 
    RowBox[{"-", "223.43753927647936`"}], ",", 
    RowBox[{"-", "223.6476604036418`"}], ",", 
    RowBox[{"-", "223.85768287078267`"}], ",", 
    RowBox[{"-", "224.06760686294027`"}], ",", 
    RowBox[{"-", "224.27743256454622`"}], ",", 
    RowBox[{"-", "224.4871601594287`"}], ",", 
    RowBox[{"-", "224.69678983081502`"}], ",", 
    RowBox[{"-", "224.90632176133445`"}], ",", 
    RowBox[{"-", "225.11575613302105`"}], ",", 
    RowBox[{"-", "225.3250931273164`"}], ",", 
    RowBox[{"-", "225.53433292507236`"}], ",", 
    RowBox[{"-", "225.74347570655388`"}], ",", 
    RowBox[{"-", "225.95252165144154`"}], ",", 
    RowBox[{"-", "226.1614709388345`"}], ",", 
    RowBox[{"-", "226.37032374725297`"}], ",", 
    RowBox[{"-", "226.57908025464084`"}], ",", 
    RowBox[{"-", "226.7877406383687`"}], ",", 
    RowBox[{"-", "226.996305075236`"}], ",", 
    RowBox[{"-", "227.20477374147404`"}], ",", 
    RowBox[{"-", "227.41314681274838`"}], ",", 
    RowBox[{"-", "227.6214244641615`"}], ",", 
    RowBox[{"-", "227.8296068702553`"}], ",", 
    RowBox[{"-", "228.03769420501382`"}], ",", 
    RowBox[{"-", "228.24568664186563`"}], ",", 
    RowBox[{"-", "228.45358435368638`"}], ",", 
    RowBox[{"-", "228.6613875128014`"}], ",", 
    RowBox[{"-", "228.86909629098815`"}], ",", 
    RowBox[{"-", "229.07671085947862`"}], ",", 
    RowBox[{"-", "229.28423138896204`"}], ",", 
    RowBox[{"-", "229.49165804958702`"}], ",", 
    RowBox[{"-", "229.69899101096428`"}], ",", 
    RowBox[{"-", "229.90623044216875`"}], ",", 
    RowBox[{"-", "230.1133765117425`"}], ",", 
    RowBox[{"-", "230.3204293876965`"}], ",", 
    RowBox[{"-", "230.52738923751346`"}], ",", 
    RowBox[{"-", "230.7342562281501`"}], ",", 
    RowBox[{"-", "230.94103052603944`"}], ",", 
    RowBox[{"-", "231.14771229709314`"}], ",", 
    RowBox[{"-", "231.3543017067039`"}], ",", 
    RowBox[{"-", "231.56079891974773`"}], ",", 
    RowBox[{"-", "231.76720410058627`"}], ",", 
    RowBox[{"-", "231.97351741306903`"}], ",", 
    RowBox[{"-", "232.17973902053578`"}], ",", 
    RowBox[{"-", "232.38586908581874`"}], ",", 
    RowBox[{"-", "232.5919077712447`"}], ",", 
    RowBox[{"-", "232.79785523863762`"}], ",", 
    RowBox[{"-", "233.0037116493204`"}], ",", 
    RowBox[{"-", "233.2094771641174`"}], ",", 
    RowBox[{"-", "233.41515194335662`"}], ",", 
    RowBox[{"-", "233.6207361468717`"}], ",", 
    RowBox[{"-", "233.82622993400435`"}], ",", 
    RowBox[{"-", "234.03163346360623`"}], ",", 
    RowBox[{"-", "234.2369468940413`"}], ",", 
    RowBox[{"-", "234.442170383188`"}], ",", 
    RowBox[{"-", "234.6473040884411`"}], ",", 
    RowBox[{"-", "234.85234816671414`"}], ",", 
    RowBox[{"-", "235.0573027744412`"}], ",", 
    RowBox[{"-", "235.2621680675794`"}], ",", 
    RowBox[{"-", "235.46694420161063`"}], ",", 
    RowBox[{"-", "235.6716313315436`"}], ",", 
    RowBox[{"-", "235.87622961191624`"}], ",", 
    RowBox[{"-", "236.08073919679737`"}], ",", 
    RowBox[{"-", "236.28516023978898`"}], ",", 
    RowBox[{"-", "236.4894928940281`"}], ",", 
    RowBox[{"-", "236.69373731218886`"}], ",", 
    RowBox[{"-", "236.89789364648448`"}], ",", 
    RowBox[{"-", "237.10196204866932`"}], ",", 
    RowBox[{"-", "237.30594267004074`"}], ",", 
    RowBox[{"-", "237.50983566144112`"}], ",", 
    RowBox[{"-", "237.71364117325987`"}], ",", 
    RowBox[{"-", "237.91735935543525`"}], ",", 
    RowBox[{"-", "238.12099035745632`"}], ",", 
    RowBox[{"-", "238.32453432836505`"}], ",", 
    RowBox[{"-", "238.52799141675794`"}], ",", 
    RowBox[{"-", "238.73136177078817`"}], ",", 
    RowBox[{"-", "238.93464553816722`"}], ",", 
    RowBox[{"-", "239.13784286616715`"}], ",", 
    RowBox[{"-", "239.34095390162196`"}], ",", 
    RowBox[{"-", "239.54397879092988`"}], ",", 
    RowBox[{"-", "239.746917680055`"}], ",", 
    RowBox[{"-", "239.9497707145291`"}], ",", 
    RowBox[{"-", "240.15253803945362`"}], ",", 
    RowBox[{"-", "240.35521979950136`"}], ",", 
    RowBox[{"-", "240.5578161389182`"}], ",", 
    RowBox[{"-", "240.76032720152523`"}], ",", 
    RowBox[{"-", "240.96275313072007`"}], ",", 
    RowBox[{"-", "241.1650940694791`"}], ",", 
    RowBox[{"-", "241.36735016035888`"}], ",", 
    RowBox[{"-", "241.56952154549805`"}], ",", 
    RowBox[{"-", "241.77160836661918`"}], ",", 
    RowBox[{"-", "241.9736107650303`"}], ",", 
    RowBox[{"-", "242.1755288816268`"}], ",", 
    RowBox[{"-", "242.37736285689306`"}], ",", 
    RowBox[{"-", "242.57911283090414`"}], ",", 
    RowBox[{"-", "242.7807789433276`"}], ",", 
    RowBox[{"-", "242.98236133342508`"}], ",", 
    RowBox[{"-", "243.18386014005398`"}], ",", 
    RowBox[{"-", "243.38527550166918`"}], ",", 
    RowBox[{"-", "243.58660755632482`"}], ",", 
    RowBox[{"-", "243.78785644167567`"}], ",", 
    RowBox[{"-", "243.98902229497907`"}], ",", 
    RowBox[{"-", "244.19010525309628`"}], ",", 
    RowBox[{"-", "244.3911054524945`"}], ",", 
    RowBox[{"-", "244.59202302924797`"}], ",", 
    RowBox[{"-", "244.79285811904015`"}], ",", 
    RowBox[{"-", "244.99361085716492`"}], ",", 
    RowBox[{"-", "245.19428137852825`"}], ",", 
    RowBox[{"-", "245.39486981764992`"}], ",", 
    RowBox[{"-", "245.59537630866495`"}], ",", 
    RowBox[{"-", "245.79580098532534`"}], ",", 
    RowBox[{"-", "245.99614398100135`"}], ",", 
    RowBox[{"-", "246.1964054286834`"}], ",", 
    RowBox[{"-", "246.3965854609834`"}], ",", 
    RowBox[{"-", "246.59668421013623`"}], ",", 
    RowBox[{"-", "246.7967018080015`"}], ",", 
    RowBox[{"-", "246.99663838606486`"}], ",", 
    RowBox[{"-", "247.19649407543963`"}], ",", 
    RowBox[{"-", "247.39626900686827`"}], ",", 
    RowBox[{"-", "247.59596331072382`"}], ",", 
    RowBox[{"-", "247.7955771170115`"}], ",", 
    RowBox[{"-", "247.9951105553701`"}], ",", 
    RowBox[{"-", "248.19456375507352`"}], ",", 
    RowBox[{"-", "248.39393684503216`"}], ",", 
    RowBox[{"-", "248.59322995379446`"}], ",", 
    RowBox[{"-", "248.79244320954828`"}], ",", 
    RowBox[{"-", "248.9915767401224`"}], ",", 
    RowBox[{"-", "249.19063067298794`"}], ",", 
    RowBox[{"-", "249.38960513525973`"}], ",", 
    RowBox[{"-", "249.58850025369782`"}], ",", 
    RowBox[{"-", "249.7873161547088`"}], ",", 
    RowBox[{"-", "249.98605296434735`"}], ",", 
    RowBox[{"-", "250.18471080831745`"}], ",", 
    RowBox[{"-", "250.38328981197387`"}], ",", 
    RowBox[{"-", "250.5817901003237`"}], ",", 
    RowBox[{"-", "250.78021179802738`"}], ",", 
    RowBox[{"-", "250.9785550294004`"}], ",", 
    RowBox[{"-", "251.17681991841445`"}], ",", 
    RowBox[{"-", "251.3750065886989`"}], ",", 
    RowBox[{"-", "251.57311516354216`"}], ",", 
    RowBox[{"-", "251.7711457658928`"}], ",", 
    RowBox[{"-", "251.96909851836133`"}], ",", 
    RowBox[{"-", "252.16697354322093`"}], ",", 
    RowBox[{"-", "252.36477096240932`"}], ",", 
    RowBox[{"-", "252.5624908975298`"}], ",", 
    RowBox[{"-", "252.76013346985255`"}], ",", 
    RowBox[{"-", "252.95769880031605`"}], ",", 
    RowBox[{"-", "253.1551870095283`"}], ",", 
    RowBox[{"-", "253.35259821776813`"}], ",", 
    RowBox[{"-", "253.54993254498646`"}], ",", 
    RowBox[{"-", "253.74719011080757`"}], ",", 
    RowBox[{"-", "253.94437103453043`"}], ",", 
    RowBox[{"-", "254.14147543512993`"}], ",", 
    RowBox[{"-", "254.33850343125806`"}], ",", 
    RowBox[{"-", "254.53545514124528`"}], ",", 
    RowBox[{"-", "254.73233068310174`"}], ",", 
    RowBox[{"-", "254.9291301745184`"}], ",", 
    RowBox[{"-", "255.12585373286848`"}], ",", 
    RowBox[{"-", "255.32250147520844`"}], ",", 
    RowBox[{"-", "255.51907351827936`"}], ",", 
    RowBox[{"-", "255.71556997850809`"}], ",", 
    RowBox[{"-", "255.9119909720085`"}], ",", 
    RowBox[{"-", "256.10833661458264`"}], ",", 
    RowBox[{"-", "256.30460702172195`"}], ",", 
    RowBox[{"-", "256.5008023086085`"}], ",", 
    RowBox[{"-", "256.696922590116`"}], ",", 
    RowBox[{"-", "256.8929679808112`"}], ",", 
    RowBox[{"-", "257.088938594955`"}], ",", 
    RowBox[{"-", "257.2848345465034`"}], ",", 
    RowBox[{"-", "257.48065594910906`"}], ",", 
    RowBox[{"-", "257.67640291612196`"}], ",", 
    RowBox[{"-", "257.8720755605911`"}], ",", 
    RowBox[{"-", "258.0676739952651`"}], ",", 
    RowBox[{"-", "258.2631983325939`"}], ",", 
    RowBox[{"-", "258.45864868472927`"}], ",", 
    RowBox[{"-", "258.65402516352646`"}], ",", 
    RowBox[{"-", "258.8493278805451`"}], ",", 
    RowBox[{"-", "259.04455694705007`"}], ",", 
    RowBox[{"-", "259.2397124740133`"}], ",", 
    RowBox[{"-", "259.4347945721142`"}], ",", 
    RowBox[{"-", "259.62980335174086`"}], ",", 
    RowBox[{"-", "259.8247389229915`"}], ",", 
    RowBox[{"-", "260.01960139567547`"}], ",", 
    RowBox[{"-", "260.2143908793137`"}], ",", 
    RowBox[{"-", "260.40910748314093`"}], ",", 
    RowBox[{"-", "260.60375131610556`"}], ",", 
    RowBox[{"-", "260.79832248687165`"}], ",", 
    RowBox[{"-", "260.9928211038195`"}], ",", 
    RowBox[{"-", "261.1872472750467`"}], ",", 
    RowBox[{"-", "261.3816011083696`"}], ",", 
    RowBox[{"-", "261.57588271132386`"}], ",", 
    RowBox[{"-", "261.7700921911657`"}], ",", 
    RowBox[{"-", "261.96422965487295`"}], ",", 
    RowBox[{"-", "262.1582952091461`"}], ",", 
    RowBox[{"-", "262.35228896040945`"}], ",", 
    RowBox[{"-", "262.5462110148116`"}], ",", 
    RowBox[{"-", "262.7400614782271`"}], ",", 
    RowBox[{"-", "262.93384045625714`"}], ",", 
    RowBox[{"-", "263.12754805423066`"}], ",", 
    RowBox[{"-", "263.3211843772052`"}], ",", 
    RowBox[{"-", "263.5147495299681`"}], ",", 
    RowBox[{"-", "263.7082436170374`"}], ",", 
    RowBox[{"-", "263.9016667426627`"}], ",", 
    RowBox[{"-", "264.0950190108265`"}], ",", 
    RowBox[{"-", "264.28830052524467`"}], ",", 
    RowBox[{"-", "264.48151138936794`"}], ",", 
    RowBox[{"-", "264.6746517063824`"}], ",", 
    RowBox[{"-", "264.86772157921104`"}], ",", 
    RowBox[{"-", "265.06072111051395`"}], ",", 
    RowBox[{"-", "265.25365040268997`"}], ",", 
    RowBox[{"-", "265.4465095578772`"}], ",", 
    RowBox[{"-", "265.6392986779543`"}], ",", 
    RowBox[{"-", "265.832017864541`"}], ",", 
    RowBox[{"-", "266.0246672189995`"}], ",", 
    RowBox[{"-", "266.217246842435`"}], ",", 
    RowBox[{"-", "266.4097568356969`"}], ",", 
    RowBox[{"-", "266.60219729937955`"}], ",", 
    RowBox[{"-", "266.7945683338234`"}], ",", 
    RowBox[{"-", "266.98687003911573`"}], ",", 
    RowBox[{"-", "267.1791025150913`"}], ",", 
    RowBox[{"-", "267.37126586133405`"}], ",", 
    RowBox[{"-", "267.5633601771771`"}], ",", 
    RowBox[{"-", "267.7553855617043`"}], ",", 
    RowBox[{"-", "267.9473421137508`"}], ",", 
    RowBox[{"-", "268.13922993190386`"}], ",", 
    RowBox[{"-", "268.3310491145042`"}], ",", 
    RowBox[{"-", "268.52279975964643`"}], ",", 
    RowBox[{"-", "268.71448196517997`"}], ",", 
    RowBox[{"-", "268.9060958287102`"}], ",", 
    RowBox[{"-", "269.0976414475991`"}], ",", 
    RowBox[{"-", "269.28911891896615`"}], ",", 
    RowBox[{"-", "269.4805283396892`"}], ",", 
    RowBox[{"-", "269.67186980640554`"}], ",", 
    RowBox[{"-", "269.8631434155122`"}], ",", 
    RowBox[{"-", "270.0543492631675`"}], ",", 
    RowBox[{"-", "270.24548744529136`"}], ",", 
    RowBox[{"-", "270.4365580575664`"}], ",", 
    RowBox[{"-", "270.6275611954387`"}], ",", 
    RowBox[{"-", "270.8184969541187`"}], ",", 
    RowBox[{"-", "271.00936542858193`"}], ",", 
    RowBox[{"-", "271.20016671356984`"}], ",", 
    RowBox[{"-", "271.3909009035907`"}], ",", 
    RowBox[{"-", "271.5815680929206`"}], ",", 
    RowBox[{"-", "271.77216837560366`"}], ",", 
    RowBox[{"-", "271.9627018454536`"}], ",", 
    RowBox[{"-", "272.15316859605394`"}], ",", 
    RowBox[{"-", "272.3435687207592`"}], ",", 
    RowBox[{"-", "272.53390231269543`"}], ",", 
    RowBox[{"-", "272.72416946476125`"}], ",", 
    RowBox[{"-", "272.91437026962836`"}], ",", 
    RowBox[{"-", "273.1045048197427`"}], ",", 
    RowBox[{"-", "273.29457320732496`"}], ",", 
    RowBox[{"-", "273.48457552437117`"}], ",", 
    RowBox[{"-", "273.67451186265413`"}], ",", 
    RowBox[{"-", "273.8643823137235`"}], ",", 
    RowBox[{"-", "274.0541869689071`"}], ",", 
    RowBox[{"-", "274.24392591931127`"}], ",", 
    RowBox[{"-", "274.4335992558219`"}], ",", 
    RowBox[{"-", "274.6232070691049`"}], ",", 
    RowBox[{"-", "274.8127494496076`"}], ",", 
    RowBox[{"-", "275.0022264875587`"}], ",", 
    RowBox[{"-", "275.1916382729694`"}], ",", 
    RowBox[{"-", "275.38098489563424`"}], ",", 
    RowBox[{"-", "275.5702664451318`"}], ",", 
    RowBox[{"-", "275.75948301082525`"}], ",", 
    RowBox[{"-", "275.94863468186327`"}], ",", 
    RowBox[{"-", "276.1377215471808`"}], ",", 
    RowBox[{"-", "276.32674369549954`"}], ",", 
    RowBox[{"-", "276.51570121532916`"}], ",", 
    RowBox[{"-", "276.7045941949672`"}], ",", 
    RowBox[{"-", "276.89342272250093`"}], ",", 
    RowBox[{"-", "277.0821868858069`"}], ",", 
    RowBox[{"-", "277.27088677255244`"}], ",", 
    RowBox[{"-", "277.4595224701962`"}], ",", 
    RowBox[{"-", "277.6480940659887`"}], ",", 
    RowBox[{"-", "277.83660164697307`"}], ",", 
    RowBox[{"-", "278.02504529998583`"}], ",", 
    RowBox[{"-", "278.21342511165767`"}], ",", 
    RowBox[{"-", "278.401741168414`"}], ",", 
    RowBox[{"-", "278.58999355647563`"}], ",", 
    RowBox[{"-", "278.7781823618595`"}], ",", 
    RowBox[{"-", "278.9663076703796`"}], ",", 
    RowBox[{"-", "279.15436956764717`"}], ",", 
    RowBox[{"-", "279.3423681390718`"}], ",", 
    RowBox[{"-", "279.530303469862`"}], ",", 
    RowBox[{"-", "279.7181756450258`"}], ",", 
    RowBox[{"-", "279.90598474937127`"}], ",", 
    RowBox[{"-", "280.0937308675078`"}], ",", 
    RowBox[{"-", "280.2814140838459`"}], ",", 
    RowBox[{"-", "280.46903448259866`"}], ",", 
    RowBox[{"-", "280.6565921477819`"}], ",", 
    RowBox[{"-", "280.844087163215`"}], ",", 
    RowBox[{"-", "281.03151961252155`"}]}], "}"}], TraditionalForm]], "Output",\

 CellChangeTimes->{{3.548920814621683*^9, 3.548920821185481*^9}, 
   3.5489210750942717`*^9, {3.5489211491785192`*^9, 3.548921159460428*^9}, 
   3.548921447985327*^9, 
   3.548956963698716*^9},ExpressionUUID->"f9096280-e89b-43b1-a4ce-\
01113167e77c"]
}, Closed]],

Cell[TextData[{
 "Solve for the unknown coefficients",
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "2", ")"}], TraditionalForm]],ExpressionUUID->
  "87b9b990-44c2-44e6-9386-9124fc5633bf"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "3", ")"}], TraditionalForm]],ExpressionUUID->
  "bdedbcd1-9207-4a27-808e-7f573e2b6a08"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "4", ")"}], TraditionalForm]],ExpressionUUID->
  "0f06cd58-eaea-4093-96bb-2faf5ef3f3cf"],
 " ",
 StyleBox["exactly",
  FontSlant->"Italic"],
 " by Maclaurin series expansion of equation (",
 
 CounterBox["DisplayFormulaNumbered", "logarithmic derivative"],
 "). ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.517718523195706*^9, 3.517718540231894*^9}, 
   3.5489581141541157`*^9, 
   3.548958532514782*^9},ExpressionUUID->"6c5d0bee-f59f-48ff-b185-\
6ffad0d9c376"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"exact", "=", 
   RowBox[{"First", "@", 
    RowBox[{"SolveAlways", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["Ai", "\[Prime]"], "(", "z", ")"}], 
         RowBox[{"Ai", "(", "z", ")"}]], "-", 
        FractionBox[
         TemplateBox[{"0"},
          "AiryAiPrime"], 
         TemplateBox[{"0"},
          "AiryAi"]], "+", 
        SuperscriptBox[
         RowBox[{"O", "[", "z", "]"}], "4"]}], "\[LongEqual]", 
       RowBox[{"-", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], "3"], 
         RowBox[{
          SuperscriptBox["z", "k"], 
          RowBox[{"Z", "(", 
           RowBox[{"k", "+", "1"}], ")"}]}]}]}]}], ",", "z"}], "]"}]}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.5489210273891277`*^9, 3.54892104600362*^9}, {
  3.548957164190963*^9, 3.548957172453025*^9}, {3.548957911528385*^9, 
  3.5489579146237*^9}},ExpressionUUID->"75a4be1f-6ef4-4a69-a1f6-bb2d50d69040"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Z", "(", "2", ")"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["3", 
        RowBox[{"2", "/", "3"}]], " ", 
       SuperscriptBox[
        TemplateBox[{
          FractionBox["2", "3"]},
         "Gamma"], "2"]}], 
      SuperscriptBox[
       TemplateBox[{
         FractionBox["1", "3"]},
        "Gamma"], "2"]]}], ",", 
    RowBox[{
     RowBox[{"Z", "(", "3", ")"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"6", " ", 
        SuperscriptBox[
         TemplateBox[{
           FractionBox["2", "3"]},
          "Gamma"], "3"]}], "-", 
       SuperscriptBox[
        TemplateBox[{
          FractionBox["1", "3"]},
         "Gamma"], "3"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        TemplateBox[{
          FractionBox["1", "3"]},
         "Gamma"], "3"]}]]}], ",", 
    RowBox[{
     RowBox[{"Z", "(", "4", ")"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"9", " ", 
        RadicalBox["3", "3"], " ", 
        SuperscriptBox[
         TemplateBox[{
           FractionBox["2", "3"]},
          "Gamma"], "4"]}], "-", 
       RowBox[{
        RadicalBox["3", "3"], " ", 
        SuperscriptBox[
         TemplateBox[{
           FractionBox["1", "3"]},
          "Gamma"], "3"], " ", 
        TemplateBox[{
          FractionBox["2", "3"]},
         "Gamma"]}]}], 
      RowBox[{"3", " ", 
       SuperscriptBox[
        TemplateBox[{
          FractionBox["1", "3"]},
         "Gamma"], "4"]}]]}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.548921046527852*^9, {3.548957167485839*^9, 3.548957173137991*^9}, 
   3.548957915295951*^9, 3.548958180776387*^9, 
   3.548958510443266*^9},ExpressionUUID->"89cdaea1-dc87-4470-82a3-\
588121b8d3d5"]
}, Closed]],

Cell[TextData[{
 "Compute the ratio ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "\[LongEqual]", 
    RowBox[{
     TemplateBox[{"0"},
      "AiryAiPrime"], "/", 
     TemplateBox[{"0"},
      "AiryAi"]}]}], TraditionalForm]],ExpressionUUID->
  "d0dd78d1-8bd0-442e-a6a1-e6bce973bbcf"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.517718523195706*^9, 3.517718540231894*^9}, 
   3.5489581141541157`*^9, {3.548958532514782*^9, 3.548958613994355*^9}, 
   3.548958656642521*^9, {3.548959142259694*^9, 
   3.5489591434396763`*^9}},ExpressionUUID->"fd861f25-f4b5-47ca-a743-\
2208986c50e7"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  FractionBox[
   TemplateBox[{"0"},
    "AiryAiPrime"], 
   TemplateBox[{"0"},
    "AiryAi"]], TraditionalForm]], "Input",
 CellChangeTimes->{{3.5489581925113363`*^9, 3.548958192925234*^9}, {
   3.548958391806541*^9, 3.548958416509363*^9}, 
   3.548958524471833*^9},ExpressionUUID->"fb78f4b7-85fe-4b41-86dc-\
0ec739fa0ada"],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RadicalBox["3", "3"], " ", 
     TemplateBox[{
       FractionBox["2", "3"]},
      "Gamma"]}], 
    TemplateBox[{
      FractionBox["1", "3"]},
     "Gamma"]]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.548958189926894*^9, 3.548958193968605*^9}, {
   3.54895839237152*^9, 3.548958416824828*^9}, 3.5489585252513657`*^9, 
   3.548958617856661*^9, 
   3.548958653321615*^9},ExpressionUUID->"b2b866e9-d936-4a22-9c27-\
b6631d2c1a1c"]
}, Closed]],

Cell[TextData[{
 "Use pattern-matching to express ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "2", ")"}], TraditionalForm]],ExpressionUUID->
  "1968af26-c4b0-4a23-acf5-4dd354d84b36"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "3", ")"}], TraditionalForm]],ExpressionUUID->
  "fdfa3b79-618b-469d-99f9-ff17d69df96b"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "4", ")"}], TraditionalForm]],ExpressionUUID->
  "1c27febe-b789-4fba-b39c-dc6d6711d803"],
 " in terms of ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "381fce13-bb34-4ea3-89c6-bbc85aa12972"],
 ". ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.517718523195706*^9, 3.517718540231894*^9}, 
   3.5489581141541157`*^9, {3.548958532514782*^9, 3.548958613994355*^9}, {
   3.548958656642521*^9, 
   3.548958674182468*^9}},ExpressionUUID->"f43832da-b465-4323-8a5c-\
630d57d74383"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"exact", "/.", 
    RowBox[{
     TemplateBox[{
       FractionBox["2", "3"]},
      "Gamma"], "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["3", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "3"}]]}], "r", 
      TemplateBox[{
        FractionBox["1", "3"]},
       "Gamma"]}]}]}], "//", "Simplify"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.5489582099193277`*^9, 3.548958212084454*^9}, {
  3.548958322733268*^9, 3.5489583689708157`*^9}, {3.548958426999977*^9, 
  3.548958437480873*^9}},ExpressionUUID->"40c7a0e1-80e1-4e4a-b09a-\
9c41775d1a58"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Z", "(", "2", ")"}], "\[Rule]", 
     SuperscriptBox["r", "2"]}], ",", 
    RowBox[{
     RowBox[{"Z", "(", "3", ")"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["r", "3"]}], "-", 
      FractionBox["1", "2"]}]}], ",", 
    RowBox[{
     RowBox[{"Z", "(", "4", ")"}], "\[Rule]", 
     RowBox[{
      SuperscriptBox["r", "4"], "+", 
      FractionBox["r", "3"]}]}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.548958432598793*^9, 3.548958437921219*^9}, 
   3.548958665271611*^9},ExpressionUUID->"132e69bc-810b-4f0e-9251-\
1dd5870c7e7e"]
}, Closed]],

Cell[TextData[{
 "So, even though the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "n"], TraditionalForm]],ExpressionUUID->
  "58daa2e2-a108-4274-8741-2f94f70eff02"],
 " are the roots of a transcendental equation and ",
 StyleBox["cannot",
  FontSlant->"Italic"],
 " be written down in closed-form, sums over the roots can be computed in \
closed-form as polynomials in ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "b9f63e33-4c8a-459b-a8af-f8471efe7149"],
 "."
}], "Text",
 CellChangeTimes->{{3.515899053111508*^9, 3.515899121067964*^9}, {
  3.515899595445531*^9, 3.5158996205729427`*^9}, {3.516604483031488*^9, 
  3.516604488027031*^9}, {3.548957978457828*^9, 3.5489579963733463`*^9}, {
  3.548958707590913*^9, 
  3.548958729099275*^9}},ExpressionUUID->"cf917825-50a2-4989-9250-\
48d26736ba67"],

Cell[TextData[{
 "Compare ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "2", ")"}], TraditionalForm]],ExpressionUUID->
  "77685f9e-56a0-499a-ad8c-af3a25248fd0"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "3", ")"}], TraditionalForm]],ExpressionUUID->
  "40886ab8-f852-429f-9024-e5a2d28e13b5"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", "(", "4", ")"}], TraditionalForm]],ExpressionUUID->
  "d6589319-5a5c-4dcc-88ae-b3063d192a17"],
 " with the numerical value of the ",
 StyleBox["truncated",
  FontSlant->"Italic"],
 " sum (",
 
 CounterBox["DisplayFormulaNumbered", "root sum"],
 "), computed using the numerical roots. ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.515899962086135*^9, 3.51589998265139*^9}, {
   3.516604737332934*^9, 3.5166047403923798`*^9}, 3.548958968555806*^9, {
   3.548959149289626*^9, 3.548959152128813*^9}, {3.548959214673016*^9, 
   3.548959223320713*^9}},ExpressionUUID->"7c3a4dcf-e38f-470e-bec9-\
90c7de4e9425"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Z", "(", "n", ")"}], "/.", "exact"}], "//", "N"}], ",", 
      RowBox[{"Total", "[", 
       FractionBox["1", 
        SuperscriptBox["zeros", "n"]], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "4"}], "}"}]}], "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.548921079262683*^9, 3.54892114058556*^9}, {
  3.548957198630828*^9, 3.5489572184564447`*^9}, {3.548958987836987*^9, 
  3.548959025879099*^9}},ExpressionUUID->"9ef81b3f-69d4-4c21-a71f-\
91d7a7d90ab2"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.5314572319609995`", "0.493488139469789`"},
     {
      RowBox[{"-", "0.1125617612151145`"}], 
      RowBox[{"-", "0.11251674083699668`"}]},
     {"0.039443078421238696`", "0.03944298233514264`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.5489572187895937`*^9, 3.548957231577805*^9}, {
   3.5489573142298613`*^9, 3.548957322080326*^9}, 3.5489579179502287`*^9, {
   3.5489590219901533`*^9, 
   3.54895902624676*^9}},ExpressionUUID->"31b19b9a-ad8b-4e31-9877-\
ee9873cff283"]
}, Closed]],

Cell[TextData[{
 "The agreement between the numerical and exact values improves as ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "2cae5669-d383-4af9-aeb9-e8f3d5002326"],
 " increases."
}], "Text",
 CellChangeTimes->{{3.517719612655604*^9, 3.517719660990294*^9}, {
  3.548959076694449*^9, 
  3.548959087609627*^9}},ExpressionUUID->"ce63c4fd-bd26-4993-a80c-\
042748de5bc7"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Orthogonal Polynomials", "Section",
 CellChangeTimes->{
  3.480585361081362*^9, 3.516666683924922*^9, {3.548922740065412*^9, 
   3.548922741905282*^9}, {3.548961495255907*^9, 
   3.548961497919087*^9}},ExpressionUUID->"b81fe1d5-76aa-447a-a8bb-\
27b61d31fd1f"],

Cell[CellGroupData[{

Cell[TextData[{
 "Polynomials via determinants  ",
 StyleBox["[6 Marks]", "ExerciseMark"]
}], "Exercise",
 CellChangeTimes->{{3.475884903064666*^9, 3.4758849048615427`*^9}, 
   3.484461173820545*^9, {3.4850445630825977`*^9, 3.4850445680698977`*^9}, {
   3.485044658980051*^9, 3.485044661378015*^9}, {3.4850449367621517`*^9, 
   3.485044941224503*^9}, {3.516603682676893*^9, 3.516603698022788*^9}, {
   3.516603771234277*^9, 3.516603773047782*^9}, {3.516605109887047*^9, 
   3.5166051140400953`*^9}, {3.548961309512678*^9, 3.5489613304855824`*^9}, {
   3.548961483352571*^9, 3.548961490999516*^9}, {3.5489630984898863`*^9, 
   3.548963102951331*^9}, {3.548964771493409*^9, 
   3.5489647716834908`*^9}},ExpressionUUID->"1a851cde-d0b6-4fd0-a8b3-\
3929eb0646d1"],

Cell["Consider the matrices", "Text",
 CellChangeTimes->{{3.466292319752892*^9, 3.466292423905616*^9}, {
  3.466292469064022*^9, 3.466292472150279*^9}, {3.466293609430121*^9, 
  3.466293648680035*^9}, {3.466294429237893*^9, 3.466294429451251*^9}, {
  3.516604854773861*^9, 3.516604856584281*^9}, {3.548960718063097*^9, 
  3.54896072019125*^9}, {3.548961423135461*^9, 
  3.548961424113922*^9}},ExpressionUUID->"ad4ecde2-d792-45b0-949d-\
b9672e6cf2d6"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["A", "n"], "\[LongEqual]", 
    RowBox[{"(", GridBox[{
       {"1", "x", "\[CenterEllipsis]", 
        SuperscriptBox["x", "n"]},
       {
        SubscriptBox["m", "1"], 
        SubscriptBox["m", "2"], "\[CenterEllipsis]", 
        SubscriptBox["m", 
         RowBox[{"n", "+", "1"}]]},
       {"\[VerticalEllipsis]", "\[VerticalEllipsis]", "\[DescendingEllipsis]",
         "\[VerticalEllipsis]"},
       {
        SubscriptBox["m", "n"], 
        SubscriptBox["m", 
         RowBox[{"n", "+", "1"}]], "\[CenterEllipsis]", 
        SubscriptBox["m", 
         RowBox[{"2", "n"}]]}
      }], ")"}]}], ",", " ", 
   RowBox[{
    SubscriptBox["B", "n"], "\[LongEqual]", 
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["m", "0"], 
        SubscriptBox["m", "1"], "\[CenterEllipsis]", 
        SubscriptBox["m", "n"]},
       {
        SubscriptBox["m", "1"], 
        SubscriptBox["m", "2"], "\[CenterEllipsis]", 
        SubscriptBox["m", 
         RowBox[{"n", "+", "1"}]]},
       {"\[VerticalEllipsis]", "\[VerticalEllipsis]", "\[DescendingEllipsis]",
         "\[VerticalEllipsis]"},
       {
        SubscriptBox["m", "n"], 
        SubscriptBox["m", 
         RowBox[{"n", "+", "1"}]], "\[CenterEllipsis]", 
        SubscriptBox["m", 
         RowBox[{"2", "n"}]]}
      }], ")"}]}], ","}], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.4662910548954573`*^9, 3.466291068882698*^9}, {
  3.466293664873282*^9, 3.466293741157631*^9}},
 CellTags->
  "a and b matrices",ExpressionUUID->"3a7418e2-bcd7-418e-be79-b9348087519e"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "k"], TraditionalForm]],ExpressionUUID->
  "662a3c02-bfdc-469c-9a34-421f162287f7"],
 " is the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]],ExpressionUUID->
  "364e31e5-4d09-40dd-bd34-cc600a4e1c36"],
 " moment of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "e58307f5-f956-488f-b664-b20391e93a83"],
 ","
}], "Text",
 CellChangeTimes->{{3.548960887000401*^9, 3.548960888040936*^9}, {
   3.548961337100827*^9, 3.54896136540479*^9}, 
   3.548961428466*^9},ExpressionUUID->"8af413aa-3a54-415b-a4d0-3153a7bc9b1b"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["m", "k"], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]], 
     SuperscriptBox["x", "k"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.4662910548954573`*^9, 3.466291068882698*^9}, {
  3.466293664873282*^9, 3.466293741157631*^9}, {3.5489609012594767`*^9, 
  3.548960906725114*^9}},
 CellTags->"moments",ExpressionUUID->"adabd663-aca6-4558-be52-2358851bfafc"],

Cell["The ratio of the determinants of these matrices,", "Text",
 CellChangeTimes->{{3.466292653946843*^9, 3.466292730206349*^9}, {
   3.466292775102665*^9, 3.466292775615608*^9}, {3.466292819484614*^9, 
   3.466292859074419*^9}, {3.466292892192919*^9, 3.466292912246058*^9}, {
   3.4662929677994413`*^9, 3.4662929748204737`*^9}, {3.466293014805739*^9, 
   3.46629301797198*^9}, {3.466293166254043*^9, 3.466293198565628*^9}, 
   3.466293243897437*^9, {3.4662934593509197`*^9, 3.466293482251936*^9}, {
   3.4662938638322353`*^9, 3.466293883221532*^9}, {3.466294014186393*^9, 
   3.4662941077651577`*^9}, 3.516605099944734*^9, {3.548961437524427*^9, 
   3.5489614657793913`*^9}},ExpressionUUID->"fe9ada56-507b-4446-a6dc-\
150d94ba0865"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[ScriptCapitalL]", "n"], "(", "x", ")"}], "\[LongEqual]", 
   FractionBox[
    TemplateBox[{
      SubscriptBox["A", "n"]},
     "Det"], 
    TemplateBox[{
      SubscriptBox["B", "n"]},
     "Det"]]}], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.4662910548954573`*^9, 3.466291068882698*^9}, {
  3.466293664873282*^9, 3.466293741157631*^9}, {3.5489609012594767`*^9, 
  3.548960906725114*^9}, {3.548961373637991*^9, 3.548961385373732*^9}},
 CellTags->
  "ratio of \
determinants",ExpressionUUID->"121f19ce-38af-40b2-a6ec-6d9dcc3554ea"],

Cell["\<\
generates a set of orthogonal polynomials with respect to the inner product\
\>", "Text",
 CellChangeTimes->{{3.466292653946843*^9, 3.466292730206349*^9}, {
   3.466292775102665*^9, 3.466292775615608*^9}, {3.466292819484614*^9, 
   3.466292859074419*^9}, {3.466292892192919*^9, 3.466292912246058*^9}, {
   3.4662929677994413`*^9, 3.4662929748204737`*^9}, {3.466293014805739*^9, 
   3.46629301797198*^9}, {3.466293166254043*^9, 3.466293198565628*^9}, 
   3.466293243897437*^9, {3.4662934593509197`*^9, 3.466293482251936*^9}, {
   3.4662938638322353`*^9, 3.466293883221532*^9}, {3.466294014186393*^9, 
   3.4662941077651577`*^9}, 3.516605099944734*^9, {3.548961437524427*^9, 
   3.5489614657793913`*^9}, {3.548961528352962*^9, 
   3.548961575204455*^9}},ExpressionUUID->"57ea171d-d61a-4985-b90c-\
efc6bd3db8a0"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"f", ",", "g"}], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{"x", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]], 
     RowBox[{"f", "(", "x", ")"}], 
     RowBox[{"g", "(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.4662910548954573`*^9, 3.466291068882698*^9}, {
  3.466293664873282*^9, 3.466293741157631*^9}, {3.5489609012594767`*^9, 
  3.548960906725114*^9}, {3.548961580265497*^9, 3.548961596941742*^9}},
 CellTags->
  "inner product",ExpressionUUID->"c4ae2776-c1cb-4bd1-815e-fc10fd7e6acd"],

Cell[TextData[{
 "Compute and save ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "k"], TraditionalForm]],ExpressionUUID->
  "41f4cbee-d423-4763-9835-1b30852b1b16"],
 ".",
 " ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{3.548961888868309*^9, 3.5489619263589783`*^9, 
  3.5489623985032587`*^9},ExpressionUUID->"45272cd9-7547-433a-9d4e-\
165f906ca2ab"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["SparseArray",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/SparseArray"]],ExpressionUUID->
  "14b5478b-315a-46c2-8b1b-3caa58a248ab"],
 " to define the matrices ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "n"], TraditionalForm]],ExpressionUUID->
  "3983418d-5d51-4bdc-8558-eb7c00a255e6"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "n"], TraditionalForm]],ExpressionUUID->
  "db496caf-b8fc-46e2-887a-11ad8b8a25af"],
 " in equation (",
 
 CounterBox["DisplayFormulaNumbered", "a and b matrices"],
 ") for general ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "24d64985-0013-4d47-865f-d774b0d4ef36"],
 ".",
 " ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{
  3.548961888868309*^9, {3.5489619263589783`*^9, 3.548961941088571*^9}, 
   3.5489619811628532`*^9, {3.548962250304141*^9, 3.548962263799552*^9}, {
   3.548962299526134*^9, 3.548962302212401*^9}, 
   3.548962404547529*^9},ExpressionUUID->"1d3838a2-934e-41cf-92e1-\
e2c25679d1d1"],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[ScriptCapitalL]", "n"], "(", "x", ")"}], TraditionalForm]],
  CellChangeTimes->{{3.4662910548954573`*^9, 3.466291068882698*^9}, {
   3.466293664873282*^9, 3.466293741157631*^9}, {3.5489609012594767`*^9, 
   3.548960906725114*^9}, {3.548961373637991*^9, 3.548961385373732*^9}},
  ExpressionUUID->"2fd13c3e-ace5-455b-80df-0919df5215bd"],
 " using equation (",
 
 CounterBox["DisplayFormulaNumbered", "ratio of determinants"],
 ") for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "=", "0"}], ",", "1", ",", "\[Ellipsis]", ",", "5"}], 
   TraditionalForm]],ExpressionUUID->"386b32ce-1b49-4995-85ec-2c75e7ee6a05"],
 ".",
 " ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{
  3.548961888868309*^9, {3.5489619263589783`*^9, 3.548961941088571*^9}, {
   3.5489619811628532`*^9, 3.548962022661749*^9}, {3.548962269128633*^9, 
   3.548962318267209*^9}, 
   3.548962418975953*^9},ExpressionUUID->"eba48934-6839-4084-8426-\
8a1177c672c2"],

Cell[TextData[{
 "Verify that this set of polynomials is orthogonal with respect to the inner \
product (",
 
 CounterBox["DisplayFormulaNumbered", "inner product"],
 "). ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Item",
 CellChangeTimes->{
  3.548961888868309*^9, {3.5489619263589783`*^9, 3.548961941088571*^9}, {
   3.5489619811628532`*^9, 3.5489619895874*^9}, {3.548962074535788*^9, 
   3.548962122796307*^9}, {3.548962361296693*^9, 3.5489623747800627`*^9}, {
   3.5489624327191753`*^9, 
   3.548962437750456*^9}},ExpressionUUID->"96ed5518-6615-49c7-addb-\
ba7b93451769"],

Cell[CellGroupData[{

Cell["Solution", "Solution",
 CellChangeTimes->{{3.450492134067934*^9, 3.4504921365634604`*^9}, 
   3.512197033318738*^9},ExpressionUUID->"9c8ffe18-91e6-4c8b-ad4e-\
55aa3fbd99c4"],

Cell[TextData[{
 "Compute and save ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "k"], TraditionalForm]],ExpressionUUID->
  "e593e182-2dc7-444e-9d89-3d5c0b58c756"],
 ": ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.51771666384663*^9, 3.517716677211877*^9}, {
  3.548920776285227*^9, 3.548920776285386*^9}, {3.548921397063386*^9, 
  3.548921400284568*^9}, {3.548961892158272*^9, 3.5489618996094*^9}, {
  3.548962392565996*^9, 
  3.5489623953680153`*^9}},ExpressionUUID->"4dc6a9f7-e20c-4e63-982f-\
5589df8bb95c"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"m", "/:", 
   SubscriptBox["m", "k_"], "=", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"k", "\[GreaterEqual]", "0"}], ",", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], 
       SuperscriptBox["x", "k"], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.548960736665326*^9, 
  3.54896075171133*^9}},ExpressionUUID->"1b1c202f-0387-465a-a811-\
5e0357c87952"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
    RowBox[{"k", "+", "1"}]},
   "Gamma"], TraditionalForm]], "Output",
 CellChangeTimes->{3.548960753677903*^9, 
  3.5489627821921597`*^9},ExpressionUUID->"35acfbe8-8afc-48cf-b318-\
0234e2ccfb48"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["SparseArray",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/SparseArray"]],ExpressionUUID->
  "c275a55c-30cd-4a80-8e21-a83c73d0e57d"],
 " to define the matrices ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "n"], TraditionalForm]],ExpressionUUID->
  "f3e43f04-ca4d-4ec4-a540-0d09260117ec"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "n"], TraditionalForm]],ExpressionUUID->
  "672c3927-2716-4221-b1ac-ed2ded4d593e"],
 " for general ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "71730a22-5201-45be-b3bb-b8cf72fd6a5b"],
 ":",
 " ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.51771666384663*^9, 3.517716677211877*^9}, {
   3.548920776285227*^9, 3.548920776285386*^9}, {3.548921397063386*^9, 
   3.548921400284568*^9}, {3.548961892158272*^9, 3.548961934963571*^9}, 
   3.548962389966321*^9},ExpressionUUID->"68799423-d4b7-4950-b937-\
2dd2eb49eb48"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["A", "n_"], ":=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "j_"}], "}"}], "\[Rule]", 
        SuperscriptBox["x", 
         RowBox[{"j", "-", "1"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], "\[Rule]", 
        SubscriptBox["m", 
         RowBox[{"i", "+", "j", "-", "2"}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "+", "1"}], ",", 
       RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], TraditionalForm]], "Input",\

 CellChangeTimes->{{3.466293887335532*^9, 3.466293937862941*^9}, {
  3.466293971204771*^9, 3.4662939767722883`*^9}, {3.516604951325753*^9, 
  3.516604955478786*^9}, {3.5489607690681257`*^9, 3.548960780578932*^9}, {
  3.548960822004953*^9, 
  3.548960826236137*^9}},ExpressionUUID->"cb15989a-e5cb-49e1-a11a-\
f41baa5d1744"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["B", "n_"], ":=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", "j_"}], "}"}], "\[Rule]", 
       SubscriptBox["m", 
        RowBox[{"i", "+", "j", "-", "2"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "+", "1"}], ",", 
       RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], TraditionalForm]], "Input",\

 CellChangeTimes->{{3.466293887335532*^9, 3.466293937862941*^9}, {
   3.466293971204771*^9, 3.466294002803554*^9}, 3.51660495967245*^9, {
   3.548960830547687*^9, 
   3.5489608339387083`*^9}},ExpressionUUID->"fc5abf8d-ff7b-49bd-a3b6-\
6cff05f98213"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Normal", "[", 
   SubscriptBox["A", "3"], "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.4662939798507347`*^9, 3.466293984947337*^9}, 
   3.51660497073524*^9, 
   3.548962039138373*^9},ExpressionUUID->"5f22852a-ecea-481f-bd18-\
bb9535720a90"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "x", 
      SuperscriptBox["x", "2"], 
      SuperscriptBox["x", "3"]},
     {"1", "2", "6", "24"},
     {"2", "6", "24", "120"},
     {"6", "24", "120", "720"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.4662939853160686`*^9, 3.48504258175521*^9, {3.516604964508206*^9, 
   3.51660497116681*^9}, 3.548960835727038*^9, 3.548962043603198*^9, 
   3.548962784547764*^9},ExpressionUUID->"45c61fe3-bab1-4610-9d17-\
872a7aab2ef2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Normal", "[", 
   SubscriptBox["B", "3"], "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.4662939798507347`*^9, 3.466294008074815*^9}, 
   3.5166049744607563`*^9, 
   3.548962040911029*^9},ExpressionUUID->"6fd5d188-add2-4623-bafa-\
68632805403f"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "2", "6"},
     {"1", "2", "6", "24"},
     {"2", "6", "24", "120"},
     {"6", "24", "120", "720"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.466294008298152*^9, 3.4850425836923447`*^9, {3.516604966797291*^9, 
   3.5166049751165743`*^9}, 3.548960838012339*^9, 3.548962041660418*^9, 
   3.54896278483315*^9},ExpressionUUID->"2db6fb65-896f-422d-bcca-\
f1fa9fa6c29e"]
}, Open  ]],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[ScriptCapitalL]", "n"], "(", "x", ")"}], TraditionalForm]],
  CellChangeTimes->{{3.4662910548954573`*^9, 3.466291068882698*^9}, {
   3.466293664873282*^9, 3.466293741157631*^9}, {3.5489609012594767`*^9, 
   3.548960906725114*^9}, {3.548961373637991*^9, 3.548961385373732*^9}},
  ExpressionUUID->"74b2c90b-9316-4d85-a575-8edef90b2f6d"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "=", "0"}], ",", "1", ",", "\[Ellipsis]", ",", "5"}], 
   TraditionalForm]],ExpressionUUID->"24d2ef4f-2676-4b0c-a501-ff7c7da7d5af"],
 ":",
 " ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.51771666384663*^9, 3.517716677211877*^9}, {
   3.548920776285227*^9, 3.548920776285386*^9}, {3.548921397063386*^9, 
   3.548921400284568*^9}, {3.548961892158272*^9, 3.548961893565782*^9}, {
   3.5489620010482473`*^9, 3.548962002567439*^9}, 3.548962450275277*^9, 
   3.548962521162053*^9},ExpressionUUID->"3f2192f8-8859-42db-835b-\
3dc2f5144df6"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[ScriptCapitalL]", "n"], "(", "x_", ")"}], "=", 
       RowBox[{"Factor", "[", 
        FractionBox[
         TemplateBox[{
           SubscriptBox["A", "n"]},
          "Det"], 
         TemplateBox[{
           SubscriptBox["B", "n"]},
          "Det"]], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.548961051963499*^9, 
  3.54896110989003*^9}},ExpressionUUID->"d8072549-5ec4-4216-b238-\
6d37fb7c3e0d"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1"},
     {"1", 
      RowBox[{"2", "-", "x"}]},
     {"2", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "2"], "-", 
         RowBox[{"6", " ", "x"}], "+", "6"}], ")"}]}]},
     {"3", 
      RowBox[{
       FractionBox["1", "6"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"12", " ", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"36", " ", "x"}], "+", "24"}], ")"}]}]},
     {"4", 
      RowBox[{
       FractionBox["1", "24"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "4"], "-", 
         RowBox[{"20", " ", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"120", " ", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"240", " ", "x"}], "+", "120"}], ")"}]}]},
     {"5", 
      RowBox[{
       FractionBox["1", "120"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["x", "5"]}], "+", 
         RowBox[{"30", " ", 
          SuperscriptBox["x", "4"]}], "-", 
         RowBox[{"300", " ", 
          SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"1200", " ", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"1800", " ", "x"}], "+", "720"}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.548962061997748*^9, 
  3.5489627871039352`*^9},ExpressionUUID->"e99d9007-d782-413a-b33a-\
0c395b4007f5"]
}, Open  ]],

Cell[TextData[{
 "Define the inner product (",
 
 CounterBox["DisplayFormulaNumbered", "inner product"],
 "): ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.51771666384663*^9, 3.517716677211877*^9}, {
  3.548920776285227*^9, 3.548920776285386*^9}, {3.548921397063386*^9, 
  3.548921400284568*^9}, {3.548961892158272*^9, 3.548961893565782*^9}, {
  3.5489620010482473`*^9, 3.548962002567439*^9}, {3.548962450275277*^9, 
  3.548962468828875*^9}, {3.548962518043435*^9, 
  3.5489625182593184`*^9}},ExpressionUUID->"63da58d0-3844-420c-bcbb-\
fdb19e69ac95"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"f_", ",", "g_"}], "\[RightAngleBracket]"}], ":=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]], 
     RowBox[{"Expand", "[", 
      RowBox[{"x", " ", "f", " ", "g"}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.548961607079845*^9, 3.5489616365962467`*^9}, {
  3.5489616791365023`*^9, 
  3.548961681723805*^9}},ExpressionUUID->"d97648c0-0107-4048-9877-\
2b3b14f29b8a"],

Cell[TextData[{
 "Verify that this set of polynomials is orthogonal with respect to the inner \
product (",
 
 CounterBox["DisplayFormulaNumbered", "inner product"],
 "): ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "MathCaption",
 CellChangeTimes->{{3.51771666384663*^9, 3.517716677211877*^9}, {
   3.548920776285227*^9, 3.548920776285386*^9}, {3.548921397063386*^9, 
   3.548921400284568*^9}, {3.548961892158272*^9, 3.548961893565782*^9}, {
   3.5489620010482473`*^9, 3.548962002567439*^9}, {3.548962450275277*^9, 
   3.5489625150755253`*^9}, {3.54896292088505*^9, 3.548962922052527*^9}, 
   3.548963010840714*^9},ExpressionUUID->"14983603-840b-490c-b33c-\
2e8677309f08"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[ScriptCapitalL]", "i"], "(", "x", ")"}], ",", 
      RowBox[{
       SubscriptBox["\[ScriptCapitalL]", "j"], "(", "x", ")"}]}], 
     "\[RightAngleBracket]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], 
  TraditionalForm]], "Input",ExpressionUUID->"28764955-98b8-4e0e-8de1-\
f11471915969"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0"},
     {"0", "2", "0", "0", "0", "0"},
     {"0", "0", "3", "0", "0", "0"},
     {"0", "0", "0", "4", "0", "0"},
     {"0", "0", "0", "0", "5", "0"},
     {"0", "0", "0", "0", "0", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5489616699647837`*^9, 
  3.548961701378434*^9},ExpressionUUID->"350ba96a-c117-4e78-a9c5-\
37c98be13070"]
}, Open  ]],

Cell["\<\
Here is a quick way to do all the integrals using pattern-matching and the \
moment integral:\
\>", "MathCaption",
 CellChangeTimes->{{3.51771666384663*^9, 3.517716677211877*^9}, {
  3.548920776285227*^9, 3.548920776285386*^9}, {3.548921397063386*^9, 
  3.548921400284568*^9}, {3.548961892158272*^9, 3.548961893565782*^9}, {
  3.5489620010482473`*^9, 3.548962002567439*^9}, {3.548962450275277*^9, 
  3.5489625150755253`*^9}, {3.54896292088505*^9, 3.548962922052527*^9}, {
  3.548963010840714*^9, 
  3.548963055529174*^9}},ExpressionUUID->"201f9aa1-2f72-4c0e-878d-\
91772bf64fc4"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{"f_", ",", "g_"}], "\[RightAngleBracket]"}], ":=", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{"x", " ", "f", " ", "g"}], "]"}], "/.", 
    RowBox[{
     SuperscriptBox["x", "k_."], "\[RuleDelayed]", 
     SubscriptBox["m", "k"]}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.548961607079845*^9, 3.5489616365962467`*^9}, {
  3.5489616791365023`*^9, 3.548961681723805*^9}, {3.548961737626418*^9, 
  3.548961770711617*^9}},ExpressionUUID->"b92bce00-3b1c-466b-b007-\
8b3f16b2c5d6"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Outer", "[", 
   RowBox[{"AngleBracket", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[ScriptCapitalL]", "n"], "(", "x", ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[ScriptCapitalL]", "n"], "(", "x", ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "]"}], 
  TraditionalForm]], "Input",ExpressionUUID->"bc35187e-0eed-42f4-ba8c-\
72e634bebac1"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0"},
     {"0", "2", "0", "0", "0", "0"},
     {"0", "0", "3", "0", "0", "0"},
     {"0", "0", "0", "4", "0", "0"},
     {"0", "0", "0", "0", "5", "0"},
     {"0", "0", "0", "0", "0", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.548962666987042*^9, 3.5489627939221354`*^9, 
  3.548963005647018*^9},ExpressionUUID->"924bf854-7be4-4a49-b6f5-\
52d3302c189c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[ScriptCapitalL]", "i"], "(", "x", ")"}], ",", 
      RowBox[{
       SubscriptBox["\[ScriptCapitalL]", "j"], "(", "x", ")"}]}], 
     "\[RightAngleBracket]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.5489616442086153`*^9, 3.548961663341332*^9}, {
  3.548962554611101*^9, 3.54896257854492*^9}, {3.5489626299230757`*^9, 
  3.548962634722941*^9}, {3.548962844337831*^9, 3.548962846537612*^9}, {
  3.5489629023755827`*^9, 
  3.5489629085011578`*^9}},ExpressionUUID->"c2078f0c-0aa7-4856-9e8f-\
b634681d18b2"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0"},
     {"0", "2", "0", "0", "0", "0"},
     {"0", "0", "3", "0", "0", "0"},
     {"0", "0", "0", "4", "0", "0"},
     {"0", "0", "0", "0", "5", "0"},
     {"0", "0", "0", "0", "0", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5489625791060553`*^9, 3.548962635636694*^9, 3.548962795654833*^9, {
   3.548962905020797*^9, 
   3.548962909857362*^9}},ExpressionUUID->"d0e186f1-cf35-4cdd-8fc0-\
abb9fa1f7ffe"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Comments", "Solution",
 CellChangeTimes->{{3.450492134067934*^9, 3.4504921365634604`*^9}, 
   3.512197033318738*^9},ExpressionUUID->"546dd2e0-0be8-4a50-89f9-\
0674236f5b2a"],

Cell[TextData[{
 "The matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "n"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7afd69f4-0ed4-4656-a507-908a94ef53dc"],
 " is a ",
 ButtonBox["Hankel matrix",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Hankel_matrix"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Hankel_matrix"],
 "."
}], "Text",ExpressionUUID->"11bb2b6e-703b-4889-b85e-b61391ea6d33"],

Cell[TextData[{
 "Moreover, the ",
 ButtonBox["Hamburger moment problem",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Hamburger_moment_problem"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Hamburger_moment_problem"],
 " is intimately related to orthogonal polynomials on the real line.  "
}], "Text",ExpressionUUID->"945ee43d-1d95-429a-9c3b-b4976fc5c26f"],

Cell[TextData[{
 "One can recognise that the orthogonal polynomials arising here are the \
associated Laguerre polynomials, ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"n", "1", "x"},
    "LaguerreL3"], TraditionalForm]],ExpressionUUID->
  "24df3e11-33fb-47e1-9bbc-e9bb37a8a42f"],
 ":"
}], "Text",ExpressionUUID->"cbdf7dc7-fed8-4631-865d-30bb72274810"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  TemplateBox[{
    RowBox[{"Range", "[", 
      RowBox[{"0", ",", "5"}], "]"}], "1", "x"},
   "LaguerreL3"], TraditionalForm]], "Input",
 CellLabel->
  "In[863]:=",ExpressionUUID->"3f67378e-3ffd-4983-b910-2b5258b6db9b"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"2", "-", "x"}], ",", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", 
       RowBox[{"6", " ", "x"}], "+", "6"}], ")"}]}], ",", 
    RowBox[{
     FractionBox["1", "6"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"36", " ", "x"}], "+", "24"}], ")"}]}], ",", 
    RowBox[{
     FractionBox["1", "24"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "4"], "-", 
       RowBox[{"20", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"120", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"240", " ", "x"}], "+", "120"}], ")"}]}], ",", 
    RowBox[{
     FractionBox["1", "120"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "5"]}], "+", 
       RowBox[{"30", " ", 
        SuperscriptBox["x", "4"]}], "-", 
       RowBox[{"300", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"1200", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"1800", " ", "x"}], "+", "720"}], ")"}]}]}], "}"}], 
  TraditionalForm]], "Output",
 CellLabel->
  "Out[863]=",ExpressionUUID->"f9a68ba0-9c06-42ad-9fb4-ac0234b76c6b"]
}, Open  ]],

Cell[TextData[{
 "This is as expected from the given inner product (",
 
 CounterBox["DisplayFormulaNumbered", "inner product"],
 ")."
}], "Text",ExpressionUUID->"d973c0f5-8659-4cc9-bb35-272d2a56b01e"]
}, Open  ]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowSize->{1276, 756},
WindowMargins->{{58, Automatic}, {Automatic, 69}},
DockedCells->{
  Cell[
   BoxData[
    GridBox[{{"", 
       RowBox[{
        "Math2200: Applied Mathematics", "  \[LongDash]  Exam Solutions"}], 
       TagBox[
        ButtonBox[
         StyleBox["Next Exercise \[FilledRightTriangle]", FontSize -> 10], 
         Appearance -> None, ButtonFunction :> FrontEndExecute[{NotebookFind[
              EvaluationNotebook[], "Exercise", Next, CellStyle]; 
            FrontEndToken[
              EvaluationNotebook[], "OpenCloseGroup"]}]], "Button", 
        TagBoxNote -> 
        "Click here to move the selection to the next exercise"]}}]], 
   GridBoxOptions -> {
    GridBoxAlignment -> {"Columns" -> {{Left, Center, Right}}}, 
     GridBoxItemSize -> {"Columns" -> {
         Scaled[0.12], 
         Scaled[0.7], 
         Scaled[0.18]}}}, "Title", FontSize -> 10, CellSize -> {100, 18}, 
   Background -> RGBColor[0.255, 0, 0], CellMargins -> {{0, 0}, {0, 0}}, 
   CellTags -> "DockedTitle"]},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (May 11, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Titles", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], ShowCellBracket -> False, ShowSelection -> 
             True, ShowGroupOpener -> False, CellMargins -> {{0, 0}, {0, 0}}, 
             MenuSortingValue -> None, MenuCommandKey :> None, FontSize -> 22,
              FontWeight -> "SemiBold", FontColor -> 
             RGBColor[0.96, 0.96, 0.96], Background -> RGBColor[0.255, 0, 0]], 
            Cell[
             StyleData["Title", "SlideShow"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 22, FontWeight -> 
             "SemiBold", FontColor -> RGBColor[0.96, 0.96, 0.96], Background -> 
             RGBColor[0.255, 0, 0], $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None], 
            Cell[
             StyleData["Title", "Printout"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 22, FontWeight -> 
             "SemiBold", $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, ShowSelection -> 
             True, ShowGroupOpener -> False, CellMargins -> {{0, 0}, {0, 0}}, 
             MenuSortingValue -> None, MenuCommandKey :> None, FontSize -> 18,
              FontWeight -> "SemiBold", FontColor -> 
             RGBColor[0.96, 0.96, 0.96], Background -> RGBColor[0.355, 0, 0]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 18, FontWeight -> 
             "SemiBold", FontColor -> RGBColor[0.96, 0.96, 0.96], Background -> 
             RGBColor[0.355, 0, 0], $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None], 
            Cell[
             StyleData["Subtitle", "Printout"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 18, FontWeight -> 
             "SemiBold", $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, MenuSortingValue -> None, 
             MenuCommandKey :> None, FontSize -> 14, FontWeight -> "SemiBold",
              FontColor -> RGBColor[0.96, 0.96, 0.96], Background -> 
             RGBColor[0.455, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "SlideShow"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 14, FontWeight -> 
             "SemiBold", FontColor -> RGBColor[0.96, 0.96, 0.96], Background -> 
             RGBColor[0.455, 0, 0], $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None], 
            Cell[
             StyleData["Subsubtitle", "Printout"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 14, FontWeight -> 
             "SemiBold", $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None]}, Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
         "Sections", "Subsection", 
          CellChangeTimes -> {{3.443916926560617*^9, 
           3.4439169279993553`*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> TextData[{
                CounterBox["Section"], ". "}], ShowGroupOpener -> True, 
             WholeCellGroupOpener -> True, 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "Theorem", 0}}, FontColor -> RGBColor[0, 0, 0.498039]], 
            Cell[
             StyleData["Section", "Presentation"], CellDingbat -> TextData[{
                CounterBox["Section"], ". "}], 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "DisplayFormulaNumbered", 0}, {"Theorem", 0}}, FontColor -> 
             RGBColor[0, 0, 0.498039]], 
            Cell[
             StyleData["Section", "Condensed"], CellDingbat -> TextData[{
                CounterBox["Section"], ". "}], 
             CellMargins -> {{28, Inherited}, {6, 12}}, 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "DisplayFormulaNumbered", 0}, {"Theorem", 0}}, FontColor -> 
             RGBColor[0, 0, 0.498039]], 
            Cell[
             StyleData["Section", "Printout"], CellDingbat -> TextData[{
                CounterBox["Section"], ". "}], 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "DisplayFormulaNumbered", 0}, {"Theorem", 0}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"]}], ShowGroupOpener -> True, 
             WholeCellGroupOpener -> True, FontColor -> 
             RGBColor[0, 0.333333, 0]], 
            Cell[
             StyleData["Subsection", "Presentation"], CellDingbat -> TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"]}], 
             CellChangeTimes -> {3.47458489839288*^9}, FontColor -> 
             RGBColor[0, 0.333333, 0]], 
            Cell[
             StyleData["Subsection", "Condensed"], CellDingbat -> TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"]}], 
             CellMargins -> {{30, Inherited}, {6, 12}}, FontColor -> 
             RGBColor[0, 0.333333, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], CellDingbat -> TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"]}], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"], ".", 
                CounterBox["Subsubsection"]}], ShowGroupOpener -> True, 
             WholeCellGroupOpener -> True, FontColor -> 
             RGBColor[0, 0, 0.368627]], 
            Cell[
             StyleData["Subsubsection", "Presentation"], CellDingbat -> 
             TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"], ".", 
                CounterBox["Subsubsection"]}], FontColor -> 
             RGBColor[0, 0, 0.368627]], 
            Cell[
             StyleData["Subsubsection", "Condensed"], CellDingbat -> TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"], ".", 
                CounterBox["Subsubsection"]}], 
             CellMargins -> {{30, Inherited}, {6, 12}}, FontColor -> 
             RGBColor[0, 0, 0.368627]], 
            Cell[
             StyleData["Subsubsection", "Printout"], CellDingbat -> 
             TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"], ".", 
                CounterBox["Subsubsection"]}], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsection"], ShowGroupOpener -> True, 
             WholeCellGroupOpener -> True, MenuSortingValue -> 1355, 
             FontColor -> RGBColor[0, 0.262745, 0]], 
            Cell[
             StyleData["Subsubsubsection", "Presentation"], MenuSortingValue -> 
             1355, FontColor -> RGBColor[0, 0.262745, 0]], 
            Cell[
             StyleData["Subsubsubsection", "Printout"], 
             CellMargins -> {{Inherited, 0}, {7, 14}}, MenuSortingValue -> 
             1355, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsubsection"], MenuSortingValue -> 1356], 
            Cell[
             StyleData["Subsubsubsubsection", "Presentation"], 
             MenuSortingValue -> 1356], 
            Cell[
             StyleData["Subsubsubsubsection", "Printout"], 
             CellMargins -> {{Inherited, 0}, {7, 14}}, MenuSortingValue -> 
             1356]}, Closed]]}, Open]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Theorem-Proof", "Section", 
       CellChangeTimes -> {{3.443916926560617*^9, 3.4439169279993553`*^9}, {
        3.469269419329535*^9, 3.469269424322864*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Theorem"], CellDingbat -> TextData[{
             StyleBox["Thm", FontWeight -> "Bold"], " ", 
             CounterBox["Section"], ".", 
             CounterBox["Theorem"], "  "}], CellMargins -> {{50, 10}, {7, 7}},
           CellGroupingRules -> {"SectionGrouping", 80}, 
          CounterIncrements -> {"Theorem", 1}, MenuSortingValue -> 1800], 
         Cell[
          StyleData["Theorem", "Presentation"], CellDingbat -> TextData[{
             StyleBox["Thm", FontWeight -> "Bold"], " ", 
             CounterBox["Section"], ".", 
             CounterBox["Theorem"], "  "}], CellMargins -> {{50, 10}, {7, 7}},
           CellGroupingRules -> {"SectionGrouping", 80}, 
          CounterIncrements -> {"Theorem", 1}, MenuSortingValue -> 1360, 
          FontSize -> 24], 
         Cell[
          StyleData["Theorem", "Printout"], CellDingbat -> TextData[{
             StyleBox["Thm", FontWeight -> "Bold"], " ", 
             CounterBox["Section"], ".", 
             CounterBox["Theorem"], "  "}], CellMargins -> {{50, 10}, {7, 7}},
           CellGroupingRules -> {"SectionGrouping", 80}, 
          CounterIncrements -> {"Theorem", 1}, MenuSortingValue -> 1360]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Proof"], CellDingbat -> TextData[{
             StyleBox["Proof:", FontSlant -> "Italic"], ""}], 
          CellMargins -> {{60, 10}, {7, 7}}, 
          CellGroupingRules -> {"SectionGrouping", 85}, MenuSortingValue -> 
          1810], 
         Cell[
          StyleData["Proof", "Presentation"], CellDingbat -> TextData[{
             StyleBox["Proof:", FontSlant -> "Italic"], ""}], 
          CellMargins -> {{60, 10}, {7, 7}}, 
          CellGroupingRules -> {"SectionGrouping", 85}, MenuSortingValue -> 
          1365, FontSize -> 24], 
         Cell[
          StyleData["Proof", "Printout"], CellDingbat -> TextData[{
             StyleBox["Proof:", FontSlant -> "Italic"], ""}], 
          CellMargins -> {{60, 10}, {7, 7}}, 
          CellGroupingRules -> {"SectionGrouping", 85}, MenuSortingValue -> 
          1365]}, Closed]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InlineFormula"], CellMargins -> {{10, 4}, {0, 8}}, 
          StripStyleOnPaste -> True, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           LanguageCategory -> "Formula", ScriptLevel -> 1, 
          SingleLetterItalics -> True, MenuSortingValue -> 1650], 
         Cell[
          StyleData["InlineFormula", "Presentation"], 
          CellMargins -> {{10, 4}, {0, 12}}, LineSpacing -> {1, 5}, FontSize -> 
          24], 
         Cell[
          StyleData["InlineFormula", "Condensed"], 
          CellMargins -> {{8, 10}, {6, 6}}, LineSpacing -> {1, 1}, FontSize -> 
          11], 
         Cell[
          StyleData["InlineFormula", "Printout"], 
          CellMargins -> {{2, 0}, {6, 6}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DisplayFormula"], 
          CellMargins -> {{60, Inherited}, {Inherited, Inherited}}, 
          CellGroupingRules -> "NormalGrouping", StripStyleOnPaste -> True, 
          DefaultFormatType -> DefaultInputFormatType, TextAlignment -> 
          Center, HyphenationOptions -> {
           "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
          "Formula", ScriptLevel -> 0, SingleLetterItalics -> True, 
          MenuSortingValue -> 1700, 
          UnderoverscriptBoxOptions -> {LimitsPositioning -> True}], 
         Cell[
          StyleData["DisplayFormula", "Presentation"], 
          CellMargins -> {{60, Inherited}, {1.5 Inherited, 1.5 Inherited}}, 
          LineSpacing -> {1, 5}, FontSize -> 24], 
         Cell[
          StyleData["DisplayFormula", "Condensed"], LineSpacing -> {1, 1}, 
          FontSize -> 11], 
         Cell[
          StyleData["DisplayFormula", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DisplayFormulaNumbered"], 
          CellMargins -> {{60, Inherited}, {Inherited, Inherited}}, 
          StripStyleOnPaste -> True, ShowCellLabel -> True, 
          CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["DisplayFormulaNumbered"], ")"}]]}, {None, None}}, 
          DefaultFormatType -> DefaultInputFormatType, TextAlignment -> 
          Center, HyphenationOptions -> {
           "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
          "Formula", ScriptLevel -> 0, SingleLetterItalics -> True, 
          CounterIncrements -> "DisplayFormulaNumbered", MenuSortingValue -> 
          1710, UnderoverscriptBoxOptions -> {LimitsPositioning -> True}], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Presentation"], 
          CellMargins -> {{60, Inherited}, {1.5 Inherited, 1.5 Inherited}}, 
          CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["Section"], ".", 
                CounterBox["DisplayFormulaNumbered"], ")"}]]}, {None, None}}, 
          LineSpacing -> {1, 5}, FontSize -> 24], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Condensed"], 
          CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["Section"], ".", 
                CounterBox["DisplayFormulaNumbered"], ")"}]]}, {None, None}}, 
          LineSpacing -> {1, 1}, FontSize -> 11], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Program"], CellFrame -> {{0, 0}, {0.5, 0.5}}, 
          CellMargins -> {{60, 4}, {0, 8}}, StripStyleOnPaste -> True, 
          Hyphenation -> False, LanguageCategory -> "Formula", ScriptLevel -> 
          1, MenuSortingValue -> 1800, FontFamily -> "Courier"], 
         Cell[
          StyleData["Program", "Presentation"], CellFrame -> {{0, 0}, {1, 1}},
           CellMargins -> {{60, 4}, {0, 12}}, LineSpacing -> {1, 5}, FontSize -> 
          24], 
         Cell[
          StyleData["Program", "Condensed"], CellMargins -> {{8, 10}, {6, 6}},
           LineSpacing -> {1, 1}, FontSize -> 11], 
         Cell[
          StyleData["Program", "Printout"], CellMargins -> {{2, 0}, {6, 6}}]},
         Closed]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "References", "Section", 
       CellChangeTimes -> {{3.443916926560617*^9, 3.4439169279993553`*^9}, {
        3.469269419329535*^9, 3.469269424322864*^9}, {3.469271823780828*^9, 
        3.469271825171331*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Reference"], CellDingbat -> TextData[{"[", 
             CounterBox["Reference"], "]"}], 
          CellMargins -> {{60, 10}, {7, 7}}, 
          CounterIncrements -> {"Reference", 1}, MenuSortingValue -> 1990], 
         Cell[
          StyleData["Reference", "Presentation"], CellDingbat -> 
          TextData[{"[", 
             CounterBox["Reference"], "]"}], 
          CellMargins -> {{60, 10}, {7, 7}}, 
          CounterIncrements -> {"Reference", 1}, FontSize -> 18], 
         Cell[
          StyleData["Reference", "Printout"], CellDingbat -> TextData[{"[", 
             CounterBox["Reference"], "]"}], 
          CellMargins -> {{20, 10}, {7, 7}}, 
          CounterIncrements -> {"Reference", 1}]}, Closed]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Others", "Section", 
       CellChangeTimes -> {{3.443916926560617*^9, 3.4439169279993553`*^9}, {
        3.469269419329535*^9, 3.469269424322864*^9}, {3.469271823780828*^9, 
        3.469271825171331*^9}, {3.474583951374827*^9, 3.47458395192933*^9}}], 
      
      Cell[
       StyleData["CompleteThis"], CellDingbat -> "\[Wolf]", MenuSortingValue -> 
       2000, FontColor -> RGBColor[1, 0, 0]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Warning"], CellDingbat -> "\[WarningSign]", 
          CellMargins -> {{36, 24}, {Inherited, Inherited}}, 
          LineSpacing -> {1, 3}, MenuSortingValue -> 2010], 
         Cell[
          StyleData["Warning", "SlideShow"], CellDingbat -> "\[WarningSign]", 
          CellMargins -> {{36, 24}, {Inherited, Inherited}}, 
          LineSpacing -> {1, 3}, FontSize -> 20, $CellContext`MenuPosition -> 
          1560]}, Closed]], 
      Cell[
       StyleData["Item"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{75, 10}, {4, 4}}, ReturnCreatesNewCell -> True, 
       CellGroupingRules -> {"SectionGrouping", 57}, CellFrameLabelMargins -> 
       4, CounterIncrements -> "Item", 
       CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
       MenuSortingValue -> 1600], 
      Cell[
       StyleData["ItemParagraph"], CellMargins -> {{75, 10}, {4, 4}}, 
       MenuSortingValue -> 10000]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Exercises", "Section", 
       CellChangeTimes -> {{3.443917031568693*^9, 3.4439170337125263`*^9}}], 
      Cell[
       StyleData["Exercise"], CellDingbat -> TextData[{"Exercise ", 
          CounterBox["Exercise"], ":  "}], ShowGroupOpener -> True, 
       WholeCellGroupOpener -> True, CellMargins -> {{Inherited, 2}, {6, 6}}, 
       CellElementSpacings -> {"ClosedGroupTopMargin" -> 8}, 
       CellGroupingRules -> {"SectionGrouping", 50}, CounterIncrements -> 
       "Exercise", MenuSortingValue -> 1900, MenuCommandKey :> "6", 
       FontFamily -> "Arial", FontSize -> 12, FontWeight -> "Bold"], 
      Cell[
       StyleData["Subexercise"], CellDingbat -> TextData[{"Exercise ", 
          CounterBox["Exercise"], ".", 
          CounterBox["Subexercise"], ":  "}], ShowGroupOpener -> True, 
       WholeCellGroupOpener -> True, CellMargins -> {{Inherited, 2}, {6, 6}}, 
       CellElementSpacings -> {"ClosedGroupTopMargin" -> 8}, 
       CellGroupingRules -> {"SectionGrouping", 51}, CounterIncrements -> 
       "Subexercise", MenuSortingValue -> 1910, FontFamily -> "Arial", 
       FontSize -> 12, FontWeight -> "Bold"], 
      Cell[
       StyleData["Solution"], ShowGroupOpener -> True, WholeCellGroupOpener -> 
       True, CellMargins -> {{36, 4}, {6, 12}}, 
       CellElementSpacings -> {"ClosedGroupTopMargin" -> 4}, 
       CellGroupingRules -> {"SectionGrouping", 55}, CounterIncrements -> 
       "Subsubsection", CounterAssignments -> {{"Subsubsection", 0}}, 
       MenuSortingValue -> 1920, FontFamily -> "Helvetica", FontWeight -> 
       "Bold"]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Assignments", "Section", 
       CellChangeTimes -> {{3.443916926560617*^9, 3.4439169279993553`*^9}, {
        3.469269419329535*^9, 3.469269424322864*^9}, {3.469271823780828*^9, 
        3.469271825171331*^9}, {3.474583951374827*^9, 3.47458395192933*^9}, {
        3.474585935039929*^9, 3.47458593716241*^9}}], 
      Cell[
      "MarkersComment has shortcut", "Text", 
       CellChangeTimes -> {{3.4769374667820883`*^9, 3.476937481985606*^9}, {
        3.512189014200873*^9, 3.512189014342642*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MarkersComment"], CellFrame -> False, CellDingbat -> 
          "\[FilledCircle]", 
          CellMargins -> {{54, 25}, {Inherited, Inherited}}, 
          LineSpacing -> {1, 3}, CounterIncrements -> "Text", 
          MenuSortingValue -> 2500, MenuCommandKey :> "m", FontColor -> 
          RGBColor[0.5, 0.5, 0], Background -> 
          GrayLevel[1], $CellContext`MenuPosition -> 9000], 
         Cell[
          StyleData["MarkersComment", "Printout"], 
          CellMargins -> {{18, 4}, {Inherited, 0}}, LineSpacing -> {1, 3}, 
          FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["AssignmentMark"], Deletable -> False, CellFrame -> True, 
          CellMargins -> {{54, 25}, {Inherited, Inherited}}, CellFrameColor -> 
          RGBColor[1, 0, 0], LineSpacing -> {1, 3}, CounterIncrements -> 
          "Text", MenuSortingValue -> 2510, FontColor -> RGBColor[1, 0, 0], 
          Background -> GrayLevel[1]], 
         Cell[
          StyleData["AssignmentMark", "Printout"], Deletable -> False, 
          CellFrame -> True, CellMargins -> {{18, 4}, {Inherited, 0}}, 
          LineSpacing -> {1, 3}, FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseMark"], CellFrame -> False, CellDingbat -> 
          "\[FilledCircle]", 
          CellMargins -> {{54, 25}, {Inherited, Inherited}}, 
          LineSpacing -> {1, 3}, CounterIncrements -> "Text", 
          MenuSortingValue -> 2520, FontColor -> RGBColor[1, 0, 0], 
          Background -> GrayLevel[1]], 
         Cell[
          StyleData["ExerciseMark", "Printout"], 
          CellMargins -> {{18, 4}, {Inherited, 0}}, LineSpacing -> {1, 3}, 
          FontSize -> 10]}, Closed]]}, Open]]}, Visible -> False, 
  FrontEndVersion -> "12.3 for Mac OS X x86 (64-bit) (May 11, 2021)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
"AssignmentNumber" -> "Exam",
ExpressionUUID->"a9dfac87-412f-4026-b473-e22afbd8495a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "determinantal equation"->{
  Cell[618912, 10464, 1968, 58, 303, "DisplayFormulaNumbered",ExpressionUUID->"f91f35d8-cdff-4a55-86a8-d9cc6b7d930e",
   CellTags->"determinantal equation"]},
 "Transpose"->{
  Cell[648763, 11127, 523, 14, 62, "Text",ExpressionUUID->"a2bedb64-b500-4d89-9bc6-1fb7efced49a",
   CellTags->{"Transpose", "ComplexExpand"}]},
 "ComplexExpand"->{
  Cell[648763, 11127, 523, 14, 62, "Text",ExpressionUUID->"a2bedb64-b500-4d89-9bc6-1fb7efced49a",
   CellTags->{"Transpose", "ComplexExpand"}]},
 "nonlinear differential equation"->{
  Cell[704546, 12522, 1378, 31, 42, "DisplayFormulaNumbered",ExpressionUUID->"106bcc0a-f94e-448c-b3b4-05414afe4f1b",
   CellTags->"nonlinear differential equation"]},
 "functional equation"->{
  Cell[720953, 12952, 441, 13, 37, "DisplayFormulaNumbered",ExpressionUUID->"f6cc0b3e-cb8e-4db1-b05f-991460803c9c",
   CellTags->"functional equation"]},
 "series expansion"->{
  Cell[723273, 13028, 1202, 33, 70, "Item",ExpressionUUID->"13ed42f3-5843-4435-9764-0d2cb8f15505",
   CellTags->"series expansion"],
  Cell[724478, 13063, 1363, 38, 38, "Item",ExpressionUUID->"878991db-65f1-4a3d-b772-ef5910222a13",
   CellTags->"series expansion"]},
 "Thomas-Fermi equation"->{
  Cell[733330, 13342, 548, 16, 108, "DisplayFormulaNumbered",ExpressionUUID->"a60a41d6-9b45-4ae1-8e03-f50a1252d469",
   CellTags->"Thomas-Fermi equation"]},
 "boundary conditions"->{
  Cell[734060, 13365, 437, 12, 47, "DisplayFormulaNumbered",ExpressionUUID->"2a5718cb-3964-449c-a12e-f3ba506dda04",
   CellTags->"boundary conditions"]},
 "Euler-Lagrange equation"->{
  Cell[735370, 13401, 765, 21, 97, "DisplayFormulaNumbered",ExpressionUUID->"a82419cd-7a10-44d2-bcae-9d4f8fe0cacf",
   CellTags->"Euler-Lagrange equation"]},
 "functional"->{
  Cell[736535, 13433, 857, 24, 108, "DisplayFormulaNumbered",ExpressionUUID->"bc99819e-5105-40f8-85cc-5d0f309df291",
   CellTags->"functional"]},
 "Infinite series representation"->{
  Cell[844240, 15879, 1325, 29, 62, "Text",ExpressionUUID->"45471980-a54f-4fc2-9a88-469b89a28cd7",
   CellTags->{"Infinite series representation", "Infinite product representation"}]},
 "Infinite product representation"->{
  Cell[844240, 15879, 1325, 29, 62, "Text",ExpressionUUID->"45471980-a54f-4fc2-9a88-469b89a28cd7",
   CellTags->{"Infinite series representation", "Infinite product representation"}]},
 "infinite product"->{
  Cell[845568, 15910, 1248, 33, 118, "DisplayFormulaNumbered",ExpressionUUID->"22504cff-c530-4193-8778-67394cda0f55",
   CellTags->"infinite product"]},
 "logarithmic derivative"->{
  Cell[848543, 15985, 1357, 33, 112, "DisplayFormulaNumbered",ExpressionUUID->"2dc06ec9-def1-456d-a44d-ae3a76c9469a",
   CellTags->"logarithmic derivative"]},
 "root sum"->{
  Cell[850483, 16031, 1473, 25, 112, "DisplayFormulaNumbered",ExpressionUUID->"447f224c-2e7d-4362-ac98-acf43707c516",
   CellTags->"root sum"]},
 "a and b matrices"->{
  Cell[960890, 18371, 1621, 46, 103, "DisplayFormulaNumbered",ExpressionUUID->"3a7418e2-bcd7-418e-be79-b9348087519e",
   CellTags->"a and b matrices"]},
 "moments"->{
  Cell[963155, 18440, 590, 15, 50, "DisplayFormulaNumbered",ExpressionUUID->"adabd663-aca6-4558-be52-2358851bfafc",
   CellTags->"moments"]},
 "ratio of determinants"->{
  Cell[964485, 18469, 623, 17, 56, "DisplayFormulaNumbered",ExpressionUUID->"121f19ce-38af-40b2-a6ec-6d9dcc3554ea",
   CellTags->"ratio of determinants"]},
 "inner product"->{
  Cell[965933, 18503, 758, 18, 50, "DisplayFormulaNumbered",ExpressionUUID->"c4ae2776-c1cb-4bd1-815e-fc10fd7e6acd",
   CellTags->"inner product"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"determinantal equation", 1015675, 19798},
 {"Transpose", 1015850, 19801},
 {"ComplexExpand", 1016015, 19804},
 {"nonlinear differential equation", 1016198, 19807},
 {"functional equation", 1016391, 19810},
 {"series expansion", 1016568, 19813},
 {"Thomas-Fermi equation", 1016863, 19818},
 {"boundary conditions", 1017046, 19821},
 {"Euler-Lagrange equation", 1017230, 19824},
 {"functional", 1017405, 19827},
 {"Infinite series representation", 1017588, 19830},
 {"Infinite product representation", 1017811, 19833},
 {"infinite product", 1018019, 19836},
 {"logarithmic derivative", 1018201, 19839},
 {"root sum", 1018375, 19842},
 {"a and b matrices", 1018543, 19845},
 {"moments", 1018710, 19848},
 {"ratio of determinants", 1018880, 19851},
 {"inner product", 1019056, 19854}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 303, 5, 84, "Section",ExpressionUUID->"94a9e6d4-e1b3-4b73-94c3-8727087bb80c"],
Cell[CellGroupData[{
Cell[750, 24, 636, 12, 62, "Exercise",ExpressionUUID->"55ff5a7a-5633-4911-8128-ea4931fe6883"],
Cell[1389, 38, 1909, 62, 106, "Text",ExpressionUUID->"69927255-218f-4f55-adc7-3f67e03fd8e9"],
Cell[CellGroupData[{
Cell[3323, 104, 179, 3, 71, "Solution",ExpressionUUID->"37e0dbbe-4676-4ba1-a1bb-7e3b1504fde4"],
Cell[3505, 109, 2015, 39, 96, "MathCaption",ExpressionUUID->"a076e683-4a35-4904-a4ce-ef62d403e4a7"],
Cell[CellGroupData[{
Cell[5545, 152, 1753, 39, 175, "Input",ExpressionUUID->"b10b7beb-933f-42c6-8ae7-0f42aa150e02",
 CellID->1503548123],
Cell[7301, 193, 2123, 45, 1187, "Output",ExpressionUUID->"c70088e5-0422-4a66-abb8-3ec29abaf1e2"]
}, Open  ]],
Cell[9439, 241, 2491, 53, 96, "MathCaption",ExpressionUUID->"844dcd8d-d1f5-4bd8-80b3-2bfde6a33273"],
Cell[CellGroupData[{
Cell[11955, 298, 1912, 44, 175, "Input",ExpressionUUID->"2900c603-e09f-47a3-b8cd-db7a19cee0fe",
 CellID->1052680053],
Cell[13870, 344, 2157, 43, 1056, "Output",ExpressionUUID->"9d092bdd-76e1-4f30-b703-4f414445d69d"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[16100, 395, 255, 4, 65, "Section",ExpressionUUID->"22fb40ad-1c28-4c98-80f1-99944f110433"],
Cell[CellGroupData[{
Cell[16380, 403, 579, 11, 41, "Exercise",ExpressionUUID->"b380e599-33f8-43bb-9d84-68595b49c4e1"],
Cell[16962, 416, 407, 7, 46, "Text",ExpressionUUID->"ec5bf058-fef1-417c-95f0-e17e8fb440b5",
 Evaluatable->False],
Cell[17372, 425, 947, 25, 100, "Input",ExpressionUUID->"84dfc3c9-0b33-492e-90c8-8d046a6bc7cf"],
Cell[18322, 452, 360, 11, 48, "Text",ExpressionUUID->"65597341-f86b-4463-a574-5c4c13077392"],
Cell[CellGroupData[{
Cell[18707, 467, 800, 20, 45, "Input",ExpressionUUID->"1385d2ba-6dfe-4afa-a4cc-496c6f394abf"],
Cell[19510, 489, 536, 12, 308, "Output",ExpressionUUID->"6c8edf46-6db3-4ad2-b882-bea1130f7d49"]
}, Closed]],
Cell[20061, 504, 152, 3, 46, "Text",ExpressionUUID->"c892cbca-b5f6-4be8-a83b-2cf05fa03d96",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[20238, 511, 439, 11, 43, "Input",ExpressionUUID->"35dd11be-6081-4205-b630-2cea62103a4f"],
Cell[20680, 524, 460, 11, 43, "Output",ExpressionUUID->"064062ce-46c2-45b1-8922-03bb736f3d6a",
 Evaluatable->False]
}, Closed]],
Cell[21155, 538, 301, 6, 46, "Text",ExpressionUUID->"8aa6f2a2-8a52-4499-a817-0e170efc7ba1",
 Evaluatable->False],
Cell[21459, 546, 1958, 38, 70, "Item",ExpressionUUID->"24febce9-fe3c-416f-8416-b1c2285ec0fb"],
Cell[23420, 586, 1872, 37, 53, "Item",ExpressionUUID->"f89f4da8-8845-482b-bf9f-ba87c4f64508"],
Cell[25295, 625, 1932, 37, 46, "Item",ExpressionUUID->"e1f32a8f-80df-4b84-95ec-9c536b6897d0"],
Cell[CellGroupData[{
Cell[27252, 666, 179, 3, 50, "Solution",ExpressionUUID->"a9c11107-07e2-4745-b867-147ccab6c3e9"],
Cell[27434, 671, 1538, 25, 96, "MathCaption",ExpressionUUID->"ad0d6968-7259-49e6-a68f-5d342467cafb"],
Cell[28975, 698, 334, 9, 108, "Input",ExpressionUUID->"754154bc-79a2-4253-b293-8ef3158701e7"],
Cell[29312, 709, 132, 3, 62, "Text",ExpressionUUID->"dc1e9092-0f55-452f-a408-b3328d76232e",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[29469, 716, 144, 3, 63, "Input",ExpressionUUID->"aef6cd44-2814-459d-b877-0df75b6731c0"],
Cell[29616, 721, 384, 9, 63, "Output",ExpressionUUID->"d1d5efc4-f7fa-482f-a21f-a2841d637889",
 Evaluatable->False]
}, Closed]],
Cell[30015, 733, 716, 20, 103, "MathCaption",ExpressionUUID->"7c44bcba-81b9-4128-8ba8-c9640fcf3c45",
 Evaluatable->False],
Cell[30734, 755, 451, 9, 63, "Input",ExpressionUUID->"576c7dad-5d0f-4f32-9074-f9a0abab605a"],
Cell[31188, 766, 713, 21, 96, "MathCaption",ExpressionUUID->"87414360-ac02-4ae2-9034-e00d04e57e11",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[31926, 791, 1128, 26, 102, "Input",ExpressionUUID->"900fc69a-9854-4466-9714-dacfb393b592"],
Cell[33057, 819, 582317, 9559, 1120, "Output",ExpressionUUID->"ad4d4e5e-36f1-448c-9885-97701304f927"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[615447, 10386, 257, 4, 65, "Section",ExpressionUUID->"afc170a6-1de0-4239-937e-3368a5936ff1"],
Cell[CellGroupData[{
Cell[615729, 10394, 687, 12, 41, "Exercise",ExpressionUUID->"071dbaf2-6b62-46d5-b3a6-4b48475932e4"],
Cell[616419, 10408, 699, 10, 62, "Text",ExpressionUUID->"8c3e197e-600e-4570-a6f8-c0fd0591a247"],
Cell[617121, 10420, 724, 17, 57, "DisplayFormula",ExpressionUUID->"dbb44fdb-a99e-4a0a-b5ac-6c9261e46fb4"],
Cell[617848, 10439, 1061, 23, 66, "Text",ExpressionUUID->"072f93ef-c76a-4ceb-b8d2-e3c114fa035f"],
Cell[618912, 10464, 1968, 58, 303, "DisplayFormulaNumbered",ExpressionUUID->"f91f35d8-cdff-4a55-86a8-d9cc6b7d930e",
 CellTags->"determinantal equation"],
Cell[620883, 10524, 2151, 37, 47, "Item",ExpressionUUID->"74be4a2e-3f17-4af3-b186-092f849d2180"],
Cell[623037, 10563, 2208, 40, 46, "Item",ExpressionUUID->"eb6866f1-41ee-4b0c-afb5-5d66b7626dd6"],
Cell[CellGroupData[{
Cell[625270, 10607, 179, 3, 50, "Solution",ExpressionUUID->"1321b44b-8309-418a-80b9-6ad378f75005"],
Cell[625452, 10612, 449, 12, 150, "MathCaption",ExpressionUUID->"1111ee27-6157-4ac7-bf6c-68825b4d843c"],
Cell[625904, 10626, 649, 17, 121, "Input",ExpressionUUID->"183455e2-eccf-4623-aa68-28f793d5b36e"],
Cell[626556, 10645, 347, 7, 150, "MathCaption",ExpressionUUID->"1bd80901-3565-4557-ac10-d4faf239af58"],
Cell[626906, 10654, 608, 17, 97, "Input",ExpressionUUID->"c39a0e0d-9389-449f-824d-2f5916f65d95"],
Cell[627517, 10673, 244, 4, 150, "MathCaption",ExpressionUUID->"7d060865-b22c-4260-8e13-b7f97f24407c"],
Cell[CellGroupData[{
Cell[627786, 10681, 635, 15, 97, "Input",ExpressionUUID->"4e68c846-ea33-4d12-8601-626457247975"],
Cell[628424, 10698, 1264, 30, 363, "Output",ExpressionUUID->"707e136c-5096-4e58-bd92-e84da2bd2e5b"]
}, Closed]],
Cell[CellGroupData[{
Cell[629725, 10733, 408, 8, 97, "Input",ExpressionUUID->"bc6e7b7a-1c87-43b4-9e82-54585dff3aa6"],
Cell[630136, 10743, 863, 18, 112, "Output",ExpressionUUID->"6ba2ccca-d4db-4b7d-b98a-b948064069d9"]
}, Closed]],
Cell[CellGroupData[{
Cell[631036, 10766, 609, 17, 97, "Input",ExpressionUUID->"af471828-265f-4185-a56f-bfe0bd2ff8da"],
Cell[631648, 10785, 10940, 191, 1416, "Output",ExpressionUUID->"5ab2bd16-e4f1-4627-8259-82aea2641760"]
}, Closed]],
Cell[642603, 10979, 190, 3, 150, "MathCaption",ExpressionUUID->"6bf64ce6-21ba-4142-b9bb-1e0ba4d7888a"],
Cell[CellGroupData[{
Cell[642818, 10986, 1312, 39, 218, "Input",ExpressionUUID->"3feb5c6d-1a75-4cfe-8708-2f14c55ba57d"],
Cell[644133, 11027, 3923, 79, 1650, "Output",ExpressionUUID->"e2d09e6b-8eff-46f2-9237-0a6ec9ddc48a"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[648117, 11113, 643, 12, 41, "Exercise",ExpressionUUID->"7c44123e-15ec-4523-93f8-33c8bdfcc6fa"],
Cell[648763, 11127, 523, 14, 62, "Text",ExpressionUUID->"a2bedb64-b500-4d89-9bc6-1fb7efced49a",
 CellTags->{"Transpose", "ComplexExpand"}],
Cell[649289, 11143, 1385, 36, 151, "Input",ExpressionUUID->"10e6b802-94f2-4ce6-abb0-c35d32fd9a42"],
Cell[650677, 11181, 433, 11, 62, "Text",ExpressionUUID->"33d63db7-ce22-4bee-bf9d-69e7e6f78f28"],
Cell[651113, 11194, 1682, 25, 47, "Item",ExpressionUUID->"b2efbc95-8e82-4fae-b019-ac58928764e2"],
Cell[652798, 11221, 2199, 45, 46, "Item",ExpressionUUID->"c8ffa277-7b55-4c88-a1e6-de09bf73447d"],
Cell[CellGroupData[{
Cell[655022, 11270, 1734, 24, 46, "Item",ExpressionUUID->"db3b22c9-567c-450b-acff-e956ce3fb41c"],
Cell[656759, 11296, 5663, 151, 291, "Input",ExpressionUUID->"21c52b90-8204-42b7-bbc3-5fd8cae1d880"],
Cell[662425, 11449, 2353, 46, 47, "ItemParagraph",ExpressionUUID->"cb39f99c-f808-44a4-877e-d25aa5af2764"]
}, Closed]],
Cell[CellGroupData[{
Cell[664815, 11500, 1872, 30, 47, "Item",ExpressionUUID->"95361fbc-b0da-40cb-8a9f-c51853b7b8cf"],
Cell[666690, 11532, 325, 10, 47, "DisplayFormula",ExpressionUUID->"c2eb0b61-bcc5-421b-ba54-a0664186c82c"],
Cell[667018, 11544, 947, 26, 47, "ItemParagraph",ExpressionUUID->"f967074e-931d-4e2b-899e-124b9f1d85db"]
}, Closed]],
Cell[CellGroupData[{
Cell[668002, 11575, 179, 3, 71, "Solution",ExpressionUUID->"45cbb97c-25ff-4c26-959e-9c292a050ae5"],
Cell[668184, 11580, 285, 7, 150, "MathCaption",ExpressionUUID->"990e6aaa-80e0-4860-ac84-90278ea173e0"],
Cell[CellGroupData[{
Cell[668494, 11591, 236, 6, 97, "Input",ExpressionUUID->"e59a2d3d-0040-4815-8cbb-7fb0d81fc8ff"],
Cell[668733, 11599, 330, 9, 97, "Output",ExpressionUUID->"23bf8dd0-d2c1-4cb4-b5f1-55412ea20d1b"]
}, Closed]],
Cell[CellGroupData[{
Cell[669100, 11613, 218, 5, 97, "Input",ExpressionUUID->"05496d28-838b-4fb5-bafe-0a3e71b94c67"],
Cell[669321, 11620, 158, 4, 97, "Output",ExpressionUUID->"c46f269c-6da2-4c51-8f70-0206fd260633"]
}, Closed]],
Cell[669494, 11627, 1539, 23, 150, "MathCaption",ExpressionUUID->"318153a9-215f-4bed-8330-a914e07f580a"],
Cell[CellGroupData[{
Cell[671058, 11654, 359, 9, 121, "Input",ExpressionUUID->"5695f326-6c7d-40fc-8846-f950d95a8496"],
Cell[671420, 11665, 258, 5, 97, "Output",ExpressionUUID->"9d6ccd6e-750e-467b-923e-a8674dc79db5"]
}, Closed]],
Cell[671693, 11673, 1541, 23, 150, "MathCaption",ExpressionUUID->"d41e7be9-92ee-46ef-a93b-448eb75347de"],
Cell[CellGroupData[{
Cell[673259, 11700, 226, 5, 97, "Input",ExpressionUUID->"c83e5b9d-71fc-4f07-893d-42f06800daa7"],
Cell[673488, 11707, 184, 4, 97, "Output",ExpressionUUID->"fa6a6d96-a4ed-4531-b658-6c996b5f2b08"]
}, Closed]],
Cell[673687, 11714, 1815, 32, 150, "MathCaption",ExpressionUUID->"8169eea9-91ba-488f-9bb6-9996b917898f"],
Cell[CellGroupData[{
Cell[675527, 11750, 605, 19, 207, "Input",ExpressionUUID->"313fac57-3cbd-4e71-8dc6-cc4d4792d0d6"],
Cell[676135, 11771, 1020, 32, 165, "Output",ExpressionUUID->"f2fdc481-fcc9-4c50-b472-f1748d98962a"]
}, Closed]],
Cell[CellGroupData[{
Cell[677192, 11808, 539, 15, 207, "Input",ExpressionUUID->"a46b78bd-d3b8-47fe-940c-0fe1532c4920"],
Cell[677734, 11825, 1370, 35, 235, "Output",ExpressionUUID->"51a981f5-0ff1-438f-a5a0-c51fe168c5ce"]
}, Closed]],
Cell[CellGroupData[{
Cell[679141, 11865, 234, 6, 97, "Input",ExpressionUUID->"43b148db-5b3b-4004-b89c-b5398d2e485f"],
Cell[679378, 11873, 185, 4, 97, "Output",ExpressionUUID->"f45bbf67-fe45-4b7e-8a37-a97ac9b7e35a"]
}, Closed]],
Cell[679578, 11880, 723, 22, 150, "MathCaption",ExpressionUUID->"67b28d1a-7770-41f2-8208-855b78da2533"],
Cell[CellGroupData[{
Cell[680326, 11906, 1376, 41, 207, "Input",ExpressionUUID->"d0286a81-9b38-4042-854c-551beaf9ed4d"],
Cell[681705, 11949, 10937, 280, 551, "Output",ExpressionUUID->"e6b8ce82-864e-4882-a752-e8ccda7fbfd0"]
}, Closed]],
Cell[CellGroupData[{
Cell[692679, 12234, 358, 8, 97, "Input",ExpressionUUID->"6b38fa18-2bbd-4674-afae-0691aa52d7fa"],
Cell[693040, 12244, 9946, 237, 1088, "Output",ExpressionUUID->"a12cc9ef-35ff-4d97-a95a-f43575b879b5"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[703059, 12489, 223, 5, 65, "Section",ExpressionUUID->"87a5148f-0e12-43a8-a382-54efc303ac7d"],
Cell[CellGroupData[{
Cell[703307, 12498, 952, 16, 41, "Exercise",ExpressionUUID->"ffeeb1a4-82ac-4520-8b89-becac3c462b3"],
Cell[704262, 12516, 281, 4, 46, "Text",ExpressionUUID->"d99742ff-efeb-42fc-bbfc-a7cadcd9c1e8"],
Cell[704546, 12522, 1378, 31, 42, "DisplayFormulaNumbered",ExpressionUUID->"106bcc0a-f94e-448c-b3b4-05414afe4f1b",
 CellTags->"nonlinear differential equation"],
Cell[705927, 12555, 165, 3, 46, "Text",ExpressionUUID->"8ea2a1da-d556-43b4-96a2-4d9ebd4008b2"],
Cell[706095, 12560, 1292, 28, 67, "DisplayFormula",ExpressionUUID->"0a44d10c-55d8-4c85-b22d-78064c3a1b2f"],
Cell[707390, 12590, 1501, 32, 40, "Item",ExpressionUUID->"3f9cfdaa-2c70-406a-9b18-91b00d6b73bc"],
Cell[708894, 12624, 2213, 57, 48, "Item",ExpressionUUID->"eeaf139a-cf07-4a85-a329-09f311664060"],
Cell[CellGroupData[{
Cell[711132, 12685, 179, 3, 33, "Solution",ExpressionUUID->"e71eaa31-4b63-482b-bf3b-b1ca33461669"],
Cell[711314, 12690, 789, 21, 120, "MathCaption",ExpressionUUID->"b7ba1d7a-ab88-419e-b48b-80358bec0610"],
Cell[712106, 12713, 1150, 33, 97, "Input",ExpressionUUID->"1e463ade-d300-4fbd-a382-7540ae9c4634"],
Cell[713259, 12748, 696, 22, 150, "MathCaption",ExpressionUUID->"91b04b86-9bfa-4a8e-95b6-2a75113c434c"],
Cell[CellGroupData[{
Cell[713980, 12774, 1684, 48, 140, "Input",ExpressionUUID->"7164bd17-79ae-4dd9-ab46-8f12914d82a6"],
Cell[715667, 12824, 3058, 63, 1066, "Output",ExpressionUUID->"347590d8-21b1-421d-b1ad-91bd6705688d"]
}, Closed]],
Cell[718740, 12890, 994, 33, 106, "Text",ExpressionUUID->"9d7b3f27-b5d7-4022-9a8a-52054a04c91c"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[719783, 12929, 990, 16, 41, "Exercise",ExpressionUUID->"7447c5f9-5fd8-4a74-af70-446b46ca1dd0"],
Cell[720776, 12947, 174, 3, 46, "Text",ExpressionUUID->"0ab2d676-746a-4244-9f40-21c9bae41ef0"],
Cell[720953, 12952, 441, 13, 37, "DisplayFormulaNumbered",ExpressionUUID->"f6cc0b3e-cb8e-4db1-b05f-991460803c9c",
 CellTags->"functional equation"],
Cell[721397, 12967, 522, 15, 46, "Text",ExpressionUUID->"fce1bd0c-ca56-424e-a456-7eb9b16711bf"],
Cell[721922, 12984, 516, 17, 82, "DisplayFormulaNumbered",ExpressionUUID->"bd5d7811-7aa2-4b00-ad4f-e0752e37622e"],
Cell[722441, 13003, 829, 23, 46, "Text",ExpressionUUID->"07a79c5d-7b8a-4486-9ed3-49ae245d51de"],
Cell[723273, 13028, 1202, 33, 70, "Item",ExpressionUUID->"13ed42f3-5843-4435-9764-0d2cb8f15505",
 CellTags->"series expansion"],
Cell[724478, 13063, 1363, 38, 38, "Item",ExpressionUUID->"878991db-65f1-4a3d-b772-ef5910222a13",
 CellTags->"series expansion"],
Cell[CellGroupData[{
Cell[725866, 13105, 179, 3, 33, "Solution",ExpressionUUID->"c809abc2-55f2-46ae-8761-040dcf0cd625"],
Cell[726048, 13110, 842, 24, 150, "MathCaption",ExpressionUUID->"51d89582-fe2b-440b-b8e1-c2c66cd7e4ef"],
Cell[726893, 13136, 470, 15, 200, "Input",ExpressionUUID->"486b6be8-9873-41b6-a35a-835ccb61f5b7"],
Cell[CellGroupData[{
Cell[727388, 13155, 975, 27, 140, "Input",ExpressionUUID->"82c03a2d-60e4-4313-b3ec-731c96523bbc"],
Cell[728366, 13184, 695, 22, 165, "Output",ExpressionUUID->"1a94c91f-112b-4be5-8bc8-68b4e6065887"]
}, Closed]],
Cell[CellGroupData[{
Cell[729098, 13211, 211, 5, 97, "Input",ExpressionUUID->"c9cc1b72-0a93-4c4c-a6fa-3a5e267d11ff"],
Cell[729312, 13218, 432, 13, 97, "Output",ExpressionUUID->"1d9cc1a6-a30d-4406-915a-38ca038a9891"]
}, Closed]],
Cell[729759, 13234, 704, 19, 150, "MathCaption",ExpressionUUID->"d3536c1b-108b-41e4-a50a-22385a00d878"],
Cell[CellGroupData[{
Cell[730488, 13257, 1046, 30, 140, "Input",ExpressionUUID->"f05762e8-79b7-4a96-a1ba-711f5ff79518"],
Cell[731537, 13289, 498, 15, 97, "Output",ExpressionUUID->"6068dc62-568b-42b6-93b9-f7a00fbbca0d"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[732108, 13312, 140, 3, 65, "Section",ExpressionUUID->"e4f30d5f-48aa-4edd-9cfd-fc20dd1572c0"],
Cell[CellGroupData[{
Cell[732273, 13319, 746, 14, 34, "Exercise",ExpressionUUID->"bf3380b6-e8a3-40cc-94e0-93a992466624"],
Cell[733022, 13335, 305, 5, 62, "Text",ExpressionUUID->"c56a96e5-70df-41d2-acad-d7d0bc8e51c8"],
Cell[733330, 13342, 548, 16, 108, "DisplayFormulaNumbered",ExpressionUUID->"a60a41d6-9b45-4ae1-8e03-f50a1252d469",
 CellTags->"Thomas-Fermi equation"],
Cell[733881, 13360, 176, 3, 62, "Text",ExpressionUUID->"367717cf-a855-4873-9a9f-b314ab5a005c"],
Cell[734060, 13365, 437, 12, 47, "DisplayFormulaNumbered",ExpressionUUID->"2a5718cb-3964-449c-a12e-f3ba506dda04",
 CellTags->"boundary conditions"],
Cell[734500, 13379, 462, 11, 62, "Text",ExpressionUUID->"615182a1-c976-485b-90e2-667f2a9cc206"],
Cell[734965, 13392, 402, 7, 62, "Text",ExpressionUUID->"c5e63343-7ed7-4097-b602-172c9d0fe10d"],
Cell[735370, 13401, 765, 21, 97, "DisplayFormulaNumbered",ExpressionUUID->"a82419cd-7a10-44d2-bcae-9d4f8fe0cacf",
 CellTags->"Euler-Lagrange equation"],
Cell[736138, 13424, 394, 7, 62, "Text",ExpressionUUID->"cebe917f-992b-45eb-a7ff-8b5f616c864d"],
Cell[736535, 13433, 857, 24, 108, "DisplayFormulaNumbered",ExpressionUUID->"bc99819e-5105-40f8-85cc-5d0f309df291",
 CellTags->"functional"],
Cell[737395, 13459, 314, 9, 62, "Text",ExpressionUUID->"d511c0bd-06cc-455a-8b5e-6cd28ab0c5cc"],
Cell[737712, 13470, 1188, 33, 56, "Item",ExpressionUUID->"585ec35e-a793-4e0c-b18b-7942927ae01a"],
Cell[738903, 13505, 610, 17, 46, "Item",ExpressionUUID->"80fc8773-02b8-4c1b-a3b7-ac468e1a6d9d"],
Cell[CellGroupData[{
Cell[739538, 13526, 263, 5, 46, "Item",ExpressionUUID->"02d50657-9372-48c9-a5c5-ed9ec3a03a1b"],
Cell[739804, 13533, 551, 17, 106, "DisplayFormula",ExpressionUUID->"2fee6cfb-f844-4a4f-834b-378fc2d7fd9e"],
Cell[740358, 13552, 1804, 25, 47, "ItemParagraph",ExpressionUUID->"c036150d-e645-485f-b239-c871e0103122"],
Cell[742165, 13579, 1610, 50, 141, "DisplayFormula",ExpressionUUID->"4e241df0-b8e0-4f28-9bec-5726e83cb6bf"],
Cell[743778, 13631, 3183, 65, 62, "ItemParagraph",ExpressionUUID->"59c2a1d5-cbda-490f-a8b1-904ddb996b52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[746998, 13701, 179, 3, 71, "Solution",ExpressionUUID->"d66746a9-4d2b-413a-b5ed-730258784540"],
Cell[747180, 13706, 445, 12, 150, "MathCaption",ExpressionUUID->"cc11f1bd-2c9e-4cf8-9e7e-32313522e071"],
Cell[747628, 13720, 336, 10, 183, "Input",ExpressionUUID->"41c01bc3-1017-4bf2-98c8-c3d4ca410879"],
Cell[747967, 13732, 623, 16, 150, "MathCaption",ExpressionUUID->"cb88ac01-b09d-460e-8894-679fc5e1cbc4"],
Cell[CellGroupData[{
Cell[748615, 13752, 813, 22, 200, "Input",ExpressionUUID->"b9a8e9a9-99ce-4896-b700-e2c33bd81190"],
Cell[749431, 13776, 331, 7, 97, "Output",ExpressionUUID->"1337cf53-80f0-4a41-ae76-d19c79e049eb"]
}, Open  ]],
Cell[749777, 13786, 592, 14, 150, "MathCaption",ExpressionUUID->"77f10b99-0bdb-498a-b1d6-752f283f9ead"],
Cell[CellGroupData[{
Cell[750394, 13804, 380, 11, 127, "Input",ExpressionUUID->"2516acf9-d203-4ac3-bc48-5082463cbee9"],
Cell[750777, 13817, 202, 4, 97, "Output",ExpressionUUID->"6b65f23b-538c-452f-9a7a-6e3185f75d71"]
}, Open  ]],
Cell[750994, 13824, 515, 12, 150, "MathCaption",ExpressionUUID->"6890dc45-2249-44ee-993c-5f9c7bdc7c2e"],
Cell[751512, 13838, 635, 20, 200, "Input",ExpressionUUID->"e6e50ffc-8059-4ff2-9312-96b39de1eec3"],
Cell[752150, 13860, 813, 19, 150, "MathCaption",ExpressionUUID->"8fed5848-836f-4411-8ccd-7266bae161e1"],
Cell[CellGroupData[{
Cell[752988, 13883, 867, 25, 183, "Input",ExpressionUUID->"2681c9d5-3601-4eb7-a748-fa70f884c192"],
Cell[753858, 13910, 496, 14, 195, "Output",ExpressionUUID->"2e11669c-2b39-4500-a1c9-95abb8e59123"]
}, Open  ]],
Cell[754369, 13927, 881, 18, 171, "MathCaption",ExpressionUUID->"fbf5f9dc-c7e3-4331-87f6-adbb3805002d"],
Cell[755253, 13947, 867, 22, 197, "Input",ExpressionUUID->"3d759216-dcf7-47f8-b98d-a8f563fbf302"],
Cell[756123, 13971, 1398, 44, 253, "Input",ExpressionUUID->"9031f724-19b0-4dc6-a725-63ebde9c368e"],
Cell[757524, 14017, 1426, 36, 171, "MathCaption",ExpressionUUID->"00652533-9cbe-48ff-ac5d-cad7cb5ed631"],
Cell[CellGroupData[{
Cell[758975, 14057, 1114, 32, 197, "Input",ExpressionUUID->"43003611-74a1-4ac8-8cea-b77daa4dcbee"],
Cell[760092, 14091, 394, 10, 97, "Output",ExpressionUUID->"d2681028-8079-4fe9-ad60-887e2784641c"]
}, Open  ]],
Cell[760501, 14104, 901, 19, 158, "MathCaption",ExpressionUUID->"ff3195f7-700d-4ab2-88c9-6b039db8ce57"],
Cell[CellGroupData[{
Cell[761427, 14127, 627, 17, 120, "Input",ExpressionUUID->"768ad2b4-604e-4d22-8ef6-8d6045a3382d"],
Cell[762057, 14146, 3492, 63, 902, "Output",ExpressionUUID->"add0ef40-3a92-4dfa-bf22-b22baccae1e3"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[765622, 14217, 261, 5, 65, "Section",ExpressionUUID->"0e10d379-b15b-4853-a985-54b39ed825a8"],
Cell[CellGroupData[{
Cell[765908, 14226, 491, 10, 34, "Exercise",ExpressionUUID->"78637981-6f19-480d-a90a-2360b66f2535"],
Cell[766402, 14238, 1008, 21, 62, "Text",ExpressionUUID->"53945112-7c14-4108-8569-f6f2b1472afc"],
Cell[767413, 14261, 736, 21, 95, "DisplayFormula",ExpressionUUID->"c7235201-6d4b-4261-ba9a-ca598e18e6a5"],
Cell[768152, 14284, 1148, 24, 71, "Text",ExpressionUUID->"4b159cd0-2de0-4e91-84d9-0a5b56ec2c4e"],
Cell[769303, 14310, 738, 19, 90, "DisplayFormula",ExpressionUUID->"ceedc2eb-34b9-4bca-8999-02072fac6342"],
Cell[770044, 14331, 163, 3, 62, "Text",ExpressionUUID->"39c9df37-7193-437e-b99c-6a98ea0d73ac"],
Cell[770210, 14336, 1951, 55, 93, "DisplayFormula",ExpressionUUID->"901bb677-2ea6-49ad-a5e3-1e23e50e0c4e"],
Cell[772164, 14393, 1689, 35, 47, "Item",ExpressionUUID->"f9788d2f-eaf0-4a7f-b5cf-47fbd6dc7fcc"],
Cell[773856, 14430, 2249, 50, 46, "Item",ExpressionUUID->"31462bb4-00f7-4d63-a355-72fe3fdb4dea"],
Cell[776108, 14482, 2002, 40, 46, "Item",ExpressionUUID->"ad771f02-d7a1-41cc-99d6-1517f360534c"],
Cell[778113, 14524, 1717, 32, 46, "Item",ExpressionUUID->"1da94847-66c1-4456-a516-2721ccacba41"],
Cell[779833, 14558, 1805, 37, 46, "Item",ExpressionUUID->"8bd2e057-0f8f-4aba-a9de-8e68e54ac46c"],
Cell[CellGroupData[{
Cell[781663, 14599, 179, 3, 50, "Solution",ExpressionUUID->"0115f741-dfe8-4930-98f0-b4c3319ba1b2"],
Cell[781845, 14604, 365, 11, 120, "MathCaption",ExpressionUUID->"94a8565a-8f30-4394-bbdb-2f1a61e80df7"],
Cell[782213, 14617, 2198, 58, 140, "Input",ExpressionUUID->"6f3a2b55-bfd9-4468-bc3f-2b58520cf929"],
Cell[784414, 14677, 413, 11, 120, "MathCaption",ExpressionUUID->"5f8c484a-f9ee-469d-8ccf-227fbd36bf99"],
Cell[CellGroupData[{
Cell[784852, 14692, 707, 19, 141, "Input",ExpressionUUID->"cde5d9ff-aefc-4be4-9d55-f54f14085627"],
Cell[785562, 14713, 448, 10, 137, "Output",ExpressionUUID->"ee37d95f-ff2f-46d4-ab0e-6bc667471ea8"]
}, Open  ]],
Cell[786025, 14726, 645, 18, 120, "MathCaption",ExpressionUUID->"2280527a-7019-481e-abfb-6598a3906b18"],
Cell[CellGroupData[{
Cell[786695, 14748, 672, 16, 82, "Input",ExpressionUUID->"30400dcd-490a-492b-ac64-bf59d52843a3"],
Cell[787370, 14766, 20910, 349, 722, "Output",ExpressionUUID->"0d221de0-223d-4bab-9d96-240e42c50eb2"]
}, Open  ]],
Cell[808295, 15118, 543, 13, 120, "MathCaption",ExpressionUUID->"80f3a43d-530c-484e-b376-b115bfb3ad89"],
Cell[CellGroupData[{
Cell[808863, 15135, 1039, 25, 141, "Input",ExpressionUUID->"8913d411-5c80-409e-8c1c-acdf5b205083"],
Cell[809905, 15162, 183, 5, 135, "Output",ExpressionUUID->"c0665c1e-e781-4b49-8c2b-47337d7c4fdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[810125, 15172, 1137, 28, 141, "Input",ExpressionUUID->"68875f49-2db4-4bdb-a4cb-abb067eaa1d3"],
Cell[811265, 15202, 822, 15, 137, "Output",ExpressionUUID->"e5c1213a-3604-4d41-9dd9-eeedfeecbbc6"]
}, Open  ]],
Cell[812102, 15220, 965, 26, 120, "MathCaption",ExpressionUUID->"1279e756-6278-4449-a916-ddd1c75204ac"],
Cell[CellGroupData[{
Cell[813092, 15250, 730, 17, 78, "Input",ExpressionUUID->"b8e8c6f3-40e8-4305-959e-bdbfbd627d42"],
Cell[813825, 15269, 2451, 51, 722, "Output",ExpressionUUID->"a9ea33f1-de92-4426-bbf6-c837754f6e44"]
}, Open  ]],
Cell[816291, 15323, 706, 17, 120, "MathCaption",ExpressionUUID->"f382a9e0-3bcc-4b57-970e-6dab68457f8a"],
Cell[CellGroupData[{
Cell[817022, 15344, 292, 8, 82, "Input",ExpressionUUID->"0a4f2e76-afad-4022-b7ff-751ccb6dd3a3"],
Cell[817317, 15354, 185, 4, 78, "Output",ExpressionUUID->"d3f06280-3b2c-4558-aa20-ae3e1ceb4b7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817539, 15363, 243, 6, 78, "Input",ExpressionUUID->"9b85d3c4-6f70-405a-b1c3-3a4ba0ab81d4"],
Cell[817785, 15371, 22319, 380, 722, "Output",ExpressionUUID->"6cfcaf34-0b94-4628-a2b6-02c49014c81d"]
}, Open  ]],
Cell[840119, 15754, 1260, 35, 120, "MathCaption",ExpressionUUID->"32a6e397-d465-459b-9af5-96d7a06ec833"],
Cell[CellGroupData[{
Cell[841404, 15793, 698, 19, 132, "Input",ExpressionUUID->"a6898f63-bea8-496f-a8e3-e976cc85926e"],
Cell[842105, 15814, 179, 3, 78, "Output",ExpressionUUID->"d775eca0-d760-45c5-862c-d9088e11ad1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[842321, 15822, 794, 22, 132, "Input",ExpressionUUID->"6d0b37af-2504-4ff3-b54b-bb81484244a8"],
Cell[843118, 15846, 158, 4, 78, "Output",ExpressionUUID->"d2c4f8a2-faa1-4832-ace3-e50740a82736"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[843349, 15858, 164, 3, 65, "Section",ExpressionUUID->"3a2b388c-0601-4a43-a7d8-215c899ae8a1"],
Cell[CellGroupData[{
Cell[843538, 15865, 699, 12, 34, "Exercise",ExpressionUUID->"cbd6d980-a54d-46a9-b086-ba3685131287"],
Cell[844240, 15879, 1325, 29, 62, "Text",ExpressionUUID->"45471980-a54f-4fc2-9a88-469b89a28cd7",
 CellTags->{"Infinite series representation", "Infinite product representation"}],
Cell[845568, 15910, 1248, 33, 118, "DisplayFormulaNumbered",ExpressionUUID->"22504cff-c530-4193-8778-67394cda0f55",
 CellTags->"infinite product"],
Cell[846819, 15945, 1721, 38, 70, "Text",ExpressionUUID->"3fdc483c-1d27-4960-956e-7d06289d8ab8"],
Cell[848543, 15985, 1357, 33, 112, "DisplayFormulaNumbered",ExpressionUUID->"2dc06ec9-def1-456d-a44d-ae3a76c9469a",
 CellTags->"logarithmic derivative"],
Cell[849903, 16020, 577, 9, 62, "Text",ExpressionUUID->"f978f89d-8dc4-4ce2-b8fa-30789cbdfcfc"],
Cell[850483, 16031, 1473, 25, 112, "DisplayFormulaNumbered",ExpressionUUID->"447f224c-2e7d-4362-ac98-acf43707c516",
 CellTags->"root sum"],
Cell[851959, 16058, 2818, 52, 47, "Item",ExpressionUUID->"b5f8c661-869f-42da-941c-f4d4672deec7"],
Cell[854780, 16112, 3011, 57, 46, "Item",ExpressionUUID->"5d9a467e-c2d7-4c6c-8f33-d2241ab193db"],
Cell[857794, 16171, 3273, 61, 46, "Item",ExpressionUUID->"bc4a8611-8884-45e4-8cf6-e931ae31a303"],
Cell[861070, 16234, 3483, 66, 50, "Item",ExpressionUUID->"e214ebd2-fe70-4799-b4da-dbd8aee43371"],
Cell[864556, 16302, 3458, 63, 46, "Item",ExpressionUUID->"0abf07d8-de51-43a7-aeb5-1453c775a4bb"],
Cell[CellGroupData[{
Cell[868039, 16369, 179, 3, 50, "Solution",ExpressionUUID->"dca356bf-a6ce-42d2-9c8a-0b639798e61a"],
Cell[868221, 16374, 607, 18, 120, "MathCaption",ExpressionUUID->"3a363e8f-0cd7-4fa5-9831-bbe8c45da659"],
Cell[CellGroupData[{
Cell[868853, 16396, 594, 17, 78, "Input",ExpressionUUID->"f3b39ece-0b53-479d-95c0-ae920ae83942"],
Cell[869450, 16415, 28958, 481, 718, "Output",ExpressionUUID->"8d324231-f9c8-482e-a1b3-5eceb8a999b9"]
}, Closed]],
Cell[898423, 16899, 442, 12, 77, "Text",ExpressionUUID->"0c21dd3c-bcdb-4282-8d43-a468ffae81f9"],
Cell[898868, 16913, 508, 13, 120, "MathCaption",ExpressionUUID->"28b8f5c0-d37f-40cf-8f76-55282e493900"],
Cell[CellGroupData[{
Cell[899401, 16930, 584, 15, 78, "Input",ExpressionUUID->"3ad36b87-21ae-4a90-b33e-1a9ed09dec18"],
Cell[899988, 16947, 47883, 1009, 3143, "Output",ExpressionUUID->"f9096280-e89b-43b1-a4ce-01113167e77c"]
}, Closed]],
Cell[947886, 17959, 899, 29, 57, "MathCaption",ExpressionUUID->"6c5d0bee-f59f-48ff-b185-6ffad0d9c376"],
Cell[CellGroupData[{
Cell[948810, 17992, 1046, 30, 166, "Input",ExpressionUUID->"75a4be1f-6ef4-4a69-a1f6-bb2d50d69040"],
Cell[949859, 18024, 1821, 64, 197, "Output",ExpressionUUID->"89cdaea1-dc87-4470-82a3-588121b8d3d5"]
}, Closed]],
Cell[951695, 18091, 584, 17, 126, "MathCaption",ExpressionUUID->"fd861f25-f4b5-47ca-a743-2208986c50e7"],
Cell[CellGroupData[{
Cell[952304, 18112, 348, 10, 147, "Input",ExpressionUUID->"fb78f4b7-85fe-4b41-86dc-0ec739fa0ada"],
Cell[952655, 18124, 513, 16, 195, "Output",ExpressionUUID->"b2b866e9-d936-4a22-9c27-b6631d2c1a1c"]
}, Closed]],
Cell[953183, 18143, 923, 27, 120, "MathCaption",ExpressionUUID->"f43832da-b465-4323-8a5c-630d57d74383"],
Cell[CellGroupData[{
Cell[954131, 18174, 629, 19, 141, "Input",ExpressionUUID->"40c7a0e1-80e1-4e4a-b09a-9c41775d1a58"],
Cell[954763, 18195, 656, 20, 132, "Output",ExpressionUUID->"132e69bc-810b-4f0e-9251-1dd5870c7e7e"]
}, Closed]],
Cell[955434, 18218, 825, 21, 77, "Text",ExpressionUUID->"cf917825-50a2-4989-9250-48d26736ba67"],
Cell[956262, 18241, 1004, 29, 120, "MathCaption",ExpressionUUID->"7c3a4dcf-e38f-470e-bec9-90c7de4e9425"],
Cell[CellGroupData[{
Cell[957291, 18274, 639, 18, 141, "Input",ExpressionUUID->"9ef81b3f-69d4-4c21-a71f-91d7a7d90ab2"],
Cell[957933, 18294, 982, 24, 183, "Output",ExpressionUUID->"31b19b9a-ad8b-4e31-9877-ee9873cff283"]
}, Closed]],
Cell[958930, 18321, 395, 10, 77, "Text",ExpressionUUID->"ce63c4fd-bd26-4993-a80c-042748de5bc7"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[959386, 18338, 265, 5, 65, "Section",ExpressionUUID->"b81fe1d5-76aa-447a-a8bb-27b61d31fd1f"],
Cell[CellGroupData[{
Cell[959676, 18347, 758, 13, 34, "Exercise",ExpressionUUID->"1a851cde-d0b6-4fd0-a8b3-3929eb0646d1"],
Cell[960437, 18362, 450, 7, 44, "Text",ExpressionUUID->"ad4ecde2-d792-45b0-949d-b9672e6cf2d6"],
Cell[960890, 18371, 1621, 46, 103, "DisplayFormulaNumbered",ExpressionUUID->"3a7418e2-bcd7-418e-be79-b9348087519e",
 CellTags->"a and b matrices"],
Cell[962514, 18419, 638, 19, 44, "Text",ExpressionUUID->"8af413aa-3a54-415b-a4d0-3153a7bc9b1b"],
Cell[963155, 18440, 590, 15, 50, "DisplayFormulaNumbered",ExpressionUUID->"adabd663-aca6-4558-be52-2358851bfafc",
 CellTags->"moments"],
Cell[963748, 18457, 734, 10, 44, "Text",ExpressionUUID->"fe9ada56-507b-4446-a6dc-150d94ba0865"],
Cell[964485, 18469, 623, 17, 56, "DisplayFormulaNumbered",ExpressionUUID->"121f19ce-38af-40b2-a6ec-6d9dcc3554ea",
 CellTags->"ratio of determinants"],
Cell[965111, 18488, 819, 13, 44, "Text",ExpressionUUID->"57ea171d-d61a-4985-b90c-efc6bd3db8a0"],
Cell[965933, 18503, 758, 18, 50, "DisplayFormulaNumbered",ExpressionUUID->"c4ae2776-c1cb-4bd1-815e-fc10fd7e6acd",
 CellTags->"inner product"],
Cell[966694, 18523, 380, 12, 35, "Item",ExpressionUUID->"45272cd9-7547-433a-9d4e-165f906ca2ab"],
Cell[967077, 18537, 1061, 33, 36, "Item",ExpressionUUID->"1d3838a2-934e-41cf-92e1-e2c25679d1d1"],
Cell[968141, 18572, 1049, 28, 34, "Item",ExpressionUUID->"eba48934-6839-4084-8426-8a1177c672c2"],
Cell[969193, 18602, 578, 14, 34, "Item",ExpressionUUID->"96ed5518-6615-49c7-addb-ba7b93451769"],
Cell[CellGroupData[{
Cell[969796, 18620, 179, 3, 28, "Solution",ExpressionUUID->"9c8ffe18-91e6-4c8b-ad4e-55aa3fbd99c4"],
Cell[969978, 18625, 550, 14, 54, "MathCaption",ExpressionUUID->"4dc6a9f7-e20c-4e63-982f-5589df8bb95c"],
Cell[CellGroupData[{
Cell[970553, 18643, 580, 17, 57, "Input",ExpressionUUID->"1b1c202f-0387-465a-a811-5e0357c87952"],
Cell[971136, 18662, 237, 7, 38, "Output",ExpressionUUID->"35acfbe8-8afc-48cf-b318-0234e2ccfb48"]
}, Open  ]],
Cell[971388, 18672, 981, 29, 59, "MathCaption",ExpressionUUID->"68799423-d4b7-4950-b937-2dd2eb49eb48"],
Cell[972372, 18703, 971, 28, 40, "Input",ExpressionUUID->"cb15989a-e5cb-49e1-a11a-f41baa5d1744"],
Cell[973346, 18733, 712, 21, 39, "Input",ExpressionUUID->"fc5abf8d-ff7b-49bd-a3b6-6cff05f98213"],
Cell[CellGroupData[{
Cell[974083, 18758, 287, 7, 33, "Input",ExpressionUUID->"5f22852a-ecea-481f-bd18-bb9535720a90"],
Cell[974373, 18767, 937, 25, 107, "Output",ExpressionUUID->"45c61fe3-bab1-4610-9d17-872a7aab2ef2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[975347, 18797, 290, 7, 33, "Input",ExpressionUUID->"6fd5d188-add2-4623-bafa-68632805403f"],
Cell[975640, 18806, 884, 23, 105, "Output",ExpressionUUID->"2db6fb65-896f-422d-bcca-f1fa9fa6c29e"]
}, Open  ]],
Cell[976539, 18832, 1057, 25, 54, "MathCaption",ExpressionUUID->"3f2192f8-8859-42db-835b-3dc2f5144df6"],
Cell[CellGroupData[{
Cell[977621, 18861, 667, 22, 61, "Input",ExpressionUUID->"d8072549-5ec4-4216-b238-6d37fb7c3e0d"],
Cell[978291, 18885, 2007, 62, 189, "Output",ExpressionUUID->"e99d9007-d782-413a-b33a-0c395b4007f5"]
}, Open  ]],
Cell[980313, 18950, 586, 13, 53, "MathCaption",ExpressionUUID->"63da58d0-3844-420c-bcbb-fdb19e69ac95"],
Cell[980902, 18965, 616, 16, 57, "Input",ExpressionUUID->"d97648c0-0107-4048-9877-2b3b14f29b8a"],
Cell[981521, 18983, 673, 14, 53, "MathCaption",ExpressionUUID->"14983603-840b-490c-b33c-2e8677309f08"],
Cell[CellGroupData[{
Cell[982219, 19001, 547, 16, 39, "Input",ExpressionUUID->"28764955-98b8-4e0e-8de1-f11471915969"],
Cell[982769, 19019, 868, 23, 149, "Output",ExpressionUUID->"350ba96a-c117-4e78-a9c5-37c98be13070"]
}, Open  ]],
Cell[983652, 19045, 589, 11, 53, "MathCaption",ExpressionUUID->"201f9aa1-2f72-4c0e-878d-91772bf64fc4"],
Cell[984244, 19058, 580, 14, 37, "Input",ExpressionUUID->"b92bce00-3b1c-466b-b007-8b3f16b2c5d6"],
Cell[CellGroupData[{
Cell[984849, 19076, 592, 17, 33, "Input",ExpressionUUID->"bc35187e-0eed-42f4-ba8c-72e634bebac1"],
Cell[985444, 19095, 890, 23, 149, "Output",ExpressionUUID->"924bf854-7be4-4a49-b6f5-52d3302c189c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[986371, 19123, 816, 21, 39, "Input",ExpressionUUID->"c2078f0c-0aa7-4856-9e8f-b634681d18b2"],
Cell[987190, 19146, 944, 25, 149, "Output",ExpressionUUID->"d0e186f1-cf35-4cdd-8fc0-abb9fa1f7ffe"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[988183, 19177, 179, 3, 28, "Solution",ExpressionUUID->"546dd2e0-0be8-4a50-89f9-0674236f5b2a"],
Cell[988365, 19182, 473, 14, 44, "Text",ExpressionUUID->"11bb2b6e-703b-4889-b85e-b61391ea6d33"],
Cell[988841, 19198, 401, 8, 44, "Text",ExpressionUUID->"945ee43d-1d95-429a-9c3b-b4976fc5c26f"],
Cell[989245, 19208, 353, 9, 44, "Text",ExpressionUUID->"cbdf7dc7-fed8-4631-865d-30bb72274810"],
Cell[CellGroupData[{
Cell[989623, 19221, 244, 7, 40, "Input",ExpressionUUID->"3f67378e-3ffd-4983-b910-2b5258b6db9b"],
Cell[989870, 19230, 1410, 45, 59, "Output",ExpressionUUID->"f9a68ba0-9c06-42ad-9fb4-ac0234b76c6b"]
}, Open  ]],
Cell[991295, 19278, 201, 5, 44, "Text",ExpressionUUID->"d973c0f5-8659-4cc9-bb35-272d2a56b01e"]
}, Open  ]]
}, Closed]]
}, Closed]]
}
]
*)

