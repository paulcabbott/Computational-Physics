(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    749554,      15065]
NotebookOptionsPosition[    712219,      14110]
NotebookOutlinePosition[    736478,      14629]
CellTagsIndexPosition[    736435,      14626]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["General Principles", "Section",
 CellChangeTimes->{{3.444217624128614*^9, 3.444217627529903*^9}, {
  3.507957444172653*^9, 3.507957444656934*^9}}],

Cell[TextData[{
 "Evaluate expressions by selecting the cell bracket or positioning the mouse \
",
 StyleBox["anywhere",
  FontSlant->"Italic"],
 " within an expression, and hit \[ShiftKey]-\[ReturnKey] ",
 StyleBox["on the keyboard", "Text"],
 " or ",
 StyleBox["\[EnterKey]",
  FontColor->GrayLevel[0]],
 " ",
 StyleBox[" on the numpad.", "Text"]
}], "Warning",
 CellChangeTimes->{{3.413260190697095*^9, 3.413260218270262*^9}, {
  3.413261462517523*^9, 3.413261466113126*^9}, {3.444193675401704*^9, 
  3.444193684991691*^9}, {3.444193744933782*^9, 3.444193764305942*^9}, {
  3.444208454736595*^9, 3.444208471517352*^9}, {3.4443480391614532`*^9, 
  3.444348043519527*^9}}],

Cell["The symbol % denotes the previous output.", "Warning",
 CellChangeTimes->{{3.413260190697095*^9, 3.413260218270262*^9}, {
   3.413261462517523*^9, 3.413261466113126*^9}, 3.444009997337051*^9}],

Cell["Exact input \[DoubleLongRightArrow] exact output.", "Warning",
 CellChangeTimes->{{3.413260190697095*^9, 3.413260218270262*^9}, {
   3.413261462517523*^9, 3.413261466113126*^9}, 3.444009997337051*^9, 
   3.444010040968961*^9}],

Cell["\<\
Approximate input \[DoubleLongRightArrow] approximate output.\
\>", "Warning",
 CellChangeTimes->{{3.413260190697095*^9, 3.413260218270262*^9}, {
   3.413261462517523*^9, 3.413261466113126*^9}, 3.444009997337051*^9, 
   3.444010045311366*^9}],

Cell[TextData[{
 ButtonBox["Entering Two-Dimensional Expressions",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/TwoDimensionalExpressionInputOverview"],
 " can be done with the ",
 ButtonBox["Basic Math Assistant",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$TopDirectory, "SystemFiles", "FrontEnd", "Palettes"}, 
     "BasicMathAssistant.nb", Null], None},
  ButtonNote->"Basic Math Assistant"],
 " palette or with keyboard shortcuts"
}], "Warning",
 CellChangeTimes->{
  3.444208318051701*^9, {3.444208350816578*^9, 3.444208352052556*^9}, {
   3.444208389246773*^9, 3.444208419547927*^9}}],

Cell[BoxData[
 FormBox[GridBox[{
    {Cell["2D expression"], Cell["1D input"], Cell["Keyboard entry"]},
    {
     SuperscriptBox["x", "m"], 
     RowBox[{"x", "^", "m"}], 
     RowBox[{
      RowBox[{"x\[ControlKey]\[LeftModified]", "^", "\[RightModified]"}], " ",
       "m"}]},
    {
     FractionBox["x", "y"], 
     RowBox[{"x", "/", "y"}], 
     RowBox[{"x", " ", 
      RowBox[{"\[ControlKey]\[LeftModified]", "/", "\[RightModified]"}], " ", 
      "y"}]},
    {
     SubscriptBox["x", "i"], "x_i", 
     RowBox[{
     "x", " ", "\[ControlKey]\[LeftModified]_\[RightModified]", " ", "i"}]}
   },
   GridBoxDividers->{
    "Columns" -> {False, True, True}, "Rows" -> {False, True, False}}], 
  TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.4132640457906017`*^9, 3.413264201914604*^9}, {
  3.413264450890443*^9, 3.413264470737362*^9}, {3.41326450716757*^9, 
  3.4132645170893803`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Free-form Input", "Section",
 CellChangeTimes->{
  3.444215112539296*^9, {3.507895648287958*^9, 3.5078956521436453`*^9}, {
   3.507957446185643*^9, 3.507957446321357*^9}}],

Cell[TextData[{
 "In Version 8, there is integration of ",
 ButtonBox["Wolfram|Alpha",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/WolframAlphaIntegration"],
 ". This means that you can use free-form linguistics. The output shows you \
the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " syntax required to do the same computation."
}], "Text",
 CellChangeTimes->{{3.507895934773828*^9, 3.507896074395937*^9}}],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkMEHxLxADGL/B4Ic
BgKIGDU0RVgB2cpGjtsoj9b//wGDAjwg
     "], {{0, 14}, {13, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Magnification[1],
   ImageSizeRaw->{13, 14},
   PlotRange->{{0, 13}, {0, 14}}]], "InlineOutput",
  ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAw8AIxnwIDC5D9H8hE
IhiY/4NBDgMIM3CCSEaQAFATWASNYgZR7CAFzDgEKFMPpfA4i4ERAF2VYy0=
\
\>"]],
 " (",
 StyleBox["\[LongEqual]", "KeyEvent"],
 " at beginning of input) \[LongDash] use free-form linguistics to generate \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " output"
}], "Text",
 CellID->511613194],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[FEPrivate`FrontEndResource["WABitmaps", "SpikeyEqual"],
   ImageSizeCache->{21., {6., 16.}}]], "Output",
  ImageCache->GraphicsData["CompressedBitmap", "\<\
eJxtVFtIFFEYntldLbu91bNLJREpEvUQIZVEPUQEgb4vEmgQ6uyaaC0qkVIZ
XYmEhEKky5NlhUIPBkmkJWYlWPoQ2MVdd64748zevs45e2bdrQbmXP7//77z
3845HgjVnzoTCDXUBUqPSoGm+oa6YOmRRomIvKIgCJvJv6VU8JE1yDJvWAfy
CV6ok6+Qdmy2W8tGoYSrHDkCNbQL+sc3XEaEWVUmnYYy/hT20iKX+RAZ7IbT
4sdyz0lkMhkPN03GfiE+OUpF3JTY0mkjlvsaYbSWQ37cg2RcIwdGoYV2IN7s
hyn5oU+NMd/UoevQ2yoh3whwbI4iNnwHK8GsuRyuQvRSDYMbTX42K+erIHce
Znq6twZDhRRFJI5hmHkQsiaOkp2HbrPLLOdAayHWC3N+hqnJT7JHxyJmqved
RkqJIG0ZLHAxCyNa6+sU1NF+KAPtiF2phRreL2xgSC90Ert+bi+MziqCMJ/d
ZAjt8wSUlgrYQeYbc8pDEWsoqY+uRMQlMugdB0UkIz8E7iCsxXnIHYdgSX5v
DuHlp7GQ2nbD+T7n+ufWzI7+RLT7BEuF65wRLMPKzDizEAu7IfogTI9ghutz
5ttgjtzPN3fZo4MXWT2o4T+BGNJWEfa7ETdjPqQTDpYGLsAOsfj/EwitD+cT
kZidYGlLmjrUF3eh3GuC0n0Mevse7hw5SSqDHt6HeG8NrIdhkrTp16tFtebe
/1VUnqxbAWSclcIuJvWeHmMucAirT3E+7GotJ86DFUMfe5TrSvprLeV0Zgmh
6ubtRFTBAmMsXdX01hWQbII2dI2RqL217JI5iwvQgjtXb9CTy0jFfsMcvg29
6wCMsxVIG0oBC+niL29hL8ywnYffZv1lP0zScVprJVKa7NYuk3SQ+PYBGctw
AyrJqRJQO6thPO9znwv3kbEXPiGlLuc/MoL4BySW9g0=\
\>"]],
 " (",
 StyleBox["\[LongEqual] \[LongEqual]", "KeyEvent"],
 " at beginning of input) \[LongDash] generate full Wolfram|Alpha output"
}], "Text",
 CellID->770721223],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztlkGqwjAQhlN14RFcCR7lvSPoAbSCbsvzCeqlBL2NpRtB6KIUpKs0SvWT
qps2Uk2z82da0unM10yQGXtjrz9tCCH+29z67uJnNnNXgxYPv6v5ZNxk0eHq
ct3WF43SNA3DMAiCXWURTAqJOiaSUhIZRZFSKsuyF5FPEUZwHMe+75Ou2y1v
kySpAiyKRHZVunMq4tOfYXNRLJCin+OiLhMy6UCKfmqpeLY6kQ7EhPBCtsmn
9Z/0nKLhNyTfOBMhh0KOHsYaj+fUQPac8/Fwjvd3Ox5yZy1ktV2qzeJu22WN
5FKrhfw9Ddu/ZxsqJdvrSPa6KE2b1m1CZnCUdn4GDbWYTCuGnW7OMiJ5y6ff
nbAUy650EzaX+b+CK3PJ5so=
     "], {{0, 24}, {30, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{30, 24},
   PlotRange->{{0, 30}, {0, 24}}]], "Input",
  ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNU01Lw0AQnTXVehBBe/FSya/Rk79BQym0B6nWgv4qQf9NQi6CkEMISE5J
LBnf24R0qa20NxeyeTvz5mOTNzfBYjK+DxbTUeBfz4OHyXT05F/N5jB5RkQu
8Vz40gNWQGc7VizxtCxLTZJE4ziWUw3DEDZga4NPDixP+vZ1qEVRaBRFmmWZ
VlWldV3LSesDtrY0TZmIXDFN+JFTja48z+WcNkNomNLYch2T9ZmIp0HDRE1D
+4rERlnRIeFo7GU6EuuxNYeEo7F3lWFjsBhcru/XRy1mBvHcPXtul5z9poNk
iX3uA9ffc/1avb94Wr09IwywC/sjYvn16eky+0AE4OaI/9CDEzEWLW7BLe7Y
GmBj2tz1rh96uAXv9IP3kgpFR2U7JGhwTXTUMEdgXcMo12rYHRY2Rx1vGxaW
YzZnWPYcTTE/JMaqbw==\
\>"]],
 " (",
 StyleBox["Ctrl", "KeyEvent"],
 StyleBox["+", "KeyEventDelimiter"],
 StyleBox["\[LongEqual]", "KeyEvent"],
 ") \[LongDash] enter free-form linguistics for conversion to inline ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " input"
}], "Text",
 CellID->1445160792],

Cell["\<\
The following questions require you to use free-form linguistics.\
\>", "Text",
 CellChangeTimes->{{3.507895680785123*^9, 3.50789574756903*^9}, {
  3.507895847577701*^9, 3.507895848205694*^9}, {3.507896019146455*^9, 
  3.5078960250753508`*^9}}],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288639892*^9, 3.507957473912015*^9}],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  FormBox["\[Pi]", TraditionalForm]]],
 " to 1000 digits. ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.507896120753077*^9, 
   3.5078961352135763`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "1000 digits of pi", Typeset`newq$$ = 
   "1000 digits of pi", Typeset`chosen$$ = "N[Pi, 1000]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "1000 digits of pi", 
                  Defer[
                   N[Pi, 1000]], "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"N", "[", 
                  RowBox[{"\[Pi]", ",", "1000"}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"N", "[", 
                  RowBox[{"\[Pi]", ",", "1000"}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"N", "[", 
                    RowBox[{"\[Pi]", ",", "1000"}], "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "1000 digits of pi", 
                    Defer[
                    N[Pi, 1000]], "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"N", "[", 
                    RowBox[{"\[Pi]", ",", "1000"}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"N", "[", 
                    RowBox[{"\[Pi]", ",", "1000"}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"N", "[", 
                    RowBox[{"\[Pi]", ",", "1000"}], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], 
            PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{Deployed -> True}]}
      },
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox["3.\
141592653589793238462643383279502884197169399375105820974944592307816406286208\
998628034825342117067982148086513282306647093844609550582231725359408128481117\
450284102701938521105559644622948954930381964428810975665933446128475648233786\
783165271201909145648566923460348610454326648213393607260249141273724587006606\
315588174881520920962829254091715364367892590360011330530548820466521384146951\
941511609433057270365759591953092186117381932611793105118548074462379962749567\
351885752724891227938183011949129833673362440656643086021394946395224737190702\
179860943702770539217176293176752384674818467669405132000568127145263560827785\
771342757789609173637178721468440901224953430146549585371050792279689258923542\
019956112129021960864034418159813629774771309960518707211349999998372978049951\
059731732816096318595024459455346908302642522308253344685035261931188171010003\
137838752886587533208381420617177669147303598253490428755468731159562863882353\
787593751957781857780532171226806613001927876611195909216420198938095257201065\
4858598`1000.", TraditionalForm]], "Output",
 CellChangeTimes->{3.5393469514632063`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288639892*^9, 3.5079574756720552`*^9}],

Cell[TextData[{
 "Integrate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", "(", 
    SuperscriptBox["x", "2"], ")"}], TraditionalForm]]],
 " from 0 to \[Infinity]. ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.507896120753077*^9, 
   3.5078961692575493`*^9}, {3.5078962270356503`*^9, 3.5078962311081142`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "int sin x^2 from 0 to infinity", 
   Typeset`newq$$ = "int sin x^2 from 0 to infinity", Typeset`chosen$$ = 
   "Integrate[Sin[x^2], {x, 0, Infinity}]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "int sin x^2 from 0 to infinity", 
                  Defer[
                   Integrate[
                    Sin[Global`x^2], {Global`x, 0, Infinity}]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    SuperscriptBox["x", "2"], "]"}], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    SuperscriptBox["x", "2"], "]"}], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    SuperscriptBox["x", "2"], "]"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "int sin x^2 from 0 to infinity", 
                    Defer[
                    Integrate[
                    Sin[Global`x^2], {Global`x, 0, Infinity}]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    SuperscriptBox["x", "2"], "]"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    SuperscriptBox["x", "2"], "]"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    SuperscriptBox["x", "2"], "]"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], 
            PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{Deployed -> True}]}
      },
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  FractionBox[
   SqrtBox[
    FractionBox["\[Pi]", "2"]], "2"], TraditionalForm]], "Output",
 CellChangeTimes->{3.5393469660527763`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288639892*^9, 3.507957477847992*^9}],

Cell[TextData[{
 "Sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SuperscriptBox["n", "2"]}], TraditionalForm]]],
 " with ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " from 1 to \[Infinity]. What is the exact value of this sum? ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.507896120753077*^9, 
   3.5078961692575493`*^9}, {3.5078962270356503`*^9, 
   3.5078962311081142`*^9}, {3.507896273351543*^9, 3.507896338959052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "sum 1/n^2 from 1 to inf", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Infinite sum", 1, 1, "Input", 
        "N[Sum[1/n^2, {n, 1, Infinity}]]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Infinite sum", "scanner" -> "Sum", "id" -> "Result", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"N[Sum[1/n^2, {n, 1, Infinity}]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              RowBox[{
                RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
                  FractionBox["1", 
                   SuperscriptBox["n", "2"]]}], "\[LongEqual]", 
                TagBox[
                 FractionBox[
                  SuperscriptBox["\[Pi]", "2"], "6"], Identity], 
                "\[TildeTilde]", 
                TagBox["1.6449340668482262`", Identity]}]}, "Row", 
             DisplayFunction -> (#& ), InterpretationFunction -> (RowBox[{
                StyleBox[
                "Row", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{"{", #, "}"}], "]"}]& )], TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Result__More digits"}, {}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Partial sums", "scanner" -> "Sum", "id" -> 
     "PartialSums", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"ListLinePlot[Accumulate[Table[1/n^2, {n, 1, 6}]]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[
             
             GraphicsComplexBox[{{1., 1.}, {2., 1.25}, {3., 
              1.3611111111111112`}, {4., 1.4236111111111112`}, {5., 
              1.4636111111111112`}, {6., 1.4913888888888889`}}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 LineBox[{1, 2, 3, 4, 5, 6}]}}, {{
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 InsetBox[
                  BoxData[
                   FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> Rational[50, 7], 
                    StripOnInput -> False], TraditionalForm]], 1], 
                 InsetBox[
                  BoxData[
                   FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> Rational[50, 7], 
                    StripOnInput -> False], TraditionalForm]], 2], 
                 InsetBox[
                  BoxData[
                   FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> Rational[50, 7], 
                    StripOnInput -> False], TraditionalForm]], 3], 
                 InsetBox[
                  BoxData[
                   FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> Rational[50, 7], 
                    StripOnInput -> False], TraditionalForm]], 4], 
                 InsetBox[
                  BoxData[
                   FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> Rational[50, 7], 
                    StripOnInput -> False], TraditionalForm]], 5], 
                 InsetBox[
                  BoxData[
                   FormBox[
                    StyleBox[
                    "\"\[FilledCircle]\"", FontSize -> Rational[50, 7], 
                    StripOnInput -> False], TraditionalForm]], 6]}, {}}}], {
             AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> True, AxesOrigin -> {1, 0}, 
              BaseStyle -> {CellBaseline -> Baseline}, FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], ImageSize -> 
              200, LabelStyle -> {FontFamily -> "Verdana", FontSize -> 10}, 
              PlotRange -> {{1., 6.}, {0, 1.4913888888888889`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {
                Scaled[0.02], 
                Scaled[0.02]}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}, TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More terms", "input" -> 
         "PartialSums__More terms"}, {}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Convergence tests", "scanner" -> "Sum", "id" -> 
     "ConvergenceTests", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"The ratio test is inconclusive.\"", TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"The root test is inconclusive.\"", TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"By the integral test, the series converges.\"", 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Partial sum formula", "scanner" -> "Sum", "id" -> 
     "PartialSumFormula", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TagBox[
                RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"n", "=", "1"}], "m"], 
                  FractionBox["1", 
                   SuperscriptBox["n", "2"]]}], HoldForm], 
               PolynomialForm[#, TraditionalOrder -> False]& ], 
              "\[LongEqual]", 
              
              TemplateBox[{"m", "2"}, "HarmonicNumber2", SyntaxForm -> 
               SubsuperscriptBox]}], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "H_n^(r) is the generalized harmonic number"}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://reference.wolfram.com/mathematica/ref/HarmonicNumber.html",
            "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/GammaBetaErf/HarmonicNumber2", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/HarmonicNumber.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             StyleBox[
              FormBox[
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   
                   TemplateBox[{"n", "r"}, "HarmonicNumber2", SyntaxForm -> 
                    SubsuperscriptBox], FontFamily -> "Bitstream Charter", 
                   Bold, 14, StripOnInput -> False], 
                  "\"is the generalized harmonic number\""}, "Row", 
                 DisplayFunction -> (RowBox[{#, " ", #2}]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", "\" \""}], "]"}]& )], 
                GrayLevel[0.3], StripOnInput -> False], TraditionalForm], 
              FontFamily -> "Verdana", FontSize -> 12]], "Output", 
            LinebreakAdjustments -> {1, 10, 0, 0, 10}]}]}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Series representations", "scanner" -> "Sum", "id" -> 
     "AlternateSeriesRepresentations", "position" -> "500", "error" -> 
     "false", "numsubpods" -> "4"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Pi^2/6 == Sum[k^(-2), {k, 1, Infinity}]"}], 
       
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                FractionBox[
                 SuperscriptBox["\[Pi]", "2"], "6"], "\[LongEqual]", 
                RowBox[{
                  UnderoverscriptBox["\[Sum]", 
                   RowBox[{"k", "=", "1"}], "\[Infinity]"], 
                  FractionBox["1", 
                   SuperscriptBox["k", "2"]]}]}], HoldForm], FrameStyle -> 
             None, FrameMargins -> {{-1, -1}, {3, 3}}], TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Pi^2/6 == -2 Sum[(-1)^k/k^2, {k, 1, Infinity}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                FractionBox[
                 SuperscriptBox["\[Pi]", "2"], "6"], "\[LongEqual]", 
                RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "1"}], "\[Infinity]"], 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "k"], 
                    SuperscriptBox["k", "2"]]}]}]}], HoldForm], FrameStyle -> 
             None, FrameMargins -> {{-1, -1}, {3, 3}}], TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Pi^2/6 == (4 Sum[(1 + 2 k)^(-2), {k, 0, Infinity}])/3"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                FractionBox[
                 SuperscriptBox["\[Pi]", "2"], "6"], "\[LongEqual]", 
                RowBox[{
                  FractionBox["4", "3"], " ", 
                  RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "0"}], "\[Infinity]"], 
                    FractionBox["1", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "k"}]}], ")"}], "2"]]}]}]}], HoldForm], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Pi^2/6 == (8 Sum[(-1)^k/(1 + 2 k), {k, 0, Infinity}]^2)/3"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FrameBox[
             TagBox[
              RowBox[{
                FractionBox[
                 SuperscriptBox["\[Pi]", "2"], "6"], "\[LongEqual]", 
                RowBox[{
                  FractionBox["8", "3"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    RowBox[{"k", "=", "0"}], "\[Infinity]"], 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "k"], 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "k"}]}]]}], ")"}], "2"]}]}], HoldForm], 
             FrameStyle -> None, FrameMargins -> {{-1, -1}, {3, 3}}], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "AlternateSeriesRepresentations__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://functions.wolfram.com/Constants/Pi/06/ShowAll.html", 
           "text" -> "More information"}, {}]}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "5", "datatypes" -> 
    "MathematicalFunctionIdentity,Sum", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.347", "parsetiming" -> "0.515", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSPa7571a0age9f8014b1a60000151f3520a9e4i4fd", "host" -> 
    "http://www2.wolframalpha.com", "server" -> "2", "related" -> 
    "http://www2.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa7581a0age9f8014b1a600003f27c78671097c09&s=2", "version" -> "2.5"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2012, 2, 27, 23, 56, 21.213803`8.079193514931381}, "Line" -> 
    39, "SessionID" -> 23195516407179637594}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Infinite sum", 1, 1, "Input", 
    "N[Sum[1/n^2, {n, 1, Infinity}]]"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "sum 1/n^2 from 1 to inf"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{162., {69., 16.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox["1.6449340668482262`", TraditionalForm]], "Output",
 CellChangeTimes->{3.5393469815329447`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  FractionBox["1", 
   SuperscriptBox["n", "2"]]}]], "Input",
 CellChangeTimes->{{3.53934700567239*^9, 3.539347007584075*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox[
   SuperscriptBox["\[Pi]", "2"], "6"], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347007968987*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288639892*^9, 3.5079574827517567`*^9}],

Cell[TextData[{
 "Solve the simultaneous equations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "\[LongEqual]", "1"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "-", "y"}], "\[LongEqual]", "1"}], TraditionalForm]]],
 ".  ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.507896120753077*^9, 
   3.5078961692575493`*^9}, {3.5078962270356503`*^9, 
   3.5078962311081142`*^9}, {3.507896273351543*^9, 3.507896338959052*^9}, {
   3.507896406391966*^9, 3.507896412125564*^9}, {3.507896449483135*^9, 
   3.507896513194379*^9}, {3.507896545864436*^9, 3.507896591441513*^9}, {
   3.507896727100626*^9, 3.507896799958096*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "solve x^2+y^2=1 and x-y=1", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Results", 1, 2, "Input", 
        "Reduce[{x^2 + y^2 == 1, x - y == 1}, {x, y}]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "\"solve\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                   Global`TagBoxWrapper["Separator" -> " "]], 
                  LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                 StyleBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", 
                    SuperscriptBox["y", "2"]}], "\[LongEqual]", "1"}], 
                    HoldForm]}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"x", "-", "y"}], "\[LongEqual]", "1"}], 
                    HoldForm]}}, 
                    GridBoxBackground -> {
                    "Columns" -> {None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 
                    Automatic], 
                   Global`TagBoxWrapper["Separator" -> " "]], 
                  LineSpacing -> {1, 0, 1.5}, LineIndent -> 0]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              Global`TagBoxWrapper["Separator" -> " "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Results", "scanner" -> "Solve", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "2", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement[
       "minput", {}, {"Reduce[{x^2 + y^2 == 1, x - y == 1}, {x, y}]"}], 
       XMLElement[
       "moutput", {}, {"(x == 0 && y == -1) || (x == 1 && y == 0)"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              RowBox[{"x", "\[LongEqual]", "0"}], 
              RowBox[{"y", "\[LongEqual]", 
                RowBox[{"-", "1"}]}]}, "Row", DisplayFunction -> (RowBox[{#, 
                StyleBox[
                "\" and \"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0, 
                 GrayLevel[0.6], StripOnInput -> False], #2}]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Row", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                  StyleBox[
                  "\" and \"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, 
                   GrayLevel[0.6], StripOnInput -> False]}], "]"}]& )], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement[
       "minput", {}, {"Reduce[{x^2 + y^2 == 1, x - y == 1}, {x, y}]"}], 
       XMLElement[
       "moutput", {}, {"(x == 0 && y == -1) || (x == 1 && y == 0)"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              RowBox[{"x", "\[LongEqual]", "1"}], 
              RowBox[{"y", "\[LongEqual]", "0"}]}, "Row", 
             DisplayFunction -> (RowBox[{#, 
                StyleBox[
                "\" and \"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0, 
                 GrayLevel[0.6], StripOnInput -> False], #2}]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Row", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                  StyleBox[
                  "\" and \"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, 
                   GrayLevel[0.6], StripOnInput -> False]}], "]"}]& )], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Implicit plot", "scanner" -> "Solve", "id" -> 
     "PlotOfSolutionSet", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ContourPlot[{x^2 + y^2 == 1, x - y == 1}, {x, -1.25, 3.125}, {y, \
-3.125, 1.25}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               FormBox[
                StyleBox[
                 
                 DynamicModuleBox[{
                  Global`max2204$$ = 0.5, Global`max2206$$ = 0.5, 
                   Global`min2203$$ = -0.5, Global`min2205$$ = -0.5, 
                   CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                   False, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                   Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                   Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                   Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[Global`min2203$$], -0.5, 
                    Subscript[Global`x, "min"]}, -1, 1}, {{
                    Hold[Global`max2204$$], 0.5, 
                    Subscript[Global`x, "max"]}, -1, 1}, {{
                    Hold[Global`min2205$$], -0.5, 
                    Subscript[Global`y, "min"]}, -1, 1}, {{
                    Hold[Global`max2206$$], 0.5, 
                    Subscript[Global`y, "max"]}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    RawBoxes[
                    PaneBox[
                    GraphicsBox[
                    
                    RasterBox[{{{0, 0, 0, 24}}, {{0, 0, 0, 9}}, {{0, 0, 0, 
                    10}}, {{0, 0, 0, 10}}, {{0, 0, 0, 9}}, {{0, 0, 0, 9}}, {{
                    0, 0, 0, 8}}, {{0, 0, 0, 8}}, {{0, 0, 0, 9}}, {{0, 0, 0, 
                    8}}, {{0, 0, 0, 7}}, {{0, 0, 0, 7}}, {{0, 0, 0, 8}}, {{0, 
                    0, 0, 6}}, {{0, 0, 0, 6}}, {{0, 0, 0, 6}}, {{0, 0, 0, 
                    6}}, {{0, 0, 0, 5}}, {{0, 0, 0, 6}}, {{0, 0, 0, 5}}, {{0, 
                    0, 0, 4}}, {{0, 0, 0, 4}}, {{0, 0, 0, 5}}, {{0, 0, 0, 
                    5}}, {{0, 0, 0, 3}}, {{0, 0, 0, 4}}, {{0, 0, 0, 3}}, {{0, 
                    0, 0, 3}}, {{0, 0, 0, 3}}, {{0, 0, 0, 3}}, {{0, 0, 0, 
                    2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 
                    0, 0, 1}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 
                    0}}, {{0, 0, 0, 1}}, {{255, 255, 255, 0}}, {{255, 255, 
                    255, 0}}, {{255, 255, 255, 0}}, {{255, 255, 255, 0}}, {{
                    255, 255, 255, 0}}, {{255, 255, 255, 0}}}, {{0, 45}, {
                    2500, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                    ImageSize -> {2500, 45}, 
                    PlotRange -> {{0, 2500}, {0, 45}}], ImageSize -> 
                    Scaled[1], ScrollPosition -> {0., 0.}]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                   Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = 
                   False, Typeset`skipInitDone$$ = True, 
                   CalculateUtilities`GraphicsUtilities`Private`more$7319149$$\
 = False, Global`min2203$7319150$$ = 0, Global`max2204$7319151$$ = 0, 
                   Global`min2205$7319152$$ = 0, Global`max2206$7319157$$ = 
                   0}, 
                  DynamicBox[
                   Manipulate`ManipulateBoxes[
                   2, TraditionalForm, 
                    "Variables" :> {
                    Global`max2204$$ = 0.5, Global`max2206$$ = 0.5, 
                    Global`min2203$$ = -0.5, Global`min2205$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$7319149$\
$, False], 
                    Hold[Global`min2203$$, Global`min2203$7319150$$, 0], 
                    Hold[Global`max2204$$, Global`max2204$7319151$$, 0], 
                    Hold[Global`min2205$$, Global`min2205$7319152$$, 0], 
                    Hold[Global`max2206$$, Global`max2206$7319157$$, 0]}, 
                    "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> 
                    ContourPlot[{
                    Global`x^2 + Global`y^2 == 1, Global`x - Global`y == 1}, {
                    Global`x, 0.9375 + 
                    2.338535866733713 
                    Tan[1.5040801783846716` Global`min2203$$], 0.9375 + 
                    2.338535866733713 
                    Tan[1.5040801783846716` 
                    If[Global`min2203$$ == Global`max2204$$, Global`min2203$$ + 
                    0.004375, Global`max2204$$]]}, {
                    Global`y, -0.9375 + 
                    2.338535866733713 
                    Tan[1.5040801783846716` Global`min2205$$], -0.9375 + 
                    2.338535866733713 
                    Tan[1.5040801783846716` 
                    If[Global`min2205$$ == Global`max2206$$, Global`min2205$$ + 
                    0.004375, Global`max2206$$]]}, ImageSize -> {300.}, 
                    PlotPoints -> 30, ContourStyle -> {{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    AbsoluteThickness[1]]}}, Exclusions -> {Automatic}, 
                    Epilog -> {
                    AbsolutePointSize[5], 
                    Hue[0], {
                    Tooltip[
                    Point[{0, -1.}], 
                    Row[{"(", 0, ",", -1, ")"}]], 
                    Tooltip[
                    Point[{1., 0}], 
                    Row[{"(", 1, ",", 0, ")"}]]}}, FrameLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}], 
                    "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    Global`min2203$$, -0.5, 
                    Subscript[Global`x, "min"]}, -1, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 1}, {{Global`max2204$$, 0.5, 
                    Subscript[Global`x, "max"]}, -1, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 2}, {{Global`min2205$$, -0.5, 
                    Subscript[Global`y, "min"]}, -1, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 3}, {{Global`max2206$$, 0.5, 
                    Subscript[Global`y, "max"]}, -1, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 4}, 
                    Style[
                    Overlay[{
                    RawBoxes[
                    PaneBox[
                    GraphicsBox[
                    
                    RasterBox[{{{0, 0, 0, 24}}, {{0, 0, 0, 9}}, {{0, 0, 0, 
                    10}}, {{0, 0, 0, 10}}, {{0, 0, 0, 9}}, {{0, 0, 0, 9}}, {{
                    0, 0, 0, 8}}, {{0, 0, 0, 8}}, {{0, 0, 0, 9}}, {{0, 0, 0, 
                    8}}, {{0, 0, 0, 7}}, {{0, 0, 0, 7}}, {{0, 0, 0, 8}}, {{0, 
                    0, 0, 6}}, {{0, 0, 0, 6}}, {{0, 0, 0, 6}}, {{0, 0, 0, 
                    6}}, {{0, 0, 0, 5}}, {{0, 0, 0, 6}}, {{0, 0, 0, 5}}, {{0, 
                    0, 0, 4}}, {{0, 0, 0, 4}}, {{0, 0, 0, 5}}, {{0, 0, 0, 
                    5}}, {{0, 0, 0, 3}}, {{0, 0, 0, 4}}, {{0, 0, 0, 3}}, {{0, 
                    0, 0, 3}}, {{0, 0, 0, 3}}, {{0, 0, 0, 3}}, {{0, 0, 0, 
                    2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 
                    0, 0, 1}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 
                    0}}, {{0, 0, 0, 1}}, {{255, 255, 255, 0}}, {{255, 255, 
                    255, 0}}, {{255, 255, 255, 0}}, {{255, 255, 255, 0}}, {{
                    255, 255, 255, 0}}, {{255, 255, 255, 0}}}, {{0, 45}, {
                    2500, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                    ImageSize -> {2500, 45}, 
                    PlotRange -> {{0, 2500}, {0, 45}}], ImageSize -> 
                    Scaled[1], ScrollPosition -> {0., 0.}]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                    "Options" :> {
                    TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                    "DefaultOptions" :> {}], SingleEvaluation -> True], 
                  DynamicModuleValues :> {}, Deinitialization :> None, 
                  UntrackedVariables :> {Typeset`size$$}, 
                  SynchronousInitialization -> True, 
                  UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
                 Deployed -> True, StripOnInput -> False], TraditionalForm], 
               Manipulate`InterpretManipulate[1]], 
              TagBox[
               GridBox[{{
                  GraphicsBox[{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> 13, 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", 
                    SuperscriptBox["y", "2"]}], "\[LongEqual]", "1"}], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, {FontFamily -> "Verdana", FontSize -> 10}, 
                   GrayLevel[0.5], StripOnInput -> False]}, {
                  GraphicsBox[{
                    RGBColor[0.6, 0.24, 0.4428931686004542], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> 13, 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox[
                   RowBox[{
                    RowBox[{"x", "-", "y"}], "\[LongEqual]", "1"}], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, {FontFamily -> "Verdana", FontSize -> 10}, 
                   GrayLevel[0.5], StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.3}}, "Rows" -> {{0.3}}}],
                "Grid"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  
                  ItemBox[#2, Alignment -> {Inherited, Bottom}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Right", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "Solve", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.991", 
    "parsetiming" -> "0.498", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa25621a0aefba4ab0fe5d00003gf2fa0658867888", "host" -> 
    "http://www2.wolframalpha.com", "server" -> "26", "related" -> 
    "http://www2.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa25631a0aefba4ab0fe5d000026b0ihfe3e3i4gfg&s=26", "version" -> "2.5"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2012, 2, 27, 23, 57, 3.640683`7.3137578542176325}, "Line" -> 
    41, "SessionID" -> 23195516407179637594}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Results", 1, 2, "Input", 
    "Reduce[{x^2 + y^2 == 1, x - y == 1}, {x, y}]"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "solve x^2+y^2=1 and x-y=1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{283., {48., 16.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "\[LongEqual]", "0"}], "\[Or]", 
     RowBox[{"x", "\[LongEqual]", "1"}]}], ")"}], "\[And]", 
   RowBox[{"y", "\[LongEqual]", 
    RowBox[{"x", "-", "1"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347023749921*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288639892*^9, 3.507957484591765*^9}],

Cell[TextData[{
 "Produce a contour plot of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], "-", 
      SuperscriptBox["y", "2"]}]], 
    RowBox[{"sin", "(", 
     RowBox[{"x", "+", "y"}], ")"}]}], TraditionalForm]]],
 " over ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}], "\[Times]", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], TraditionalForm]]],
 ".  ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.507896120753077*^9, 
   3.5078961692575493`*^9}, {3.5078962270356503`*^9, 
   3.5078962311081142`*^9}, {3.507896273351543*^9, 3.507896338959052*^9}, {
   3.507896406391966*^9, 3.507896412125564*^9}, {3.507896449483135*^9, 
   3.507896513194379*^9}, {3.507896545864436*^9, 3.507896591441513*^9}, {
   3.507896727100626*^9, 3.507896764565721*^9}, {3.5078968330724993`*^9, 
   3.507896862124426*^9}, {3.507896893079068*^9, 3.507896895347973*^9}, {
   3.507896938779286*^9, 3.50789693909317*^9}, {3.539347230862906*^9, 
   3.539347232686235*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "plot exp(-x^2-y^2) sin(x+y) over -1<x<1 and -1<y<1", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "3DPlot", "3D plot", 1, 1, "Input", 
        "Plot3D[E^(-x^2 - y^2) Sin[x + y], {x, -1, 1}, {y, -1, 1}]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "\"plot\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    RowBox[{
                    RowBox[{"exp", "(", 
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["x", "2"]}], "-", 
                    SuperscriptBox["y", "2"]}], ")"}], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"x", "+", "y"}], ")"}]}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                   Global`TagBoxWrapper["Separator" -> " | "]], 
                  LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                 StyleBox[
                  TagBox[
                   GridBox[{{
                    TemplateBox[{
                    RowBox[{"x", "\[LongEqual]", 
                    RowBox[{"-", "1"}]}], 
                    StyleBox[
                    "\"  to  \"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, 
                    GrayLevel[0.6], StripOnInput -> False], "1"}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    TagBox[
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], HoldForm], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )]}, {
                    TemplateBox[{
                    RowBox[{"y", "\[LongEqual]", 
                    RowBox[{"-", "1"}]}], 
                    StyleBox[
                    "\"  to  \"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, 
                    GrayLevel[0.6], StripOnInput -> False], "1"}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    TagBox[
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], HoldForm], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )]}}, 
                    GridBoxBackground -> {
                    "Columns" -> {None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 
                    Automatic], 
                   Global`TagBoxWrapper["Separator" -> " | "]], 
                  LineSpacing -> {1, 0, 1.5}, LineIndent -> 0]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              Global`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "3D plot", "scanner" -> "Plot", "id" -> "3DPlot", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot3D[E^(-x^2 - y^2) Sin[x + y], {x, -1, 1}, {y, -1, 1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`density$$ = 15, 
                 Global`max852$$ = 0.5, Global`max854$$ = 0.5, 
                 Global`min851$$ = -0.5, Global`min853$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`xmesh$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`ymesh$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`zmesh$$ = False,
                  Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[Global`min851$$], -0.5, 
                    Subscript[Global`x, "min"]}, -1, 1}, {{
                    Hold[Global`max852$$], 0.5, 
                    Subscript[Global`x, "max"]}, -1, 1}, {{
                    Hold[Global`min853$$], -0.5, 
                    Subscript[Global`y, "min"]}, -1, 1}, {{
                    Hold[Global`max854$$], 0.5, 
                    Subscript[Global`y, "max"]}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$$], 
                    True, "x"}, {True, False}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$$], 
                    True, "y"}, {True, False}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$], 
                    False, "z"}, {True, False}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`density$$], 
                    15, "mesh density"}, 1, 30, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    RawBoxes[
                    PaneBox[
                    GraphicsBox[
                    
                    RasterBox[{{{0, 0, 0, 24}}, {{0, 0, 0, 9}}, {{0, 0, 0, 
                    10}}, {{0, 0, 0, 10}}, {{0, 0, 0, 9}}, {{0, 0, 0, 9}}, {{
                    0, 0, 0, 8}}, {{0, 0, 0, 8}}, {{0, 0, 0, 9}}, {{0, 0, 0, 
                    8}}, {{0, 0, 0, 7}}, {{0, 0, 0, 7}}, {{0, 0, 0, 8}}, {{0, 
                    0, 0, 6}}, {{0, 0, 0, 6}}, {{0, 0, 0, 6}}, {{0, 0, 0, 
                    6}}, {{0, 0, 0, 5}}, {{0, 0, 0, 6}}, {{0, 0, 0, 5}}, {{0, 
                    0, 0, 4}}, {{0, 0, 0, 4}}, {{0, 0, 0, 5}}, {{0, 0, 0, 
                    5}}, {{0, 0, 0, 3}}, {{0, 0, 0, 4}}, {{0, 0, 0, 3}}, {{0, 
                    0, 0, 3}}, {{0, 0, 0, 3}}, {{0, 0, 0, 3}}, {{0, 0, 0, 
                    2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 
                    0, 0, 1}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 
                    0}}, {{0, 0, 0, 1}}, {{255, 255, 255, 0}}, {{255, 255, 
                    255, 0}}, {{255, 255, 255, 0}}, {{255, 255, 255, 0}}, {{
                    255, 255, 255, 0}}, {{255, 255, 255, 0}}}, {{0, 45}, {
                    2500, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                    ImageSize -> {2500, 45}, 
                    PlotRange -> {{0, 2500}, {0, 45}}], ImageSize -> 
                    Scaled[1], ScrollPosition -> {0., 0.}]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    RawBoxes[
                    GraphicsBox[
                    TagBox[
                    
                    RasterBox[{{{255, 132, 0}, {255, 132, 0}, {255, 132, 0}, {
                    255, 132, 0}, {255, 132, 0}, {255, 132, 0}}, {{255, 132, 
                    0}, {255, 132, 0}, {255, 132, 0}, {255, 132, 0}, {255, 
                    132, 0}, {255, 132, 0}}}, {{0, 2}, {6, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                    ImageSize -> Magnification[1], ImageSizeRaw -> {6, 2}, 
                    BaselinePosition -> (Scaled[0] -> Center), 
                    PlotRange -> {{0, 6}, {0, 2}}]]], " ", 
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    RawBoxes[
                    GraphicsBox[
                    TagBox[
                    
                    RasterBox[{{{255, 132, 0}, {255, 132, 0}, {255, 132, 0}, {
                    255, 132, 0}, {255, 132, 0}, {255, 132, 0}}, {{255, 132, 
                    0}, {255, 132, 0}, {255, 132, 0}, {255, 132, 0}, {255, 
                    132, 0}, {255, 132, 0}}}, {{0, 2}, {6, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                    ImageSize -> Magnification[1], ImageSizeRaw -> {6, 2}, 
                    BaselinePosition -> (Scaled[0] -> Center), 
                    PlotRange -> {{0, 6}, {0, 2}}]], " "}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Grid[{{"mesh:", 
                    Manipulate`Place[5], 
                    Manipulate`Place[6], 
                    Manipulate`Place[7]}}], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}, {"", 
                    Item[
                    Manipulate`Place[8], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    RawBoxes[
                    GraphicsBox[
                    TagBox[
                    
                    RasterBox[{{{255, 255, 255}, {255, 255, 255}, {255, 132, 
                    0}, {255, 132, 0}, {255, 255, 255}, {255, 255, 255}}, {{
                    255, 255, 255}, {255, 255, 255}, {255, 132, 0}, {255, 132,
                     0}, {255, 255, 255}, {255, 255, 255}}, {{255, 132, 0}, {
                    255, 132, 0}, {255, 132, 0}, {255, 132, 0}, {255, 132, 
                    0}, {255, 132, 0}}, {{255, 132, 0}, {255, 132, 0}, {255, 
                    132, 0}, {255, 132, 0}, {255, 132, 0}, {255, 132, 0}}, {{
                    255, 255, 255}, {255, 255, 255}, {255, 132, 0}, {255, 132,
                     0}, {255, 255, 255}, {255, 255, 255}}, {{255, 255, 
                    255}, {255, 255, 255}, {255, 132, 0}, {255, 132, 0}, {255,
                     255, 255}, {255, 255, 255}}}, {{0, 6}, {6, 0}}, {0, 255},
                     ColorFunction -> RGBColor], 
                    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", 
                    Interleaving -> True], Selectable -> False], BaseStyle -> 
                    "ImageGraphics", ImageSize -> Magnification[1], 
                    ImageSizeRaw -> {6, 6}, 
                    BaselinePosition -> (Scaled[0.3] -> Center), 
                    PlotRange -> {{0, 6}, {0, 6}}]], " More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`more$1754107$$ = 
                 False, Global`min851$1754108$$ = 0, Global`max852$1754109$$ = 
                 0, Global`min853$1754110$$ = 0, Global`max854$1754111$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`xmesh$1754112$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`ymesh$\
1754113$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`zmesh$1754114$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`density$\
1754115$$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`density$$ = 
                    15, Global`max852$$ = 0.5, Global`max854$$ = 0.5, 
                    Global`min851$$ = -0.5, Global`min853$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, CalculateUtilities`GraphicsUtilities`Private`xmesh$\
$ = True, CalculateUtilities`GraphicsUtilities`Private`ymesh$$ = True, 
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$1754107$\
$, False], 
                    Hold[Global`min851$$, Global`min851$1754108$$, 0], 
                    Hold[Global`max852$$, Global`max852$1754109$$, 0], 
                    Hold[Global`min853$$, Global`min853$1754110$$, 0], 
                    Hold[Global`max854$$, Global`max854$1754111$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$$, 
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$\
1754112$$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$$, 
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$\
1754113$$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$, 
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$\
1754114$$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`density$$, 
                    CalculateUtilities`GraphicsUtilities`Private`density$\
1754115$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Function[Null, 
                    
                    Plot3D[#, #2, #3, Mesh -> 
                    CalculateUtilities`GraphicsUtilities`Private`density$$, 
                    MeshFunctions :> Flatten[{
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$$, #& \
, {}], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$$, #2& \
, {}], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$, #3& \
, {}]}], 
                    SlotSequence[4]], HoldAll][
                   E^(-Global`x^2 - Global`y^2) Sin[Global`x + Global`y], {
                    Global`x, 0. + 
                    1.0690449676496974` 
                    Tan[1.5040801783846716` Global`min851$$], 0. + 
                    1.0690449676496974` 
                    Tan[1.5040801783846716` 
                    If[Global`min851$$ == Global`max852$$, Global`min851$$ + 
                    Rational[1, 500], Global`max852$$]]}, {
                    Global`y, 0. + 
                    1.0690449676496974` 
                    Tan[1.5040801783846716` Global`min853$$], 0. + 
                    1.0690449676496974` 
                    Tan[1.5040801783846716` 
                    If[Global`min853$$ == Global`max854$$, Global`min853$$ + 
                    Rational[1, 500], Global`max854$$]]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, ImageSize -> {300.}, 
                    ClippingStyle -> Opacity[0.25], AxesLabel -> Automatic, 
                    MeshStyle -> Opacity[0.45], Mesh -> 20, 
                    ColorFunction :> (Blend[{
                    RGBColor[0.628962, 0.149248, 0.135592], 
                    RGBColor[1., 0.634379, 0.186801], 
                    RGBColor[1., 0.895537, 0.582162], 
                    RGBColor[1., 0.995346, 0.826535]}, #3]& )], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    Global`min851$$, -0.5, 
                    Subscript[Global`x, "min"]}, -1, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 1}, {{Global`max852$$, 0.5, 
                    Subscript[Global`x, "max"]}, -1, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 2}, {{Global`min853$$, -0.5, 
                    Subscript[Global`y, "min"]}, -1, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 3}, {{Global`max854$$, 0.5, 
                    Subscript[Global`y, "max"]}, -1, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 4}, {{
                    CalculateUtilities`GraphicsUtilities`Private`xmesh$$, 
                    True, "x"}, {True, False}, ControlPlacement -> 5}, {{
                    CalculateUtilities`GraphicsUtilities`Private`ymesh$$, 
                    True, "y"}, {True, False}, ControlPlacement -> 6}, {{
                    CalculateUtilities`GraphicsUtilities`Private`zmesh$$, 
                    False, "z"}, {True, False}, ControlPlacement -> 7}, {{
                    CalculateUtilities`GraphicsUtilities`Private`density$$, 
                    15, "mesh density"}, 1, 30, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 8}, 
                    Style[
                    Overlay[{
                    RawBoxes[
                    PaneBox[
                    GraphicsBox[
                    
                    RasterBox[{{{0, 0, 0, 24}}, {{0, 0, 0, 9}}, {{0, 0, 0, 
                    10}}, {{0, 0, 0, 10}}, {{0, 0, 0, 9}}, {{0, 0, 0, 9}}, {{
                    0, 0, 0, 8}}, {{0, 0, 0, 8}}, {{0, 0, 0, 9}}, {{0, 0, 0, 
                    8}}, {{0, 0, 0, 7}}, {{0, 0, 0, 7}}, {{0, 0, 0, 8}}, {{0, 
                    0, 0, 6}}, {{0, 0, 0, 6}}, {{0, 0, 0, 6}}, {{0, 0, 0, 
                    6}}, {{0, 0, 0, 5}}, {{0, 0, 0, 6}}, {{0, 0, 0, 5}}, {{0, 
                    0, 0, 4}}, {{0, 0, 0, 4}}, {{0, 0, 0, 5}}, {{0, 0, 0, 
                    5}}, {{0, 0, 0, 3}}, {{0, 0, 0, 4}}, {{0, 0, 0, 3}}, {{0, 
                    0, 0, 3}}, {{0, 0, 0, 3}}, {{0, 0, 0, 3}}, {{0, 0, 0, 
                    2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 
                    0, 0, 1}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 
                    0}}, {{0, 0, 0, 1}}, {{255, 255, 255, 0}}, {{255, 255, 
                    255, 0}}, {{255, 255, 255, 0}}, {{255, 255, 255, 0}}, {{
                    255, 255, 255, 0}}, {{255, 255, 255, 0}}}, {{0, 45}, {
                    2500, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                    ImageSize -> {2500, 45}, 
                    PlotRange -> {{0, 2500}, {0, 45}}], ImageSize -> 
                    Scaled[1], ScrollPosition -> {0., 0.}]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    RawBoxes[
                    GraphicsBox[
                    TagBox[
                    
                    RasterBox[{{{255, 132, 0}, {255, 132, 0}, {255, 132, 0}, {
                    255, 132, 0}, {255, 132, 0}, {255, 132, 0}}, {{255, 132, 
                    0}, {255, 132, 0}, {255, 132, 0}, {255, 132, 0}, {255, 
                    132, 0}, {255, 132, 0}}}, {{0, 2}, {6, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                    ImageSize -> Magnification[1], ImageSizeRaw -> {6, 2}, 
                    BaselinePosition -> (Scaled[0] -> Center), 
                    PlotRange -> {{0, 6}, {0, 2}}]]], " ", 
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    RawBoxes[
                    GraphicsBox[
                    TagBox[
                    
                    RasterBox[{{{255, 132, 0}, {255, 132, 0}, {255, 132, 0}, {
                    255, 132, 0}, {255, 132, 0}, {255, 132, 0}}, {{255, 132, 
                    0}, {255, 132, 0}, {255, 132, 0}, {255, 132, 0}, {255, 
                    132, 0}, {255, 132, 0}}}, {{0, 2}, {6, 0}}, {0, 255}, 
                    ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                    ImageSize -> Magnification[1], ImageSizeRaw -> {6, 2}, 
                    BaselinePosition -> (Scaled[0] -> Center), 
                    PlotRange -> {{0, 6}, {0, 2}}]], " "}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Grid[{{"mesh:", 
                    Manipulate`Place[5], 
                    Manipulate`Place[6], 
                    Manipulate`Place[7]}}], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}, {"", 
                    Item[
                    Manipulate`Place[8], ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    RawBoxes[
                    GraphicsBox[
                    TagBox[
                    
                    RasterBox[{{{255, 255, 255}, {255, 255, 255}, {255, 132, 
                    0}, {255, 132, 0}, {255, 255, 255}, {255, 255, 255}}, {{
                    255, 255, 255}, {255, 255, 255}, {255, 132, 0}, {255, 132,
                     0}, {255, 255, 255}, {255, 255, 255}}, {{255, 132, 0}, {
                    255, 132, 0}, {255, 132, 0}, {255, 132, 0}, {255, 132, 
                    0}, {255, 132, 0}}, {{255, 132, 0}, {255, 132, 0}, {255, 
                    132, 0}, {255, 132, 0}, {255, 132, 0}, {255, 132, 0}}, {{
                    255, 255, 255}, {255, 255, 255}, {255, 132, 0}, {255, 132,
                     0}, {255, 255, 255}, {255, 255, 255}}, {{255, 255, 
                    255}, {255, 255, 255}, {255, 132, 0}, {255, 132, 0}, {255,
                     255, 255}, {255, 255, 255}}}, {{0, 6}, {6, 0}}, {0, 255},
                     ColorFunction -> RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                    ImageSize -> Magnification[1], ImageSizeRaw -> {6, 6}, 
                    BaselinePosition -> (Scaled[0.3] -> Center), 
                    PlotRange -> {{0, 6}, {0, 6}}]], " More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output"]}], 
       XMLElement["dataformats", {}, {"minput"}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Contour plot", "scanner" -> "Plot", "id" -> 
     "ContourPlot", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ContourPlot[E^(-x^2 - y^2) Sin[x + y], {x, -1, 1}, {y, -1, 1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                Global`max478$$ = 0.5, Global`max480$$ = 0.5, 
                 Global`min477$$ = -0.5, Global`min479$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[Global`min477$$], -0.5, 
                    Subscript[Global`x, "min"]}, -1, 1}, {{
                    Hold[Global`max478$$], 0.5, 
                    Subscript[Global`x, "max"]}, -1, 1}, {{
                    Hold[Global`min479$$], -0.5, 
                    Subscript[Global`y, "min"]}, -1, 1}, {{
                    Hold[Global`max480$$], 0.5, 
                    Subscript[Global`y, "max"]}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    RawBoxes[
                    PaneBox[
                    GraphicsBox[
                    
                    RasterBox[{{{0, 0, 0, 24}}, {{0, 0, 0, 9}}, {{0, 0, 0, 
                    10}}, {{0, 0, 0, 10}}, {{0, 0, 0, 9}}, {{0, 0, 0, 9}}, {{
                    0, 0, 0, 8}}, {{0, 0, 0, 8}}, {{0, 0, 0, 9}}, {{0, 0, 0, 
                    8}}, {{0, 0, 0, 7}}, {{0, 0, 0, 7}}, {{0, 0, 0, 8}}, {{0, 
                    0, 0, 6}}, {{0, 0, 0, 6}}, {{0, 0, 0, 6}}, {{0, 0, 0, 
                    6}}, {{0, 0, 0, 5}}, {{0, 0, 0, 6}}, {{0, 0, 0, 5}}, {{0, 
                    0, 0, 4}}, {{0, 0, 0, 4}}, {{0, 0, 0, 5}}, {{0, 0, 0, 
                    5}}, {{0, 0, 0, 3}}, {{0, 0, 0, 4}}, {{0, 0, 0, 3}}, {{0, 
                    0, 0, 3}}, {{0, 0, 0, 3}}, {{0, 0, 0, 3}}, {{0, 0, 0, 
                    2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 
                    0, 0, 1}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 
                    0}}, {{0, 0, 0, 1}}, {{255, 255, 255, 0}}, {{255, 255, 
                    255, 0}}, {{255, 255, 255, 0}}, {{255, 255, 255, 0}}, {{
                    255, 255, 255, 0}}, {{255, 255, 255, 0}}}, {{0, 45}, {
                    2500, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                    ImageSize -> {2500, 45}, 
                    PlotRange -> {{0, 2500}, {0, 45}}], ImageSize -> 
                    Scaled[1], ScrollPosition -> {0., 0.}]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`more$1014110$$ = 
                 False, Global`min477$1014111$$ = 0, Global`max478$1014112$$ = 
                 0, Global`min479$1014113$$ = 0, Global`max480$1014114$$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   Global`max478$$ = 0.5, Global`max480$$ = 0.5, 
                    Global`min477$$ = -0.5, Global`min479$$ = -0.5, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$1014110$\
$, False], 
                    Hold[Global`min477$$, Global`min477$1014111$$, 0], 
                    Hold[Global`max478$$, Global`max478$1014112$$, 0], 
                    Hold[Global`min479$$, Global`min479$1014113$$, 0], 
                    Hold[Global`max480$$, Global`max480$1014114$$, 0]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> 
                  ContourPlot[
                   E^(-Global`x^2 - Global`y^2) Sin[Global`x + Global`y], {
                    Global`x, 0. + 
                    1.0690449676496974` 
                    Tan[1.5040801783846716` Global`min477$$], 0. + 
                    1.0690449676496974` 
                    Tan[1.5040801783846716` 
                    If[Global`min477$$ == Global`max478$$, Global`min477$$ + 
                    Rational[1, 500], Global`max478$$]]}, {
                    Global`y, 0. + 
                    1.0690449676496974` 
                    Tan[1.5040801783846716` Global`min479$$], 0. + 
                    1.0690449676496974` 
                    Tan[1.5040801783846716` 
                    If[Global`min479$$ == Global`max480$$, Global`min479$$ + 
                    Rational[1, 500], Global`max480$$]]}, FrameLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, ImageSize -> {300.}, 
                    ClippingStyle -> Automatic, FrameLabel -> Automatic, 
                    RotateLabel -> False, PlotRangePadding -> 0, 
                    ColorFunction :> (Blend[{
                    RGBColor[
                    0.6289616235599298, 0.1492484931715877, 
                    0.1355916685740444], 
                    RGBColor[1., 0.634378576333257, 0.1868009460593576], 
                    RGBColor[1., 0.8955367360952163, 0.5821622034027619], 
                    RGBColor[
                    1., 0.9953459983215076, 0.826535439078355]}, #]& )], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    Global`min477$$, -0.5, 
                    Subscript[Global`x, "min"]}, -1, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 1}, {{Global`max478$$, 0.5, 
                    Subscript[Global`x, "max"]}, -1, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 2}, {{Global`min479$$, -0.5, 
                    Subscript[Global`y, "min"]}, -1, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 3}, {{Global`max480$$, 0.5, 
                    Subscript[Global`y, "max"]}, -1, 1, ImageSize -> Tiny, 
                    ControlPlacement -> 4}, 
                    Style[
                    Overlay[{
                    RawBoxes[
                    PaneBox[
                    GraphicsBox[
                    
                    RasterBox[{{{0, 0, 0, 24}}, {{0, 0, 0, 9}}, {{0, 0, 0, 
                    10}}, {{0, 0, 0, 10}}, {{0, 0, 0, 9}}, {{0, 0, 0, 9}}, {{
                    0, 0, 0, 8}}, {{0, 0, 0, 8}}, {{0, 0, 0, 9}}, {{0, 0, 0, 
                    8}}, {{0, 0, 0, 7}}, {{0, 0, 0, 7}}, {{0, 0, 0, 8}}, {{0, 
                    0, 0, 6}}, {{0, 0, 0, 6}}, {{0, 0, 0, 6}}, {{0, 0, 0, 
                    6}}, {{0, 0, 0, 5}}, {{0, 0, 0, 6}}, {{0, 0, 0, 5}}, {{0, 
                    0, 0, 4}}, {{0, 0, 0, 4}}, {{0, 0, 0, 5}}, {{0, 0, 0, 
                    5}}, {{0, 0, 0, 3}}, {{0, 0, 0, 4}}, {{0, 0, 0, 3}}, {{0, 
                    0, 0, 3}}, {{0, 0, 0, 3}}, {{0, 0, 0, 3}}, {{0, 0, 0, 
                    2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 
                    0, 0, 1}}, {{0, 0, 0, 2}}, {{0, 0, 0, 2}}, {{0, 0, 0, 
                    0}}, {{0, 0, 0, 1}}, {{255, 255, 255, 0}}, {{255, 255, 
                    255, 0}}, {{255, 255, 255, 0}}, {{255, 255, 255, 0}}, {{
                    255, 255, 255, 0}}, {{255, 255, 255, 0}}}, {{0, 45}, {
                    2500, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                    ImageSize -> {2500, 45}, 
                    PlotRange -> {{0, 2500}, {0, 45}}], ImageSize -> 
                    Scaled[1], ScrollPosition -> {0., 0.}]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}, {
                    Manipulate`Place[3], 
                    Manipulate`Place[4]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output"]}], 
       XMLElement["dataformats", {}, {"minput"}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "Plot", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.491", 
    "parsetiming" -> "1.256", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa28111a0aeh1bh053fi6h0000600597cd24ih752f", "host" -> 
    "http://www2.wolframalpha.com", "server" -> "17", "related" -> 
    "http://www2.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa28121a0aeh1bh053fi6h00005fg498ea15d650eg&s=17", "version" -> "2.5"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2012, 2, 27, 23, 58, 2.952097`7.222705612047516}, "Line" -> 43,
     "SessionID" -> 23195516407179637594}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "3DPlot", "3D plot", 1, 1, "Input", 
    "Plot3D[E^(-x^2 - y^2) Sin[x + y], {x, -1, 1}, {y, -1, 1}]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = 
   "plot exp(-x^2-y^2) sin(x+y) over -1<x<1 and -1<y<1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{350., {55., 16.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnXmcl+P6x5PoUBwOQtJCsidUCqcLhySizSFbijZHlhYqS7KenIQkk3Ja
VFLaJqY6jZ76NpMyrd9mppmmaUOlXVk6SD+vua/39bye65jXzz/f13zcPd/7
+Tz3fS33c32ub53Oj7ftUrFChQr1KleocPTvn3VKW80+cmRfxGf20Jonb3wh
irr2mTkyq+cuw69pP+PWMVNyoylVTnmhZ8k2w3v3f7jVnp/zor3j+3ate8tW
w2tP2/TC9b+ujrqUXafE8EMjj/+kQ5e1Oj5teI3rWu//KJ2veMrwn5aVzKx8
OD+qoP+Bf7L3SP/8VVwnJeAjvxsxvt8Ta7i+4b/krh7xn57LmY/hja6eemjC
5bnM3/AT7sm/7IRrs7lfwz97utKe2ptmwI/hK3rWHj5q3kjmbbifN7zCJ3/z
+cuhChXvOm+F8QxeeEqtc856LG08g89uNHpN3d0FxjP4qT2Wrjn+5SLjGfxg
3sc9+39ebDyDf37y1B5X3VFs8wXvcdaUo/c0XGc8g194fenbR39qz9Hwus1X
jT71/ZXGM/jRlUfJjGtinsHr33DPWYN+mms8g/ceMDhz+eEJxjO449Nw5d94
hz/WJ+PA4ZO/+Xzp/emXHSwoNJ7BP2x9/k2lI9cbz+A/9l9eI//0UuMZfGqt
t5++bXmp8Qzebf0p6f19N9h9gE/4+L8vT7/YnouAL+7Sfnfv+/KNZ/C+X02+
Z9pjK4xn8DHb2r5317Ep4xl89uD7TxkwbIbxDO6et+HKP3waruvfeIYn9js8
g7M++ffg8MnffDb9+bq/17h9o/EMfme96795+6LNxjN42wPrrn/xtM3GM3j9
1SvkqfGldn/gF6+ds+/1Q0XGM/iNB4dkfL48bTyDD+qyr/N9v35hPIP/0PPB
VYu3fGY8g7vnarjyz3o1XNe/8Qyu9sd4hg/sJzyDs9/hGTy5PrcaDp/8zefm
wU+cXXVRzDP47l++uXXTKTHP4NL/86HNmsbrGXzoipd6Nj+n0HgG33Fi1+Ne
e2SF8Qw++NQNpzb8fr7xDO6en+HKP+vScF3/xjO42h/jGVztv1vPafNHyfWc
NvuZXM9pt9+3Gs76TK7ntOPT1l3UN6/ZV9d1LXXr+ffrvJnX85pKRY6PdLSh
uH7/+WNWu/WcjuTR18d80mehW89p/5wMV/4luZ7TrH9Jruc09set5zT2363n
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
C569n2KduPPMPNaz8QJ/8JY838uEN3e+l8lzd+d7maxbd76Xyf6S5LloprDv
XDwprH8XT0pyvcXrkefr5i96X37+ouvZxV0p8xfuvkT3qYvHUmZvk3FXyuxb
8rw9T7AnLo8Q9rXLF4R9hN0G1/UmyX2XNjwZZ6bN7yfvN23+LnlfafMLyXPU
QsHOuH0nyXVi+874T8Z7Jf8Tp4ETbyTj2xLzs8k49nf/EeyJODsGb7b+wFm3
zo7ZenB2zOLDJJ9bLc5J5t3b4MfmA85+dPafde7ium223pz9t/iT+4cPzwP7
j/3O94KzH51/xM+KO48yf3rgxW2P9izZG/E5aPrtGYOnpvjb/j9+3I0XhzNe
9DrmX/l3/TffVLH7hYvs3/P/8645a+Y91/S1ccxXcZs//06vI268Xd+Nj9x1
7Pvd99r3cP3n6nydfeRIXAf4cE7jKhUaL4+KuwxYcuTIdvve8xr8tLy465eG
2/v8x9Y1lafXRI2mnLT6yJGvbPyBm87e+Mi8VYbb+FtWXLZldH50jvoLxg85
t++IFQ3ShjP+oTsy15zeZF20vux719n4m+ZOOOauvWsNZ/z5e6+9bfh/i6K6
ZeNW2fh3zum9WUrzDbf3A2dP2b1jXHF0fhke2fiht1do2Wkd9Z8Z2b7+k/FW
33hgZ429VYptvK9jPCuMt+dz7ckvn/1w9hrDGS/fdb175KX5Uc0wTxvf8oTu
N/zz+JWGM35LxXZ33//E6mhd4MHGj739v6dcuuMLwxk/699DbzgtWhrVUnvF
+DGzWy4t+GiR4Yw/8dQJ2+aULIwahudo47OH3vnIA2PmGM749g2G/eXm12dH
RWGd2PhXu91cd0jNqYYzPuuqlVVmPzsmejasw5ifXVWPml5nhOGMf7Ps/UIP
W7fY+4P9Zg07dvMaW5/gRXNbXnJ4foGtQ/C/V63+XJcGxbbewG/75r8zi4pK
bF2BV29S2GzQvaX2fMEnar0KzxG83f7KlapWKLDnBT7owiZ3LD0/fl7gu56o
MLB2syXGP/hJt1xU48ed84xn8FOfqn7bkPkfGp/gncreZ70s8AZ+xvqipj91
mGS84bfHTXi52wW3Fxhv4NsH33jB448VG2/gY+9ZN+PlnRuMN/AnP+x00tg2
m4wfi6u1bgd+wE/s/fVnx4xaa/yAF6WzNu/onmf8gG9cvWpqxymR8QN+uOz9
8kTjB1zOf3VoybT3BH7AL51w5okrT800fsAvfOXbD/7y4Dzjh3jt8hknTWu4
eZ3xA76gb5UvtxwoMX7Anzv13H1zbo55AH9T65TgAbzesQt/PKfdKuMB/Ikq
l7RsVLjIeDD8zxP/fP5PE4wH8D2BB4EH8BlPVj9lw+XzjQfwOXsfHjRtbcp4
sDzlhM9/7Hl1rlsn6ajf+7/9tVbtYrdO0tHnLU//7L2lG9w6SUedcjfc/2j/
TWYnwSceuurxqaevc+skHZVqvVZynaSjBgVff3vM0JRbJ+moRVndy1i3TtLR
miHHvTG23yxJrpN0tGXO9MbX/JKS5DpJR9nf50dXV/7SrZN0VPvZKy5+bd4K
t05+x5/6832D2690/KSi3Ave7vVdTpHjJxXt6DH7mazcEsdPKlrUuuVH3/Qo
NTsD/tqizp3vn7je/BT4kNpzez12V6HjMxW1e23okyNuXO34TEV1tc4tyWcq
alKGv+34TEX3jL9jX8UZcyXJZyraNmt2nTuHLnV8pqJ7D48ZWmHRasdnKrpy
wU8/jeu81vGZij4YnVVw1xX5js/f5/P091cO+8da45N4K13Q58AtSwuNT/DT
lkys+9u0IuMTPOOlmTfPrRLbc/D7V38wvfsbcfwAfsmBr9q0PTmOB8DvPPxF
1t1dVxjP4AsPV3ntWomM5wqJ/zKy4Rnk0zBe4Bm8dbi+8Qx+UZiP8Qx+X5i/
8ezu13gGrxb4MZ4dn37dylWBf79uZXR4Xn7dSsPwfJ39T8n9YT349Sy7wvrx
61m6hPXm17NUDutT3HqWmlo36NaztA7rX9x6ltfDfvHrWV4N+8uvQ1kS9q+3
e1Ir7Hdv96ROsA/e7snnwZ44ftLydbA/jp+0rA/2yvGTliuCfRNnP+XiYA8d
P79fR+v9nP2U8cHeOn7S8kuDcSf8reEGx09a7mlTMPD7Tpu8PZQFwc57eygD
gl/wflPUj3i/KXOD3/F+UzKDnzLewPHv8AZ+f/CDAm/gjwS/afyAv6F1es7/
yvSeo5oXvVwizv/K2Mm5J3Zrt0mc/5UejTd2XDFms/enovGA96dyRYgffNwl
F4V4w8ddUj/EJz7ukttDPOPjLsHvJ9fVVikM8ZJbJ79/r9bRuXhMqvSelNm8
RqlbJ1tl2tgpu+pO3+TWyVb56/g+vfc22+z8wlbpFeJA5xe2yrgQN/p4THaE
ONPHYzI+xKU+zpfqIY71cb70CXGvj/OlaoiTxcX58qcQVxs/Vp+m9W8unpeL
B4zeX+msDeLiedl99sjWi98rFRfPi+YL4uJ5aRXyC3HxvNwV8hFx8bwUh/zF
x/Pyfch3fP4uc0N+5PN0+STkWeLycWkd8jVxebdUDXmfuPxapof80XgD7671
bC6flQMhLxaXt0qXkHeLy0/lgpC/i8tD5eFwDiAu3xQ9TxCXV8pR4VxCXP4o
XcL5hvHGeUjjkG+KO/eQQSFvFXe+IXND/ivuHENGhzxa3HmF/Dvk4+LOJaRF
yOvFnT/INeF8wHj29WzuPEHeCOcV4s4NRM89xJ0PSPNwfiLuHED0HEZcvi/f
h/MccXm91AvnQsYnnyOfrbljS/s8W4fvrjx9c4thu6PuTU/4247XVts+nfbM
rUcPq7snat/v5UEfHojPfzjnO7NK+wvrLcw3+7+hIPOWurfsjT67bdLwLksK
zG8e1HOwl76ftDLvuwKLK45vUP2trJ77ovOGN7q30o0FFr91K+d85nmd/4tZ
Rzb/pyTOT0fo/Hcvb748o3qcvzP/cfXveKH33i8sL2P+ky+9ZHFmYXx+UqLz
v27gA2NqvvuZ5e/Mf1WHxbPu3v6R8bhobvMPs3puj8bWG5F51DPx+QafFU85
+sY6uXGc9t1fpn/bYtiOqKBppX59Bq8zPo/T9zlr72r49K+Dio3P2j1Pa1CS
9W00ZNrBx88duN74marnBhPc+UZK55PTas4HTb6Jz6nW63w++K7lybWax/ww
nwGLXm0wolfMD/Pp06NXTqvanxs/zCdKN+jcqdEM46dJ9Vva1b1lZ/RKmZ0f
budCrb949qmeJTuj7mX1pQNtHR7T+uPBPUu2RsN/bFb1jr35xtfZhzd8ktXz
q+iJ67tk7x4a5xF8tq/25faqg0qMh33lnGMcq9cvuOzzak/lxeukpl5/y5PL
z9ibt9x44PrFDTJGd3wuZTy00vdpE8vqtzONh4cr9as2rO430eqyeu83jYdn
Z01tWpL1TXRGWX1yhtm34Q9suq/uLduiDzpd2r1az4+Nh3fK1u2GaESbqR+d
/E58jrG4bH2WRt90r9Byx21xfhrOiTdGB/c12ZM3fKM7zyyJ3nLnGO/q9X/7
7o1oQ/3VxkOOXv/sX9qN2tMtx3g4qNe/YMiVLW86PMt4SOZtY7PhYfKo9b+2
GLY52t7h184vHTfV7M/CFifWHlZ3S1TrvZO65fbJMh6Kfrj+byVZW6Inlp7Z
+Oe6842HGmXPZW306Td9+/Y9EOfp4X1EfnTMgZonXjsgPscIPBdEi+dWzOn9
Znyes1/PATa684qaev26J1ZZ/Npfc4yHVnr9Q2X6kWnGA9d/uExvMsrs8FR9
P9O/TB8xx+6radn6Xx9tXjBoyv46S+y+WpZdPycaPGfggIlRkYuLlkR9q327
tn71+L7CvlsWjTxw7MIpd240O7mojM81UdV/td38UJ1Cu9/vNE+v584Tbtfv
3V/Gw1i730/0exuX5S8zze8cr99727JNXYZ3Ttn8N5ddf1h0TZvWHfbvKXTx
8PjoX5UPrjz/7fgcsmfZOpwaHe7WrNfn++JzkkfL8PlR7qvFbYc0y7f74rPL
laPPWdFqpcvf+Zxs+XulD8N86t18/LHPLf2P+dNDOp8lzZc0Grlvqd1Xb53P
spV9q47qFMdjdfV6+JFkHjRfchpVv+Nwz/hcelIZb1lycPLZp2xfGvu1wM94
WR2+1+4nP/AmzcI87b52aT57lsuX+ewQeLD7elDnszDwZvc1XuezY960+k+/
Gp8npPR79XnZ/Yb9uEYOPz69+ofdVtn91tbvGa1+gftdVGYfVsifD/3nYNaV
q8wfVQrrRP4e1onxEPhZIreFdWU8tAjrUHLCOrR4aXc5efECneefwjo3Hvg8
rduDo3Pz1xsPkc6z3akNfmlTWmo8NNfvfT3sO+PhqrBPZUvYp8ZDeN9eLA3O
rT258MNc46FIv6dI/QJ2cLK+vx0c7IDx0z/YDZkZ7IbxE+xAvqwJdsZ4eFjz
0CEu/22k81w+9IScSYfX2/0fq/O86MF5L+eN3Wg88NnxnSWvrX0gzn/53mOD
/TR+qgd7KFnB3ho/64J9lj7BPhs/UbDncl6w58bPR8H+y6Fg/42f5DnZ2Gz4
2R/8i5wZ/IvxsKec/LdQ5/OvhmufvGNvnN8t0PmUPtv1b7dOi/Nf5tPlsdNv
yB0Q8xDWc6lsD/7UeHg7+EfJCP439svBX8uE4K+Nh2eCf5cGwb8bDw+FeECG
h3jA/OWt+j59ZIgf7H4/LiefHabf+8+O7de3bRbf7wD93oZfXzSruH783Pne
MzfeMuWjLzdaXsDn30O8ZDwEP/uV9ArxlfFQKcRLMiLEY8bDHSF+k7EhfjMe
wj7aKb1CvGfxU60QH8rsEB8aD5W1nuUfIZ505z+x3sr8l37vlK7PFJzcP85P
G+v3XvvnT+sc/Dy2A3zv0BAnm7/mewtDXG287A9xr6wLcbjxw+fRIW43fhaG
uFrGhTjf+NH8RTq2PWNGw1vfsfyU9/lLQ75g/KwP+YVcG/IL42ex1kVMCPmI
5adTQ/4iY0L+YrzVLiffPE7nUy/kU8Yb83kl5F/GG/OZE/I14435nBXyO+Pt
E53P30M+aHwND/mXPBLyR89PVPn6TrWK5uZGbp7Rup9fn/aXC9ORe+5RmwOl
Hb7uGucv1FHkdhj6bqVa8fs4XQ/RLa/nbzn01mrLO6ro9f8Rnovhz7r3GNhn
8perw7oyu633F50x76NJ9+VuML+m+yLS9eneJ+6KHtG81eI3zcsuPrzsqxqF
JXZ98oUrw742XPdpNKv51XMaPRC/p1O7FA0O9iFy9sTedzOePGvjujG7s2qV
Rs7ORJ/mDito9lPMs9qZaH2Dj4dXe2VV5PZXNGxZRvXdsjRy9idauOGFP31+
Q47Zf/KmLNUxOXto+ibWOfnU6cGOGa7rLsptO+fdX0ZuMn6oc6z/2rQWq7fH
48lH1P5Hzu9ELW4+d/VDYzcbP1yn19012tfbvsGuT/6yMfgXw9WPRP1e7dNq
8tT4uajfjIYEPxU5v2b5KeOHaV7W4eCx07psKomcv4uKOz95e7/r4rxV/V00
d/LwL07sscz73+iuURecdPwpG33cYrzBP5/oxfi7psPt/EHx9DcHR1d+Lx7/
idORubjIcHjjOm3mzJu/qHCTXZ9PjVvs7wGaf23d91C7f14ZPy/TqdVYeffw
j+PnFfKm4uiSEBf5uCv6eVmvKVWvK7XrNNF8bVWIr+x5aTxmfYoYf5bmj/fV
uvsfXxfE51Eap0U1lz4+bNcPK9z5dmH06c/1xwz9aJOrY4n5cfF2lPX0kdYr
f9ro6lsKoybn7PpgQbuY5x5al4euDbyT4tUUhweuUzQq6rOvRnz9XP3eO0P8
bPgxmg9O77P70KwtMc98nhHicB//R8csm7QldW6RnZNwvbUhfjY/wvPt92u3
a5otzDU/cjzPMcThPo6NRtfJG3zU3Xni8pfodLXPyTwuL7p7zoyBa9/y+Pxo
d60XfmjR2NeH5EX/Kfj15QfmbXTvuWKeXT4Y/XX735o3+T1/T77/yovm7f6k
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
WP/GXnHeSP8d7AN9eOoR32OX9JwWv8x1flB9PX1h2Hf0h7lMn4fVCyX7nBjO
+0TiJDvfaNdrwTtH4j6l4GdP7zh2+Ylx3xLwNgve73bW+3H+DH5jw1fOX3Bn
/Dt04Lt2/ZY9tFLcPw38l+PWnDd5UJH5LfBPVq486vX+8e+1gfetvuSDp9bH
fcXBW/eu827Rgfj316xO6ZnGJ7xcfZzdF/c99aKs/o9XK7L7An+r5unDH5kW
98MB33LlabuHNt5g8wG/vsPt+8e9Mt/mY7qwhvvbT2872eaT/D2fF7N5Htb/
MszT4j/mOzF35m8722207wWff/UjF/983Uz73uTvAg3J5nvBZ4f5mL0Gvy3w
ZuuM758Zrm/rErxJuF+7Dniv8FwMN/1leI5mL1gXH69d2vlwy4Io+Z47I/uP
f/8oI7vaH/7+UUb2yD/8/aOM7Af+8PePMrIv/cPfP8rIvvsPf/8oI3uJ6hGS
v3OUkT39D3/nKCO71R/+zlFG9oV/+DtHGdn3/uHvHGVkv/eHv3OUkX3aH/7O
kfFm64n5Xt6j+7CLVsd98sH7VJ0x9aHL4n0N3nPKkVenzIn7DoH323Topz5z
vzTewFv0qfTyZ1uy434sCZ4mZcMP+ITw3I0fe8916ppfuuyPdcf+HMbyYcV3
vfjB5Uf9HPf5MTxn5Nwjz8V1meBqZ2zdM68x4xZf1WTACtev7/c4v02fy5/f
scR4AG/w5itV1zWYZzwkn/+kbHgAvyLwY/flz1u4L/B92w4eqXjuJpu/zSfY
T9tv8Ld9ZK2c5+Z9avNMrLsXxmfb+1rFzw7zt/n4cw/4tPduwe7ZfEwXEOy8
7XOuVxTmY9cBHxbsql0HvF3wIzbe+k4F+2zjjafgj+K+9/rvsoL/sv3gdcr8
bfU56u/AWRc11N8xDvwT9ReM5zngBxkPjh+BL3CeF9eBP/wm1wHH7zQqJ35O
9jlZF12u69Pyw4T9+zAb3k0/qM8r2b99lflrq1tVnPoi5gOu6zbWdyl+l9pV
qwtUHLvB/JP2eFI287c+QG7dgn8d9qmtD/D3w762+2JfEm9wX+A7g92w+wJX
OxPrThVvH+yV3T84fg0ewL0fSfiZFyabnQTHbsAD+GPBDhsP4N2D3TYe7Pw/
2HnbJ+ANgl+I61N1Xvg1cOZ1h/o1i8sVx55bn3OdL/Gb6f91vsRv8A9OHGX9
rhUnzuE63B/xHtcBJ+4y3XjCrw7NZh+Cz9I4h3lbnznqBHQe4B+FeMzuF16J
M62PQMJvv5Sd7B+7XTI1HmM+4E01vrJzf8Wp32Cedk6r9tnsr+LYW+YNPk3t
KvNPxBEvPJXN/MGJS60Pm+K3atzI/MGJA9kv4B9rHMj6Accvc7/g+Dv73RDF
8TvcLzh+hPs1/6n+wn5HRnH8heWfet/ES4xLxqd9zK75ekv2CzjxKrjV22u8
an1uFe+r8Rg8gBOf8L3g2Ft45jnwfpN9znjsGNcx/6XvH5kneEeNn7mO9RnQ
94bMH/xRjRuZv9UrahzFPKx+UvMa5sN9VHw++9nSB+Lf3wEnbmc+4Nhh5gNO
vMpzB2/eZkbLnCpf2Drg+7/ZfttfnrlpteF8D3k064DveUnPjcG57+3hOrY+
/PmwvYcjTgv3a+uT/885ANdh/K1h/sYnOL+vBG/g5B3Wt1Bx/AjjvV6S8eA9
1L9YvZpeh7jd6q0Vx36Cc51Jaj/hHfwr9ePg/Dv8OPMEJz9inuD4O+Zpv0um
eQT8ghOHWz92xYmH+V6eD/mX1Qsqfpn6U77Xzqs1T7E6fsWJ87m+16NxHa5P
XgPOunvJ/V4bOOuQebKO9Do2Htz/fhl4S11v7B/WXY7rf+7rK8B9nQPjwNnv
jPf1CczH8izdL1wHftjX1h9S+WRfc11w5U3+D3TOWrw=
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmnf8V+P7x9/nnPvcHy0rWlZLAyGyV6KyCkkZFQ2SzETIyowQsipbpIxK
e0uDyCorGQ1JKikpK/1ez17n+/j9cT+u17nf97nPed/nvq/xuq5aXa5uc1Va
KpUahlIpk6wquYvk7erspI6dklKpo+TFamXCZ0m2yUulszWmi8aeLXyWcGfh
c4TbCHcVvkj4fOHLhael7i9JdlR/e8HL1N9J+DzhHsKT9Ntpwv/qGZ3Vf4Fw
T/X/peftq77bJf9Uqyt8m2R3jblUY27TmI263lv9vSWvVttF+CLJLWp1hG+V
7KHxl2n8HRrfU7iHcD/ha/RbZY3pInmZ+rvz39XfTfhi4euEB+j3empX6fpR
XT8hWV2/f6x3vkZ4L8nP1HoJ15R8SGMbql3P/9G8DYTvlvxUv12rvn0k79c8
9wrvrHkG6vf91G7Q9Vf67VbJ/SQXqfUR3lfyI7WrhfeU/FrtNuH9Jcs0z6G6
90nNP1itifBTkkdLNlK7R+O+T/2sxpJ3B99bXs89Ur/vz7vp+kfeW/IIyfIa
c6z6X9I8y3U9QP2HSa5Qe1D4cGQwrqx5OqhdJNxLfZfqnoq69zzJFzTuSPWv
0/WBuq4t/K3wwXwX4e+En9eYI4TXCvdU2yDcQO1t9Z8puU19R2r+Q4V/0/zX
6Xqr8IlqJ2iexpKr1dcmuK+5+p7VvYcJ/6L+Hmq/CtdTG6H+5pKb1TdZc/4t
3ExypPpbCG9Rf332m/BSyUPVDhFeLjla434v3mGK8L/CLSQv1z3rheurPad5
Dpdco765wp2Fd5TcJrlD4nMylXMlWYH9rnlPEv5ZcqyuzxFOJLdwVBL/xv/h
f/0k2Vd9WeKzdLNkkvgcnqLfmkmukpyh+7uyryQ/Z58JHyL5Tl6cX8l9OUfq
/0HypsTvx7udr+tTJP8u5i5fzH+7ZLnE35i1/69Y//aZf18jOU7PaMt7S56t
NWrKXoql0h+c+8TvN1PPzoVbSzZX+0d9J9On8Y3VP0jzZMIHCT8qfFjuvdBI
fQ9r3lrC3+i3h4RrCi8WbpJ7zY/UmANyf4cDhA8Wrqs59ijTWcr9/fdnj/Bb
8dxXNM/xwhs1zwThdsKBb5h7Tx6lsYcIN9Q8v+m/HBa93w5X/1C1lznL+v0t
/X6E5hjKnsm9947Q70cIN0Y36R2GaN6D+I4a90zqeX4Wbsy7acyvmnto6ndb
pf6WuffeSZpnYmqdmUueq+uTS17DZsHzcA5OzrxvjpBsEfwOTTWmJXpT+Gj2
Uebv0UTydc3VUvhPnhW8hpyFMepvzTdW/xup98NfwuN5tnAmeZbGn1Ds/1dT
4981pqvmrSDZTnKt2o7CHSTPD56H/XV25r3VQrJz5n11jmRHjWnFntKcOyfe
qx113Tbznj9VcrKe1UF95SQD31H9j6HrCv1wsvqG6bcDhFfqt4HCuwq/I3yF
2saS9c4j6q8s+a76nhbeU/hL4buENVVptvCdPEN4FvpRWJ+nNFe4X2o7OVP4
jnS7SStNR8+ii4XfEx4svJfw1+hi4T2EPxduq8lPFb5AE7fLbe8uFF6sMbez
b1PvDfb5ksT7nv2/Gr2q61+Eq6g9qjG7Sc5B7wvXEF6IjtW4hug9yeM0fxP0
h/A+atWwA5JjNG41e6/k74t+/lV9p+fWN2015tTc5/Ucvlvus45+fUnj9xNe
ofFHB9+Ljn8x9XOXs2c4t6yr5Mvq31/9P+q6psZXR+dIts6sP4+XfFNjjhJe
rzEPCFcQ/kx4gHBF4UXCDwpXEv5C+C3ho9HDwvdjq4Q/Ed5Usn5Gr6Er8GFm
qH+U8DHCG4Q3S64tWb8PT62jNql/ov7jX8V5eS31+foDG4b+U5vBntO7fiJ5
JWuv/3CB+heqbxb2QP3vowOF3xR+XPOcgf7mfdln+q2l8FjJzbp/gvrO45yp
rznvqOstup7IGZGcjc8k/Jzm2UH3fCx8hfoT4bnC3dgjar1L9iv21cZbxDnT
Ju2o+c5XW4AuVt88yUvYs8LvCV8q/J/aLOHO2AU9a7JwO90bNOZ94e58B805
TtcPohM0ZiT7DV2i3yaxhyW/Uv9n6OTM/iJrPk3PrpC5/2r1jdP1aLUVut5Z
/V9J9lb/TsJfCl/HfcJfC18vvKPwF8K9hN/G5qh1Uvsr9XteKLk3ukX4K/a8
3m9v9pjepTw+ljAO7Su6fk74Tv3eTuPOVJuOLcm99xk/KLW9+EG/dVNbVfI5
6Sq8UrKqWk3NubvkPPWNzH0Gf9a9n6jNL3nNK2qtJmjcw/p9J+Epwo8xVr89
pmf8Jbw+2p84SniD8OHCx+JTCB8pfLzwmmjfZavwumjfaJvw2mjf4j98XrXr
9Nxb9Px/1X8lvrn6egf7h/9Jvq/+bzR+d8nPo/dNXckP1dagmyQ/UPtBuKrk
ArW1rKvkIrXPNP48yU+i92Ut+qK/QR3JT6P3QW3JL6L32b6SX0bvs3qSlbQO
k4Qf0bttifZRTiMmUOvJOdJ7/sd78P0lt6r11ZjL2fO6dzh7SjgIL9OY6vp9
W7RPU1mynPp/QreimIW/4FwK36l5b1RX1L27qf8DzfMM5zva3zoDf0P9K9Gb
rI3wKmyA8IDc5/RnyVXR++Nv/BThC3XvucKZxi9VfzX1PaTrU9DLki+pXSj8
h+Sj6HbhNZJD1dri10oOUTtH+DfJT/WeH3CONE9lzb1E+CbmFV4qfJvwnNyx
zHm57WqVxDFJV11fKfmv5rg22J88XvNcFGy78fEuDvafj1L/lNS2tHzqOA1f
72j1z80d+1yQ2w7vVvh41wSPp79n5hitTPcOyRwvPMCaZo4vHpa8RuMekUy1
Nl2Er9D4fzRHb/qxt8HnAB/se90zU7ib8C6p9y9x4g6c99z6eUPw3nxa+IS0
iDNL9jfvV7tLeFvmb4I9/QdbnHlNaqTeUzcL10u9p4j7qqQ+c/gJKyR7J/aF
sHPXJ/adsH+cRezmj5LHFDaU9/k8d4y2k+SdmWPBPTTnd7nXoZrkwtxx346S
92TWz7U15r7MsWAd4Ycyx1uJ5vw293pWlfxC7YDE8eCAzLFgXY0fmDmGS4PX
+cDEsef17DP1L5Zcknqdj+ZMZvYR5ieON/sJHyh5Ne8t3F/zbM38nvdK/qNW
H99HcpNaTeEbJX9X20f4Bsn/Mv/3/vjBajWEr5Jcr1Yd3wr/Va2a8OWSf2eO
l/vhb6rVEr4ZPar2nd6hr96nivD36DF0kPAPwrcKbxaurfG3SO6m9q36b2af
5P6mC3Lbky5qy7GLur5J8i79r6uE+wp/JPmO7rlEeFfJ7sG+fVPt+SuCfUjO
FLpwuPDpqfXfa8JnSK5TGyHcSvLX1LavteStumcwe1gyEhvoHZ7QO96Se68O
Ul+v3DHXl+hptQewU7yX2osaW15nZBR2QPc+J9kvt50arHs36Hov9V/HfgmO
H4kjLyzOFGfrWtZRYy6R7Bt8ji7BaQ3ePw+q/0Zdv4BvIHmD2vPCQ9AVwv2F
BwiPTu1vb8U2Zo4BT+J857aB+IwNc9vAvYXXCbdK7NtsSO3XnC25HP8wsZ1F
j/LclpL/pLa3HdGhqf2ZDpKvBr/PPRr/a267/KTk8OB7+wtv1biZwhdJ9tH1
Y5xf7Da+pvApqXU/87SQXJV7PfeWHIYd5hyr/6nEcRnn5NnM8+zAuUvdd4zk
TbpnUMln8MnEvitn6XG+q2TD1LaCb9Rccn1un/BpyX9T+4adJB/ABpT8Dm9n
fs+KwT4U/ZWCfYRnhE9O7V/iZ56uvjapfcB3MnMTzdl7mf3HYYUPiZ/4SuEr
vhY8P8/5XfeOFj6HNck9jjXE9r6u/h01dnhiezS1ZN/kDcmdgnkHdB6x4YvE
WIl/21i8D+91X+5nsfasZbNiPX/M/X73FN//5cS+L3b7WckKwXZ7iPCJkmXq
/0i4p3DM7J9eLvy77m+f2NcdH/xf2Q+bcvuxL9CfOG65RG1C8Lux/vAsxK3H
ZOaPiNmPzcz7EP8exX9NbH+xtfgCrMGummOs+jpjTxP7r/ir1+A3at45wsNy
+/T49rto/ILE52IPdFJho5egzzLHgNUlc7UPhXuo4+PE8c5e6MzUa3NWas6j
V+KYeWXmGKSp5Kvqa5P4eSsKOwUvsCxxbNVIeFRuTmB9sC+OXjqTM5d5D5dT
/2qNOSYxL4Gfgr5qij3U9eMl26nDo2Ovt6K5LeaEp8APxh/eL7P9w/bBfcA9
nVgybwDHhM2EZ1iaOD7dX3hE7rgK3xjuDAz/gr3H7jfIbNu7J/4N7olYrVZm
PcJ3n4GPpXeaLblQcuciNpmr6yOjuedx0bHjjYl9ndWZ/Rx01y+ZfRu4BTgp
fAZ4g2Oj+eBp0bzCbYn9m0rYmcT+DTz3rYltw7rMPhW8xHHR3PB0yar4GYl5
5/dz2/c0N++J39RMY97L7RtsVd+HufnbPDenDLd8ajRnzRwt8X9z2/ogeWuw
zWqu/vm5fYYst13tl/h++O/+iX3or3Nzs7vmjl/7FDrlo8IOluXmzu9PbD8+
zq3TdsD/zO1HVZJclNvHwLf5LLd/gg/TOtpHeCjaT3k48W/bubrEz/gkN19d
rvCDHkk8Fzz0E4l9jsWFr4Le3c7ZJLblZ0b7FA/zbaP9yiej9TLj4RCOTa23
4dbOjrZvA6P9oEcT89rkEuDHTozOJfA9exa+yZ2J/b+20fb2mWhdjE7GHrcs
bNabmXUWuuvVzDYGvTc6s+6ZnJg3wV6NTGzb8EMmFb4IseqUxPEqeILaIo05
TnJIYj+gRWGzXs+sg9BF0zLbRezjh5lt7IjE180Lu/NaZh2Ebpic2aby/I8z
6xR0y9TMuh6dPzGzfkeXj8is6yaqLSsZTy10X4PcPhSx++RCx+5Usp4FEydP
Kf4P/+WtAhOPryj+P/ejbwYn1i/MPbZ4Fjb56cS6qU10rPBU9Jpxb1LyezF+
VLFmzM9z2hNnavzX0e8yvni3e1P7JB8Uc4wr5hlVzIM+r1LEVgvwlYo4fb7w
xGBbSWyLjkZXf8m3UPsGnYLejuZoakrOCV5nbFDnaI5vi/AT0Zwd8fVzwb4f
sfNbwq+WfO+bwb4lsfPzwk+VHHcfl3qdiJceD/bHiMHxLdkrxLn4k+RfiDH7
FvocvT4q2Ecl7j5X84wRHo8Nj/YZ+0q2ivbl+xPvRvvdd0mODvZp6xTcwEC+
D3s/2Ebso/6BwncIVxFuW/gVcFYvBttxfOHTo33zu9Fjeqfj9W4/5ObMyd3A
B54SbItTOI9grv7f3Jz8Gva/5EG5uRQ4lVMLLhE+8obofGE5yenEfuglyYqp
dSzccqXUcTA5phOifeGbo/lWeNd9sD/BfBRcIBw7tof4Ek4enpB8Dtz+OuFx
kvU0fmfhP4VPCObqk4LzP0jzXSnZVP0Hqh8yuAm8quA/Gn9YMGcLd9stOI9T
Pjo2If8Iv9EiOpbqJ7le44Zis4r4grVtJvlL6tzi8ZKri33CfhmYWy8N09z3
59ZJu5aZr0CPjVD/Xbn1ys7qvze3PttFeFPqPMWpqfkK8EiNrxzsx2Jrn8ht
e3cvM3eB3hjLvsitT94W/kP3DxM+Db86t69aReO36fptvgtOELpGoj26M/f+
nBTMN4LZs6dEx5d3Sr6qMQuxY8H8CWcWXuSM6NjxPjio1HuyUer4hdwQ/A9x
FrYEzqdPKPYJ5yg6ZpqHbx+KXFj0NbnXvVPndNk/O0brQL57Nb5bdDz3GLYo
Or+7azSHg65+l9glt96tVmYdhf8/V/33Bs9PzA3Pg66GG4YLnSXcRf0tEutE
9GFF9b8r2ZX4LprX/RD7H5xHq6C+S4NzLhWFrxK+ULiS8MVFfAT/PF3940vm
93gP3qcBfojwO8L7RX8D1p/vMCOYZ4ajmxbMRcPdXZaa+31Pc84M5njrs27B
z2oIvxfMrzYR/ixYfx7Evk7N336e+T/wX/ZX/4Jg/vkA4feD14H16KPxi4W/
Ev48mN8+RGO+CObYDxVeGBwjHCy8KDh2aMw3CX7PA4WrB+d3FgfbA+xCHc1Z
vziP23OGwfmRpbyvxpQTrqExNYJzQN9I1g3WGyskawfna5ZJ1gnODS0P5hex
4YdKfpQ477Cn5vk08fwHCO8RnJdZwnzBPMx3ko2Dc1LrJA8OzomsRccE51PW
8Jxgnvnb4Pxi40Kf7BfsJ6+SPEStEXpYskFwPn1lcO1GHeGfWKdgnr9RNEcM
V5zgYwbXKmyTPDN3HpZ8bCu1IDxDsl1w7Jnr3vbBOfGIPxZdAzI2Om9FXg8u
tENwncZfkq3UTkd/Bue58K3J950RnOfagl8WnHMs0zxnCh+HyhDeLbU/DHe0
e2o/F04Jzg7fDa6JIIu89xnClVP7yZdl5iXx98gzdkJ3CO+gOVsH53aDcEzt
H16gMacF5yKxNccF54Y2MVbtWOE/JE+OriWZjc0Pzs1V0H+6L5hP44zDo+Hb
VlT/zcG1HyQPqV2BH4OTpwYGHxRf9MZCP6CH4L7x3/+WrJ6at6S+hboUuC84
8GqpfXZqXbbnibEFwscE58s28r7BubDfJU/KXc9AXcOJRTxAXuuE3Pnf8ZJV
Uz+XepjTg7nTzcG5ZvL65JErcSaFr2WfR3Nh+Ab14Ngz89WLo/NSDQofAH85
lpmPgD8n30VMit8yJvt/Xxy+8I7c/mxZmXkebBC2iHiW+JdYb15mnhxdBG+D
zoQzg1PCP/5IeFBe+Lxl5mHwyz/JHLMT7+PvwVPBTUzP7H+id+F74EzgSWZl
5jrgMWYKvxRtz/bFTkbbs3rwH9H2ry7/Nbr+AD/h6ejamhrCw6J1en3hF6Lt
bh3h5wt7XxsbHm3XawoPja652Ut4cHSdzR7CQ6LrbPYUfi7aJ6iVO34hHoGP
WZi6pojaog9Tx4TURi1IHe9RMwVvTIz0PGuYO7aoXGb+mTgN/h6eGc4Q7hBe
nRgPjh+/kZiU2BTfkniWuJZzwbkjTiUWI84jdsQnJM4l3sW+E7cSv87OXQsE
b4//Q7xM3Pxl6hiSug94NnhU+FRiQGI9OL/vUseQg4sYnHicXMf1mXlp+Ok+
mflqeOubMvPM8M3kAuCf4aGJ/Yn1yWk8GL12xLz4jZw7cim9MvOu8K/EqNRT
UVcFbw/vDf/9P/6LWg+4ffhzeHRyAfDn8OjzU9ehUY82ILomDP1wf3T9Fjrk
kei6rl3gBoRnpdYDNwq/mzpvcn10PRx69fLoGgLsRc/oegXsyB3Rz4N/uB37
mlrP34btT62LukXn0bFfl0Tn0bFxl0bXRmA7bhGek9ou3CQ8O3VeqUd0bQG2
6bLomgNsUPfo+glszRXRtQ7Yoz21tx5PXatQQ7h/6lx/deH7Utce7CX8ROr6
hH2Em2WuEZofncMg7rgoug4DO3hVdG0Buu7a6NoO9PO86O8Nl3J1dF0COrB3
dL4fG3RddK0AdqdXdJ0Buu6a6LoEdD78w90lcx4XR9d5YK+7Rtci4APMjd5n
cDUzi7XCb5wTvRfhamYVa47/+W7xLfA5pxbfF59tilqPzBzFjOg9B1/0eHQ9
3+56h0HR9X+7wZdEnxO4neHR9UPEGiOi65aIQSardc+c13gtun6IOGtSdP4D
v3FCdE0Y8ci90ToC/ueeaN0BR9QhupYFP6pjdI0LflGn6DoY/JmJ0Xk7/NIu
0bUX+FRjouuTsOmjo+uo8BneiM4xYN/fjK4rwha/Hl17RGw4Mrp+iDhrVHSN
Eb7H29G1PtvteDRPBV9FXAB/BY9FnAvvBP9EPRvx3SGZ7R2878boXBjx5veZ
Y43/cb3EnvCOq6NrEYkHl2WuUaRGiHiPOJZ4Ft6VHAp5gRW5cyvogZWSr0Tz
Eds5AcnfCj+QGkLiysMycyvLS+aHqT0gNv05+qxQbwA/zFn5qfAn0QHkfKlj
hfOE2ySX2y1z3of8D2eUvC21q9h9OO8/ov00OFHywOSVmsLD5Na/6GFqM/HJ
8M3whTiXPxb+8MvsA/VvLvwHOPVN0XV6+B2bo/PI8KTUBZ+bOSdNzVebzPlj
6rmoBeU95+WuB+a52IEVxRqSZ19WvBu5e3Lk5CaoEyDvjv+AH0FOndw69SdL
0deJ6wHgGuAcyN2vxfYkrrUgH4q9WJI774wO/0Zyo9q5iWsAyMHjG+AjwDPD
b8AJrSy+KTqeekLqOSflruWjdnRC7lpEvu9buevNyB2PyV1nRe54bO66aNbk
Xcnx0fwFPMZ70XEssST10qzVLMl3ov1B4lXqrMjBTc1df0WN3LTcNY3skzdz
1zGuxHfNnadjz7yWO0/Hdxye+z/z37Fj1HRROzddsm6Z/SrqfKhBhQenpps6
W/j01oVPxXqyrnAC+Frk/YiL4Znhm8cU/506FvQZ3DS5XzgBfDByevAG+HL4
dOgneHN89clFDEgc+obwuJJ9qteDeQP8JfgNfDNyWfAY+GbkmsYW60zNDHwN
54s6Gfxa/FvqZyYU34s6GfxYeMrFmc88Z598zVfRdU7EtuShyD19nTn+IQ6i
PgQ/l7NAfDolOE7HJySHRU7q0+K8wB1WLfP6ss7Ut0wrvh11u5OKvUQNzxvF
t6OehFotakWIl6m1oZaMmjLsIXuAfOxUXc8u2f/8IJgnwbd8JpiHwYd8OpgX
wod8KTgfBJ/0ZDC/hD/5rPArJfuQTwXnH/Et4f7gAF/JXDdAznNk5hiAWICc
FP9he41x5pxR05Jre4kfyU/+HR0/ksP8E7sazBfh6zZJvWde1m8NUutt6nvr
p84bULd5R3GuOd/wV/jq5JOfLc4sZxe+hW9EnhCehO/5bTQnRr6Smqv5wfk7
uAXic+J0atcPTm07qId/AH+uZL+LuhDyD9QYPxRc947NfTg4d4wtfkz4yZJ9
+4NSx3rU2Ncps29KPhoeE/tCfdf30TVtcB01y6wTqb1ZHl3HAI+xLLrWB87k
p+haH7iU76Lr3uBMvomuNYRvqVVmPUutzo/RNRPwJEuja+bgQFZG10/AmSyJ
roGD86ldZptBXdAP0bV3cAIrousw4FL+DxOPKfw=
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtm3f8V9Mfx++95577SSVSae9ERUooymigyEqS2SCFsvdKFNkpVEZEkmRl
Rkg2WSEjI6NSlBXqV/i9nl73j/P4ntc9547Pvee836/36/3+Nh96Wr9TsyRJ
bglJkutvj5gk/9PffdT204EOao3Un6JJpxRJsqNwQ+HJwicLtxduIHyr8EnC
HYUbC08VHin8ha43JU2SKjp+q3Ab/a2t8Zs0PkJ4W+GthG8UPlG4pfDmwtcJ
DxPeTriW8ATh4cJ36+8OetY2Ora7xr7U9afq+pupP1njn+jvMo3V05wVwh8K
fyFcW/hb4Y+FvxLeWvh74cP0dzOdP1ptjfprdWwn/f1Jczrq2jdp/pXqf6X7
TtHYEuGvhetqznLhP9Xu19hG3pnmD9TxwVxf1ztR/cWav1S4lvrfaO5HPLNw
HeHvhP9K/a5557N1nV7R19pLrbvm7iu8Sf2D1A4RvkXtWvW/1dypOv9W4euE
vxO+TbircFvhe4RPE+4m3E74XuHThQ/X9Wronj/p/huF9xbeoPFeavvmfqe8
2+maf6rGj9Z4Lc1/WfgC4SOFawovFD5f+I/Cz83z99TYHjp/e/Vn6NgZGuus
+/wlfI7OWan+zmp/CJ8tvEL9yZp/vfD3mn+75u+uY+uFz9X4D+qv07EHMj9j
d9am2nL1G2pspcY2CP8o3FJ4tfAdvCPh1TpnmnBP4X+E/2Y9a+4vrEGeQ7ir
cC8Wfepn2l14pdpdwtV1/A7eT/C5Z+nYcvV/1rHuwdfk2r8Jz8r8zHuV199F
42uEdxK+XXNuVn+V5typsRE61kzXOk9zXhUepvHjNf6Cxp8SPknjzTV+gcZf
E27Id9T4tjp2uY414LsItxa+TPh+zflM/WY61knXOkFtqPrPa96TGvtBrWnw
nmyVe+/8qv4pOucbtXb8JuGT1V+mtpfm7Cl8n85/QOf2Ed5P+EHhBwuvSdbm
TOHZ/Ha1z3Vecx3bhb2idpn672n8db6H/i7VeAsd25Xn0+9rLHym7vuCxm/Q
+AupbQC24FWNXypcTcefZ/+X73KEjn2l1pY9KnyS+l+rvap5NdS2UFug+a/o
/Et0vKrwfOGZavOFa+qcbXT94RpvKnyOrvOKxo4Trid8kvCzwscK1xUeLjxP
+ESeWee+qOs9LTxceJjwAuFnhBdo/vma/6/aE8J7Rq+F/XT+71xP848Rnqf5
c4UHCg8Qfkr4UeG/o38fv/NH4TfUdsj8Dm/U3L5qXdV/RMfO1tj+wrsJPyR8
pvAB7Fnhh4XPYr3rOv8KX6DnWaX+0RrfX/gZjZ+j8V/VegWvedZ+F91/XWKb
h+1jPe+m/i6lPdgtem90L9d+t+j9zDW4Fnvoz8RrnrX/qv7207Vnqm2J/RJO
1b9QbTX7Jvr78R1/0vxnhc/U2Dq1h7FnOn45/ki4ovMPUjtQ+FE9/xyNHyF8
uPCTwo8UtonYxseEHxIexHoSPlTn/63+PF1vf/XvZw1obgu16hq/VmMnaP6a
wntgOx3bTWP/Ru8HjjE2SX8vFr5Z50eNZzrvMOHI91a/j8aD+hep/aj+kZpz
hMaf1thjOn+88Fl8X42fFv2OW2tep8TvHv9znPpbaXyI+vdp/kPCv+j8SkVr
VvOfEj5S+GPOVXta+CjhJeqfovknCTfgfF3vb+E66l+h9rrw0Ny+qJpaP7Ba
w9Q2HdveWNeYjO3S9d7GH6s9I3y08CfqT9D5E4SXCr9ZeE3eKPx55rUayv00
Tu1N+jo2lfWi8XfU76T2njAkA3+5k9q7wqMy+9/PS/++QOcfC79Qext7lNlf
fqDxz3k/ejd19T6WlvxhoeYfp/Ev+X3CrwkPFm4srGnJOJ0/BNtY8gtszDHC
HdQWYf8y84Gd1d4XPi0zX+io9o7wyMz+uY4u9o7ufaDOv0W/r42OX8J+Eb5Z
x5tozhThvXV8kfqt1J4UHij8kfrNsEHCBwi/y/7Ofb+qOnep8FGlf+WbnK6x
9WoHaHxT6v0+H5vIdg2+3iGaX2FvqQ1i7UevRdbk4ayd3Ovlz/J+xwsPEa7O
HPZuaQ82prYXhwlXTb1H++BfC69rrnmwcD+NV0ltU3qz14X7wFdS259Fwh8L
19DzfSm8rOSD72t8qPALwq8JZ8Hr9wnh+ZyP3da7XSD8hnAevN621rH31D9Y
50/W/YbwvVNztEOFJ+V+31/r/Lc0vwU+SPhA4ffVbwlfgC8Jf6D+67nX32a6
5ufCzeFrwn01/p76r+Vej1U0/pnwi8KvC4fg/bVO95zNWtP8T4XbF37eEcLL
1F+v9rj6ueYcqLn9dX6/xDbhAOFfc3PJP0u+gT9uomv/ILxDtL0+WP2C963+
KB1rpf7buuY4zT1VeBvhRcJXCveNvldfzd2AfxJuwt7DZ7B2db8lut4WGv8K
fxH9LP3hYew9jX+i8S2Fvy5snw9J/I0PVf89jX8qXDP498HHevL9Uvu073M/
+yq19vwe4dXqn6jxB4S/1N9Wwr+rdcBnwJHYTzr+iMb3yX0tfMgewg8Kz1D/
Dz3/9ML29NDEa5JnHpub/7yj8as1Plv4XuF1wncX5pc9ktKfqf+0Wh/1p6vV
0NxV7MHgZ9xR93tA/b00do/aFrn5aPfEfA4fd4+O3a7+z7r+XTp3gI4NSrwG
j1f/eo1fKvypxm/GVwvXx17jA3X97Quv9xMzv/92hffvsMz7Y3ru9bmmtI87
FF5vwzN/j7tzr+efSnvShjUpPDjz+p2We/3+WNrrl3Pby6hnq6W901m4dWIf
24nnEa6n/kq17YW3K+wf8ZOs919yf6t1pT9qC6dRf0hm+9QC3iDcBhuve0xU
64A/17FtNXZdbnv4ifqTNP9q4fOEPxSegG2ES2j+rWpddayLxrdN7GN31v3O
UuuosSUau6mwD8YXw1F31djHxGAaz/A7Gr9d1+uMbVDrltk/c/5F+FhsruZP
wJ5p/g2FfS6+dzHPKnyVjp+puR8IXyu8WOM3YN/4tsIz1E7HdmjOm2UMME1j
u6WODTi2EHsaPHe5jk3T2N06dr76q9XuTr1Gr1f/JHiJ8OGpv9EfOna0+h+q
v42+13fCdwrfpfnnwgc0/z7hfdR+z+yzXij5a13de7SO1de5WYl/KOOVe+A0
6t+jsWvUvw0OjC3SxBnq91T7DZ+qOXeoP01zxmDP1Y4R/ljntdbznKE5D2Pv
1DaHk0bvpTmaf1P0Pbn3ZeWzHUuckNo/blS/kcZ1OBmb2R83yK0rXJ7ZXzcU
0GWSK4QHFY7bid+78g51v2N0fBa2M7WPwO5if/EHm9hT0fximfpBz/sL70xj
r+ncVhW/H/j+lqwHjS0O3j8P6lhtuEbuPsfgh/WFocNjMvOPpTpnZ41/KdxS
1/s1mjs+pzm3R8czPwh3SBzvoIF8lzrmRht5TBfbV3hS4t8zSuOrhDsyX/1H
dKyX8EThO0ubjJ3D3uGL8ScHBMfj+PO9gmPQvYV75NZYvk0do6O94GPxtdig
ZsL7BNtx7Dm++yXsu/qPJl5PTwr3Fp7L9TNrOt+n1gjQeh7X+H7Cjwn31/ji
wmuS8w8v7AOPKzn2Eep/AccKXi8zor8H3P9Z1qD6h2S2tdhcOC06EHoQ++nO
MoYnlsdGYav4BnBBOBvfBg1peWpNAW3pUF3jXuHuar9m/s1VNXZ15nfBGoMb
wilZe6yxV1JzRtbei7rXQfiixPsBPWmNcOfS3qCZ/Jw6xkJLWaJjV6v/keb9
q7EidyzwX0yga83R8Q2pY2Ri5U+i99/HbJKKNZBfU8dwaCNwJrhT78Sx3KJo
W/qW5v8DHyz51dGlPkPMVkVjRyaO5eCEcEM4HLHhZWoj1L8InaIwp4PbcQ1i
Q9YztvIm4XPUH40/zGwDL4RbR9tmOP7ZbEzsrPC52JNgzae+5o9MHC+cJ1xX
+GTh0zT3H+xmah9xVbAmVI91lVgrejk6NoITwT83as61qTUM9IyLCmsc4J7q
X6zWKLPPP1vXv7Cw5jFKeC98q/pN1BrDw3mX2LvU4+ghl+pYU42dgT3OrWGt
1XiXxNrWwuhYFI5BPPRSdKwMB4JfwrHwI/gTuNcVcPrM72N/9S+HY5Y+sTf+
pHBMwHroq/54tbZljHBgYZ/TIXNMiy/C5+woPCaxL8JHjddzt03tu8YKb5PZ
hx5QmPO0y8w54ELvq98+sz6A1oI/maNz3xK+J5oz4pdZU3BJfNqVwf4bX4cP
vU54+9S+FZ+9a2YNEV+OD9458xrGN08U3iWz5niY+mNKTnC28L58j2jtFI50
TLTG+EtqTQLtEY7UObPGB3dCo71B998htXYLZ22eOUaGy6Kx7plZw0N7hUN0
zKzBwi3QkK/R+e1Sa8sn594bo3Rsk8aqBcdyxFjEWs8L99XchxPbi+Px+alj
lOa5NZ2QWVNA68GGvaL+CZltG5ocMX//xFod51RT/5ryWqfo+pVyfw7Suc/h
0zJrPiNza1zVM2vCaF9oUoOCNVS0KjSkPLMmhLaE5jU0OCZEC0MjQSuBM8Gd
0LCa8S4za1toVoX6AxNrWZ9q7rGpY9yi1LBiZk0CbeujYP7xGXwjs37bLdj+
9c7tL49KzQHhnMS+A4SfT+zfWX9NS/vB+p0f7Kvx2VsJH1V4LW6dm0/cr3se
r7G6OtZG/Rc1vnnmmPQc/JPwlpk10Atya2bEGcQIxArov12Fd02cj5ila5yQ
2l+0i9ZI62S2gWinTXLf60p4VGFdAH0A/v9fHFBYK2ZOO82dl9sX/oufKqzB
ocXBoeHSz+IT1Yck3FtYY++ZOUZAe0ez7iV8R2Itm3ijeXAM1DZ3DHEwHCZx
bLE2c2xKDEAsgCbcJzNfRCt+JLe+81fm+BQNe//MMRLaNjHPgMzPTCxEzHRE
5mcklkLX4Nsfqd9dCf5NQ3XspcS/ld9wfGYOy2/7QvNaJo7R2gdryDviuzNr
y3AcuM7tmbXefzLHBqyPZ3L77uWJv/Gi1Nz0W+Gh7O9gHYf45IjU67FxcCzC
N3yXc4K5MRyZNbNUeLD6Q9jf6r+p1j+1jauTm1PyTesk5ppo6LV1j+GJtfWB
hbkK3OXDwhrr+tI/o72ibxwYnHMZkFtDJAezb2JtEc1uQ+mf0fJmw71Sa167
s8+D/Tf+tb/ud6/wHqntJXYTjffv1Jol2i85mh46flvi3M3jvMPUmmXXwprx
IcGaDlryXervrv44jd8YrId2Su0v8Bu1om01NhnbvFW0bebe2G5yal+W35Rc
GzkzvnGLxLm0O3S9LsJjsSHBGuhHqXN6aKNjo2OZlbpeWnE80S01B+rE72Av
Cl+BPQ7W79H/sUnYJjQJtAn8PVoIOT30/+aJ9f3Jwfwaf4hfJMe3JHWOkdzf
1tHcuFvJvxdqvGZmDf4ijQ8QnpdYW4bvPxydyyBmJP5+Ch+UWr8m/kUT/j11
zgKtmBzGmpIPwNfI3+0RzM/h18/onDNS2xvi06+CtQ1sSAv1X+adZ84B9Cqc
Q6glfGLi3AJ8cG3JH+F3aFkDU/Nl4pfXg+OVNxNrSEcW7rO2iQefj86Vobmg
H82PzpX1SKzPPRedi+qeWI9jPR4VbN//056D845ovmi/3wRrL6wH9Bg09j2D
c4po72jqv6XO+aC1wznJDV6cmos+FJ0bwv+gH5ATWpHaRpArelzHTk2dT0PP
IV4h3tkpcb7tMbVRqfVu8mvkjFamtinkkuZE53Kwt23Vr12xTcCHLMQ+5d7r
cHi4/KXB+hj8Ep5ZNzrWmlLyAfbXsZqzhfARwiOC8zl8H75Tj8JcBZ+Mb/4n
N9eEg8JFh0WvNb4x35o1yFqEQ8Oluxd+1/hcfG8WzYXgMHCZk4PzSdgj7NIX
mXUPODZc+9RgrR7NfuvM/HFMcD5vM43vXZgL4LPx3eTw0sz6Lrm9z6JzI+wh
+Pym3NwXjg5XJ/6YlFoTgb/tWTi/QG67RcX5Abg2nBpuzXog97K3ju2q/uDg
XATnPKc5G3Nzf971+aW9IteFZtlF/XrR+c2pJZ87LlibPpb1lTleR4vARl4S
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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt13nA1VMex/H73Ofep0V7WdoXiVLaiEjLEGlBjbJkSSLNWIsWIo2lpG3Q
wpSMFmYSGW2WVkuJSlpUpFRkyjIkW2ReX6c/Ps9zPu/zOef3u/ee3znfX+3e
t3a7JZvJZNZTnnb684+CTKY9+FxhJnMff3suk6mG3cb3prOLMpmbsZvoMv3l
9V3u/x38ACqj/03jh/q/B5+q/3x+jrEP8SXxJXw56u2afYxph/XT/3VcU/5G
rDy2WqYeDZG7ydhqtJtvQWOwSXLrsEeMOWTs/dTFuFvxW6i09nLZQf6XlvtA
+1eZ0fLv811lirQvxFpTC7nq+B6502msa0yWGYS1kHtSZhRdLHcULZUpT9fJ
XS/3Lm3ULi2zlXrKlKJlMhWoj74bZIaY7wzzTZEZS91krqBN2h/GWLn35arK
7TLuNBqNTcSqYJ/wTWkE9ih2ubEbjNtIW7B1WHG592R+jnt2rbX8IXoS+5w/
Re5Uuevy6fe9Xe56amOuwfGZqaz2Svl7/S8m9672TzIPy6/he8lU0O4V3wmd
ITcCPxd7kX+KLsE+x57COhg/N8bHZzB2BF+FL+FeavLtZe/kD9AD8vdgeWy+
XCFdItcD+8r46fq7YktkJ/BFcgv4HHWXu1TuS/wZuYux1+Qe43NyL/GH8S5y
F8oVwxZieeqBXYYdI7udf6Iw/faxBr6mGdrd8GX4JP6u+D2pnDlW4cP8r4sf
1O5IM833vP4s9g7/3ZHPtoovLvsKVoJ6yl0tV4jN5X+T6YxdFM8Ztt64Stqz
8YX+H2/893IX0Ay52dhhqq6/Tz49i/FMVjR2o0wzGil3u74CbBZ/QLY11kbu
AmyIaxyM5xQfhr1Fa/QXw96nS2WyNDvWgcx5+jrIlMAWY2WpDA3kj6at2g2p
Ea3i/0T9zfNtPKvG94/vGftI/5k0znzjsAw2M74rmbPZtlileD6w5vQw1t/n
uC2eEZlbzXcNtZI5nwZpf08P6rs31ii27sh9xP2M4ofid9P15qkhd0M+3fM2
/S3pDJrAV8A3x9qQfVxuC38qfpz578V3uJfN+n6NvZPfK9MYa47tOLKfHqU9
K/KxTqkO9lf/h+N/o300Ie5Npoqxp/DD9D9bmMbGHLE3t9CuE/14YzrNfbQK
rr2bbpF7mf8vPa1dWv6f+N18TdmvXKNL7O3meFpfR7yD/r10p/xi/rfYs2X2
xfdK8/jBsYdm0950JVbB/+rm2491olnmm2a+GtiXfGd6FnsKa4CVjHvD1mEr
se/M+Zx5rsTe1TeVPyHWVuxB2Ftyr8vVwwqxG7C3sSXx+bGf+CtoIfZiPAvY
z/EM0SJsblwjPju/y3UaYGfxB+gZbDd2MtaK/56mY3uwhtjZfC3z/YBdRvOx
F7CTsTLupX827fGx1x+OfY3fH+cjLeDryhXI9cHflFss1xJvju2im+Ve4k+U
y/F95VbKLZU7CSuO3ZRNz108f/WxEjEOW4u9HZ+X369dx/93zLeaasv9KHM5
LdA3R+4zGhd7lf6K2En85zQeW4FVwurzBVEExO9mvlysIe3G5qvID9HeFjWC
XBOsEnYX9hH2AbaV7uMXG6crU5nfSQ/H7x1rH6vNNzf2WIF78E+wTdgpWPlY
e7G2sLXY776bafyXcSbRIn4bPhxbysf2UMWfj+LZwZYXpNqlKt/MfMeYbyi+
HduIVcY+5dvFXo7dI9w09qd4LrCPsQ1yDbGy2ABsE/Ye9jHdz79R8MeWlKnG
N9IoJ3cHvhlbE/ecSzXP0ji/tAfSpzQKW29sqfit4tyiyTEOq441jX3N/XyI
NYhzFhuD7aW/x/qROxprwP8i91jsN1g/ej72K9qCnRznjtxYud00Oj6DTBms
Lr+fJmIfYFWxxvwuegTbEPsEdnyclzQp1jdWDWvC/+waj8ZvFnUZzeY7U0ff
wRc0EFsSZ6PsE3Jb+BrGNuNbR50js6cw7SXz82kvXitXnWrE2ucr4xPi2ePH
y96WT2fK60fWZazP+bG+8QdjTJyfNBM7gP1L+6p4Poydxv+SS3Xfa0WpTo16
tQ7+DXYOTTHtdGwstsCYc7GpcfbEZ6VXsbK5VDtEDTGeFmFlYk/B9sdZnk/n
S5wzg6mDa43G5hWmfTf23338v6mv9g68duzb/HGyO12zLU123aH59B3Gd3mQ
OkUdy0+h1doVcmm/jH1zu/YDsUfyxYytzlcz395sqrOj3t4t1xLrZuy1hUdq
tDij6I1squWj5ovabykN0v4h6iH8oqg549pxvsvOjrOa/4nG8Fvxmq5bz1zH
usYOrA1Nwh7H5ubTHhd7XVM6nf9PPp1NcUbVC55P50qsiVgb9alZnFtxxsba
4Cubr1GcoTQSq4aVxGrxbV23L39jnBdYX2xPLq27WH818UZRr9KI+GyxJ1An
42rFdbJprcWamxLrFO9TmGrgP2rhXFprD2XT3hp77LUyp0cNE99RYXpviPeH
2nL75FrTRPNNzaVnJJ6VnXJ1qQk/M94xsBmFqbaIGmN1PtVaUXPdRR3jHDN+
kb5fYx2Y70r+EK3Ipjon6p3expWi9VgtGiA3UqY8toE/gQZjo7C/YHcbdwzW
L5Pqjtgwo65fXpRq16hhC/Kpfl1RlOqiqI9OjOsYe13sgYatxtbHOnAPh/GR
8V3EuxC2Jn6jWFtyD8bZHdeJmhGbp/katgEbZ2xs4qP1dTW2V6wX7eJxpuu6
lq8a7wzZtP5iHX6KVcE+y6Z306iHoraKWixqsqKon8zxZ5lzsSbm+SJqR6w9
3516ah/COsY7BH+mbPf4bFFXx+9rjh9ojvm/4c+U65RLdXrU6/FOMpDOi3ei
fKpfo44dQOdgPeht7ZW0ythlMZ/cnNivY8/Hp0edQ7/zPehluVdz6T0nrhHv
BnfEfmSug9gMmc/wRnKtc2n/jGcmarOWcm34hflUe0QNchbWjv9R9gVj/xfM
2M659M4Q7w4VYw+Q6x51lPaLct/ireS68K/k07kb52+r+Gz59K4c78y/xbsB
XViU3ifjvfIXfjh1xq4xvhx2NX8VnYX9H1+UDxI=
          "]]}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ssr5WEYB/DX/TLjspwV2dixkOWQ/ZCynJmIskCR+2FQQyJ2kllNszIr
HZvjniREJGE4B8etWfkvfGTxfT/fZ/W8vb9fSUtXQ2dKCGFS1pW3HnP856f0
EApZymJWspw1rGI9a9nIb+xkl7TrExziLKc5z1/8w7+McoXb3OdiRghN9m7K
pXmVUelODeGfuYdX7OU1+xhnPxMc4A0HGZFbfYh3HGaSP3jPET5wlI8c4xOT
aSE027klz+Y1LkvCHS/Mx9zjFmNc4iJ/c4FznOIMIxznT2nTO/iV3/mFdfzM
apaxgkUs9w4v3LC3gCtslbjkm6+Yx0t+5Dk/8Iy5PGUOT5jNIx5Kln7ATO7R
mrBLa8MO096+BT1FuDe0pLz/D69R+Ugf
        "]]}, {
       Line3DBox[{1048, 1320, 639, 1047, 1628, 1241, 1049, 1629, 1242, 1050, 
        1630, 1243, 1051, 1631, 1244, 1052, 1632, 1245, 1053, 1633, 1527, 
        1701, 1054, 1321, 1447, 1817, 1246, 1055, 1323, 1448, 1818, 1247, 
        1056, 1634, 1248, 1057, 1635, 1249, 1058, 1636, 1250, 1059, 1637, 
        1251, 1060, 1768, 1325, 1252, 1326}], 
       Line3DBox[{1062, 1528, 1702, 1061, 654, 1063, 1638, 1253, 1064, 1639, 
        1254, 1065, 1640, 1255, 1066, 1769, 1327, 1450, 1256, 1449, 1819, 
        1328, 1451, 1529, 1770, 1067, 1322, 1452, 1530, 1767, 1068, 1324, 
        1453, 1820, 1257, 1069, 1333, 1454, 1821, 1258, 1070, 1641, 1259, 
        1071, 1642, 1260, 1072, 1643, 1261, 1073, 1644, 1262, 1074}], 
       Line3DBox[{1076, 1531, 1703, 1075, 1532, 1704, 1077, 668, 1078, 1589, 
        1645, 1263, 1455, 1822, 1335, 1456, 1264, 1336, 1774, 1329, 1458, 
        1265, 1339, 1776, 1330, 1460, 1533, 1771, 1079, 1331, 1462, 1534, 
        1772, 1080, 1332, 1464, 1535, 1773, 1081, 1334, 672, 1082, 1646, 1266,
         1083, 1647, 1267, 1084, 1648, 1268, 1085, 1649, 1269, 1086}], 
       Line3DBox[{1088, 1536, 1705, 1087, 1537, 1706, 1089, 1348, 1349, 1782, 
        1090, 831, 1351, 1091, 1775, 1337, 1457, 1338, 1092, 1777, 1340, 1459,
         1341, 1093, 1779, 1342, 1461, 1343, 1778, 1094, 1344, 1463, 1345, 
        1780, 1095, 1346, 1465, 1347, 1781, 1096, 1538, 1707, 1097, 684, 1098,
         1650, 1270, 1099, 1651, 1271, 1100, 1652, 1272, 1101}], 
       Line3DBox[{1103, 1539, 1708, 1102, 1540, 1709, 1104, 1350, 1466, 1710, 
        1590, 1105, 1591, 1823, 1467, 1352, 1106, 837, 1468, 1353, 1107, 1783,
         1354, 1469, 1355, 1108, 1785, 1356, 1470, 1357, 1784, 1109, 1358, 
        1471, 1359, 1786, 1110, 1541, 1711, 1111, 1542, 1712, 1112, 1543, 
        1713, 1113, 857, 1364, 1114, 1787, 1365, 1366, 1115, 1653, 1273, 
        1116}], Line3DBox[{1118, 1544, 1714, 1117, 1367, 1715, 1595, 1119, 
        1360, 1472, 1716, 1592, 1120, 1593, 1824, 1473, 1361, 1121, 1594, 
        1825, 1474, 1362, 1122, 855, 1475, 1363, 1123, 1654, 1545, 1717, 1124,
         1546, 1718, 1125, 1547, 1719, 1126, 1548, 1720, 1127, 1600, 1721, 
        1373, 1128, 1601, 1722, 1374, 1129, 875, 1375, 1130, 1788, 1376, 1377,
         1131}], 
       Line3DBox[{1135, 1655, 1274, 1133, 1369, 1656, 1275, 1378, 1371, 1657, 
        1276, 1379, 1599, 1658, 1277, 1479, 1603, 1659, 1278, 1140, 1660, 
        1279, 1142, 1661, 710, 1144, 1662, 1280, 1146, 1663, 1281, 1148, 1382,
         1664, 1282, 1480, 1606, 1665, 1283, 1481, 1608, 1666, 1284, 1482, 
        1610, 1667, 1285, 1483, 1611, 1668, 1286, 1154}], 
       Line3DBox[{1153, 1387, 1386, 1789, 1152, 1385, 1734, 1609, 1151, 1384, 
        1733, 1607, 1150, 1383, 1732, 1605, 1149, 1604, 1731, 1381, 1147, 
        1730, 1552, 1145, 1729, 1551, 1143, 1728, 709, 1141, 1727, 1550, 1139,
         1380, 1726, 1602, 1138, 1372, 1478, 1826, 1598, 1137, 1597, 1725, 
        1477, 1370, 1136, 1596, 1724, 1476, 1368, 1132, 1723, 1549, 1134}], 
       Line3DBox[{1155, 1388, 1553, 1790, 1484, 1389, 1669, 1287, 1485, 1390, 
        1670, 1288, 1486, 1612, 1671, 1289, 1487, 1613, 1672, 1290, 1156, 
        1673, 1291, 1157, 1674, 1554, 1735, 1158, 720, 1159, 1675, 1292, 1160,
         1391, 1676, 1293, 1488, 1614, 1677, 1490, 1294, 1489, 1615, 1678, 
        1492, 1295, 1491, 1617, 1679, 1493, 1296, 1161, 1680, 1297, 1162}], 
       Line3DBox[{1163, 1393, 1555, 1791, 1494, 1394, 1556, 1792, 1495, 1395, 
        1681, 1298, 1496, 1619, 1682, 1299, 1164, 1683, 1300, 1165, 1684, 
        1301, 1166, 1685, 1557, 1736, 1167, 1558, 1737, 1168, 1396, 1498, 732,
         1497, 1397, 1499, 1827, 1302, 1399, 1616, 1686, 1500, 1303, 1401, 
        1618, 1687, 1501, 1304, 1402, 1794, 1392, 1305, 1169, 1688, 1306, 
        1170}], Line3DBox[{1172, 1559, 1738, 1171, 1404, 1560, 1795, 1502, 
        1405, 1561, 1796, 1173, 1689, 1307, 1174, 1690, 1308, 1175, 1691, 
        1309, 1176, 1798, 1406, 1503, 1562, 1797, 1177, 1409, 1505, 1563, 
        1801, 1178, 1398, 1507, 1564, 1793, 1412, 1400, 1509, 744, 1415, 1620,
         1692, 1511, 1310, 1418, 1802, 1403, 1513, 1311, 1179, 1693, 1312, 
        1180, 1694, 1313, 1181}], 
       Line3DBox[{1183, 1565, 1739, 1182, 1566, 1740, 1184, 1567, 1741, 1185, 
        750, 1186, 1695, 1314, 1187, 1804, 1422, 1423, 1188, 1800, 1407, 1504,
         1408, 1799, 1189, 1410, 1506, 1411, 1808, 1190, 1413, 1508, 1414, 
        1809, 1191, 1416, 1510, 1417, 1810, 1192, 946, 1512, 1419, 1193, 1803,
         1420, 1514, 1421, 1194, 1696, 1315, 1195, 1697, 1316, 1196}], 
       Line3DBox[{1198, 1568, 1742, 1197, 1569, 1743, 1199, 1570, 1744, 1200, 
        1571, 1745, 1201, 964, 1433, 1202, 1805, 1424, 1515, 1425, 1203, 1807,
         1426, 1516, 1427, 1806, 1204, 1428, 1517, 1429, 1813, 1205, 1430, 
        1518, 1431, 1814, 1206, 1432, 1519, 1746, 1621, 1207, 1624, 1747, 
        1441, 1208, 766, 1209, 1698, 1317, 1210, 1699, 1318, 1211}], 
       Line3DBox[{1213, 1572, 1748, 1212, 1573, 1749, 1214, 1574, 1750, 1215, 
        1575, 1751, 1216, 1622, 1828, 1520, 1434, 1217, 968, 1521, 1435, 1218,
         1812, 1436, 1522, 1437, 1811, 1219, 1438, 1523, 1439, 1816, 1220, 
        1440, 1524, 1752, 1623, 1221, 1576, 1753, 1222, 1577, 1754, 1223, 
        1578, 1755, 1224, 779, 1225, 1700, 1319, 1226}], 
       Line3DBox[{1240, 1446, 986, 1239, 1766, 1588, 1238, 1765, 1587, 1237, 
        1764, 1586, 1236, 1763, 1585, 1235, 1762, 1584, 1234, 1761, 1583, 
        1233, 1815, 1443, 1526, 1830, 1626, 1232, 1442, 1525, 1829, 1625, 
        1231, 1760, 1582, 1230, 1759, 1581, 1229, 1758, 1580, 1228, 1757, 
        1579, 1227, 1627, 1756, 1444, 1445}]}, {
       Line3DBox[{445, 640, 1628, 446, 654, 474, 1704, 667, 487, 1706, 678, 
        499, 1709, 689, 510, 1715, 861, 862, 698, 522, 1724, 863, 879, 706, 
        1656, 536, 894, 1016, 715, 1669, 551, 914, 1028, 1792, 725, 563, 930, 
        1034, 1795, 736, 576, 1740, 748, 588, 1743, 759, 601, 1749, 770, 613, 
        1757, 782, 626}], 
       Line3DBox[{447, 641, 1629, 448, 655, 1638, 475, 668, 488, 829, 1782, 
        679, 500, 1710, 830, 846, 690, 511, 1716, 848, 864, 699, 523, 1725, 
        866, 880, 707, 1657, 537, 895, 1017, 716, 1670, 552, 915, 1029, 726, 
        1681, 564, 931, 1796, 737, 577, 1741, 749, 589, 1744, 760, 602, 1750, 
        771, 614, 1758, 783, 627}], 
       Line3DBox[{449, 642, 1630, 450, 656, 1639, 476, 814, 815, 1645, 489, 
        831, 832, 997, 1823, 834, 847, 835, 1001, 1824, 850, 865, 851, 1005, 
        1826, 868, 881, 869, 1658, 538, 896, 1018, 897, 1671, 553, 916, 1030, 
        917, 1682, 565, 738, 1689, 578, 750, 590, 1745, 761, 603, 1751, 772, 
        615, 1759, 784, 628}], 
       Line3DBox[{451, 643, 1631, 452, 657, 1640, 477, 816, 993, 1822, 817, 
        994, 819, 1775, 833, 820, 998, 837, 849, 838, 1002, 1825, 853, 867, 
        854, 524, 1726, 882, 1009, 883, 1659, 539, 898, 1019, 899, 1672, 554, 
        727, 1683, 566, 739, 1690, 579, 751, 1695, 591, 964, 965, 1040, 1828, 
        966, 967, 616, 1760, 785, 629}], 
       Line3DBox[{453, 644, 1632, 454, 800, 1769, 801, 991, 805, 818, 1774, 
        806, 995, 822, 1777, 836, 823, 999, 840, 1783, 852, 841, 1003, 855, 
        870, 856, 525, 1727, 708, 1660, 540, 717, 1673, 555, 728, 1684, 567, 
        740, 1691, 580, 950, 1804, 951, 1038, 952, 1805, 953, 1041, 968, 969, 
        1045, 1829, 979, 980, 630}], 
       Line3DBox[{455, 645, 1633, 457, 802, 990, 1819, 804, 992, 807, 821, 
        1776, 809, 996, 824, 1779, 839, 826, 1000, 842, 1785, 844, 512, 700, 
        1654, 526, 709, 1661, 541, 718, 1674, 556, 729, 1685, 568, 932, 1798, 
        934, 1035, 935, 1800, 937, 1039, 954, 1807, 956, 1042, 970, 1812, 972,
         1046, 1830, 981, 983, 631}], 
       Line3DBox[{459, 794, 647, 1817, 460, 795, 1767, 659, 479, 810, 1772, 
        670, 491, 827, 1780, 681, 502, 845, 1786, 692, 514, 1718, 702, 528, 
        1729, 711, 1662, 543, 720, 558, 1737, 731, 570, 938, 1801, 742, 582, 
        939, 1808, 957, 753, 593, 958, 1813, 973, 763, 605, 974, 1816, 984, 
        774, 618, 1761, 787, 633}], 
       Line3DBox[{461, 796, 648, 1818, 462, 797, 660, 1820, 480, 811, 1773, 
        671, 492, 828, 1781, 682, 503, 1711, 693, 515, 1719, 703, 529, 1730, 
        712, 1663, 544, 721, 1675, 559, 918, 1031, 732, 571, 920, 940, 1793, 
        743, 583, 941, 1809, 959, 754, 594, 960, 1814, 975, 764, 606, 1752, 
        976, 775, 619, 1762, 788, 634}], 
       Line3DBox[{463, 649, 1634, 464, 812, 661, 1821, 481, 813, 672, 493, 
        1707, 683, 504, 1712, 694, 516, 1720, 704, 530, 1731, 884, 1010, 713, 
        1664, 545, 900, 1020, 722, 1676, 560, 919, 921, 733, 1827, 572, 923, 
        942, 744, 584, 944, 1810, 961, 755, 595, 1746, 963, 1043, 765, 607, 
        1753, 776, 620, 1763, 789, 635}], 
       Line3DBox[{465, 650, 1635, 466, 662, 1641, 482, 673, 1646, 494, 684, 
        505, 1713, 695, 517, 1721, 871, 872, 531, 1732, 885, 1011, 886, 1665, 
        546, 901, 1021, 902, 1677, 1023, 905, 922, 906, 1686, 1032, 925, 943, 
        926, 1692, 1036, 946, 962, 947, 596, 1747, 977, 1044, 978, 608, 1754, 
        777, 621, 1764, 790, 636}], 
       Line3DBox[{467, 651, 1636, 468, 663, 1642, 483, 674, 1647, 495, 685, 
        1650, 506, 857, 858, 518, 1722, 873, 1006, 874, 532, 1733, 887, 1012, 
        888, 1666, 547, 903, 1022, 904, 1678, 1025, 909, 924, 910, 1687, 1033,
         928, 945, 1802, 929, 1037, 948, 1803, 949, 597, 766, 609, 1755, 778, 
        622, 1765, 791, 637}], 
       Line3DBox[{469, 652, 1637, 470, 664, 1643, 484, 675, 1648, 496, 686, 
        1651, 507, 859, 1787, 1004, 860, 519, 875, 1007, 876, 533, 1734, 889, 
        1013, 890, 1667, 548, 907, 1024, 908, 1679, 1026, 911, 927, 1794, 912,
         573, 745, 1693, 585, 756, 1696, 598, 767, 1698, 610, 779, 623, 1766, 
        792, 638}], 
       Line3DBox[{471, 798, 1768, 799, 472, 665, 1644, 485, 676, 1649, 497, 
        687, 1652, 508, 696, 1653, 520, 877, 1788, 1008, 878, 534, 891, 1789, 
        1014, 892, 1668, 549, 723, 1680, 561, 734, 1688, 574, 746, 1694, 586, 
        757, 1697, 599, 768, 1699, 611, 780, 1700, 624, 986, 987, 988}], 
       Line3DBox[{625, 781, 985, 1756, 612, 769, 1748, 600, 758, 1742, 587, 
        747, 1739, 575, 735, 1738, 562, 724, 1791, 1027, 913, 550, 714, 1790, 
        1015, 893, 535, 1655, 705, 1723, 521, 697, 1714, 509, 688, 1708, 498, 
        677, 1705, 486, 666, 1703, 473, 653, 1702, 444, 639, 793, 989}], 
       Line3DBox[{632, 786, 1815, 982, 617, 773, 1811, 971, 604, 762, 1806, 
        955, 592, 752, 1799, 936, 581, 741, 1797, 933, 569, 730, 1736, 557, 
        719, 1735, 542, 710, 1728, 527, 701, 1717, 513, 691, 1784, 843, 501, 
        680, 1778, 825, 490, 669, 1771, 808, 478, 658, 1770, 803, 458, 646, 
        1701, 456}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
i56Hno+ey8PsatDmhxH/rqazH1y+21QNCyd803/z7gUYsqDM29dCoEe91rj2
3jVAz0nPTc9rNN15T+7wWHbi7enzvufGg+jVeXOYUwP2hdrx5ybEMrrqdY+Z
28WhGgIG3Ar23Z3DjGPCnjY6fGLJji53XJ2l0KN9VUG9Rw5Lmb/n+HX3VFay
aP30IXK+2u7w7/SYS0XszDs/Y33DLCax1VKxci6Hsx27ux7KEbPCVZfU8l1z
Wb/Mwhax50rhz7JrG73GRMOjP5IWfhOvMn/J9VlX19YAxR/FI8Vh8wN316F3
37BrBbo3mGco693nxOA712qA3hO9N3pfLkaHr0dZp7ETOQND2++S876T85YM
yZMC3Tc9B92/46+y99CpgNF1yP5pBs1zyoHikuKU4pPimOKa4pnyjfKP8m6c
3VL7sHIRHBk6aMZC9okV6l9u6Qzy+8Q8pLykfHR1Cok8PeE15Ht1c53bL5kN
GfW65+7QaqA8pLykfDRsMGxaOjaGGVbtfvE6I5NtevxxsvYnKVC8UvxS3EqO
hRp/upvNJhmYF+Y9yGNOiwysc1QqgeKV4pfilvKZ8pvymnCKcIvwinCNcI7w
rf/DZhOF0+EQ1D/+SIZtGquqWa3h+EwGp77Zv/8W84ZZNfczMRiYxyY3t88b
vEkKFE8UXxRXFE8UXxRXlIeUl5SPhFOEW4RXhMuE04TPhOOE64TnQp8LfY/Q
vyt0n0LPJbQOQu9XKE4E80UgDoXyUSjOhd67UJwIxZVQHArlqVBeC+GVUL4I
4aFQPgrhrVC+C+G8EJ4I4Y8QrgrVIyF8FqprQvgpVB+F8Fmo/grhv1C9E6qb
QnVWiIcI8RaheifEf4TqqRCPEqrXQnxGiBcJ8Sgh3ijEP4X4jxA/FOJXQjxT
iL8J8V4h/txffM+8aHoks6tw/OHwLhU+9L+greon+//Mh4X4PPF44vXE54U+
33HIoLj9gXTWZdrauNJ+ceBfkd+yUEMGOpUjD2hH5rArq0Zmdiz2g5C+udG2
L+R/j/dB90X3I/RchBeEH4QbVC+pflLdLF83b6+zNI/lT1/AXOe4g+u6TAuz
OVJwrTdM7ZRYyHpb33vlLPVjIUnPXnh1loCHYlBUp1eFbJTe1vOn3KLY+3V9
9NLcqkD14Ic3DQ2f4IzdnrpqszTQ6NaoVpoq+5eflK+Up4SDhIuEh1S/qZ5T
Hb9/ZvRJg0dFzGfWeN1fN6PYjg0qfnU/K2FDN2mXsI1iNu/Y7pOBo0Tsmn2P
m+2uVPy7D7ovuh/KH8onyiPCHcIhwh/Cd8J7wvlabRONUXWFbPfQmmjnKyks
G0Y+nre0EqS7tX7oB4tZQvLQ7WnjM9n1Ltl3rb+UAcU95QHFP+U/4QHhAOEm
4SjhJ/Et4l/Eu+h90Puh90LxQfFCcUJ5S3lM+Uv4RXhGOEbrS+tN60zxQfFC
cUJxTHFN8UzrRetH60brRetH60bvm94/vXeKV4pfilvKK8ozyi+hz4W+R+jf
FbpPoecS4qVC6yzEb4Xel9D7FVp/ofcl9H6FeL5QHArFrVCcC+WFUDwL5ZdQ
Pgrlr2C+C+CDEJ4I4Y8QXgnhmxAeCuGnEA4L4bYQzgvVBaE6IoTzgvVLoN4J
1TWh+Vh9SXnwhG0p/667UixPi8rlebrR88dU2zBGV4/6fXaL5N8j9LnQ9zwe
0ndmVrEIhkc3PU0xEUH09iqVDsNkUOga5nplTxjT8lvdSlocwl42ijL2rqgR
/Fzoe+i/6X+nz+n/T99H3yP0udD3uM3Kf/a8dwYkdK0f8yA0HYJD+1nOvikB
VaVA5c19U6B/tPGWpqZMSPYeMndOvgSedO82ccvudNA72MJWPTQLOnrOOOrS
SQKL+7lHu9slw647vlcu5eRA3z9esjIbCYgXt/mmkZ8CWdWD1SwG5oLl4bVd
nRuqwGDY25EH9sZBSlFen+tf8sDldOnQ+xYSMLu7IsRhbwJ49We+T27lwasb
e6asMZXA2/c7lRY8DIXUqaZ7Z9bkg/+T7Sk3PSTg++jerOCvITDr8q3grNd5
4P59U7Z5aykc6lw76H2jJ8yaeKTR7kQ+zFVWO3KlhxR6tKpe2KfPMrbeXuK5
vyYHdMe8f7clRgqmL9f1WPfVh+VOUnzffmUuLBw/frXjHSko4zx5MzdPFg9r
C6vbh7EfvX+d+fwzA+53WDozfL78veOc/wc35y/s2n6L1YVkFv36yWDvChHE
9YhWHbFABvMvhN9STs9kYbs661grRUDqvnSrzY1SUDpeumLJ+TTWTTb5psbr
aHA71ycj1loGg748PBO7KZelDsju77TAB9YyA90SNymk/fDbNXthBpv3YWGK
7uUPcHh788Uxt2VQ2WZ9QlFZLjNyVVm2qNCDjc4N3el5VgrL1gdZBZSls34+
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
0PlBb3G/jM4RSsX9tRa4v1aF+2vk/3zIzcEap/Q+3aCWCJf93VJaKiSxVgHV
OkuaZVBo5TTBKd4eTOtNk/suyGQp6xeoiN3k9Q73Hx1x/5HOIxLiw+Rz1ub2
DdsI7DP2x33PD7jvOQr3PYV4uKV/Q9CEgGwm2bxO83++dqMeLcX7e5fBO25/
lvzsQjy/Gvd5PXCfNxX3eY0EnmvXor/7xXW4X/wO94vvC8yZhebVNtzclc5l
ssLnqsLnWorPRf75x9y8esTm/74vEb4v8s9H45yffPRN+N6vcO89COPtEhdv
owXm4eSrz+D2R6ZjfD/k9rPCUB8yEPUhvVEf4sGdh0bxGYq6jjGo6yB/fT/U
27zi9DbrsJ794HzH93Ef8T63n7goXDG13/c0+JB8zmeURxYE3zWPVBsjgTad
5jiHHEqBmft0dDd2yIXLmn5NizpLYMjy/W2mNcTDWP+O339fzwNQ2tJ8a60E
StqVWWvIQqC5PEG/KSYPLudlfMmT85mLs1UD3AfuhD3td7VbMjEXbuncK+4c
IAWvsdcf/4z9xJzqbFf1PJ0JJ3JyV0j1ZPCuzn+X97Bc1hDzvmOG8kUWsMvq
dGGgFA5cOP5l/7NsZq93yT7Sy4+NcYjf4/1FCmL1wQEn52cw42tPF8/eE8aq
uo62ctgiA4+n7YZevSpiu/pp1ZQuimLLTDR7JytVw4KUyq7Ocamw2e+YESjI
8Xlk2YT2cr43PNb5t+6NeAjWHzUo1jUbPtRuaV6iLb//sJpBI6X+8OfgFtsj
J7Og8+G160pHyuCOVdcL+5Ty2JDKTQ7HbOLYuOEPQN9D/j2S2fF9bTNZ2+EV
Ohlayaxk1onhHouk8FV5tf2cOyIme6y2ruS2iJ2+4h5hOEwGT6edGr/JMIr1
a15QYSe/X5M1Pibx8vscrpz/7dWTOOjz8/TF4/PSQHuOTuYIIxmM6nlbx/Fl
Hvvsb2l3XjOdeR9+Oda3VxUkGn1PSOuUyXzt/A5ryK97PA+3AXmejrqQNLZY
O5kNfRLbvuhAJluyZtVhe/n99Cr9Knsi73Ob5643uSxfvwFf3sI++brdcFvd
/YJWOmsc9OzRYvm/ExzWOf2S/PsdXO96Hz8Qx3w21bV2kT/3ilWm0q/uEpD9
Gvl0lY8fS3wwenGq/P3cqf1x4Iz8vdy6dKxZffZFNqndqJ7nhucy0xHP23rK
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
ZHHrYIHr9pObj/1fbEeyFA==
     "]],
   Axes->True,
   BoxRatios->{1, 1, 0.4},
   Method->{"RotationControl" -> "Globe"},
   PlotRange->{{-1, 1}, {-1, 1}, {-0.5235653471939337, 0.5235653471939337}},
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5393470831823483`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288639892*^9, 3.507957486647704*^9}],

Cell[TextData[{
 "Compute a random ",
 Cell[BoxData[
  FormBox[
   RowBox[{"10", "\[Times]", "10"}], TraditionalForm]]],
 " matrix. ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.507896120753077*^9, 
   3.5078961692575493`*^9}, {3.5078962270356503`*^9, 
   3.5078962311081142`*^9}, {3.507896273351543*^9, 3.507896338959052*^9}, {
   3.507896406391966*^9, 3.507896412125564*^9}, {3.507896449483135*^9, 
   3.507896513194379*^9}, {3.507896545864436*^9, 3.507896591441513*^9}, {
   3.507896727100626*^9, 3.507896764565721*^9}, {3.5078968330724993`*^9, 
   3.507896862124426*^9}, {3.507896893079068*^9, 3.507896895347973*^9}, {
   3.507896938779286*^9, 3.50789693909317*^9}, {3.507897524175043*^9, 
   3.5078975493065863`*^9}, {3.5078977070341673`*^9, 3.507897728734441*^9}, 
   3.507897772148779*^9, {3.507898096110672*^9, 3.5078981479431887`*^9}, {
   3.539347137626769*^9, 3.539347163128368*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "random 10x10 matrix", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Output", 
        "{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, 0.0793739, \
0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, 0.711963, \
0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, 0.110192}, \
{0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, 0.25876, \
0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, 0.441857, \
0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, {0.172864, \
0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, 0.487374, \
0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, 0.687479, \
0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, 0.52733, \
0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, 0.258095, \
0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, 0.593835, \
0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, 0.147903, \
0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, 0.918632}, \
{0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, 0.667899, \
0.00804849, 0.0594117, 0.392125}}"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"random \"", 
                    TagBox[
                    RowBox[{"10", " ", "10"}], HoldForm], "\" matrix\""}, 
                    "Row", DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    TagBox[
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], HoldForm], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "RandomLookup", "id" -> "Result",
      "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "moutput", {}, {
        "{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, 0.0793739, \
0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, 0.711963, \
0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, 0.110192}, \
{0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, 0.25876, \
0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, 0.441857, \
0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, {0.172864, \
0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, 0.487374, \
0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, 0.687479, \
0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, 0.52733, \
0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, 0.258095, \
0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, 0.593835, \
0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, 0.147903, \
0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, 0.918632}, \
{0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, 0.667899, \
0.00804849, 0.0594117, 0.392125}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"(", "\[NoBreak]", 
              
              GridBox[{{
                "0.6908638384536019`", "0.6487752945571881`", 
                 "0.24051998376796124`", "0.1118530371001607`", 
                 "0.32875953811914593`", "0.0793739239689002`", 
                 "0.2767325307101549`", "0.010753698523151112`", 
                 "0.8637633542112417`", "0.46592185337849834`"}, {
                "0.1947021514727334`", "0.33027478494855456`", 
                 "0.7119625901773086`", "0.04893298117260292`", 
                 "0.6209929133589389`", "0.2945741983312482`", 
                 "0.9366890434477739`", "0.02404975165480061`", 
                 "0.1062873973970353`", "0.11019181611973661`"}, {
                "0.28225569678018325`", "0.47851409167170345`", 
                 "0.8656345823469236`", "0.9633205618311806`", 
                 "0.7349911770199935`", "0.011674036087275796`", 
                 "0.25875951563184185`", "0.45797420787930676`", 
                 "0.7787209769553896`", "0.1326510323987724`"}, {
                "0.37233193639033524`", "0.02908792519365888`", 
                 "0.40990238653099453`", "0.44185650333824267`", 
                 "0.4912863826517839`", "0.9535055549340483`", 
                 "0.050603697557489946`", "0.5872241915439727`", 
                 "0.39693941902469065`", "0.1827530424880497`"}, {
                "0.17286358303955351`", "0.27999845164191384`", 
                 "0.8443192660151562`", "0.48775262313508594`", 
                 "0.1123251314513567`", "0.12733816451709123`", 
                 "0.32210201351253964`", "0.48737354437949154`", 
                 "0.3667047025056298`", "0.6696423498144564`"}, {
                "0.10330452390782718`", "0.48945076911815044`", 
                 "0.19298388167104497`", "0.36104063142496345`", 
                 "0.6874786259711667`", "0.8792990345364682`", 
                 "0.16668059295556525`", "0.010096371793971493`", 
                 "0.5318397215728199`", "0.5245407524423273`"}, {
                "0.9226535085027032`", "0.5273296000842977`", 
                 "0.07291654662415348`", "0.4671663898222289`", 
                 "0.5404672875306009`", "0.31566640949718217`", 
                 "0.2325345084917363`", "0.10587875096985466`", 
                 "0.25809498955112886`", "0.3569549029926813`"}, {
                "0.15635608171346882`", "0.30768054947373846`", 
                 "0.6467996611268576`", "0.03575573024718026`", 
                 "0.4819601636405286`", "0.5938352387200785`", 
                 "0.4726563647073394`", "0.13404904496012482`", 
                 "0.7073303269995161`", "0.8958699124084488`"}, {
                "0.7571901963294734`", "0.6614575427117746`", 
                 "0.1479027858882389`", "0.5498126437576225`", 
                 "0.7907205114897475`", "0.3052894129789736`", 
                 "0.7042655718940296`", "0.521628253248599`", 
                 "0.25353930257027013`", "0.9186315998404613`"}, {
                "0.44317847415432965`", "0.620150231562556`", 
                 "0.9729020379026958`", "0.2530326710104891`", 
                 "0.8665674729105486`", "0.3111073720687678`", 
                 "0.6678994053263347`", "0.008048488158032274`", 
                 "0.05941165984150998`", "0.39212453430064453`"}}, 
               RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
               Baseline, ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Characteristic polynomial", "scanner" -> "Eigen", "id" -> 
     "CharacteristicPolynomial", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "CharacteristicPolynomial[{{0.690864, 0.648775, 0.24052, 0.111853, \
0.32876, 0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, \
0.330275, 0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, \
0.106287, 0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, \
0.011674, 0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, \
0.409902, 0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, \
0.182753}, {0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, \
0.322102, 0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, \
0.361041, 0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, \
{0.922654, 0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, \
0.105879, 0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, \
0.48196, 0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}, x]"}], 
       XMLElement[
       "moutput", {}, {
        "-0.0364088 - 0.131205 x - 0.155629 x^2 + 0.459887 x^3 + 1.26215 x^4 \
+ 0.596337 x^5 + 0.0169565 x^6 + 0.742759 x^7 + 0.241404 x^8 - 4.3325 x^9 + \
x^10"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SuperscriptBox["x", "10"], "-", 
              RowBox[{"4.33250126539792`", " ", 
                SuperscriptBox["x", "9"]}], "+", 
              RowBox[{"0.24140409657963025`", " ", 
                SuperscriptBox["x", "8"]}], "+", 
              RowBox[{"0.7427591066974515`", " ", 
                SuperscriptBox["x", "7"]}], "+", 
              RowBox[{"0.01695647723723782`", " ", 
                SuperscriptBox["x", "6"]}], "+", 
              RowBox[{"0.5963366661450177`", " ", 
                SuperscriptBox["x", "5"]}], "+", 
              RowBox[{"1.26215176737982`", " ", 
                SuperscriptBox["x", "4"]}], "+", 
              RowBox[{"0.45988664346478736`", " ", 
                SuperscriptBox["x", "3"]}], "-", 
              RowBox[{"0.15562883776447667`", " ", 
                SuperscriptBox["x", "2"]}], "-", 
              RowBox[{"0.13120476034536255`", " ", "x"}], "-", 
              "0.03640877807267769`"}], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Eigenvalues", "scanner" -> "Eigen", "id" -> 
     "Eigenvalues", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "10"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{4.23086, 0.968435, 0.270765 + 0.788963 I, 0.270765 - 0.788963 I, \
-0.458007 + 0.379989 I, -0.458007 - 0.379989 I, -0.510585, 0.482897, \
-0.232311 + 0.303787 I, -0.232311 - 0.303787 I}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["\[Lambda]", "1"], "\[TildeTilde]", 
                    TagBox["4.230860363639038`", Identity]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{4.23086, 0.968435, 0.270765 + 0.788963 I, 0.270765 - 0.788963 I, \
-0.458007 + 0.379989 I, -0.458007 - 0.379989 I, -0.510585, 0.482897, \
-0.232311 + 0.303787 I, -0.232311 - 0.303787 I}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["\[Lambda]", "2"], "\[TildeTilde]", 
                    TagBox["0.9684354068397465`", Identity]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{4.23086, 0.968435, 0.270765 + 0.788963 I, 0.270765 - 0.788963 I, \
-0.458007 + 0.379989 I, -0.458007 - 0.379989 I, -0.510585, 0.482897, \
-0.232311 + 0.303787 I, -0.232311 - 0.303787 I}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["\[Lambda]", "3"], "\[TildeTilde]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.27076536148213176`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.7889627602440615`", " ", "\[ImaginaryI]"}]}], 
                    Identity]}], BaselinePosition -> Baseline, ImageSize -> 
                   500]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{4.23086, 0.968435, 0.270765 + 0.788963 I, 0.270765 - 0.788963 I, \
-0.458007 + 0.379989 I, -0.458007 - 0.379989 I, -0.510585, 0.482897, \
-0.232311 + 0.303787 I, -0.232311 - 0.303787 I}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["\[Lambda]", "4"], "\[TildeTilde]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.27076536148213176`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.7889627602440615`", " ", "\[ImaginaryI]"}]}], 
                    Identity]}], BaselinePosition -> Baseline, ImageSize -> 
                   500]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{4.23086, 0.968435, 0.270765 + 0.788963 I, 0.270765 - 0.788963 I, \
-0.458007 + 0.379989 I, -0.458007 - 0.379989 I, -0.510585, 0.482897, \
-0.232311 + 0.303787 I, -0.232311 - 0.303787 I}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["\[Lambda]", "5"], "\[TildeTilde]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.4580074137305213`"}], "+", 
                    RowBox[{"0.3799888422296063`", " ", "\[ImaginaryI]"}]}], 
                    Identity]}], BaselinePosition -> Baseline, ImageSize -> 
                   500]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{4.23086, 0.968435, 0.270765 + 0.788963 I, 0.270765 - 0.788963 I, \
-0.458007 + 0.379989 I, -0.458007 - 0.379989 I, -0.510585, 0.482897, \
-0.232311 + 0.303787 I, -0.232311 - 0.303787 I}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["\[Lambda]", "6"], "\[TildeTilde]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.4580074137305213`"}], "-", 
                    RowBox[{"0.3799888422296063`", " ", "\[ImaginaryI]"}]}], 
                    Identity]}], BaselinePosition -> Baseline, ImageSize -> 
                   500]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{4.23086, 0.968435, 0.270765 + 0.788963 I, 0.270765 - 0.788963 I, \
-0.458007 + 0.379989 I, -0.458007 - 0.379989 I, -0.510585, 0.482897, \
-0.232311 + 0.303787 I, -0.232311 - 0.303787 I}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["\[Lambda]", "7"], "\[TildeTilde]", 
                    TagBox[
                    RowBox[{"-", "0.5105851890441785`"}], Identity]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{4.23086, 0.968435, 0.270765 + 0.788963 I, 0.270765 - 0.788963 I, \
-0.458007 + 0.379989 I, -0.458007 - 0.379989 I, -0.510585, 0.482897, \
-0.232311 + 0.303787 I, -0.232311 - 0.303787 I}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["\[Lambda]", "8"], "\[TildeTilde]", 
                    TagBox["0.48289742663369956`", Identity]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{4.23086, 0.968435, 0.270765 + 0.788963 I, 0.270765 - 0.788963 I, \
-0.458007 + 0.379989 I, -0.458007 - 0.379989 I, -0.510585, 0.482897, \
-0.232311 + 0.303787 I, -0.232311 - 0.303787 I}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["\[Lambda]", "9"], "\[TildeTilde]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.2323113190868032`"}], "+", 
                    RowBox[{"0.3037874418646355`", " ", "\[ImaginaryI]"}]}], 
                    Identity]}], BaselinePosition -> Baseline, ImageSize -> 
                   500]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvalues[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{4.23086, 0.968435, 0.270765 + 0.788963 I, 0.270765 - 0.788963 I, \
-0.458007 + 0.379989 I, -0.458007 - 0.379989 I, -0.510585, 0.482897, \
-0.232311 + 0.303787 I, -0.232311 - 0.303787 I}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["\[Lambda]", "10"], "\[TildeTilde]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.2323113190868032`"}], "-", 
                    RowBox[{"0.3037874418646355`", " ", "\[ImaginaryI]"}]}], 
                    Identity]}], BaselinePosition -> Baseline, ImageSize -> 
                   500]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Eigenvectors", "scanner" -> "Eigen", "id" -> 
     "Eigenvectors", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "10"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{{-0.277126, -0.243119, -0.381667, -0.296427, -0.301092, -0.289212, \
-0.265567, -0.341138, -0.398875, -0.332043}, {0.632062, 0.0884337, -0.247412, \
-0.399382, -0.185252, -0.364119, 0.350939, -0.0459743, 0.277589, -0.0522394}, \
{0.150858 + 0.160095 I, -0.242254 - 0.140695 I, -0.00101929 - 0.388332 I, \
0.430751 - 0.123419 I, -0.158566 + 0.0117702 I, 0.101109 + 0.161782 I, \
0.19297 - 0.0251907 I, -0.0454627 + 0.335457 I, 0.144597 + 0.274269 I, \
-0.459639 + 0. I}, {0.150858 - 0.160095 I, -0.242254 + 0.140695 I, \
-0.00101929 + 0.388332 I, 0.430751 + 0.123419 I, -0.158566 - 0.0117702 I, \
0.101109 - 0.161782 I, 0.19297 + 0.0251907 I, -0.0454627 - 0.335457 I, \
0.144597 - 0.274269 I, -0.459639 + 0. I}, {0.216163 + 0.0991969 I, 0.328019 + \
0.120459 I, 0.0236792 + 0.243665 I, -0.0411044 - 0.371723 I, -0.0463014 - \
0.102738 I, 0.0690489 + 0.162071 I, -0.335393 - 0.123717 I, 0.404611 + \
0.186872 I, -0.475267 + 0. I, 0.0188385 - 0.158536 I}, {0.216163 - 0.0991969 \
I, 0.328019 - 0.120459 I, 0.0236792 - 0.243665 I, -0.0411044 + 0.371723 I, \
-0.0463014 + 0.102738 I, 0.0690489 - 0.162071 I, -0.335393 + 0.123717 I, \
0.404611 - 0.186872 I, -0.475267 + 0. I, 0.0188385 + 0.158536 I}, {0.126752, \
-0.392119, -0.0657326, -0.374669, 0.76367, -0.0560029, -0.0707818, 0.0889271, \
0.0743328, -0.284091}, {-0.0596932, -0.180201, 0.325833, -0.344338, 0.416792, \
-0.505013, -0.400523, 0.238332, -0.0461268, 0.301871}, {-0.014821 + 0.226854 \
I, -0.536686 + 0. I, -0.133054 + 0.0244866 I, 0.36924 + 0.0655848 I, \
0.0131988 + 0.0465759 I, -0.0607663 + 0.026767 I, 0.396317 - 0.264998 I, \
-0.407637 + 0.0334179 I, 0.127947 - 0.238238 I, 0.146665 + 0.0733278 I}, \
{-0.014821 - 0.226854 I, -0.536686 + 0. I, -0.133054 - 0.0244866 I, 0.36924 - \
0.0655848 I, 0.0131988 - 0.0465759 I, -0.0607663 - 0.026767 I, 0.396317 + \
0.264998 I, -0.407637 - 0.0334179 I, 0.127947 + 0.238238 I, 0.146665 - \
0.0733278 I}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["v", "1"], "\[TildeTilde]", 
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"-", "0.27712645999151253`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.24311915099486445`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.38166709175324`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.29642711291260293`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.3010921507445818`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.28921218599250725`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.26556681206699445`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.3411382586174815`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.39887519590663595`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.33204301612128223`"}], HoldForm]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
                    "\",\""}], "]"}]& )], ")"}], TraditionalForm]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{{-0.277126, -0.243119, -0.381667, -0.296427, -0.301092, -0.289212, \
-0.265567, -0.341138, -0.398875, -0.332043}, {0.632062, 0.0884337, -0.247412, \
-0.399382, -0.185252, -0.364119, 0.350939, -0.0459743, 0.277589, -0.0522394}, \
{0.150858 + 0.160095 I, -0.242254 - 0.140695 I, -0.00101929 - 0.388332 I, \
0.430751 - 0.123419 I, -0.158566 + 0.0117702 I, 0.101109 + 0.161782 I, \
0.19297 - 0.0251907 I, -0.0454627 + 0.335457 I, 0.144597 + 0.274269 I, \
-0.459639 + 0. I}, {0.150858 - 0.160095 I, -0.242254 + 0.140695 I, \
-0.00101929 + 0.388332 I, 0.430751 + 0.123419 I, -0.158566 - 0.0117702 I, \
0.101109 - 0.161782 I, 0.19297 + 0.0251907 I, -0.0454627 - 0.335457 I, \
0.144597 - 0.274269 I, -0.459639 + 0. I}, {0.216163 + 0.0991969 I, 0.328019 + \
0.120459 I, 0.0236792 + 0.243665 I, -0.0411044 - 0.371723 I, -0.0463014 - \
0.102738 I, 0.0690489 + 0.162071 I, -0.335393 - 0.123717 I, 0.404611 + \
0.186872 I, -0.475267 + 0. I, 0.0188385 - 0.158536 I}, {0.216163 - 0.0991969 \
I, 0.328019 - 0.120459 I, 0.0236792 - 0.243665 I, -0.0411044 + 0.371723 I, \
-0.0463014 + 0.102738 I, 0.0690489 - 0.162071 I, -0.335393 + 0.123717 I, \
0.404611 - 0.186872 I, -0.475267 + 0. I, 0.0188385 + 0.158536 I}, {0.126752, \
-0.392119, -0.0657326, -0.374669, 0.76367, -0.0560029, -0.0707818, 0.0889271, \
0.0743328, -0.284091}, {-0.0596932, -0.180201, 0.325833, -0.344338, 0.416792, \
-0.505013, -0.400523, 0.238332, -0.0461268, 0.301871}, {-0.014821 + 0.226854 \
I, -0.536686 + 0. I, -0.133054 + 0.0244866 I, 0.36924 + 0.0655848 I, \
0.0131988 + 0.0465759 I, -0.0607663 + 0.026767 I, 0.396317 - 0.264998 I, \
-0.407637 + 0.0334179 I, 0.127947 - 0.238238 I, 0.146665 + 0.0733278 I}, \
{-0.014821 - 0.226854 I, -0.536686 + 0. I, -0.133054 - 0.0244866 I, 0.36924 - \
0.0655848 I, 0.0131988 - 0.0465759 I, -0.0607663 - 0.026767 I, 0.396317 + \
0.264998 I, -0.407637 - 0.0334179 I, 0.127947 + 0.238238 I, 0.146665 - \
0.0733278 I}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["v", "2"], "\[TildeTilde]", 
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{
                    TagBox["0.6320622388132631`", HoldForm], 
                    TagBox["0.08843368886628271`", HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.24741248083258743`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.39938240969123306`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.18525224849697386`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.3641190681668993`"}], HoldForm], 
                    TagBox["0.3509389123541074`", HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.045974294272117494`"}], HoldForm], 
                    TagBox["0.27758919080407296`", HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.052239428902668646`"}], HoldForm]}, "Row",
                     DisplayFunction -> (
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
                    "\",\""}], "]"}]& )], ")"}], TraditionalForm]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{{-0.277126, -0.243119, -0.381667, -0.296427, -0.301092, -0.289212, \
-0.265567, -0.341138, -0.398875, -0.332043}, {0.632062, 0.0884337, -0.247412, \
-0.399382, -0.185252, -0.364119, 0.350939, -0.0459743, 0.277589, -0.0522394}, \
{0.150858 + 0.160095 I, -0.242254 - 0.140695 I, -0.00101929 - 0.388332 I, \
0.430751 - 0.123419 I, -0.158566 + 0.0117702 I, 0.101109 + 0.161782 I, \
0.19297 - 0.0251907 I, -0.0454627 + 0.335457 I, 0.144597 + 0.274269 I, \
-0.459639 + 0. I}, {0.150858 - 0.160095 I, -0.242254 + 0.140695 I, \
-0.00101929 + 0.388332 I, 0.430751 + 0.123419 I, -0.158566 - 0.0117702 I, \
0.101109 - 0.161782 I, 0.19297 + 0.0251907 I, -0.0454627 - 0.335457 I, \
0.144597 - 0.274269 I, -0.459639 + 0. I}, {0.216163 + 0.0991969 I, 0.328019 + \
0.120459 I, 0.0236792 + 0.243665 I, -0.0411044 - 0.371723 I, -0.0463014 - \
0.102738 I, 0.0690489 + 0.162071 I, -0.335393 - 0.123717 I, 0.404611 + \
0.186872 I, -0.475267 + 0. I, 0.0188385 - 0.158536 I}, {0.216163 - 0.0991969 \
I, 0.328019 - 0.120459 I, 0.0236792 - 0.243665 I, -0.0411044 + 0.371723 I, \
-0.0463014 + 0.102738 I, 0.0690489 - 0.162071 I, -0.335393 + 0.123717 I, \
0.404611 - 0.186872 I, -0.475267 + 0. I, 0.0188385 + 0.158536 I}, {0.126752, \
-0.392119, -0.0657326, -0.374669, 0.76367, -0.0560029, -0.0707818, 0.0889271, \
0.0743328, -0.284091}, {-0.0596932, -0.180201, 0.325833, -0.344338, 0.416792, \
-0.505013, -0.400523, 0.238332, -0.0461268, 0.301871}, {-0.014821 + 0.226854 \
I, -0.536686 + 0. I, -0.133054 + 0.0244866 I, 0.36924 + 0.0655848 I, \
0.0131988 + 0.0465759 I, -0.0607663 + 0.026767 I, 0.396317 - 0.264998 I, \
-0.407637 + 0.0334179 I, 0.127947 - 0.238238 I, 0.146665 + 0.0733278 I}, \
{-0.014821 - 0.226854 I, -0.536686 + 0. I, -0.133054 - 0.0244866 I, 0.36924 - \
0.0655848 I, 0.0131988 - 0.0465759 I, -0.0607663 - 0.026767 I, 0.396317 + \
0.264998 I, -0.407637 - 0.0334179 I, 0.127947 + 0.238238 I, 0.146665 - \
0.0733278 I}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["v", "3"], "\[TildeTilde]", 
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"0.15085760812727608`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.16009516452742503`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.24225438824507806`"}], "-", 
                    RowBox[{"0.1406949019700665`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.0010192931223206164`"}], "-", 
                    RowBox[{"0.38833194465122467`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.43075081717081065`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.12341880277256484`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.1585664725452468`"}], "+", 
                    RowBox[{"0.011770249428376858`", " ", "\[ImaginaryI]"}]}],
                     HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.10110917157218471`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.1617819996750772`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.1929695180623517`", "\[VeryThinSpace]"}], "-", 
                    
                    RowBox[{"0.02519074922240977`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.04546266380583903`"}], "+", 
                    RowBox[{"0.33545652347465366`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.14459686426650692`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.27426943264100123`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.4596389988088544`"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], HoldForm]}, 
                    "Row", DisplayFunction -> (
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
                    "\",\""}], "]"}]& )], ")"}], TraditionalForm]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{{-0.277126, -0.243119, -0.381667, -0.296427, -0.301092, -0.289212, \
-0.265567, -0.341138, -0.398875, -0.332043}, {0.632062, 0.0884337, -0.247412, \
-0.399382, -0.185252, -0.364119, 0.350939, -0.0459743, 0.277589, -0.0522394}, \
{0.150858 + 0.160095 I, -0.242254 - 0.140695 I, -0.00101929 - 0.388332 I, \
0.430751 - 0.123419 I, -0.158566 + 0.0117702 I, 0.101109 + 0.161782 I, \
0.19297 - 0.0251907 I, -0.0454627 + 0.335457 I, 0.144597 + 0.274269 I, \
-0.459639 + 0. I}, {0.150858 - 0.160095 I, -0.242254 + 0.140695 I, \
-0.00101929 + 0.388332 I, 0.430751 + 0.123419 I, -0.158566 - 0.0117702 I, \
0.101109 - 0.161782 I, 0.19297 + 0.0251907 I, -0.0454627 - 0.335457 I, \
0.144597 - 0.274269 I, -0.459639 + 0. I}, {0.216163 + 0.0991969 I, 0.328019 + \
0.120459 I, 0.0236792 + 0.243665 I, -0.0411044 - 0.371723 I, -0.0463014 - \
0.102738 I, 0.0690489 + 0.162071 I, -0.335393 - 0.123717 I, 0.404611 + \
0.186872 I, -0.475267 + 0. I, 0.0188385 - 0.158536 I}, {0.216163 - 0.0991969 \
I, 0.328019 - 0.120459 I, 0.0236792 - 0.243665 I, -0.0411044 + 0.371723 I, \
-0.0463014 + 0.102738 I, 0.0690489 - 0.162071 I, -0.335393 + 0.123717 I, \
0.404611 - 0.186872 I, -0.475267 + 0. I, 0.0188385 + 0.158536 I}, {0.126752, \
-0.392119, -0.0657326, -0.374669, 0.76367, -0.0560029, -0.0707818, 0.0889271, \
0.0743328, -0.284091}, {-0.0596932, -0.180201, 0.325833, -0.344338, 0.416792, \
-0.505013, -0.400523, 0.238332, -0.0461268, 0.301871}, {-0.014821 + 0.226854 \
I, -0.536686 + 0. I, -0.133054 + 0.0244866 I, 0.36924 + 0.0655848 I, \
0.0131988 + 0.0465759 I, -0.0607663 + 0.026767 I, 0.396317 - 0.264998 I, \
-0.407637 + 0.0334179 I, 0.127947 - 0.238238 I, 0.146665 + 0.0733278 I}, \
{-0.014821 - 0.226854 I, -0.536686 + 0. I, -0.133054 - 0.0244866 I, 0.36924 - \
0.0655848 I, 0.0131988 - 0.0465759 I, -0.0607663 - 0.026767 I, 0.396317 + \
0.264998 I, -0.407637 - 0.0334179 I, 0.127947 + 0.238238 I, 0.146665 - \
0.0733278 I}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["v", "4"], "\[TildeTilde]", 
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"0.15085760812727608`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.16009516452742503`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.24225438824507806`"}], "+", 
                    RowBox[{"0.1406949019700665`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.0010192931223206164`"}], "+", 
                    RowBox[{"0.38833194465122467`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.43075081717081065`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.12341880277256484`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.1585664725452468`"}], "-", 
                    RowBox[{"0.011770249428376858`", " ", "\[ImaginaryI]"}]}],
                     HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.10110917157218471`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.1617819996750772`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.1929695180623517`", "\[VeryThinSpace]"}], "+", 
                    
                    RowBox[{"0.02519074922240977`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.04546266380583903`"}], "-", 
                    RowBox[{"0.33545652347465366`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.14459686426650692`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.27426943264100123`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.4596389988088544`"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], HoldForm]}, 
                    "Row", DisplayFunction -> (
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox["Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
                    "\",\""}], "]"}]& )], ")"}], TraditionalForm]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{{-0.277126, -0.243119, -0.381667, -0.296427, -0.301092, -0.289212, \
-0.265567, -0.341138, -0.398875, -0.332043}, {0.632062, 0.0884337, -0.247412, \
-0.399382, -0.185252, -0.364119, 0.350939, -0.0459743, 0.277589, -0.0522394}, \
{0.150858 + 0.160095 I, -0.242254 - 0.140695 I, -0.00101929 - 0.388332 I, \
0.430751 - 0.123419 I, -0.158566 + 0.0117702 I, 0.101109 + 0.161782 I, \
0.19297 - 0.0251907 I, -0.0454627 + 0.335457 I, 0.144597 + 0.274269 I, \
-0.459639 + 0. I}, {0.150858 - 0.160095 I, -0.242254 + 0.140695 I, \
-0.00101929 + 0.388332 I, 0.430751 + 0.123419 I, -0.158566 - 0.0117702 I, \
0.101109 - 0.161782 I, 0.19297 + 0.0251907 I, -0.0454627 - 0.335457 I, \
0.144597 - 0.274269 I, -0.459639 + 0. I}, {0.216163 + 0.0991969 I, 0.328019 + \
0.120459 I, 0.0236792 + 0.243665 I, -0.0411044 - 0.371723 I, -0.0463014 - \
0.102738 I, 0.0690489 + 0.162071 I, -0.335393 - 0.123717 I, 0.404611 + \
0.186872 I, -0.475267 + 0. I, 0.0188385 - 0.158536 I}, {0.216163 - 0.0991969 \
I, 0.328019 - 0.120459 I, 0.0236792 - 0.243665 I, -0.0411044 + 0.371723 I, \
-0.0463014 + 0.102738 I, 0.0690489 - 0.162071 I, -0.335393 + 0.123717 I, \
0.404611 - 0.186872 I, -0.475267 + 0. I, 0.0188385 + 0.158536 I}, {0.126752, \
-0.392119, -0.0657326, -0.374669, 0.76367, -0.0560029, -0.0707818, 0.0889271, \
0.0743328, -0.284091}, {-0.0596932, -0.180201, 0.325833, -0.344338, 0.416792, \
-0.505013, -0.400523, 0.238332, -0.0461268, 0.301871}, {-0.014821 + 0.226854 \
I, -0.536686 + 0. I, -0.133054 + 0.0244866 I, 0.36924 + 0.0655848 I, \
0.0131988 + 0.0465759 I, -0.0607663 + 0.026767 I, 0.396317 - 0.264998 I, \
-0.407637 + 0.0334179 I, 0.127947 - 0.238238 I, 0.146665 + 0.0733278 I}, \
{-0.014821 - 0.226854 I, -0.536686 + 0. I, -0.133054 - 0.0244866 I, 0.36924 - \
0.0655848 I, 0.0131988 - 0.0465759 I, -0.0607663 - 0.026767 I, 0.396317 + \
0.264998 I, -0.407637 - 0.0334179 I, 0.127947 + 0.238238 I, 0.146665 - \
0.0733278 I}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["v", "5"], "\[TildeTilde]", 
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"0.21616264009571792`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.09919688675603484`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.3280192591126402`", "\[VeryThinSpace]"}], "+", 
                    
                    RowBox[{"0.12045933674734705`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.023679188387782657`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.2436653519291395`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.0411044264177588`"}], "-", 
                    RowBox[{"0.3717227070520965`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.046301363572244035`"}], "-", 
                    RowBox[{"0.10273816313787294`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.06904891429464695`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.16207068286187531`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.3353926028069469`"}], "-", 
                    RowBox[{"0.12371693587675939`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.404610822685892`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.18687160359515792`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.4752669570861384`"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.01883853662461836`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.15853574838575438`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
                    "\",\""}], "]"}]& )], ")"}], TraditionalForm]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{{-0.277126, -0.243119, -0.381667, -0.296427, -0.301092, -0.289212, \
-0.265567, -0.341138, -0.398875, -0.332043}, {0.632062, 0.0884337, -0.247412, \
-0.399382, -0.185252, -0.364119, 0.350939, -0.0459743, 0.277589, -0.0522394}, \
{0.150858 + 0.160095 I, -0.242254 - 0.140695 I, -0.00101929 - 0.388332 I, \
0.430751 - 0.123419 I, -0.158566 + 0.0117702 I, 0.101109 + 0.161782 I, \
0.19297 - 0.0251907 I, -0.0454627 + 0.335457 I, 0.144597 + 0.274269 I, \
-0.459639 + 0. I}, {0.150858 - 0.160095 I, -0.242254 + 0.140695 I, \
-0.00101929 + 0.388332 I, 0.430751 + 0.123419 I, -0.158566 - 0.0117702 I, \
0.101109 - 0.161782 I, 0.19297 + 0.0251907 I, -0.0454627 - 0.335457 I, \
0.144597 - 0.274269 I, -0.459639 + 0. I}, {0.216163 + 0.0991969 I, 0.328019 + \
0.120459 I, 0.0236792 + 0.243665 I, -0.0411044 - 0.371723 I, -0.0463014 - \
0.102738 I, 0.0690489 + 0.162071 I, -0.335393 - 0.123717 I, 0.404611 + \
0.186872 I, -0.475267 + 0. I, 0.0188385 - 0.158536 I}, {0.216163 - 0.0991969 \
I, 0.328019 - 0.120459 I, 0.0236792 - 0.243665 I, -0.0411044 + 0.371723 I, \
-0.0463014 + 0.102738 I, 0.0690489 - 0.162071 I, -0.335393 + 0.123717 I, \
0.404611 - 0.186872 I, -0.475267 + 0. I, 0.0188385 + 0.158536 I}, {0.126752, \
-0.392119, -0.0657326, -0.374669, 0.76367, -0.0560029, -0.0707818, 0.0889271, \
0.0743328, -0.284091}, {-0.0596932, -0.180201, 0.325833, -0.344338, 0.416792, \
-0.505013, -0.400523, 0.238332, -0.0461268, 0.301871}, {-0.014821 + 0.226854 \
I, -0.536686 + 0. I, -0.133054 + 0.0244866 I, 0.36924 + 0.0655848 I, \
0.0131988 + 0.0465759 I, -0.0607663 + 0.026767 I, 0.396317 - 0.264998 I, \
-0.407637 + 0.0334179 I, 0.127947 - 0.238238 I, 0.146665 + 0.0733278 I}, \
{-0.014821 - 0.226854 I, -0.536686 + 0. I, -0.133054 - 0.0244866 I, 0.36924 - \
0.0655848 I, 0.0131988 - 0.0465759 I, -0.0607663 - 0.026767 I, 0.396317 + \
0.264998 I, -0.407637 - 0.0334179 I, 0.127947 + 0.238238 I, 0.146665 - \
0.0733278 I}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["v", "6"], "\[TildeTilde]", 
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"0.21616264009571792`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.09919688675603484`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.3280192591126402`", "\[VeryThinSpace]"}], "-", 
                    
                    RowBox[{"0.12045933674734705`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.023679188387782657`", "\[VeryThinSpace]"}], 
                    "-", 
                    RowBox[{"0.2436653519291395`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.0411044264177588`"}], "+", 
                    RowBox[{"0.3717227070520965`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.046301363572244035`"}], "+", 
                    RowBox[{"0.10273816313787294`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.06904891429464695`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.16207068286187531`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.3353926028069469`"}], "+", 
                    RowBox[{"0.12371693587675939`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.404610822685892`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.18687160359515792`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.4752669570861384`"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.01883853662461836`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.15853574838575438`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
                    "\",\""}], "]"}]& )], ")"}], TraditionalForm]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{{-0.277126, -0.243119, -0.381667, -0.296427, -0.301092, -0.289212, \
-0.265567, -0.341138, -0.398875, -0.332043}, {0.632062, 0.0884337, -0.247412, \
-0.399382, -0.185252, -0.364119, 0.350939, -0.0459743, 0.277589, -0.0522394}, \
{0.150858 + 0.160095 I, -0.242254 - 0.140695 I, -0.00101929 - 0.388332 I, \
0.430751 - 0.123419 I, -0.158566 + 0.0117702 I, 0.101109 + 0.161782 I, \
0.19297 - 0.0251907 I, -0.0454627 + 0.335457 I, 0.144597 + 0.274269 I, \
-0.459639 + 0. I}, {0.150858 - 0.160095 I, -0.242254 + 0.140695 I, \
-0.00101929 + 0.388332 I, 0.430751 + 0.123419 I, -0.158566 - 0.0117702 I, \
0.101109 - 0.161782 I, 0.19297 + 0.0251907 I, -0.0454627 - 0.335457 I, \
0.144597 - 0.274269 I, -0.459639 + 0. I}, {0.216163 + 0.0991969 I, 0.328019 + \
0.120459 I, 0.0236792 + 0.243665 I, -0.0411044 - 0.371723 I, -0.0463014 - \
0.102738 I, 0.0690489 + 0.162071 I, -0.335393 - 0.123717 I, 0.404611 + \
0.186872 I, -0.475267 + 0. I, 0.0188385 - 0.158536 I}, {0.216163 - 0.0991969 \
I, 0.328019 - 0.120459 I, 0.0236792 - 0.243665 I, -0.0411044 + 0.371723 I, \
-0.0463014 + 0.102738 I, 0.0690489 - 0.162071 I, -0.335393 + 0.123717 I, \
0.404611 - 0.186872 I, -0.475267 + 0. I, 0.0188385 + 0.158536 I}, {0.126752, \
-0.392119, -0.0657326, -0.374669, 0.76367, -0.0560029, -0.0707818, 0.0889271, \
0.0743328, -0.284091}, {-0.0596932, -0.180201, 0.325833, -0.344338, 0.416792, \
-0.505013, -0.400523, 0.238332, -0.0461268, 0.301871}, {-0.014821 + 0.226854 \
I, -0.536686 + 0. I, -0.133054 + 0.0244866 I, 0.36924 + 0.0655848 I, \
0.0131988 + 0.0465759 I, -0.0607663 + 0.026767 I, 0.396317 - 0.264998 I, \
-0.407637 + 0.0334179 I, 0.127947 - 0.238238 I, 0.146665 + 0.0733278 I}, \
{-0.014821 - 0.226854 I, -0.536686 + 0. I, -0.133054 - 0.0244866 I, 0.36924 - \
0.0655848 I, 0.0131988 - 0.0465759 I, -0.0607663 - 0.026767 I, 0.396317 + \
0.264998 I, -0.407637 - 0.0334179 I, 0.127947 + 0.238238 I, 0.146665 - \
0.0733278 I}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["v", "7"], "\[TildeTilde]", 
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{
                    TagBox["0.12675172964291515`", HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.39211857500990527`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.06573263693137398`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.3746694466420412`"}], HoldForm], 
                    TagBox["0.7636698675820986`", HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.05600289494947312`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.07078180201519854`"}], HoldForm], 
                    TagBox["0.0889270504017232`", HoldForm], 
                    TagBox["0.07433276316420219`", HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.284090855176383`"}], HoldForm]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
                    "\",\""}], "]"}]& )], ")"}], TraditionalForm]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{{-0.277126, -0.243119, -0.381667, -0.296427, -0.301092, -0.289212, \
-0.265567, -0.341138, -0.398875, -0.332043}, {0.632062, 0.0884337, -0.247412, \
-0.399382, -0.185252, -0.364119, 0.350939, -0.0459743, 0.277589, -0.0522394}, \
{0.150858 + 0.160095 I, -0.242254 - 0.140695 I, -0.00101929 - 0.388332 I, \
0.430751 - 0.123419 I, -0.158566 + 0.0117702 I, 0.101109 + 0.161782 I, \
0.19297 - 0.0251907 I, -0.0454627 + 0.335457 I, 0.144597 + 0.274269 I, \
-0.459639 + 0. I}, {0.150858 - 0.160095 I, -0.242254 + 0.140695 I, \
-0.00101929 + 0.388332 I, 0.430751 + 0.123419 I, -0.158566 - 0.0117702 I, \
0.101109 - 0.161782 I, 0.19297 + 0.0251907 I, -0.0454627 - 0.335457 I, \
0.144597 - 0.274269 I, -0.459639 + 0. I}, {0.216163 + 0.0991969 I, 0.328019 + \
0.120459 I, 0.0236792 + 0.243665 I, -0.0411044 - 0.371723 I, -0.0463014 - \
0.102738 I, 0.0690489 + 0.162071 I, -0.335393 - 0.123717 I, 0.404611 + \
0.186872 I, -0.475267 + 0. I, 0.0188385 - 0.158536 I}, {0.216163 - 0.0991969 \
I, 0.328019 - 0.120459 I, 0.0236792 - 0.243665 I, -0.0411044 + 0.371723 I, \
-0.0463014 + 0.102738 I, 0.0690489 - 0.162071 I, -0.335393 + 0.123717 I, \
0.404611 - 0.186872 I, -0.475267 + 0. I, 0.0188385 + 0.158536 I}, {0.126752, \
-0.392119, -0.0657326, -0.374669, 0.76367, -0.0560029, -0.0707818, 0.0889271, \
0.0743328, -0.284091}, {-0.0596932, -0.180201, 0.325833, -0.344338, 0.416792, \
-0.505013, -0.400523, 0.238332, -0.0461268, 0.301871}, {-0.014821 + 0.226854 \
I, -0.536686 + 0. I, -0.133054 + 0.0244866 I, 0.36924 + 0.0655848 I, \
0.0131988 + 0.0465759 I, -0.0607663 + 0.026767 I, 0.396317 - 0.264998 I, \
-0.407637 + 0.0334179 I, 0.127947 - 0.238238 I, 0.146665 + 0.0733278 I}, \
{-0.014821 - 0.226854 I, -0.536686 + 0. I, -0.133054 - 0.0244866 I, 0.36924 - \
0.0655848 I, 0.0131988 - 0.0465759 I, -0.0607663 - 0.026767 I, 0.396317 + \
0.264998 I, -0.407637 - 0.0334179 I, 0.127947 + 0.238238 I, 0.146665 - \
0.0733278 I}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["v", "8"], "\[TildeTilde]", 
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"-", "0.05969323817781774`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.18020132790733126`"}], HoldForm], 
                    TagBox["0.3258332696579274`", HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.3443378621084679`"}], HoldForm], 
                    TagBox["0.4167915314181213`", HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.5050133495478476`"}], HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.4005230516671539`"}], HoldForm], 
                    TagBox["0.23833192132356834`", HoldForm], 
                    TagBox[
                    RowBox[{"-", "0.04612680631191537`"}], HoldForm], 
                    TagBox["0.3018710818485024`", HoldForm]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
                    "\",\""}], "]"}]& )], ")"}], TraditionalForm]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{{-0.277126, -0.243119, -0.381667, -0.296427, -0.301092, -0.289212, \
-0.265567, -0.341138, -0.398875, -0.332043}, {0.632062, 0.0884337, -0.247412, \
-0.399382, -0.185252, -0.364119, 0.350939, -0.0459743, 0.277589, -0.0522394}, \
{0.150858 + 0.160095 I, -0.242254 - 0.140695 I, -0.00101929 - 0.388332 I, \
0.430751 - 0.123419 I, -0.158566 + 0.0117702 I, 0.101109 + 0.161782 I, \
0.19297 - 0.0251907 I, -0.0454627 + 0.335457 I, 0.144597 + 0.274269 I, \
-0.459639 + 0. I}, {0.150858 - 0.160095 I, -0.242254 + 0.140695 I, \
-0.00101929 + 0.388332 I, 0.430751 + 0.123419 I, -0.158566 - 0.0117702 I, \
0.101109 - 0.161782 I, 0.19297 + 0.0251907 I, -0.0454627 - 0.335457 I, \
0.144597 - 0.274269 I, -0.459639 + 0. I}, {0.216163 + 0.0991969 I, 0.328019 + \
0.120459 I, 0.0236792 + 0.243665 I, -0.0411044 - 0.371723 I, -0.0463014 - \
0.102738 I, 0.0690489 + 0.162071 I, -0.335393 - 0.123717 I, 0.404611 + \
0.186872 I, -0.475267 + 0. I, 0.0188385 - 0.158536 I}, {0.216163 - 0.0991969 \
I, 0.328019 - 0.120459 I, 0.0236792 - 0.243665 I, -0.0411044 + 0.371723 I, \
-0.0463014 + 0.102738 I, 0.0690489 - 0.162071 I, -0.335393 + 0.123717 I, \
0.404611 - 0.186872 I, -0.475267 + 0. I, 0.0188385 + 0.158536 I}, {0.126752, \
-0.392119, -0.0657326, -0.374669, 0.76367, -0.0560029, -0.0707818, 0.0889271, \
0.0743328, -0.284091}, {-0.0596932, -0.180201, 0.325833, -0.344338, 0.416792, \
-0.505013, -0.400523, 0.238332, -0.0461268, 0.301871}, {-0.014821 + 0.226854 \
I, -0.536686 + 0. I, -0.133054 + 0.0244866 I, 0.36924 + 0.0655848 I, \
0.0131988 + 0.0465759 I, -0.0607663 + 0.026767 I, 0.396317 - 0.264998 I, \
-0.407637 + 0.0334179 I, 0.127947 - 0.238238 I, 0.146665 + 0.0733278 I}, \
{-0.014821 - 0.226854 I, -0.536686 + 0. I, -0.133054 - 0.0244866 I, 0.36924 - \
0.0655848 I, 0.0131988 - 0.0465759 I, -0.0607663 - 0.026767 I, 0.396317 + \
0.264998 I, -0.407637 - 0.0334179 I, 0.127947 + 0.238238 I, 0.146665 - \
0.0733278 I}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["v", "9"], "\[TildeTilde]", 
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.014820959982107064`"}], "+", 
                    RowBox[{"0.22685398026147197`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.5366857384142396`"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.13305357673033374`"}], "+", 
                    RowBox[{"0.024486590742821425`", " ", "\[ImaginaryI]"}]}],
                     HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.36923979168116594`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.06558478821768268`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.013198837962460838`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.04657592664761093`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.060766322789324305`"}], "+", 
                    RowBox[{"0.026766959463883442`", " ", "\[ImaginaryI]"}]}],
                     HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.3963168554380733`", "\[VeryThinSpace]"}], "-", 
                    
                    RowBox[{"0.2649976532631728`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.40763709931041986`"}], "+", 
                    RowBox[{"0.03341785516723594`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.1279472222295691`", "\[VeryThinSpace]"}], "-", 
                    
                    RowBox[{"0.2382383412760382`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.146665341268058`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.07332779695537425`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
                    "\",\""}], "]"}]& )], ")"}], TraditionalForm]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Eigenvectors[{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, \
0.0793739, 0.276733, 0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, \
0.711963, 0.048933, 0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, \
0.110192}, {0.282256, 0.478514, 0.865635, 0.963321, 0.734991, 0.011674, \
0.25876, 0.457974, 0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, \
0.441857, 0.491286, 0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, \
{0.172864, 0.279998, 0.844319, 0.487753, 0.112325, 0.127338, 0.322102, \
0.487374, 0.366705, 0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, \
0.687479, 0.879299, 0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, \
0.52733, 0.0729165, 0.467166, 0.540467, 0.315666, 0.232535, 0.105879, \
0.258095, 0.356955}, {0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, \
0.593835, 0.472656, 0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, \
0.147903, 0.549813, 0.790721, 0.305289, 0.704266, 0.521628, 0.253539, \
0.918632}, {0.443178, 0.62015, 0.972902, 0.253033, 0.866567, 0.311107, \
0.667899, 0.00804849, 0.0594117, 0.392125}}]"}], 
       XMLElement[
       "moutput", {}, {
        "{{-0.277126, -0.243119, -0.381667, -0.296427, -0.301092, -0.289212, \
-0.265567, -0.341138, -0.398875, -0.332043}, {0.632062, 0.0884337, -0.247412, \
-0.399382, -0.185252, -0.364119, 0.350939, -0.0459743, 0.277589, -0.0522394}, \
{0.150858 + 0.160095 I, -0.242254 - 0.140695 I, -0.00101929 - 0.388332 I, \
0.430751 - 0.123419 I, -0.158566 + 0.0117702 I, 0.101109 + 0.161782 I, \
0.19297 - 0.0251907 I, -0.0454627 + 0.335457 I, 0.144597 + 0.274269 I, \
-0.459639 + 0. I}, {0.150858 - 0.160095 I, -0.242254 + 0.140695 I, \
-0.00101929 + 0.388332 I, 0.430751 + 0.123419 I, -0.158566 - 0.0117702 I, \
0.101109 - 0.161782 I, 0.19297 + 0.0251907 I, -0.0454627 - 0.335457 I, \
0.144597 - 0.274269 I, -0.459639 + 0. I}, {0.216163 + 0.0991969 I, 0.328019 + \
0.120459 I, 0.0236792 + 0.243665 I, -0.0411044 - 0.371723 I, -0.0463014 - \
0.102738 I, 0.0690489 + 0.162071 I, -0.335393 - 0.123717 I, 0.404611 + \
0.186872 I, -0.475267 + 0. I, 0.0188385 - 0.158536 I}, {0.216163 - 0.0991969 \
I, 0.328019 - 0.120459 I, 0.0236792 - 0.243665 I, -0.0411044 + 0.371723 I, \
-0.0463014 + 0.102738 I, 0.0690489 - 0.162071 I, -0.335393 + 0.123717 I, \
0.404611 - 0.186872 I, -0.475267 + 0. I, 0.0188385 + 0.158536 I}, {0.126752, \
-0.392119, -0.0657326, -0.374669, 0.76367, -0.0560029, -0.0707818, 0.0889271, \
0.0743328, -0.284091}, {-0.0596932, -0.180201, 0.325833, -0.344338, 0.416792, \
-0.505013, -0.400523, 0.238332, -0.0461268, 0.301871}, {-0.014821 + 0.226854 \
I, -0.536686 + 0. I, -0.133054 + 0.0244866 I, 0.36924 + 0.0655848 I, \
0.0131988 + 0.0465759 I, -0.0607663 + 0.026767 I, 0.396317 - 0.264998 I, \
-0.407637 + 0.0334179 I, 0.127947 - 0.238238 I, 0.146665 + 0.0733278 I}, \
{-0.014821 - 0.226854 I, -0.536686 + 0. I, -0.133054 - 0.0244866 I, 0.36924 - \
0.0655848 I, 0.0131988 - 0.0465759 I, -0.0607663 - 0.026767 I, 0.396317 + \
0.264998 I, -0.407637 - 0.0334179 I, 0.127947 + 0.238238 I, 0.146665 - \
0.0733278 I}}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   RowBox[{
                    SubscriptBox["v", "10"], "\[TildeTilde]", 
                    FormBox[
                    RowBox[{"(", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.014820959982107064`"}], "-", 
                    RowBox[{"0.22685398026147197`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.5366857384142396`"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.13305357673033374`"}], "-", 
                    RowBox[{"0.024486590742821425`", " ", "\[ImaginaryI]"}]}],
                     HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.36923979168116594`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.06558478821768268`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.013198837962460838`", "\[VeryThinSpace]"}], 
                    "-", 
                    RowBox[{"0.04657592664761093`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.060766322789324305`"}], "-", 
                    RowBox[{"0.026766959463883442`", " ", "\[ImaginaryI]"}]}],
                     HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.3963168554380733`", "\[VeryThinSpace]"}], "+", 
                    
                    RowBox[{"0.2649976532631728`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "0.40763709931041986`"}], "-", 
                    RowBox[{"0.03341785516723594`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.1279472222295691`", "\[VeryThinSpace]"}], "+", 
                    
                    RowBox[{"0.2382383412760382`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{
                    RowBox[{"0.146665341268058`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.07332779695537425`", " ", "\[ImaginaryI]"}]}], 
                    HoldForm]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
                    "\",\""}], "]"}]& )], ")"}], TraditionalForm]}], 
                   BaselinePosition -> Baseline, ImageSize -> 500]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AllowScriptLevelChange -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], TraditionalForm], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
]}], Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "5", "datatypes" -> 
    "RandomNumber", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "1.613", "parsetiming" -> "0.213", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSPa4931a0agh6i7d2c6gb90000531id52b49e39g1b", "host" -> 
    "http://www2.wolframalpha.com", "server" -> "10", "related" -> 
    "http://www2.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa4941a0agh6i7d2c6gb9000069276c1a8dc583gf&s=10", "version" -> "2.5"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2012, 2, 27, 23, 59, 17.897248`8.005361240626018}, "Line" -> 
    45, "SessionID" -> 23195516407179637594}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Output", 
    "{{0.690864, 0.648775, 0.24052, 0.111853, 0.32876, 0.0793739, 0.276733, \
0.0107537, 0.863763, 0.465922}, {0.194702, 0.330275, 0.711963, 0.048933, \
0.620993, 0.294574, 0.936689, 0.0240498, 0.106287, 0.110192}, {0.282256, \
0.478514, 0.865635, 0.963321, 0.734991, 0.011674, 0.25876, 0.457974, \
0.778721, 0.132651}, {0.372332, 0.0290879, 0.409902, 0.441857, 0.491286, \
0.953506, 0.0506037, 0.587224, 0.396939, 0.182753}, {0.172864, 0.279998, \
0.844319, 0.487753, 0.112325, 0.127338, 0.322102, 0.487374, 0.366705, \
0.669642}, {0.103305, 0.489451, 0.192984, 0.361041, 0.687479, 0.879299, \
0.166681, 0.0100964, 0.53184, 0.524541}, {0.922654, 0.52733, 0.0729165, \
0.467166, 0.540467, 0.315666, 0.232535, 0.105879, 0.258095, 0.356955}, \
{0.156356, 0.307681, 0.6468, 0.0357557, 0.48196, 0.593835, 0.472656, \
0.134049, 0.70733, 0.89587}, {0.75719, 0.661458, 0.147903, 0.549813, \
0.790721, 0.305289, 0.704266, 0.521628, 0.253539, 0.918632}, {0.443178, \
0.62015, 0.972902, 0.253033, 0.866567, 0.311107, 0.667899, 0.00804849, \
0.0594117, 0.392125}}"}, Typeset`open$$ = False, Typeset`newq$$ = 
   "random 10x10 matrix"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{772., {132., 16.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.690864`", "0.648775`", "0.24052`", "0.111853`", "0.32876`", 
      "0.0793739`", "0.276733`", "0.0107537`", "0.863763`", "0.465922`"},
     {"0.194702`", "0.330275`", "0.711963`", "0.048933`", "0.620993`", 
      "0.294574`", "0.936689`", "0.0240498`", "0.106287`", "0.110192`"},
     {"0.282256`", "0.478514`", "0.865635`", "0.963321`", "0.734991`", 
      "0.011674`", "0.25876`", "0.457974`", "0.778721`", "0.132651`"},
     {"0.372332`", "0.0290879`", "0.409902`", "0.441857`", "0.491286`", 
      "0.953506`", "0.0506037`", "0.587224`", "0.396939`", "0.182753`"},
     {"0.172864`", "0.279998`", "0.844319`", "0.487753`", "0.112325`", 
      "0.127338`", "0.322102`", "0.487374`", "0.366705`", "0.669642`"},
     {"0.103305`", "0.489451`", "0.192984`", "0.361041`", "0.687479`", 
      "0.879299`", "0.166681`", "0.0100964`", "0.53184`", "0.524541`"},
     {"0.922654`", "0.52733`", "0.0729165`", "0.467166`", "0.540467`", 
      "0.315666`", "0.232535`", "0.105879`", "0.258095`", "0.356955`"},
     {"0.156356`", "0.307681`", "0.6468`", "0.0357557`", "0.48196`", 
      "0.593835`", "0.472656`", "0.134049`", "0.70733`", "0.89587`"},
     {"0.75719`", "0.661458`", "0.147903`", "0.549813`", "0.790721`", 
      "0.305289`", "0.704266`", "0.521628`", "0.253539`", "0.918632`"},
     {"0.443178`", "0.62015`", "0.972902`", "0.253033`", "0.866567`", 
      "0.311107`", "0.667899`", "0.00804849`", "0.0594117`", "0.392125`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5393471580363417`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{
  3.444354288639892*^9, {3.507957491227314*^9, 3.50795749184754*^9}}],

Cell[TextData[{
 "Compute the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["CO", "2"], TraditionalForm]]],
 " production per capita for Australia. ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.507896120753077*^9, 
   3.5078961692575493`*^9}, {3.5078962270356503`*^9, 
   3.5078962311081142`*^9}, {3.507896273351543*^9, 3.507896338959052*^9}, {
   3.507896406391966*^9, 3.507896412125564*^9}, {3.507896449483135*^9, 
   3.507896513194379*^9}, {3.507896545864436*^9, 3.507896591441513*^9}, {
   3.507896727100626*^9, 3.507896764565721*^9}, {3.5078968330724993`*^9, 
   3.507896862124426*^9}, {3.507896893079068*^9, 3.507896895347973*^9}, {
   3.507896938779286*^9, 3.50789693909317*^9}, {3.507897524175043*^9, 
   3.5078975493065863`*^9}, {3.5078977070341673`*^9, 3.507897728734441*^9}, 
   3.507897772148779*^9, {3.539347208416341*^9, 3.5393472140306168`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "CO2 production per capita Australia", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Australia\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {CountryData, "Australia"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"greenhouse gas emissions\"", 
                    SubscriptBox["CO", "2"]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   RowBox[{
                    TagBox["384.2", 
                    Global`TagBoxWrapper["StringBoxes" -> "384.2"]], " ", 
                    TagBox[
                    StyleBox[
                    "\"million\"", ShowStringCharacters -> False, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False], 1000000& , AutoDelete -> True]}], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"tCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"year\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                SyntaxForm -> Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", 
                  "\"metric tons of carbon dioxide equivalent per year\"", 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "CO_2 greenhouse gas emissions history", "scanner" -> 
     "Data", "id" -> "History:GreenhouseGasEmissions:CountryData", "position" -> 
     "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GraphicsComplexBox[CompressedData["
1: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
G1/BPT4ptWDy3//2uFLDp0PoSeDYSeogeiKZrB3sgZ5EW2ilGqEnP7UPXFZD
TzKoxPIw9GTkb8Kep7inP04eeVCOe5qb9vvtfdzPTitdg+PEeTDa8ytmDPfz
IfraWC7u52efSxT90BOjt7Z7LuN+thst8RZDT267334Z2YL7rth/vyJ6MqFX
MukZ7t/7/6yc9QD37u3ER8kvce+uWNgXYY2eOMWMqd7+b++qOHeKcO/qSfdP
MEZPtim5HuCgJ48sdsmWoCdBi/dPqEBP3i6oHT8PPRkil+bV4D61fkY/MUdP
zokmtGSgJ5+7xfPCjHnw88/EwnT05GJqXl0V7tH0CzGLfuHe1M981v4H9yY/
+53eXdyH84+FnVpdgu9D5VtNLHqyMmp99Qr0RHc3Y5OAnpRqccte4L4rfbAs
zAI9ydN5rXEV99vxCtHP97jXfKI6lMPQk+Mq5+Wc0ZORE4necujJoSSVlgD0
ZKi+1WMhelL4JGJuBHpiFbOkax7m43V6wqQY9GTo9yLjh9Fc2O+vNuKHnuwR
FgTroCfK33cq1eAeCsgbp173B39eY1NfLHqyty9YxEFPajwE9g24HzrD45Zf
wf2QmDJKa6In8U73rbKbaTAvi/rYgXmWimW2paMnL0LELjzGfm+YXnJqNnqS
OV+pMg096TELrFw3k4IP1qWm9uhJnMNzDzf05EjKxtwI9GS75yMnf/Qk040f
9hn7uJLqhH0S6InDvYg/gehJ1cscejN64jrJNzwXPcl4vftD6zAFj3+NUQ3Y
z2xPJNXooyeLS2PvVKInGb0VNedMeXAm0iR9G3rypzcyZt4M9LLlQOt29MRl
lv6Ek+jJ+Ni/uenoyfit0aFX8XlFV7VOKEBPil3shQXoSbxHC7FCT+x3Gj9y
b6FBZjCuIRQ9oR5N2qaPnuTPLmrSRk+0FxbKifDzRrX1973B/Jd5udsVYZ/I
zrpzxxY/3zKjzqd8PE+G06/JNOD7dTsya80A3hdxfel7X+P7vJ/e/HUufh7q
w89NTuj75Nwrh5Wxf/1M0xz9gM8rZUS+cwX2o0kXxksP4PMokdklZor7uGqM
eWiG70+tvzH81SgFMnK1V+zw+Te9nyGljvtK690p/d/4/+/SqtlpakhBWNGG
9Nl4Hu+PVH2xLRZAUd7tfbfw889w+eG5ET383++TK3iXri5Q2PP/v0/739f/
B34d7LQ=
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl03e8TnUcwPF7jcyyswrX3nvL3hG5ZkZyjQpZRaHsskchbVpWk0rZI2WU
0UKJBkWZDUpG3t/X/eP9+nx/v/M8557nnHOTUoYmD0mTkJCQyL2JqR2QmDpX
NffX3NzFPutM2o6F5m1cobH1fTqdNZynhr2W2pPHWMlxytivopVpQQ8eZQXH
KO14Jd1LRvMdLDBn005sNffSy9oorlNzald2mdNqK6aZP+Ac1a2b6zw28g+3
2euuY1nOz5SyV1ErUJ5ylI1rjnvCVN7nLNV8tpnOZQMXqRf3SftpDrqwI+6t
tmCMeRk/UdK6dNxfnuA9zlDVflPtxmiW8iMl7JeK79GErjzC6/xAccdLaC7t
xh5zb81AW+Zbb+E/Glr308dZzWmq2GusXXiY1zhKMfvFo3G/6cwoXuUIRR0v
GuekEyN5he9JcixJi1CYQtzKLTRgDuu5QF2f7aifcndi6gvZnIeMfTQLd/Ky
9eE4p7mg9mUKqzgV75X9+prMgyzhu/j79gto/nj2dGAEi/k2rs3xfPo5N5jb
8FScX2+Ka2OzdU+9FNevKbqTNPGuM9n8Lr9TybqezmYdf1MnfoMO5yUOxf2w
l1dvJg+54xmSM343k3iH36jos3X1M9Kbb2eWOUVvJJm11n9R29xeP+F/mlkP
0xc5GM8g3lG9h4m8zUkq2K+j7RjKCxygoP3smi3OzUw+4k9qxf+pbucaTa2H
xLk1c1wHz1t312+0QNxTfZJN/Et9e711Am9xgvL2amlbHuA5vo5nGL9Xs5KF
zGQiIxni+VGTNgzmWb4in++lj/eL8bzJr5SzX0N3k87cmhlxfu3Ah+Ye+kec
N+67ZtfOfGy+ShPzIH2GL8lrnU57MY43+IWy9qtrawayiC/i+dtPG+8S1WjF
/TzN/ng3HL8OB36W8g==
                    "]]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    LineBox[CompressedData["
1:eJwl1Hl8z3UcwPENY4ebciUtltqmY0MKOeY2kpI2DGNCskoipXJ0uUK5uqP7
1OnoLlJR5KxEB4VCqHTo8Hw/+uP5e30+n+/v9933+/t890svLu09OjEhIaHE
S/QELxt0PiPoQi5lKMuJjn+mCxhJV5qSaf17fYabGEA5alnfqAu5gvbm/+j7
9DGuSjfj5npY++kyvUgrMi3+hpbjY+NmZBn/oM9yM0UkUdv6Jl3EKLrHeSlP
BZJJIZU0KlKJOj63We/lSvI5l2zre/Q5bmEgra39oW8xh8rUtbZFC/U+vVBT
GcRo8zz9V1fRI85tfkSXM50WVKEq9RzbqvdTSk/Oo4n1vfo8kxhENU6yvk0f
4Co6mP+nq+M64tzmv+gKehtXopgZ5t00ibXG53Om8T59gckMpjo1qBnPRux/
7Cn1vfdzfZCr6RXXae1XXclMWnKWtR91KVPobF6GD42LucD4T+2vb+vFWpkh
zI091PKsi/3lZOMv9CGuieeEVrGHsQ80cPxLfZgxcc+xZ5xt/Sd9kakMie+a
U6xv10fiHozTGMy15h3jH4IiPohri+/J+Dd9nVlx/bEH8X3EtcXfj3OSHrz3
K13MWC6hDacGx3boEq6jD21pSKOo4zv1UcZxKe04x/p+fYlbGRrntPaXvsPd
5JtXYCCfmF+mNciIc+vX+hjj6Ut7TqMxGY5/o49zfXyWPHKsH9CXuY0STo/P
Wf9Wn2ACneJ3hDVxzVqNoRTE86BH9Q3uimeVXGsH9RVuZxhnkEkW2TSJZzOu
z3u/0ye5gcLYe2u/65vMjj2jqbWf9VXuoIt5WT6K+9XqXB7ftx7TAfpu7I9W
4R7jHprMp/EMx70a79KnuJF+ca/xXMWexDU7vlufZiL96Uwz64f0Ne5keOyj
tb/1PebR0zyF9cYFWjPx/9/jHPPjJ1KWHw==
                    "]]}}}], {{{}, {
                   Hue[0.67, 0.6, 0.6], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   
                   PointBox[{{2.8401408*^9, 279.763727567268}, {2.8716768*^9, 
                    281.46772024514604`}, {2.9032128*^9, 
                    286.41916083630196`}, {2.9348352*^9, 291.150963679364}, {
                    2.9663712*^9, 296.000456649589}, {2.9979072*^9, 
                    306.856389361621}, {3.0294432*^9, 314.41974940755597`}, {
                    3.0610656*^9, 322.280798506826}, {3.0926016*^9, 
                    335.85079351156196`}, {3.1241376*^9, 
                    344.68693250007595`}, {3.1556736*^9, 
                    352.41500181787893`}, {3.187296*^9, 
                    358.43358366822395`}, {3.218832*^9, 362.468539860386}, {
                    3.250368*^9, 372.119417716531}, {3.281904*^9, 
                    381.44569412707995`}, {3.3135264*^9, 
                    384.161005461662}}]}, {}}}}, {GridLines -> Dynamic[
                  Join[{{{2840140800, 
                    GrayLevel[0.9]}, {2903212800, 
                    GrayLevel[0.9]}, {2966371200, 
                    GrayLevel[0.9]}, {3029443200, 
                    GrayLevel[0.9]}, {3092601600, 
                    GrayLevel[0.9]}, {3155673600, 
                    GrayLevel[0.9]}, {3218832000, 
                    GrayLevel[0.9]}, {3281904000, 
                    GrayLevel[0.9]}, {3345062400, 
                    GrayLevel[0.9]}}, {225, 250, 275, 300, 325, 350, 375, 
                    400}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], Epilog -> {{
                   CapForm[None], {
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}]}, {
                    AbsoluteThickness[1], 
                    GrayLevel[0], 
                    LineBox[{{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}, {
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]]}}]}}, 
                  DynamicBox[
                   Typeset`ToBoxes[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[
                    1, {16, 2}, 3, {{5.9996352147680865`, 6.066253213471858, 
                    6.132871212175628, 6.199671725944341, 6.266289724648112, 
                    6.332907723351882, 6.399525722055653, 6.466326235824366, 
                    6.532944234528136, 6.599562233231907, 6.6661802319356775`,
                     6.73298074570439, 6.7995987444081605`, 6.866216743111932,
                     6.932834741815703, 6.999635255584415}, {
                    1.8481373093231386`, 1.859393995349538, 
                    1.8921035326830078`, 1.9233621288229295`, 
                    1.9553981935676634`, 2.0271131883851514`, 
                    2.077077234854955, 2.129007834497429, 2.218652100656097, 
                    2.2770242072799296`, 2.32807633387069, 
                    2.3678354754990956`, 2.3944906575166645`, 
                    2.458244981884442, 2.519854968072703, 
                    2.53779249066545}}, {{5.9996352147680865`, 
                    1.8481373093231386`}, {6.066253213471858, 
                    1.859393995349538}, {6.132871212175628, 
                    1.8921035326830078`}, {6.199671725944341, 
                    1.9233621288229295`}, {6.266289724648112, 
                    1.9553981935676634`}, {6.332907723351882, 
                    2.0271131883851514`}, {6.399525722055653, 
                    2.077077234854955}, {6.466326235824366, 
                    2.129007834497429}, {6.532944234528136, 
                    2.218652100656097}, {6.599562233231907, 
                    2.2770242072799296`}, {6.6661802319356775`, 
                    2.32807633387069}, {6.73298074570439, 
                    2.3678354754990956`}, {6.7995987444081605`, 
                    2.3944906575166645`}, {6.866216743111932, 
                    2.458244981884442}, {6.932834741815703, 
                    2.519854968072703}, {6.999635255584415, 
                    2.53779249066545}}, {{2.8401408*^9, 279.763727567268}, {
                    2.8716768*^9, 281.46772024514604`}, {2.9032128*^9, 
                    286.41916083630196`}, {2.9348352*^9, 291.150963679364}, {
                    2.9663712*^9, 296.000456649589}, {2.9979072*^9, 
                    306.856389361621}, {3.0294432*^9, 314.41974940755597`}, {
                    3.0610656*^9, 322.280798506826}, {3.0926016*^9, 
                    335.85079351156196`}, {3.1241376*^9, 
                    344.68693250007595`}, {3.1556736*^9, 
                    352.41500181787893`}, {3.187296*^9, 
                    358.43358366822395`}, {3.218832*^9, 362.468539860386}, {
                    3.250368*^9, 372.119417716531}, {3.281904*^9, 
                    381.44569412707995`}, {3.3135264*^9, 384.161005461662}}, 
                    Automatic, 
                    Hold[
                    
                    Nearest[{{5.9996352147680865`, 1.8481373093231386`}, {
                    6.066253213471858, 1.859393995349538}, {6.132871212175628,
                     1.8921035326830078`}, {6.199671725944341, 
                    1.9233621288229295`}, {6.266289724648112, 
                    1.9553981935676634`}, {6.332907723351882, 
                    2.0271131883851514`}, {6.399525722055653, 
                    2.077077234854955}, {6.466326235824366, 
                    2.129007834497429}, {6.532944234528136, 
                    2.218652100656097}, {6.599562233231907, 
                    2.2770242072799296`}, {6.6661802319356775`, 
                    2.32807633387069}, {6.73298074570439, 
                    2.3678354754990956`}, {6.7995987444081605`, 
                    2.3944906575166645`}, {6.866216743111932, 
                    2.458244981884442}, {6.932834741815703, 
                    2.519854968072703}, {6.999635255584415, 
                    2.53779249066545}} -> {{2.8401408*^9, 279.763727567268}, {
                    2.8716768*^9, 281.46772024514604`}, {2.9032128*^9, 
                    286.41916083630196`}, {2.9348352*^9, 291.150963679364}, {
                    2.9663712*^9, 296.000456649589}, {2.9979072*^9, 
                    306.856389361621}, {3.0294432*^9, 314.41974940755597`}, {
                    3.0610656*^9, 322.280798506826}, {3.0926016*^9, 
                    335.85079351156196`}, {3.1241376*^9, 
                    344.68693250007595`}, {3.1556736*^9, 
                    352.41500181787893`}, {3.187296*^9, 
                    358.43358366822395`}, {3.218832*^9, 362.468539860386}, {
                    3.250368*^9, 372.119417716531}, {3.281904*^9, 
                    381.44569412707995`}, {3.3135264*^9, 
                    384.161005461662}}]]][#/{4.7338558067813873`*^8, 
                    151.37605098710367`}]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (DateString[#, {"Year"}]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     0]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                     TraditionalForm, Graphics]]}, FrameTicks -> {{{{280., 
                    FormBox[
                    TagBox["280", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {300., 
                    FormBox[
                    TagBox["300", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {320., 
                    FormBox[
                    TagBox["320", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {340., 
                    FormBox[
                    TagBox["340", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {360., 
                    FormBox[
                    TagBox["360", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {380., 
                    FormBox[
                    TagBox["380", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {275., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {285., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {290., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {295., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {305., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {310., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {315., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {325., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {330., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {335., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {345., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {350., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {355., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {365., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {370., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {375., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {385., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {390., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {395., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{260., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {280., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {300., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {320., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {340., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {360., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {380., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {400., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {265., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {270., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {275., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {285., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {290., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {295., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {305., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {310., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {315., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {325., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {330., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {335., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {345., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {350., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {355., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {365., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {370., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {375., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {385., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {390., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {395., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {255., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {250., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{
                    NCache[2840140800, 2.8401408*^9], 
                    FormBox["\"1990\"", TraditionalForm]}, {
                    NCache[2903212800, 2.9032128*^9], 
                    FormBox["\"1992\"", TraditionalForm]}, {
                    NCache[2966371200, 2.9663712*^9], 
                    FormBox["\"1994\"", TraditionalForm]}, {
                    NCache[3029443200, 3.0294432*^9], 
                    FormBox["\"1996\"", TraditionalForm]}, {
                    NCache[3092601600, 3.0926016*^9], 
                    FormBox["\"1998\"", TraditionalForm]}, {
                    NCache[3155673600, 3.1556736*^9], 
                    FormBox["\"2000\"", TraditionalForm]}, {
                    NCache[3218832000, 3.218832*^9], 
                    FormBox["\"2002\"", TraditionalForm]}, {
                    NCache[3281904000, 3.281904*^9], 
                    FormBox["\"2004\"", TraditionalForm]}, {
                    NCache[3345062400, 3.3450624*^9], 
                    FormBox["\"2006\"", TraditionalForm]}}, {{
                    NCache[2840140800, 2.8401408*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[2903212800, 2.9032128*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[2966371200, 2.9663712*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3029443200, 3.0294432*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3092601600, 3.0926016*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3155673600, 3.1556736*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3218832000, 3.218832*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3281904000, 3.281904*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3345062400, 3.3450624*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}}}}, ImagePadding -> All, GridLines -> 
                NCache[{{{2840140800, 
                    GrayLevel[0.9]}, {2903212800, 
                    GrayLevel[0.9]}, {2966371200, 
                    GrayLevel[0.9]}, {3029443200, 
                    GrayLevel[0.9]}, {3092601600, 
                    GrayLevel[0.9]}, {3155673600, 
                    GrayLevel[0.9]}, {3218832000, 
                    GrayLevel[0.9]}, {3281904000, 
                    GrayLevel[0.9]}, {3345062400, 
                    GrayLevel[0.9]}}, Automatic}, {{{2.8401408*^9, 
                    GrayLevel[0.9]}, {2.9032128*^9, 
                    GrayLevel[0.9]}, {2.9663712*^9, 
                    GrayLevel[0.9]}, {3.0294432*^9, 
                    GrayLevel[0.9]}, {3.0926016*^9, 
                    GrayLevel[0.9]}, {3.1556736*^9, 
                    GrayLevel[0.9]}, {3.218832*^9, 
                    GrayLevel[0.9]}, {3.281904*^9, 
                    GrayLevel[0.9]}, {3.3450624*^9, 
                    GrayLevel[0.9]}}, Automatic}], PlotRangePadding -> None, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                AxesOrigin -> {2.9*^9, 250.}, BaseStyle -> 
                AbsoluteThickness[1], Epilog -> {
                  CapForm[None], {
                   GrayLevel[1], 
                   PolygonBox[{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}]}, {
                   AbsoluteThickness[1], 
                   GrayLevel[0], 
                   LineBox[{{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}, {
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]]}}]}}, Frame -> True, FrameTicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10], GridLines -> 
                NCache[{{{2840140800, 
                    GrayLevel[0.9]}, {2997907200, 
                    GrayLevel[0.9]}, {3155673600, 
                    GrayLevel[0.9]}, {3313526400, 
                    GrayLevel[0.9]}}, Automatic}, {{{2.8401408*^9, 
                    GrayLevel[0.9]}, {2.9979072*^9, 
                    GrayLevel[0.9]}, {3.1556736*^9, 
                    GrayLevel[0.9]}, {3.3135264*^9, 
                    GrayLevel[0.9]}}, Automatic}], GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> 250, 
                LabelStyle -> {FontFamily -> "Verdana", FontSize -> 10}, 
                Method -> {"AxesInFront" -> True}, 
                PlotRange -> {{2.8401408096609306`*^9, 
                 3.3135263903390694`*^9}, {248.4445451264305, 
                 399.8205961135342}}, PlotRangePadding -> None, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                TicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10]}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1990\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2005\"", Identity], TraditionalForm]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}, {
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"in \"", "\"millions\"", "\" of \"", 
                    "\"metric tons of carbon dioxide equivalent per year\""}, 
                    "Row", DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Right", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Center", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "computabledata,formatteddata,timeseriesdata"}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Unit conversions", "scanner" -> "Unit", "id" -> 
     "UnitConversion", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "5"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["0.3842", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.3842"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"GtCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"year\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                SyntaxForm -> Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", 
                  "\"metric gigatons of carbon dioxide equivalent per year\"",
                   "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["0.3842", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.3842"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"PgCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"year\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                SyntaxForm -> Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", 
                  "\"petagrams of carbon dioxide equivalent per year\"", 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox[
                    RowBox[{"3.842", " ", 
                    SuperscriptBox["10", "-4"]}], 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"3.842", "\[Times]", 
                    SuperscriptBox["10", "-4"]}]], SyntaxForm -> CenterDot], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"TtCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"year\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                SyntaxForm -> Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", 
                  "\"metric teratons of carbon dioxide equivalent per year\"",
                   "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["12.18", 
                    Global`TagBoxWrapper["StringBoxes" -> "12.18"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"tCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", 
                  "\"metric tons of carbon dioxide equivalent per second\"", 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["384.2", 
                    Global`TagBoxWrapper["StringBoxes" -> "384.2"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"MtCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"year\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                SyntaxForm -> Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", 
                  "\"metric megatons of carbon dioxide equivalent per year\"",
                   "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "UnitConversion__More"}, {}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Greenhouse gases", "scanner" -> "Data", "id" -> 
     "GreenhouseGases:CountryData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TemplateBox[{
                    SubscriptBox["CO", "2"]}, "Row", DisplayFunction -> (#& ),
                     InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\",\""}], "]"}]& )], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["384.2", 
                    Global`TagBoxWrapper["StringBoxes" -> "384.2"]], " ", 
                    TagBox[
                    StyleBox[
                    "\"million\"", ShowStringCharacters -> False, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"tCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"year\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"metric tons of carbon dioxide equivalent per year\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   
                   TemplateBox[{"\"HFCs\""}, "Row", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\",\""}], "]"}]& )], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["4.252", 
                    Global`TagBoxWrapper["StringBoxes" -> "4.252"]], " ", 
                    TagBox[
                    StyleBox[
                    "\"million\"", ShowStringCharacters -> False, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"tCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"year\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"metric tons of carbon dioxide equivalent per year\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TemplateBox[{
                    SubscriptBox["CH", "4"]}, "Row", DisplayFunction -> (#& ),
                     InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\",\""}], "]"}]& )], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["111.1", 
                    Global`TagBoxWrapper["StringBoxes" -> "111.1"]], " ", 
                    TagBox[
                    StyleBox[
                    "\"million\"", ShowStringCharacters -> False, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"tCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"year\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"metric tons of carbon dioxide equivalent per year\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TemplateBox[{
                    TemplateBox[{
                    SubscriptBox["\"N\"", "2"], "\"O\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )]}, "Row", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\",\""}], "]"}]& )], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["23.8", 
                    Global`TagBoxWrapper["StringBoxes" -> "23.8"]], " ", 
                    TagBox[
                    StyleBox[
                    "\"million\"", ShowStringCharacters -> False, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"tCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"year\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"metric tons of carbon dioxide equivalent per year\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   
                   TemplateBox[{"\"PFCs\""}, "Row", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\",\""}], "]"}]& )], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["1.567", 
                    Global`TagBoxWrapper["StringBoxes" -> "1.567"]], " ", 
                    TagBox[
                    StyleBox[
                    "\"million\"", ShowStringCharacters -> False, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"tCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"year\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"metric tons of carbon dioxide equivalent per year\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TemplateBox[{
                    SubscriptBox["SF", "6"]}, "Row", DisplayFunction -> (#& ),
                     InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\",\""}], "]"}]& )], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["521\[ThinSpace]020", 
                    Global`TagBoxWrapper["StringBoxes" -> "521020"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"tCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"year\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"metric tons of carbon dioxide equivalent per year\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   
                   TemplateBox[{"\"total\""}, "Row", DisplayFunction -> (#& ),
                     InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\",\""}], "]"}]& )], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["525.4", 
                    Global`TagBoxWrapper["StringBoxes" -> "525.4"]], " ", 
                    TagBox[
                    StyleBox[
                    "\"million\"", ShowStringCharacters -> False, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\"tCO\"", "2"], "\[InvisibleSpace]", 
                    "\"e\""}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"year\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"metric tons of carbon dioxide equivalent per year\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\" \"", 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{"2005", "\" estimate\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}, "Row", 
                  DisplayFunction -> (
                   RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                  InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata,numberdata,\
quantitydata"}]}]}], Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "CO2 production Australia"}, {
        XMLElement["alternative", {}, {"per capita"}], 
        XMLElement["alternative", {}, {"CO2"}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}]}]}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "5", "datatypes" -> 
    "Country", "timedout" -> "", "timedoutpods" -> "", "timing" -> "4.082", 
    "parsetiming" -> "0.231", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa17861a0af74a703423ce0000250e27hhf6731eg0", "host" -> 
    "http://www2.wolframalpha.com", "server" -> "15", "related" -> "", 
    "version" -> "2.5"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2012, 2, 27, 23, 59, 59.492906`8.52704015612832}, "Line" -> 46,
     "SessionID" -> 23195516407179637594}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "CO2 production per capita Australia"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{219., {46., 16.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   FrameBox[
    StyleBox[
     FormBox[
      StyleBox[
       RowBox[{
        RowBox[{"384.2", " ", 
         TagBox[
          StyleBox["\<\"million\"\>",
           StripOnInput->False,
           ShowStringCharacters->False,
           LineIndent->0,
           LinebreakAdjustments->{1, 100, 1, 0, 100},
           FontFamily->"Helvetica",
           FontSize->Smaller],
          1000000& ,
          AutoDelete->True]}], "\[InvisibleSpace]", "\[InvisibleSpace]", 
        "\[ThickSpace]", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{
          RowBox[{
           SubscriptBox["\<\"tCO\"\>", "2"], 
           "\[InvisibleSpace]", "\<\"e\"\>"}], 
          "\[InvisibleSpace]", "\<\"/\"\>", 
          "\[InvisibleSpace]", "\<\"year\"\>"}],
         FontFamily->"Helvetica",
         FontSize->Smaller], " ", 
        StyleBox[
         RowBox[{"\<\"(\"\>", 
          "\[NoBreak]", "\<\"metric tons of carbon dioxide equivalent per \
year\"\>", "\[NoBreak]", "\<\")\"\>"}],
         StripOnInput->False,
         LineIndent->0,
         LinebreakAdjustments->{1, 100, 1, 0, 100},
         LineColor->GrayLevel[0.6],
         FrontFaceColor->GrayLevel[0.6],
         BackFaceColor->GrayLevel[0.6],
         GraphicsColor->GrayLevel[0.6],
         FontFamily->"Helvetica",
         FontSize->Smaller,
         FontColor->GrayLevel[0.6]]}],
       ZeroWidthTimes->False,
       LineIndent->0,
       LinebreakAdjustments->{1, 100, 1, 0, 100}],
      TraditionalForm], "Output",
     ScriptLevel->0,
     FontFamily->"Times",
     FontSize->14,
     Background->None],
    BaseStyle->{Plain},
    FrameMargins->10,
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   WolframAlphaResult[
   "CO2 production per capita Australia", {{"Result", 1}, "Content"}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.539347203672762*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Getting Help", "Section",
 CellChangeTimes->{
  3.444215112539296*^9, {3.507957447401351*^9, 3.5079574494748993`*^9}}],

Cell[TextData[{
 "The ",
 ButtonBox["Documentation Center",
  BaseStyle->"GenericLink",
  ButtonFunction:>FrontEndTokenExecute["OpenHelpLink"]],
 ", under the ",
 StyleBox["Help", "Menu"],
 " menu, gives you access to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s on-line documentation. An overview of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is presented in the ",
 ButtonBox["First Five Minutes with ",
  BaseStyle->"GenericLink",
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`NotebookOpen[
      Documentation`ResolveLink[
      "paclet:tutorial/FirstFiveMinutesWithMathematica"]]}]& )],
 StyleBox[ButtonBox["Mathematica",
  BaseStyle->"GenericLink",
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`NotebookOpen[
      Documentation`ResolveLink[
      "paclet:tutorial/FirstFiveMinutesWithMathematica"]]}]& )],
  FontSlant->"Italic"],
 " section.  "
}], "Text",
 CellChangeTimes->{{3.413498628959201*^9, 3.413498629334909*^9}, 
   3.4134992569814577`*^9, {3.4134994674755917`*^9, 3.4134995332546663`*^9}, {
   3.444215271187428*^9, 3.444215273763298*^9}, {3.4442153318984737`*^9, 
   3.444215332553709*^9}}],

Cell[TextData[{
 "Long function names can be difficult to enter and remember,  ",
 StyleBox[ButtonBox["Complete Selection",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/menuitem/CompleteSelection"], "Text"],
 " \[ControlKey]\[LeftModified]k\[RightModified] and ",
 StyleBox[ButtonBox["Make Template",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/menuitem/MakeTemplate"], "Text"],
 " \[ControlKey]\[LeftModified]K\[RightModified] under the ",
 Cell[TextData[ButtonBox["Edit Menu",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/EditMenu"]], "Text"],
 " increases the speed, correctness, and convenience of Notebooks."
}], "Text",
 CellChangeTimes->{{3.41349984042591*^9, 3.413499868298634*^9}, {
  3.41350098441595*^9, 3.413501015617115*^9}, {3.443923769863763*^9, 
  3.4439238166012163`*^9}, {3.444192232288629*^9, 3.4441922331794233`*^9}, {
  3.4441942771664963`*^9, 3.4441942855777073`*^9}, {3.475790738570661*^9, 
  3.475790751858696*^9}}],

Cell[TextData[{
 "Alternatively you can use ",
 StyleBox[ButtonBox["Palettes",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/PalettesMenu"], "Text"],
 " such as the ",
 ButtonBox["Basic Math Assistant",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{$TopDirectory, "SystemFiles", "FrontEnd", "Palettes"}, 
     "BasicMathAssistant.nb", Null], None},
  ButtonNote->"Basic Math Assistant"],
 "."
}], "Text",
 CellChangeTimes->{{3.443923843113216*^9, 3.443923921266626*^9}, 
   3.443924075150702*^9, {3.4440941067369127`*^9, 3.444094139175045*^9}, {
   3.5078948251692266`*^9, 3.507894846931746*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Numbers", "Section",
 CellChangeTimes->{
  3.444215112539296*^9, {3.4442153785609617`*^9, 3.444215379655527*^9}, {
   3.507957451161854*^9, 3.507957451289288*^9}}],

Cell[CellGroupData[{

Cell["Integers and rational operations", "Subsection",
 CellChangeTimes->{{3.444215409658348*^9, 3.444215418642715*^9}}],

Cell["\<\
Integer and rational operations are exact. And you can work with numbers of \
arbitrary size.\
\>", "Text",
 CellChangeTimes->{3.444215429330578*^9}],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288639892*^9, 3.507957495631324*^9}],

Cell[TextData[{
 "Calculate the exact value of 3 to the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["1000", "th"], TraditionalForm]]],
 " power. ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["3", "1000"]], "Input",
 CellChangeTimes->{{3.53934725531076*^9, 3.539347258964525*^9}}],

Cell[BoxData[
 FormBox["13220708194808066368904552597521443659654220327521481676649203682268\
285973467048995407783138506080619639097776968725823559509545821006189118653427\
252579536740276202251983208038780147742289648412743904001175886180411289478156\
230944380615661730540866744905061781254803444055470543970388958174653682549161\
362208302685637785822902284163983078878969185564040848989376093732421718463599\
386955167650189405881090604260896714388641028143503856487471658320106143661321\
73102768902855220001", TraditionalForm]], "Output",
 CellChangeTimes->{3.53934725971179*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical Evaluation", "Subsection",
 CellChangeTimes->{3.4135038648987427`*^9}],

Cell[TextData[{
 "To obtain numerical values, use ",
 Cell[BoxData[
  ButtonBox["N",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/N"]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.44435428866154*^9, 3.5079574977192802`*^9}],

Cell[TextData[{
 "Calculate the numerical value of 3 to the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["1000", "th"], TraditionalForm]]],
 " power. ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443481919785*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.539347264724655*^9, 3.539347267086149*^9}}],

Cell[BoxData[
 FormBox["1.32207081948080663689045525975214436596542203275214816`15.\
954589770191005*^477", TraditionalForm]], "Output",
 CellChangeTimes->{3.539347267747158*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288682807*^9, 3.507957499551399*^9}],

Cell[TextData[{
 "Calculate the numerical value of ",
 Cell[BoxData[
  FormBox["\[Pi]", TraditionalForm]]],
 ". ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.444348241235592*^9}, {3.507897810584996*^9, 3.507897810980546*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.539347270487318*^9, 3.539347273861719*^9}}],

Cell[BoxData[
 FormBox["3.141592653589793`", TraditionalForm]], "Output",
 CellChangeTimes->{3.5393472742900343`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.4443542887042017`*^9, 3.507957501519391*^9}],

Cell[TextData[{
 "Calculate the first 1000 digits of ",
 Cell[BoxData[
  FormBox["\[Pi]", TraditionalForm]]],
 ". ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.507897813953964*^9, 3.507897814266865*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Pi", ",", "1000"}], "]"}]], "Input",
 CellChangeTimes->{{3.539347276979123*^9, 3.539347279790699*^9}}],

Cell[BoxData[
 FormBox["3.\
141592653589793238462643383279502884197169399375105820974944592307816406286208\
998628034825342117067982148086513282306647093844609550582231725359408128481117\
450284102701938521105559644622948954930381964428810975665933446128475648233786\
783165271201909145648566923460348610454326648213393607260249141273724587006606\
315588174881520920962829254091715364367892590360011330530548820466521384146951\
941511609433057270365759591953092186117381932611793105118548074462379962749567\
351885752724891227938183011949129833673362440656643086021394946395224737190702\
179860943702770539217176293176752384674818467669405132000568127145263560827785\
771342757789609173637178721468440901224953430146549585371050792279689258923542\
019956112129021960864034418159813629774771309960518707211349999998372978049951\
059731732816096318595024459455346908302642522308253344685035261931188171010003\
137838752886587533208381420617177669147303598253490428755468731159562863882353\
787593751957781857780532171226806613001927876611195909216420198938095257201065\
4858598`1000.", TraditionalForm]], "Output",
 CellChangeTimes->{3.5393472803871737`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.4443542887042017`*^9, 3.507957504047056*^9}],

Cell[TextData[{
 "Calculate 30 digits of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     SqrtBox["163"], "\[Pi]"}]], TraditionalForm]]],
 ". What is the closest integer to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     SqrtBox["163"], "\[Pi]"}]], TraditionalForm]]],
 "? ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.5078978212757072`*^9, 3.5078978416338*^9}, {
   3.507897914098014*^9, 3.507897951765622*^9}, {3.507897983002207*^9, 
   3.507898022682279*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     SqrtBox["163"], " ", "\[Pi]"}]], ",", "30"}], "]"}]], "Input",
 CellChangeTimes->{{3.539347295157467*^9, 3.539347299525407*^9}}],

Cell[BoxData[
 FormBox["2.6253741264076874399999999999925007259719818568887935177`30.*^17", 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.539347300080743*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Round", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.539347301836825*^9, 3.539347303120644*^9}}],

Cell[BoxData[
 FormBox["262537412640768744", TraditionalForm]], "Output",
 CellChangeTimes->{3.53934730361266*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["StandardForm and TraditionalForm", "Subsection",
 CellChangeTimes->{3.413503867691175*^9}],

Cell[TextData[{
 "To change a cell between standard and traditional from select the cell \
bracket (on the right) and use  Cell \[FilledRightTriangle] Convert To \
\[FilledRightTriangle] ",
 ButtonBox["\[CenterEllipsis]Form",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/menuitem/ConvertTo"],
 "  (or the shortcuts)"
}], "Text",
 CellChangeTimes->{{3.44434853288732*^9, 3.4443486163845377`*^9}}],

Cell["\<\
To toggle an expression between standard and traditional form select the \
expression and press \[ControlKey]\[LeftModified]N\[RightModified] / \
\[ControlKey]\[LeftModified]T\[RightModified].\
\>", "Text",
 CellChangeTimes->{{3.444348485394899*^9, 3.444348530273218*^9}, {
  3.44434861982381*^9, 3.444348643716331*^9}, {3.475790996683785*^9, 
  3.4757910590460176`*^9}}],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288726363*^9, 3.5079575083998337`*^9}],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  RowBox[{"Cos", "[", "Pi", "]"}]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"cos", "(", "\[Pi]", ")"}], TraditionalForm]]],
 ". ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, 3.444348737363947*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cos", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.5393473135431957`*^9, 3.539347315059897*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", "1"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347315504149*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"cos", "(", "\[Pi]", ")"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.5393473135431957`*^9, 3.539347320217258*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", "1"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347320730605*^9}]
}, Open  ]],

Cell["\<\
Note that exact input \[DoubleLongRightArrow] exact output. \
\>", "Warning"]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288748616*^9, 3.5079575111909246`*^9}],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  RowBox[{"Log", "[", 
   RowBox[{"10", ",", "0.01"}], "]"}]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "2"], "(", "16", ")"}], TraditionalForm]]],
 ". ",
 StyleBox["[3 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.475791092459001*^9, 3.475791095428899*^9}, {3.507894920497799*^9, 
   3.507894936457382*^9}, {3.539347356117765*^9, 3.5393473562817717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"10", ",", "0.01"}], "]"}]], "Input",
 CellChangeTimes->{{3.539347326792214*^9, 3.539347331219501*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", "1.9999999999999996`"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347331640067*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["log", "2"], "(", "16", ")"}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox["4", TraditionalForm]], "Output",
 CellChangeTimes->{3.539347337704817*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Complex Numbers", "Subsection",
 CellChangeTimes->{{3.41326511784053*^9, 3.413265131655511*^9}, {
   3.413265894528523*^9, 3.41326589557565*^9}, {3.41345600536725*^9, 
   3.413456006249482*^9}, 3.413503869954936*^9}],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354287473425*^9, 3.50795751393476*^9}],

Cell[TextData[{
 "Obtain the real (",
 Cell[BoxData[
  ButtonBox["Re",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Re"]]],
 ") and imaginary (",
 Cell[BoxData[
  ButtonBox["Im",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Im"]]],
 ") parts of ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{"2", "\[ImaginaryI]"}]}], 
    RowBox[{"3", "+", 
     RowBox[{"4", "\[ImaginaryI]"}]}]], TraditionalForm]]],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ImaginaryI]", "\[LongEqual]", "\[ImaginaryJ]", "\[LongEqual]", 
    SqrtBox[
     RowBox[{"-", "1"}]]}], TraditionalForm]]],
 ".",
 " ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, 
   3.444348822653267*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", 
  FractionBox[
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], 
   RowBox[{"3", "+", 
    RowBox[{"4", " ", "\[ImaginaryI]"}]}]], "]"}]], "Input",
 CellChangeTimes->{{3.5393473639689617`*^9, 3.5393473713199453`*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox["11", "25"], TraditionalForm]], "Output",
 CellChangeTimes->{3.5393473717562923`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Im", "[", 
  FractionBox[
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], 
   RowBox[{"3", "+", 
    RowBox[{"4", " ", "\[ImaginaryI]"}]}]], "]"}]], "Input",
 CellChangeTimes->{{3.5393473639689617`*^9, 3.539347375116808*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox["2", "25"], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347375580134*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.4443542879957247`*^9, 3.50795751598278*^9}],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{"Log", "[", "3", "]"}], "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"exp", "(", 
    RowBox[{
     RowBox[{"log", "(", "3", ")"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}]}], ")"}], TraditionalForm]]],
 ". ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, {3.444351163265201*^9, 
   3.44435117016107*^9}, 3.4757911194835863`*^9, 3.539347386657802*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", 
  RowBox[{"Log", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.539347391937066*^9}],

Cell[BoxData[
 FormBox["3", TraditionalForm]], "Output",
 CellChangeTimes->{3.539347392549436*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"exp", "(", 
   RowBox[{
    RowBox[{"log", "(", "3", ")"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}]}], ")"}], 
  TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"-", "3"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347396946595*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.4443542880610313`*^9, 3.5079575188386383`*^9}],

Cell[TextData[{
 "Apply ",
 Cell[BoxData[
  ButtonBox["ComplexExpand",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ComplexExpand"]]],
 " (which obtains the real and imaginary parts of an expression) to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ImaginaryI]", "\[ImaginaryI]"], TraditionalForm]]],
 ". Is the result real?",
 " ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348912842258*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  SuperscriptBox["\[ImaginaryI]", "\[ImaginaryI]"], "]"}]], "Input",
 CellChangeTimes->{{3.5393474075411673`*^9, 3.539347421208417*^9}}],

Cell[BoxData[
 FormBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[Pi]"}], "/", "2"}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347421676845*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.53934742534422*^9, 3.539347426368538*^9}}],

Cell[BoxData[
 FormBox["0.20787957635076193`", TraditionalForm]], "Output",
 CellChangeTimes->{3.539347426800701*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Answer",
  FontWeight->"Bold"],
 ": Yes, the answer is real."
}], "Text",
 CellChangeTimes->{{3.413457628600979*^9, 3.413457647240316*^9}, {
  3.5393474295194597`*^9, 3.5393474351023073`*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symbols", "Section",
 CellChangeTimes->{
  3.444215112539296*^9, {3.4442153785609617`*^9, 3.444215379655527*^9}, 
   3.444348978973599*^9, {3.50795745289781*^9, 3.5079574530248137`*^9}}],

Cell[CellGroupData[{

Cell["Algebra", "Subsection",
 CellChangeTimes->{{3.44434898712807*^9, 3.444348987967669*^9}}],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288161316*^9, 3.5079575218945*^9}],

Cell[TextData[{
 "Expand ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "3"], "-", 
      RowBox[{"3", 
       SuperscriptBox["x", "2"], " ", "y"}], "+", 
      RowBox[{"3", "x", " ", 
       SuperscriptBox["y", "2"]}], "-", 
      SuperscriptBox["y", "3"]}], ")"}], "20"], TraditionalForm]]],
 " ",
 "and then factor the result. ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4757911485841227`*^9, 3.475791164610016*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "3"], "-", 
      RowBox[{"3", 
       SuperscriptBox["x", "2"], " ", "y"}], "+", 
      RowBox[{"3", "x", " ", 
       SuperscriptBox["y", "2"]}], "-", 
      SuperscriptBox["y", "3"]}], ")"}], "20"], "//", "Expand"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.539347460993126*^9, 3.53934746244735*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["x", "60"], "-", 
   RowBox[{"60", " ", 
    SuperscriptBox["x", "59"], " ", "y"}], "+", 
   RowBox[{"1770", " ", 
    SuperscriptBox["x", "58"], " ", 
    SuperscriptBox["y", "2"]}], "-", 
   RowBox[{"34220", " ", 
    SuperscriptBox["x", "57"], " ", 
    SuperscriptBox["y", "3"]}], "+", 
   RowBox[{"487635", " ", 
    SuperscriptBox["x", "56"], " ", 
    SuperscriptBox["y", "4"]}], "-", 
   RowBox[{"5461512", " ", 
    SuperscriptBox["x", "55"], " ", 
    SuperscriptBox["y", "5"]}], "+", 
   RowBox[{"50063860", " ", 
    SuperscriptBox["x", "54"], " ", 
    SuperscriptBox["y", "6"]}], "-", 
   RowBox[{"386206920", " ", 
    SuperscriptBox["x", "53"], " ", 
    SuperscriptBox["y", "7"]}], "+", 
   RowBox[{"2558620845", " ", 
    SuperscriptBox["x", "52"], " ", 
    SuperscriptBox["y", "8"]}], "-", 
   RowBox[{"14783142660", " ", 
    SuperscriptBox["x", "51"], " ", 
    SuperscriptBox["y", "9"]}], "+", 
   RowBox[{"75394027566", " ", 
    SuperscriptBox["x", "50"], " ", 
    SuperscriptBox["y", "10"]}], "-", 
   RowBox[{"342700125300", " ", 
    SuperscriptBox["x", "49"], " ", 
    SuperscriptBox["y", "11"]}], "+", 
   RowBox[{"1399358844975", " ", 
    SuperscriptBox["x", "48"], " ", 
    SuperscriptBox["y", "12"]}], "-", 
   RowBox[{"5166863427600", " ", 
    SuperscriptBox["x", "47"], " ", 
    SuperscriptBox["y", "13"]}], "+", 
   RowBox[{"17345898649800", " ", 
    SuperscriptBox["x", "46"], " ", 
    SuperscriptBox["y", "14"]}], "-", 
   RowBox[{"53194089192720", " ", 
    SuperscriptBox["x", "45"], " ", 
    SuperscriptBox["y", "15"]}], "+", 
   RowBox[{"149608375854525", " ", 
    SuperscriptBox["x", "44"], " ", 
    SuperscriptBox["y", "16"]}], "-", 
   RowBox[{"387221678682300", " ", 
    SuperscriptBox["x", "43"], " ", 
    SuperscriptBox["y", "17"]}], "+", 
   RowBox[{"925029565741050", " ", 
    SuperscriptBox["x", "42"], " ", 
    SuperscriptBox["y", "18"]}], "-", 
   RowBox[{"2044802197953900", " ", 
    SuperscriptBox["x", "41"], " ", 
    SuperscriptBox["y", "19"]}], "+", 
   RowBox[{"4191844505805495", " ", 
    SuperscriptBox["x", "40"], " ", 
    SuperscriptBox["y", "20"]}], "-", 
   RowBox[{"7984465725343800", " ", 
    SuperscriptBox["x", "39"], " ", 
    SuperscriptBox["y", "21"]}], "+", 
   RowBox[{"14154280149473100", " ", 
    SuperscriptBox["x", "38"], " ", 
    SuperscriptBox["y", "22"]}], "-", 
   RowBox[{"23385332420868600", " ", 
    SuperscriptBox["x", "37"], " ", 
    SuperscriptBox["y", "23"]}], "+", 
   RowBox[{"36052387482172425", " ", 
    SuperscriptBox["x", "36"], " ", 
    SuperscriptBox["y", "24"]}], "-", 
   RowBox[{"51915437974328292", " ", 
    SuperscriptBox["x", "35"], " ", 
    SuperscriptBox["y", "25"]}], "+", 
   RowBox[{"69886166503903470", " ", 
    SuperscriptBox["x", "34"], " ", 
    SuperscriptBox["y", "26"]}], "-", 
   RowBox[{"88004802264174740", " ", 
    SuperscriptBox["x", "33"], " ", 
    SuperscriptBox["y", "27"]}], "+", 
   RowBox[{"103719945525634515", " ", 
    SuperscriptBox["x", "32"], " ", 
    SuperscriptBox["y", "28"]}], "-", 
   RowBox[{"114449595062769120", " ", 
    SuperscriptBox["x", "31"], " ", 
    SuperscriptBox["y", "29"]}], "+", 
   RowBox[{"118264581564861424", " ", 
    SuperscriptBox["x", "30"], " ", 
    SuperscriptBox["y", "30"]}], "-", 
   RowBox[{"114449595062769120", " ", 
    SuperscriptBox["x", "29"], " ", 
    SuperscriptBox["y", "31"]}], "+", 
   RowBox[{"103719945525634515", " ", 
    SuperscriptBox["x", "28"], " ", 
    SuperscriptBox["y", "32"]}], "-", 
   RowBox[{"88004802264174740", " ", 
    SuperscriptBox["x", "27"], " ", 
    SuperscriptBox["y", "33"]}], "+", 
   RowBox[{"69886166503903470", " ", 
    SuperscriptBox["x", "26"], " ", 
    SuperscriptBox["y", "34"]}], "-", 
   RowBox[{"51915437974328292", " ", 
    SuperscriptBox["x", "25"], " ", 
    SuperscriptBox["y", "35"]}], "+", 
   RowBox[{"36052387482172425", " ", 
    SuperscriptBox["x", "24"], " ", 
    SuperscriptBox["y", "36"]}], "-", 
   RowBox[{"23385332420868600", " ", 
    SuperscriptBox["x", "23"], " ", 
    SuperscriptBox["y", "37"]}], "+", 
   RowBox[{"14154280149473100", " ", 
    SuperscriptBox["x", "22"], " ", 
    SuperscriptBox["y", "38"]}], "-", 
   RowBox[{"7984465725343800", " ", 
    SuperscriptBox["x", "21"], " ", 
    SuperscriptBox["y", "39"]}], "+", 
   RowBox[{"4191844505805495", " ", 
    SuperscriptBox["x", "20"], " ", 
    SuperscriptBox["y", "40"]}], "-", 
   RowBox[{"2044802197953900", " ", 
    SuperscriptBox["x", "19"], " ", 
    SuperscriptBox["y", "41"]}], "+", 
   RowBox[{"925029565741050", " ", 
    SuperscriptBox["x", "18"], " ", 
    SuperscriptBox["y", "42"]}], "-", 
   RowBox[{"387221678682300", " ", 
    SuperscriptBox["x", "17"], " ", 
    SuperscriptBox["y", "43"]}], "+", 
   RowBox[{"149608375854525", " ", 
    SuperscriptBox["x", "16"], " ", 
    SuperscriptBox["y", "44"]}], "-", 
   RowBox[{"53194089192720", " ", 
    SuperscriptBox["x", "15"], " ", 
    SuperscriptBox["y", "45"]}], "+", 
   RowBox[{"17345898649800", " ", 
    SuperscriptBox["x", "14"], " ", 
    SuperscriptBox["y", "46"]}], "-", 
   RowBox[{"5166863427600", " ", 
    SuperscriptBox["x", "13"], " ", 
    SuperscriptBox["y", "47"]}], "+", 
   RowBox[{"1399358844975", " ", 
    SuperscriptBox["x", "12"], " ", 
    SuperscriptBox["y", "48"]}], "-", 
   RowBox[{"342700125300", " ", 
    SuperscriptBox["x", "11"], " ", 
    SuperscriptBox["y", "49"]}], "+", 
   RowBox[{"75394027566", " ", 
    SuperscriptBox["x", "10"], " ", 
    SuperscriptBox["y", "50"]}], "-", 
   RowBox[{"14783142660", " ", 
    SuperscriptBox["x", "9"], " ", 
    SuperscriptBox["y", "51"]}], "+", 
   RowBox[{"2558620845", " ", 
    SuperscriptBox["x", "8"], " ", 
    SuperscriptBox["y", "52"]}], "-", 
   RowBox[{"386206920", " ", 
    SuperscriptBox["x", "7"], " ", 
    SuperscriptBox["y", "53"]}], "+", 
   RowBox[{"50063860", " ", 
    SuperscriptBox["x", "6"], " ", 
    SuperscriptBox["y", "54"]}], "-", 
   RowBox[{"5461512", " ", 
    SuperscriptBox["x", "5"], " ", 
    SuperscriptBox["y", "55"]}], "+", 
   RowBox[{"487635", " ", 
    SuperscriptBox["x", "4"], " ", 
    SuperscriptBox["y", "56"]}], "-", 
   RowBox[{"34220", " ", 
    SuperscriptBox["x", "3"], " ", 
    SuperscriptBox["y", "57"]}], "+", 
   RowBox[{"1770", " ", 
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["y", "58"]}], "-", 
   RowBox[{"60", " ", "x", " ", 
    SuperscriptBox["y", "59"]}], "+", 
   SuperscriptBox["y", "60"]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347462921259*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.539347465906003*^9, 3.539347467384205*^9}}],

Cell[BoxData[
 FormBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x", "-", "y"}], ")"}], "60"], TraditionalForm]], "Output",
 CellChangeTimes->{3.53934746786455*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equations", "Subsection",
 CellChangeTimes->{{3.444349004864146*^9, 3.444349005999123*^9}}],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.4443542882143183`*^9, 3.50795752394261*^9}],

Cell[TextData[{
 "Compute and simplify both the sum and product of the two roots of the \
quadratic equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"b", " ", "x"}], "+", "c"}], "\[LongEqual]", "0"}], 
   TraditionalForm]]],
 ". \nExplain the resulting simple expressions. ",
 StyleBox["[3 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, {3.4443489985774813`*^9, 
   3.44434902811535*^9}, 3.444349076881762*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      RowBox[{"b", " ", "x"}], "+", "c"}], "\[LongEqual]", "0"}], ",", "x"}], 
   "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.5393474901158648`*^9, 3.53934750153325*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["b", "2"], "-", 
            RowBox[{"4", " ", "c"}]}]]}], "-", "b"}], ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["b", "2"], "-", 
           RowBox[{"4", " ", "c"}]}]], "-", "b"}], ")"}]}]}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5393475020891314`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", "%"}]], "Input",
 CellChangeTimes->{{3.539347508097651*^9, 3.5393475093653097`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["b", "2"], "-", 
          RowBox[{"4", " ", "c"}]}]]}], "-", "b"}], ")"}]}], ",", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "c"}]}]], "-", "b"}], ")"}]}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.539347510720786*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", "%", "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.539347516050009*^9, 3.5393475216613417`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", "b"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347521828171*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Times", "@@", "%%"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.539347528055842*^9, 3.539347535881469*^9}}],

Cell[BoxData[
 FormBox["c", TraditionalForm]], "Output",
 CellChangeTimes->{3.539347536215127*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Written answer",
  FontWeight->"Bold"],
 ": The sum of the two roots is ... because ..."
}], "Text",
 CellChangeTimes->{{3.413457628600979*^9, 3.413457647240316*^9}, {
  3.4443512407792892`*^9, 3.444351242806201*^9}, {3.475791189672368*^9, 
  3.475791205608862*^9}}],

Cell[TextData[{
 "Note that equations involve ",
 Cell[BoxData[
  FormBox["==", TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox["\[LongEqual]", TraditionalForm]]],
 " (a \[OpenCurlyDoubleQuote]long\[CloseCurlyDoubleQuote] equal siqn). See ",
 Cell[TextData[ButtonBox["Equal",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Equal"]], "SearchResultTitle"],
 "."
}], "Warning",
 CellChangeTimes->{{3.444349124014515*^9, 3.4443491963190527`*^9}, {
  3.444349328321682*^9, 3.4443493775500517`*^9}, {3.475791276863675*^9, 
  3.475791374074451*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Indefinite integration", "Subsection",
 CellChangeTimes->{{3.444349048526486*^9, 3.444349054766371*^9}}],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288268147*^9, 3.507957526686273*^9}],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "-", 
       SuperscriptBox["x", "3"]}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]]],
 " and check the result. ",
 StyleBox["[3 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4443490719553337`*^9, 3.4443490744111*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"\[Integral]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"1", "-", 
      SuperscriptBox["x", "3"]}]], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"log", "(", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", "x", "+", "1"}], ")"}]}], "-", 
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"log", "(", 
     RowBox[{"1", "-", "x"}], ")"}]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["tan", 
      RowBox[{"-", "1"}]], "(", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", "1"}], 
      SqrtBox["3"]], ")"}], 
    SqrtBox["3"]]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347547830985*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[PartialD]", "x"], "%"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.539347548829288*^9, 3.539347557283867*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox["1", 
   RowBox[{"1", "-", 
    SuperscriptBox["x", "3"]}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347557711452*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.4443542883226137`*^9, 3.507957528534505*^9}],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "-", 
       SuperscriptBox["x", "4"]}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]]],
 " using partial fractions and verify the answer. ",
 StyleBox["[3 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4443490719553337`*^9, 3.444349094558805*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Apart", "[", 
   FractionBox["1", 
    RowBox[{"1", "-", 
     SuperscriptBox["x", "4"]}]], "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.5393475660463877`*^9, 3.539347569476666*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", "1"}], ")"}]}]], "+", 
   FractionBox["1", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"x", "+", "1"}], ")"}]}]], "-", 
   FractionBox["1", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"x", "-", "1"}], ")"}]}]]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347570297154*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"\[Integral]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1"}], ")"}]}]], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{3.5393475861547613`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{
    SuperscriptBox["tan", 
     RowBox[{"-", "1"}]], "(", "x", ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.539347586774255*^9, 3.539347611387926*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"\[Integral]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"x", "+", "1"}], ")"}]}]], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.5393475861547613`*^9, 3.539347592116337*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"log", "(", 
    RowBox[{
     RowBox[{"4", " ", "x"}], "+", "4"}], ")"}]}], TraditionalForm]], "Output",\

 CellChangeTimes->{{3.53934759252955*^9, 3.539347612539804*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"\[Integral]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"x", "-", "1"}], ")"}]}]], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.5393475861547613`*^9, 3.539347598544071*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"log", "(", 
    RowBox[{"x", "-", "1"}], ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.539347598955798*^9, 3.539347613593029*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%%", "+", "%%", "-", "%"}]], "Input",
 CellChangeTimes->{{3.5393476049505663`*^9, 3.5393476157617693`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"log", "(", 
      RowBox[{"x", "-", "1"}], ")"}]}]}], "+", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"log", "(", 
     RowBox[{
      RowBox[{"4", " ", "x"}], "+", "4"}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{
     SuperscriptBox["tan", 
      RowBox[{"-", "1"}]], "(", "x", ")"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.539347608437594*^9, 3.539347616141502*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[PartialD]", "x"], "%"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.539347624529251*^9, 3.539347630393718*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox["1", 
   RowBox[{"1", "-", 
    SuperscriptBox["x", "4"]}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347630574327*^9}]
}, Open  ]],

Cell[TextData[{
 "ie. Do this 'semimanually'  using ",
 ButtonBox["Apart",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Apart"],
 " and ",
 ButtonBox["Integrate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Integrate"],
 ".  Then compare with the normal ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " result."
}], "Warning",
 CellChangeTimes->{{3.444349124014515*^9, 3.4443491963190527`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.4443542883811817`*^9, 3.507957530751652*^9}],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "a"}], " ", 
       SuperscriptBox["x", "2"]}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]], 
     RowBox[{"cos", "(", 
      RowBox[{"\[Lambda]", " ", "x"}], ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]]],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ">", "0"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "\[Element]", 
    TagBox["\[DoubleStruckCapitalR]",
     Function[{}, Reals]]}], TraditionalForm]]],
 ". ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4443490719553337`*^9, 3.4443490744111*^9}, {3.444349243427834*^9, 
   3.4443492464133387`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"a", ">", "0"}], ",", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "a"}], " ", 
        SuperscriptBox["x", "2"]}]], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.539347644643174*^9, 3.539347660973467*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox[
   SqrtBox["\[Pi]"], 
   SqrtBox["a"]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.539347642688857*^9, 3.53934766166943*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", ">", "0"}], "\[And]", 
     RowBox[{"\[Lambda]", "\[Element]", 
      TagBox["\[DoubleStruckCapitalR]",
       Function[{}, Reals]]}]}], ",", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "a"}], " ", "x"}]], 
      RowBox[{"cos", "(", 
       RowBox[{"\[Lambda]", " ", "x"}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.539347644643174*^9, 3.539347679191279*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox["a", 
   RowBox[{
    SuperscriptBox["a", "2"], "+", 
    SuperscriptBox["\[Lambda]", "2"]}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.5393476801012497`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Differential equations", "Subsection",
 CellChangeTimes->{{3.444349265202581*^9, 3.444349270687669*^9}}],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288429487*^9, 3.507957533558092*^9}],

Cell[TextData[{
 "Show that the indefinite integral ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "a", "x"], 
     RowBox[{
      RowBox[{"f", "(", "t", ")"}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], TraditionalForm]]],
 " is equivalent to the differential equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]"], "(", "x", ")"}], "\[LongEqual]", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]]],
 " with the initial condition ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", "a", ")"}], "\[LongEqual]", "0"}], TraditionalForm]]],
 ".",
 " ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4443490719553337`*^9, 3.4443490744111*^9}, {3.444349243427834*^9, 
   3.4443492464133387`*^9}, 3.4443492831775723`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"\[ScriptCapitalE]", "=", 
   RowBox[{
    RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "a", "x"], 
     RowBox[{
      RowBox[{"f", "(", "t", ")"}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.539347706191166*^9, 3.539347707247613*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "x"], 
    RowBox[{
     RowBox[{"f", "(", "t", ")"}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.53934769458587*^9, 3.5393477076916523`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "\[ScriptCapitalE]"}], 
     RowBox[{"\[PartialD]", "x"}],
     MultilineFunction->None], ",", 
    RowBox[{"\[ScriptCapitalE]", "/.", 
     RowBox[{"x", "\[Rule]", "a"}]}]}], "}"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.539347696377138*^9, 3.539347741864003*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "(", "x", ")"}], "\[LongEqual]", 
     RowBox[{"f", "(", "x", ")"}]}], ",", 
    RowBox[{
     RowBox[{"y", "(", "a", ")"}], "\[LongEqual]", "0"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.539347698832897*^9, 3.539347712236842*^9}, 
   3.539347742327161*^9}]
}, Open  ]],

Cell[TextData[{
 "Hint:  This is not a question where you just blindly apply a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " command. Think about what's being asked."
}], "Warning",
 CellChangeTimes->{{3.444349124014515*^9, 3.4443491963190527`*^9}, {
   3.444349328321682*^9, 3.4443493775500517`*^9}, 3.475791395704648*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Graphics", "Section",
 CellChangeTimes->{
  3.444215112539296*^9, {3.4442153785609617`*^9, 3.444215379655527*^9}, 
   3.444348978973599*^9, {3.444349405900198*^9, 3.444349408132859*^9}, {
   3.5079574544089947`*^9, 3.507957454545282*^9}}],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288451939*^9, 3.507957551765481*^9}],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["Plot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Plot"]], "InlineFormula"],
 " the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Function]", 
    RowBox[{
     FractionBox[
      SuperscriptBox["x", "2"], "10"], "-", 
     SuperscriptBox[
      RowBox[{"cos", "(", "x", ")"}], "2"]}]}], TraditionalForm]]],
 ". Choose a range of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " that includes all values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " for which this function is zero. ",
 StyleBox["[2 Marks] ", "ExerciseMark"],
 "Use ",
 Cell[BoxData[
  ButtonBox["FindRoot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindRoot"]]],
 " to confirm the locations of the above zeros. ",
 StyleBox["[2 Marks] ", "ExerciseMark"],
 "Plot the derivative. ",
 StyleBox["[1 Mark]", "ExerciseMark"],
 " Put the above two plots on the same graph. (Hint: look at help file for ",
 Cell[BoxData[
  ButtonBox["Plot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Plot"]], "InlineFormula"],
 " or alternatively ",
 Cell[BoxData[
  ButtonBox["Show",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Show"]], "InlineFormula"],
 ") ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4443490719553337`*^9, 3.4443490744111*^9}, {3.444349243427834*^9, 
   3.4443492464133387`*^9}, 3.4443492831775723`*^9, {3.4443494369609203`*^9, 
   3.444349440481529*^9}, {3.475791436184556*^9, 3.47579144390418*^9}, {
   3.475791522924747*^9, 3.475791523336252*^9}, {3.475791562930889*^9, 
   3.475791574979184*^9}, {3.475791636044465*^9, 3.475791644821006*^9}, {
   3.475791677265746*^9, 3.4757917423343277`*^9}, {3.475791797870162*^9, 
   3.475791827323305*^9}, 3.5079575789415607`*^9, {3.53934782421723*^9, 
   3.539347827536848*^9}, {3.539347885034945*^9, 3.5393478878983097`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"fn", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["x", "2"], "10"], "-", 
      SuperscriptBox[
       RowBox[{"cos", "(", "x", ")"}], "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.5393477665641823`*^9, 3.539347789900762*^9}, {
  3.5393478304996843`*^9, 3.5393478803371687`*^9}, {3.539347973949943*^9, 
  3.539347974317648*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw1W3k4lG/UlnUsIW0UEiXRgpAU560oqSQhKbSnUrZSUQhJqCyRyk/2lLJk
n3BeS8g6Y18qe0ky9mVs3/td1/f9Ndd9nfOcc9/3Oc878/4x68/bGV/i5ODg
kOTi4Pjfz22wamBxUYTcunLDztDiUbCbkfOdYYuQ9xunzF6ljUJquor82IQI
+VnJfizi7SioKhw9/+uvCPlkaGNXjOso7Fzm3VbVLEIeVl6rn7RjFIiekYpX
KSLkyx/nRPJiR8D4cXXSDmsRkqawqH7Eexju1HrfuFIgTFqaX5DeEzoIDQ2C
A4XnlpIlh41Efln3wMOLmQVJZ5aS4o16AhrQA9vGrUJCTy4lk4xUj4dK94Dv
8s97rh5dSkq0mah7/ugGbWPz56K7lpKExpCj+JluSKiNU7MWXUr2nzpvdexM
F9yt0HafKxAiMwalThnW/wQp0m7FTkkhUvjHmwwr12aoElO/pbVaiNQM3N15
XrcZXC6x67XFhMjITbSSwKXN0CTwKESXJkR6ZMZYXItqgkDT12LG44Lkvrj/
dCXKG4Hrb4nojSpBkjeL2/jJugb4s3LN0tj7gqRq3fM9JIsB4TYdtgl3BMnE
0MPpBwsYcOBLXNV7R0HS5siSuPkABsSc3R6QaiNIauYedJ1QZMCZJF3BAhNB
suScmKlKXQ3UEnb8rVsEySoGbSH4eyVkXi/hEfkhQOYYIsNUqxQ0ZW6qJDQL
kC0Lnuc2fv8K9IbVltp1AmSnOc+W625fgdS+nnG9TIDUNXVytCgpgQoRsQvl
aQIkwXM2u8a0GDrTrcmHPgKkycPerfufkyAwx3YZ3y5AhmcI3sr6kgVPU+MS
/BUFyKjCC6VFUlkgesmwTnajACn6S6ep3CMTVtZEbz6+RoAsP6Vyo/hQBshE
6bd84qb4hK1rcPmdBuq6YepXWvlJmX310mfjPsDZAJXhVk9+MspfrGXzqxBw
yQj2qX7AT5KCX6O+FAZB6PcxycK7/CRHNgSFtT+Hii1ZhxJvUlg+a1tllC/s
qNaKdbagsHbrkt0Lt4BXWNdsuSo/6cH3klS55YEyGvGDvFv5SQKKLqxI98Ld
Vrxe7E1UvpZ2/fiAD9onl6d0SVH51kXfk/WeYqvhUf5UfgqL/ZL0rn+BH5+b
5R3popHK5yJfWR6IwtLsbGPiO4VZDxZE2VHY1SH+Z0czjfS4bVzE/TEaVym3
r1xbTSOH/z1mfxKIRXeGtd2fHBrZ+fRpiWB6PBovuyrrE0gjybmjJetTP6Dt
roqce/40kkNKOmbkYBI+Pqd07IYPjZR5+8iY52cS5qX9czW5TyNFs2XPznB/
wo3Gjo2yNlR9yU3bpHRScDrY1ReBRrbcr+pmJqfhb8nCgQNaNFLBdlh31Wga
NiXwHq1Ro5Hm616fPKX2GdPpQct+bKaRUfF+ud8zP+PN7nev2ctppObE7bnO
j+l4xvbf3ENhGql/6uoFuf50PDypas3PTyONjsrNX5bNQAWBAjnxBT5S31BV
cSwkA3tUGj6q9/OR5aFdDpuvZ2LdFwmR/G4+clrC4pp7ZCaSetYOuj/4SIWF
Gq9WRiZGnhpQP1HHR6Z+8k99o5qF5g850D6Pj7RXNLl5YSALDwoeWD+dRdWL
5O7sW5mNGqH+Xu5pVD/HB5V2RDYuf79K/1kCH8kQd2t/E5yNNYwtzKRAqv4W
nepzSjmYZ+G4Y4c/VX9WmbXlWA4m9WaH0h/xkS0f849wOeag7/Q+i28ufOTZ
zNP0+owcvOPpm2d0m6q/wrCmpiEHLwvVSLfY8ZHkg9cbm8dycL/MqZ5fF/lI
ojQqe9n2XFT9EKl305qqt5WXS+9wLsqo9b6bOEXxT1+T/vhyLi4ctLPlPkbl
/5O4pf06F3PsHk2s38VH5kxvVHeZzMV3MxUn3+/gI8MVIsw0BekY5iVKV97G
R9qcUrgusI6OTi/fuIEcH+m706xucD8dz6/v6iyV4iONCrRPL5jQ0ShJfr+h
ONUvo2S//CU6bsM0PsulfKRmxrq0L550lDw0dbWXj9Jf4HpXMZCOgvV7qq5z
Uv1/em/4HEFH9hnPbWNzvGSOtYHFiUQ69v8qC3SZ4iX7+y1J4XQ6NtsvHVsy
yksq69Ut9ObRsZRtbPpkkIoraGHTVzpmeIdni/7mJRPHEz72VtMxVvinRHgX
L0m7/c5JpJGOwaeBb9d3XjJKwcNpTzsdPROjxlubeElR+nXG8046Ok4s6XZh
8pLhX36oCPRR+vZdqF1bxUsyLr4jPvbT0fh5SV5eKS+pcGEywfkvHfd93/jB
spCXlEk4IXrtHx1VNz9+ufCFl0xVjNn8eIiOss793m+zeMmWIqnoGgqLFR9y
JNIo/t9Pye+lMKdoknVXEi9Zvo+41jFIx9EzQkc9E3hJzW6RdR8G6Nj9/oaW
XDSFvU9PR/+mY91kzaaSNxR+Sksq66Fj0X7llZfCeEmjzKP/1nbQ8XNgECdv
EC8ZSKY5v22lY8yPUVaCP4V3CHCcqKf0K5r8OOjDS5rzuuzfWUXpv5NZ0e9B
6TWxnztSQukvWZXzxJXyR/Dd7xdfKP3L7sYrOlP5YeuLRT5T+q1agyvtKeyj
ZFjwjtKfpOVhe53yb/fJQ9HU/NbrzVskn6XqHcsO5/Omo2iwlf6x07wkqXr5
VoAzHTk6UH3YlOK/bnOtvg0dO+96iqoepviteC99/RAdGV975uv0KH/5O+Pq
NOlIiun9dSKoeQpIVt/aRMeoj3ylmeq8JLFUVs2Wk46BMzbpZspUfTlN4eKh
XPQ4UBE1pUjNO6CfPNmWi2c7A1x3yVDnF2fHtFNycd0KMZV8AV5y+tdc8gqj
XBQ+5yRtxUPt24zLBQcN6n58ahBcXOQhOVLVX4pJ5uLPgy9/ERM8ZOp/I30b
+3Iw0lUyoqSDh8zZn7A/8WYOPit/8ORSGw8pnsmzdC91n91WdjjzNvKQgZ/P
Hti4PQetUqKP61fwkDKi+WH1g9ko1SPPV5XBQ5ZrX6zstM7GCAMVx/onVPzr
7qknG7Nwg6BBBcObOl/ANym7kIlJledla9x5SOWYG6FKTZlIP/Kirvw2D6mZ
lVrzzDuT+j6YUi04x0MaKTYvSW/LwFUn8scSd/GQZ69n+cvdSMfI5U2HE9R4
yMTXLhwrtdNxY8NQbOx2qn5rRLWnUDqqmcqYRG7kIfvV0rKb3n9G45NeGSHL
eEgb4aoO559p+Pz0odtuf7jJcN2UoyeUU3GV5Plq115uUpTbsLN9OAUjv7ts
vNfBTXoY2cdu8EjBZMuPjU6N3KT9XT+vqTfJWGUtonG1kJtUjpjgqy//iLSL
jZMnXnGTqQrq1b+nE9HT9tzdzYeo+JuVNyYLovDnM6sI+n6qvvj9M6c2R6FW
2mnysA432Slwf6Bu41scnTCl3dzBTcoU1q5RL4vAc+4G4Z+luEmOXjY3z9RL
JIJ35Owe5SKJzH8hM1IBuJDNM330DRfpccxddWbKBVy5Ptxx/MdJklg4fSvi
PZzzqN3QlLiE/OUhpzu1vhDMWt/q/IhdQl4+bl/zw6AQDFTtzXsjl5DfD0d/
S3UqBLVe0YDRF0tIgZIa7TVfC4Gmbzwm/HAJKXzslunQ5SJIFmksPHhqCeld
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
HiL863e/LLl03FW5VtFjJw+R+tog/YF5Ohq1cSg47eMhxCdtUIVMR7fpCrlT
5jwEY9cJpeW+GdiuZr12ozcPIZp8qIU5nYmXZ9RFHj2h6sVaftool4XD+UJc
fc+o/P9Kn9QdyULug/SBuFdUPt/95zsis3DbqZX0DSk8hPk2Xd9pzWzMkRr8
5J1BYSg0YFtm477uoujeXIpPu/5/Rz2z8eR1+ydxJdT5vY0GfeXZ6PGg0nxD
Gw9Buz90E4/moMC+mCPeHTyEgpHVcbUbORjKe4/o7eUhcsTbAsf8c/DDc3mF
OBYPYePiGHO0LAfrox9OyfHwEvaiHSkn1XPR6rL5Xy8BXiLKOFKM71gu9itu
7+gR4SXK30z+mrmSi3Pp30tj1/ASNIF474SXuShfujNMTpmXCFxuvZN7KBdT
/YT9vNR5CY9wpaLsJXTUOtb3oEeLlyAsv0klrqDjsZbgS7F6VP01v5fu0aRj
W8TVU1yHqfNrP9J+6tPx4jni6AUjXoJhVBuVa07HuwP/1ORO8xKdzoe81jjT
kTOlRMHrLNVf4pt2pBcdnzq9key5xEuIbpi9bR5IR3FNR9H913kJjiurruhH
0DFmTp871p6XSN0WevTGOzpuKVw3zenMSwwnaFwpTaNj1qPJv+ddKb67OMaM
v9CRMKjuKPLgJVr+6KiIldCxUjiuXtaHqp/qe4Grio5m9S5lnv68hDgjv2pj
PR07Xx7/0h3IS5zdLpB2t5WO184opOwL4yVkEn+Zzv6k47jMYkzMG16CPLWG
81MPHd36GsM4oyl9U1/mA37Tkf/DR7/zCbzE3ZU7gl8P0PHFTS+3oiQqbrdL
oHGQjtI7LBxl0yh+at/Tdg/RMXFK+bJnFtX/4IOmagqr5vFZdH+h/PNqKPWj
cJ7Hz6P7Cqn+C8N1Dv/oeFAvc29MKYX3ah3x/EvHOv4Adc4qyj9fh0df+ul4
pub85vNMyp/pz3WSfXT8FbxLqqiJym91fhLfSUf7k6LLZL9TfIqDOUzb6Xg+
cfvrjV28hPLYg+tvGuloOmMot/kX5eeR2DS5WjrqG9z8uOUvLzEt+e/IvzJq
/m+eqisPU/XeHc+ZQjpuHfxYsGOC0jtdb7cvm44y2lUHd7Kp/cjyHq76REee
DgELHW4+QqZ57sDbcDpOb1fs2cvPR5SnKUv+CqDjgMchWz1hPsLc9UbuNQ86
MmR93Y6I8xGM02FmSpfoWOT0js9Iio9o2edqddmMjpklpYEnZPkIUueMzo8D
dHx9mSfWYgsfwXGiK/r+RjoGZG/YYqVCxYdkNeKW09Gdppt5ToOPOCv9XzEP
tb8XP3iW2RB8hP2i09St1lw8ORttZKtH8buqmP2wJBcNjhS22hnwEYl7a2JK
k3Nx+9DiX2cT6nxx8p4pj1yUhXW3XU7xEYGLq5d22+TiikCdhQdWfITy1m9H
uYxyka3yQPSRDR+hT39p/3ttLpbcZquF3KfqJ71OVvyQg1mlEgVhDym+eiq2
+dT9fb9618HXPnwEcfS8uZdtDj7LvXMqOpDqt3SryjulHDw1P/4gJY7y66ep
iW5UNh4xXMGX/p6PSBX6OnTJNRt13u4IzEqmcEpSQbZpNm7Y6xiTn8NHTPNL
hA/wZeOQN6u0sorit740xut8FnY1ChvVMil/3TSMpXZmYYP8tta6JsrfmtTH
vQJZmFtu+7e1k+q/Q3E/OyUTvYUGRPrHqXpecY5awxko8aLXnFuKRgy3dutW
66ejpte6VbdkaYT+r6IyA8F0NHO0qO/ZRCP6X5x6XFn1GYONGEeLVWmEgrqy
d+ORzyi0NG+fpz6N8D02q8e1Nw0XHoVs4bhFIzrXn25ePvYJJW/X/LG7RyM8
0FFCzfwT7r7I/67DjUaQSbdCjL98xLv73NfjExphH7zyha9rEo4sXFvl9pZG
EN9TDtT0JGLvnX0ccxU0gsM6zP3OiVjkvPIg/zqDRig7xIgah8egjFmOS3sj
FR86MLGxPRot1bZN0DtpRGDykqkciyhsGpYYuDdJI2Q2jb0Q9nqN366O1E+t
5yc4DlfppWT5YfLpqHdjd/kJ8iFbjo8jENSa5di8bvxEFJe5239NQfDF+N2R
NV5UPFn80JfUECg/lDxCPOUnPF6lJ/rbvYSenXm7n0XzE4QIR4HT6rcgvqKl
VqGCn2AcvdM7/fgdeFaJTFuuFSDsVSfXlF3JAJp+iIGDjABBS6oOOzuTAc+L
V/3nvVGACO9UtWvyz4QIutS+pO0CRJR1tLJZehZkJyoFTO8XIDgkMCBSKBcG
vQ/KhNgKEL7kk4PL+/PhpLa7fnm+AKHJucZGQaYEvk/8EikqEiCETpUW5d0q
gfPJhs1fygSI1FNmE5nfSsB2nfTlFKYAUXXHVqrp1lfwXJLvFdYnQIhebpkp
qy2F5K/sgotLBYmLQ+eldcO/Abehs/oSS0FCN+Jl9XLHWkizuiGrNSdIWFmv
/u+RVBOczxyWiloiRHj/Fj29yrwJVgjdkuDlEyJeZ92saQluAudcF9G6ZUKE
vJsRzyitGbRW+C5c3SREEH1Ko3ZTzVD0LabtlbEQEfzsfN61H63QoNYSPJMo
REjmNas1VP6AaYH9XLmmSwlu2b79iWI9YMzcrSEVLkwU63HkGT35CwK7BQvz
/hMmxLN1S56l/oXCuLbDZ2KFiaxe1G5q/gvKd++de5MsTNi8G2n0kB8E4XXZ
ARJfhYnDbfX1UDII32xVe1aOChNmb+Xe6SwZAoK2OVD4iAjB5ZnlykMMw7TD
9Jrk4yJEVPp/s6Imw5DSXhZ/9KQIERm031HaZhikUy5/CTgvQsw96R/QCRyG
OdO4XwL3RAjHsiNvQjqHITt2nTZfgghxV/mNz92HI3BzKassIUmE8GC2870K
HQH5OwXGB9JEiDoVW0n6+xF4YWBp8yhPhHgi+C1hnjkCjiOvQ7jqRQjNcJGG
x7KjoHj6mnRsiwjRP2zp9UFjFLpKdr3f91OEyHNsXlFtMApG4S0FD/9Q+RdH
Hy1zGgUaZ+Kh9SwRYoBmv2vH41HA63cayHERYmU409nkzSj1fnPA+ixbhDAf
FFa4nTIK//d/DeL//6/xP5JAr2E=
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{{-4, 4}, {-0.9999995829798451, 1.1727497247641836`}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.5393477830328836`*^9, 3.539347790340414*^9}, {
   3.5393478311547213`*^9, 3.539347880719742*^9}, 3.539347974738386*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        SuperscriptBox["x", "2"], "10"], "-", 
       SuperscriptBox[
        RowBox[{"cos", "(", "x", ")"}], "2"]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "x0"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x0", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", 
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
   "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.539347799589698*^9, 3.539347810925743*^9}, {
  3.5393478973031073`*^9, 3.539347930239038*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "3.1616420951060675`"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "2.464325306281412`"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "1.1862608165029143`"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", "1.1862608165029143`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", "2.464325306281412`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", "3.1616420951060675`"}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5393478115367203`*^9, 3.5393479306690693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"der", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       SubscriptBox["\[PartialD]", "x"], 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox["x", "2"], "10"], "-", 
         SuperscriptBox[
          RowBox[{"cos", "(", "x", ")"}], "2"]}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.53934795092852*^9, 3.53934797691047*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{{-4, 4}, {-1.790400928230623, 1.7904005101607299`}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.5393479641737013`*^9, 3.539347977564385*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Show", "[", 
   RowBox[{"fn", ",", "der"}], "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.539347980146379*^9, 3.539347984273974*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw1W3k4lG/UlnUsIW0UEiXRgpAU560oqSQhKbSnUrZSUQhJqCyRyk/2lLJk
n3BeS8g6Y18qe0ky9mVs3/td1/f9Ndd9nfOcc9/3Oc878/4x68/bGV/i5ODg
kOTi4Pjfz22wamBxUYTcunLDztDiUbCbkfOdYYuQ9xunzF6ljUJquor82IQI
+VnJfizi7SioKhw9/+uvCPlkaGNXjOso7Fzm3VbVLEIeVl6rn7RjFIiekYpX
KSLkyx/nRPJiR8D4cXXSDmsRkqawqH7Eexju1HrfuFIgTFqaX5DeEzoIDQ2C
A4XnlpIlh41Efln3wMOLmQVJZ5aS4o16AhrQA9vGrUJCTy4lk4xUj4dK94Dv
8s97rh5dSkq0mah7/ugGbWPz56K7lpKExpCj+JluSKiNU7MWXUr2nzpvdexM
F9yt0HafKxAiMwalThnW/wQp0m7FTkkhUvjHmwwr12aoElO/pbVaiNQM3N15
XrcZXC6x67XFhMjITbSSwKXN0CTwKESXJkR6ZMZYXItqgkDT12LG44Lkvrj/
dCXKG4Hrb4nojSpBkjeL2/jJugb4s3LN0tj7gqRq3fM9JIsB4TYdtgl3BMnE
0MPpBwsYcOBLXNV7R0HS5siSuPkABsSc3R6QaiNIauYedJ1QZMCZJF3BAhNB
suScmKlKXQ3UEnb8rVsEySoGbSH4eyVkXi/hEfkhQOYYIsNUqxQ0ZW6qJDQL
kC0Lnuc2fv8K9IbVltp1AmSnOc+W625fgdS+nnG9TIDUNXVytCgpgQoRsQvl
aQIkwXM2u8a0GDrTrcmHPgKkycPerfufkyAwx3YZ3y5AhmcI3sr6kgVPU+MS
/BUFyKjCC6VFUlkgesmwTnajACn6S6ep3CMTVtZEbz6+RoAsP6Vyo/hQBshE
6bd84qb4hK1rcPmdBuq6YepXWvlJmX310mfjPsDZAJXhVk9+MspfrGXzqxBw
yQj2qX7AT5KCX6O+FAZB6PcxycK7/CRHNgSFtT+Hii1ZhxJvUlg+a1tllC/s
qNaKdbagsHbrkt0Lt4BXWNdsuSo/6cH3klS55YEyGvGDvFv5SQKKLqxI98Ld
Vrxe7E1UvpZ2/fiAD9onl6d0SVH51kXfk/WeYqvhUf5UfgqL/ZL0rn+BH5+b
5R3popHK5yJfWR6IwtLsbGPiO4VZDxZE2VHY1SH+Z0czjfS4bVzE/TEaVym3
r1xbTSOH/z1mfxKIRXeGtd2fHBrZ+fRpiWB6PBovuyrrE0gjybmjJetTP6Dt
roqce/40kkNKOmbkYBI+Pqd07IYPjZR5+8iY52cS5qX9czW5TyNFs2XPznB/
wo3Gjo2yNlR9yU3bpHRScDrY1ReBRrbcr+pmJqfhb8nCgQNaNFLBdlh31Wga
NiXwHq1Ro5Hm616fPKX2GdPpQct+bKaRUfF+ud8zP+PN7nev2ctppObE7bnO
j+l4xvbf3ENhGql/6uoFuf50PDypas3PTyONjsrNX5bNQAWBAjnxBT5S31BV
cSwkA3tUGj6q9/OR5aFdDpuvZ2LdFwmR/G4+clrC4pp7ZCaSetYOuj/4SIWF
Gq9WRiZGnhpQP1HHR6Z+8k99o5qF5g850D6Pj7RXNLl5YSALDwoeWD+dRdWL
5O7sW5mNGqH+Xu5pVD/HB5V2RDYuf79K/1kCH8kQd2t/E5yNNYwtzKRAqv4W
nepzSjmYZ+G4Y4c/VX9WmbXlWA4m9WaH0h/xkS0f849wOeag7/Q+i28ufOTZ
zNP0+owcvOPpm2d0m6q/wrCmpiEHLwvVSLfY8ZHkg9cbm8dycL/MqZ5fF/lI
ojQqe9n2XFT9EKl305qqt5WXS+9wLsqo9b6bOEXxT1+T/vhyLi4ctLPlPkbl
/5O4pf06F3PsHk2s38VH5kxvVHeZzMV3MxUn3+/gI8MVIsw0BekY5iVKV97G
R9qcUrgusI6OTi/fuIEcH+m706xucD8dz6/v6iyV4iONCrRPL5jQ0ShJfr+h
ONUvo2S//CU6bsM0PsulfKRmxrq0L550lDw0dbWXj9Jf4HpXMZCOgvV7qq5z
Uv1/em/4HEFH9hnPbWNzvGSOtYHFiUQ69v8qC3SZ4iX7+y1J4XQ6NtsvHVsy
yksq69Ut9ObRsZRtbPpkkIoraGHTVzpmeIdni/7mJRPHEz72VtMxVvinRHgX
L0m7/c5JpJGOwaeBb9d3XjJKwcNpTzsdPROjxlubeElR+nXG8046Ok4s6XZh
8pLhX36oCPRR+vZdqF1bxUsyLr4jPvbT0fh5SV5eKS+pcGEywfkvHfd93/jB
spCXlEk4IXrtHx1VNz9+ufCFl0xVjNn8eIiOss793m+zeMmWIqnoGgqLFR9y
JNIo/t9Pye+lMKdoknVXEi9Zvo+41jFIx9EzQkc9E3hJzW6RdR8G6Nj9/oaW
XDSFvU9PR/+mY91kzaaSNxR+Sksq66Fj0X7llZfCeEmjzKP/1nbQ8XNgECdv
EC8ZSKY5v22lY8yPUVaCP4V3CHCcqKf0K5r8OOjDS5rzuuzfWUXpv5NZ0e9B
6TWxnztSQukvWZXzxJXyR/Dd7xdfKP3L7sYrOlP5YeuLRT5T+q1agyvtKeyj
ZFjwjtKfpOVhe53yb/fJQ9HU/NbrzVskn6XqHcsO5/Omo2iwlf6x07wkqXr5
VoAzHTk6UH3YlOK/bnOtvg0dO+96iqoepviteC99/RAdGV975uv0KH/5O+Pq
NOlIiun9dSKoeQpIVt/aRMeoj3ylmeq8JLFUVs2Wk46BMzbpZspUfTlN4eKh
XPQ4UBE1pUjNO6CfPNmWi2c7A1x3yVDnF2fHtFNycd0KMZV8AV5y+tdc8gqj
XBQ+5yRtxUPt24zLBQcN6n58ahBcXOQhOVLVX4pJ5uLPgy9/ERM8ZOp/I30b
+3Iw0lUyoqSDh8zZn7A/8WYOPit/8ORSGw8pnsmzdC91n91WdjjzNvKQgZ/P
Hti4PQetUqKP61fwkDKi+WH1g9ko1SPPV5XBQ5ZrX6zstM7GCAMVx/onVPzr
7qknG7Nwg6BBBcObOl/ANym7kIlJledla9x5SOWYG6FKTZlIP/Kirvw2D6mZ
lVrzzDuT+j6YUi04x0MaKTYvSW/LwFUn8scSd/GQZ69n+cvdSMfI5U2HE9R4
yMTXLhwrtdNxY8NQbOx2qn5rRLWnUDqqmcqYRG7kIfvV0rKb3n9G45NeGSHL
eEgb4aoO559p+Pz0odtuf7jJcN2UoyeUU3GV5Plq115uUpTbsLN9OAUjv7ts
vNfBTXoY2cdu8EjBZMuPjU6N3KT9XT+vqTfJWGUtonG1kJtUjpjgqy//iLSL
jZMnXnGTqQrq1b+nE9HT9tzdzYeo+JuVNyYLovDnM6sI+n6qvvj9M6c2R6FW
2mnysA432Slwf6Bu41scnTCl3dzBTcoU1q5RL4vAc+4G4Z+luEmOXjY3z9RL
JIJ35Owe5SKJzH8hM1IBuJDNM330DRfpccxddWbKBVy5Ptxx/MdJklg4fSvi
PZzzqN3QlLiE/OUhpzu1vhDMWt/q/IhdQl4+bl/zw6AQDFTtzXsjl5DfD0d/
S3UqBLVe0YDRF0tIgZIa7TVfC4Gmbzwm/HAJKXzslunQ5SJIFmksPHhqCeld
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
HiL863e/LLl03FW5VtFjJw+R+tog/YF5Ohq1cSg47eMhxCdtUIVMR7fpCrlT
5jwEY9cJpeW+GdiuZr12ozcPIZp8qIU5nYmXZ9RFHj2h6sVaftool4XD+UJc
fc+o/P9Kn9QdyULug/SBuFdUPt/95zsis3DbqZX0DSk8hPk2Xd9pzWzMkRr8
5J1BYSg0YFtm477uoujeXIpPu/5/Rz2z8eR1+ydxJdT5vY0GfeXZ6PGg0nxD
Gw9Buz90E4/moMC+mCPeHTyEgpHVcbUbORjKe4/o7eUhcsTbAsf8c/DDc3mF
OBYPYePiGHO0LAfrox9OyfHwEvaiHSkn1XPR6rL5Xy8BXiLKOFKM71gu9itu
7+gR4SXK30z+mrmSi3Pp30tj1/ASNIF474SXuShfujNMTpmXCFxuvZN7KBdT
/YT9vNR5CY9wpaLsJXTUOtb3oEeLlyAsv0klrqDjsZbgS7F6VP01v5fu0aRj
W8TVU1yHqfNrP9J+6tPx4jni6AUjXoJhVBuVa07HuwP/1ORO8xKdzoe81jjT
kTOlRMHrLNVf4pt2pBcdnzq9key5xEuIbpi9bR5IR3FNR9H913kJjiurruhH
0DFmTp871p6XSN0WevTGOzpuKVw3zenMSwwnaFwpTaNj1qPJv+ddKb67OMaM
v9CRMKjuKPLgJVr+6KiIldCxUjiuXtaHqp/qe4Grio5m9S5lnv68hDgjv2pj
PR07Xx7/0h3IS5zdLpB2t5WO184opOwL4yVkEn+Zzv6k47jMYkzMG16CPLWG
81MPHd36GsM4oyl9U1/mA37Tkf/DR7/zCbzE3ZU7gl8P0PHFTS+3oiQqbrdL
oHGQjtI7LBxl0yh+at/Tdg/RMXFK+bJnFtX/4IOmagqr5vFZdH+h/PNqKPWj
cJ7Hz6P7Cqn+C8N1Dv/oeFAvc29MKYX3ah3x/EvHOv4Adc4qyj9fh0df+ul4
pub85vNMyp/pz3WSfXT8FbxLqqiJym91fhLfSUf7k6LLZL9TfIqDOUzb6Xg+
cfvrjV28hPLYg+tvGuloOmMot/kX5eeR2DS5WjrqG9z8uOUvLzEt+e/IvzJq
/m+eqisPU/XeHc+ZQjpuHfxYsGOC0jtdb7cvm44y2lUHd7Kp/cjyHq76REee
DgELHW4+QqZ57sDbcDpOb1fs2cvPR5SnKUv+CqDjgMchWz1hPsLc9UbuNQ86
MmR93Y6I8xGM02FmSpfoWOT0js9Iio9o2edqddmMjpklpYEnZPkIUueMzo8D
dHx9mSfWYgsfwXGiK/r+RjoGZG/YYqVCxYdkNeKW09Gdppt5ToOPOCv9XzEP
tb8XP3iW2RB8hP2i09St1lw8ORttZKtH8buqmP2wJBcNjhS22hnwEYl7a2JK
k3Nx+9DiX2cT6nxx8p4pj1yUhXW3XU7xEYGLq5d22+TiikCdhQdWfITy1m9H
uYxyka3yQPSRDR+hT39p/3ttLpbcZquF3KfqJ71OVvyQg1mlEgVhDym+eiq2
+dT9fb9618HXPnwEcfS8uZdtDj7LvXMqOpDqt3SryjulHDw1P/4gJY7y66ep
iW5UNh4xXMGX/p6PSBX6OnTJNRt13u4IzEqmcEpSQbZpNm7Y6xiTn8NHTPNL
hA/wZeOQN6u0sorit740xut8FnY1ChvVMil/3TSMpXZmYYP8tta6JsrfmtTH
vQJZmFtu+7e1k+q/Q3E/OyUTvYUGRPrHqXpecY5awxko8aLXnFuKRgy3dutW
66ejpte6VbdkaYT+r6IyA8F0NHO0qO/ZRCP6X5x6XFn1GYONGEeLVWmEgrqy
d+ORzyi0NG+fpz6N8D02q8e1Nw0XHoVs4bhFIzrXn25ePvYJJW/X/LG7RyM8
0FFCzfwT7r7I/67DjUaQSbdCjL98xLv73NfjExphH7zyha9rEo4sXFvl9pZG
EN9TDtT0JGLvnX0ccxU0gsM6zP3OiVjkvPIg/zqDRig7xIgah8egjFmOS3sj
FR86MLGxPRot1bZN0DtpRGDykqkciyhsGpYYuDdJI2Q2jb0Q9nqN366O1E+t
5yc4DlfppWT5YfLpqHdjd/kJ8iFbjo8jENSa5di8bvxEFJe5239NQfDF+N2R
NV5UPFn80JfUECg/lDxCPOUnPF6lJ/rbvYSenXm7n0XzE4QIR4HT6rcgvqKl
VqGCn2AcvdM7/fgdeFaJTFuuFSDsVSfXlF3JAJp+iIGDjABBS6oOOzuTAc+L
V/3nvVGACO9UtWvyz4QIutS+pO0CRJR1tLJZehZkJyoFTO8XIDgkMCBSKBcG
vQ/KhNgKEL7kk4PL+/PhpLa7fnm+AKHJucZGQaYEvk/8EikqEiCETpUW5d0q
gfPJhs1fygSI1FNmE5nfSsB2nfTlFKYAUXXHVqrp1lfwXJLvFdYnQIhebpkp
qy2F5K/sgotLBYmLQ+eldcO/Abehs/oSS0FCN+Jl9XLHWkizuiGrNSdIWFmv
/u+RVBOczxyWiloiRHj/Fj29yrwJVgjdkuDlEyJeZ92saQluAudcF9G6ZUKE
vJsRzyitGbRW+C5c3SREEH1Ko3ZTzVD0LabtlbEQEfzsfN61H63QoNYSPJMo
REjmNas1VP6AaYH9XLmmSwlu2b79iWI9YMzcrSEVLkwU63HkGT35CwK7BQvz
/hMmxLN1S56l/oXCuLbDZ2KFiaxe1G5q/gvKd++de5MsTNi8G2n0kB8E4XXZ
ARJfhYnDbfX1UDII32xVe1aOChNmb+Xe6SwZAoK2OVD4iAjB5ZnlykMMw7TD
9Jrk4yJEVPp/s6Imw5DSXhZ/9KQIERm031HaZhikUy5/CTgvQsw96R/QCRyG
OdO4XwL3RAjHsiNvQjqHITt2nTZfgghxV/mNz92HI3BzKassIUmE8GC2870K
HQH5OwXGB9JEiDoVW0n6+xF4YWBp8yhPhHgi+C1hnjkCjiOvQ7jqRQjNcJGG
x7KjoHj6mnRsiwjRP2zp9UFjFLpKdr3f91OEyHNsXlFtMApG4S0FD/9Q+RdH
Hy1zGgUaZ+Kh9SwRYoBmv2vH41HA63cayHERYmU409nkzSj1fnPA+ixbhDAf
FFa4nTIK//d/DeL//6/xP5JAr2E=
       "]]}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{{-4, 4}, {-0.9999995829798451, 1.1727497247641836`}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.539347984693918*^9}]
}, Open  ]],

Cell[TextData[{
 "Note the use of ",
 Cell[BoxData[
  ButtonBox["FindRoot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindRoot"]]],
 " as opposed to ",
 Cell[BoxData[
  ButtonBox["Solve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Solve"]]],
 ".  This is because the equation is ",
 StyleBox["transcendental",
  FontSlant->"Italic"],
 " (try using ",
 Cell[BoxData[
  ButtonBox["Solve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Solve"]]],
 " and see what happens)."
}], "Warning",
 CellChangeTimes->{{3.44435213008039*^9, 3.444352161924181*^9}, {
  3.475791462359268*^9, 3.4757914766648493`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288451939*^9, 3.5079575496215487`*^9}],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["Plot3D",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Plot3D"]], "InlineFormula"],
 " to visualize the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Function]", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"x", " ", "y"}], "+", 
     SuperscriptBox["y", "2"]}]}], TraditionalForm]]],
 " over ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}], "\[Times]", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], TraditionalForm]]],
 ". ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4443490719553337`*^9, 3.4443490744111*^9}, {3.444349243427834*^9, 
   3.4443492464133387`*^9}, 3.4443492831775723`*^9, {3.4443494369609203`*^9, 
   3.444349440481529*^9}, {3.475791436184556*^9, 3.47579144390418*^9}, {
   3.475791522924747*^9, 3.475791523336252*^9}, {3.475791562930889*^9, 
   3.475791574979184*^9}, {3.475791636044465*^9, 3.475791644821006*^9}, {
   3.475791677265746*^9, 3.4757917423343277`*^9}, {3.475791797870162*^9, 
   3.475791952189047*^9}, {3.5078953881563873`*^9, 3.507895391506703*^9}, {
   3.5078954824640017`*^9, 3.507895497583137*^9}, {3.50789555367763*^9, 
   3.5078955575757236`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"x", " ", "y"}], "+", 
    SuperscriptBox["y", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.539348001252583*^9, 3.53934801967829*^9}}],

Cell[BoxData[
 FormBox[
  Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
t3/P0uZnvH+nwfD/B9qSXRE=
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
cF+rNTwoWE82gEcE98eawgPhuXB9eHhwf6wJPDhYrzaEHwiucxvDfeCX4Drw
PcE6+Rq4b7A2rgevTNxnkEZdlbgXIU34ZeJ6X7XbV4n7D6rv1qQxXLlmbeJ+
hWrMzxPnHenM7+BqGdeh6xP3H1RLfp24R6HacEPiPoPqzU2J+w+qYTcm7l2o
xlyX5hHVmNvSHKHcsT1xj1QadVca85Vr9mJXwgsZ35O4v/oO/FTiXPwlf7s7
cR/ybca/T9zjVc2+I3GvT7V59bTWeIuxg4l7d4uksxL3ct+FD6T5RTnraJLG
f/yhxL3NxdJgifu6S+AiwXWB4vzp8G3wMu2DxD0i1ePS7Hq/c/n+FYl7dKrX
YnA/+UPFj8T9H9VuOexGeKniX3BvRDVKz+BYcRXvt1dwr+NquFtw/7AW/H50
70Y1ws2MP8F4TbhrcB9Stfkx/r+J4h5j/yTOQcqnJxL3yT9g/PfEfe/34HOD
e4Cr8GcF980+xpcI7pUtx58R3Lv7CH9ecL/xc3yl4J7hZ/hzgvuEK/EFgjW/
cl+FNEcox5UP7kmuwJcN7kN+ii8d3Cf8BJ/Nud7Tc4Wca0U9+0X832CtB3x5
xl9KrMPHRvfxNZ/jo/v4ekePRPfoNf+vRPf4Niu2RfdDv9Peiu4DblF8i+4z
6BkHBPfQDuHHRPeCNW93Bcfkg/gJ0X0Mzc/E6Ppd86Y+mzS3ej4PRZ8l6F2s
jK4/pQmXR/dSD2t/Rddp0mO3BucmrYdvoutGaae10TWV9NXq6LpdWm5FdJ0v
zdk9uLe2X+8qjW/KI3cG9zAP4HsE9+t+xn8S3dc7ojgQ3ReQtlwVXbdL/4yO
PvPQOumfxnzlzWHR/Urtqaej+6pfwdOi+2BaA99G18nSeC9F96w3Mf5idM96
I/x8dH95PTw1uuemtfR4dJ9Na/KLaL0rfTszuo+8VvEtWr9K306P7sWpBn8i
uo+n9flCdI97A/xcdI97nfZZdI/46+DaSrr7XNbU8Oi+qmLRpOj+jNbkA9E9
VsWlodH9WcWikdFnP4obI6LPnxRzRkWfnSiGzIrug38Dz47uv38LPxbdW9Ne
mBzdO9Je+DS6blGN8GV0zSy9PT64h6P3NS64FlNuWhPdo5Hmbx/c192NrxWc
Q6XNOgX3WvfguwTXd3vxHYP1hrRH5+Ce7U/4msF1t35no+Ce/Db8lcF5VnNY
I7ge13NdHtx713xeGtxL1zu6LLjHrrWh/vk7ylXMc7vgPvMufJs0BkoXvZu4
nlUtpp6V6kjVmzKxal7VRKo1dS9pxB8zrq9V7+/KuG5sHnwe8QO+hdYT/CO+
WfCZxXZ80+Azhe/xTYI1mHRH2+B++E789cG96B34hdFnHpqfz6LrQNWSi6J7
1prPxdFnIfu056LPNnSf+dF9Df2GedFaR/d8I1rT6Pe8Ga1p9Js/jO6hK84M
xT7OOFYsje6hKy6NCu5FSIPNiT7/2Kr5Du7V/6L3EKxh/jtDiz7P0Phr0f0U
vdO50fpJ87Ag+kxF7+Xd6HMXrZkGwecsipPvRZ8TKIZcHazZtL+WRJ8lKP40
DD5z0e/5ILrXr/hTO1izae+/HX02o7V6U/DZhOatTnD/R7GiLjYm41hdP/ic
SDH8qmAdqLgxI7rfK32ovoryf1XWWLGcz/OkP0/K+SxBmipfzueX0lEn53xm
Ka2bP+ezTGmtDdF9LtWep+d81igtd1rO53PSacVz1ijSk6fkfK4p7Vc05/NI
ac4zc9a40rqFcj7vlN7Lm3PfU3r+1JzPO6U5K+e8B9R/KJzzual06brovqHq
31zOvUvphDw59z2lE0rm3MOSFi2Rsy6XRl0f3YtUj7FKzn0N1TUVc+6VqFaq
lHNPRLVMmZz7Zap3yubcU1NNdE7OfRDVOOVy7nmp5iqS87msNG3BnM9cpXVL
59ybU21VKueenWqHCjn311SL/R+3a++W
          "]], Polygon3DBox[CompressedData["
1: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
ee+8pLYmsaWxM+Aa4dWFvxE+NXuNyfXsMdb+RbU1iFWNnc73CdcR/lb4NLhO
7eFgTXlGckxsWfLtF+Wdty75g72wnHes/pvBfH6b2nmsDTmw6EVi4ehoLTpC
rT9rqbHNk2sOYu2Y6FoEfmpV9NDSwk8tij4gX43UPecK9xfegnhLXt/aGusN
t6qdz9prbGv2L5qFZ9dYL2KR7+S7hE/J5qDdCv8tL5y1azAnwGVPCc8UniF8
erKeaFPyE/rlqbhKelafE0O6d25cVWZVi4VPZj9k1wxojN+iORotVSeau//V
9Ujhprq+J/ynrocLb6LrO9k5eLBwj+jcTA6ltjwpOrdSE7K3j4yuFdHscGGX
aC3/iNrd+v27NdZVc7OF7xOeIHxCco1IrB8VXTuSw6kde0XndnL4EOGe0bn9
2ORcfrbwY9ltvL5vXOU5al7WvnN0LUxNwF7oFF0rHJ+sFfoLzyJXJ7/LI4TH
Z3NsP+FDo7l3ptooff8onlFzxyVri3M0/3g2N/QVbhvNEXDuGcLto7mYmpRa
pnd0rTogOT/fGJ2/4fizhDtEcz8cfqbwIdHcfjUxIHxntF64RvgV4VHRegFO
pNa7Jpor0dNNg2sW9PO1mn9V/bui9UO/aC0+tnItf2Gy/rg+Wu9R01CL4ydQ
6/RJ1oMDhbPm+ybrjUui9Q45jFx2WbS+PzVZn1warSepGalfLoiuB1hDarm+
0WvLnsA7OC16r5AzTxc+ODqXonHRuo10fTebE+4VHhTNFbzDCcFjvNuo1k39
5pr/KJsT4IY3Kms/NDfaewvNf5xdI7M3B0TXzsPV+gXvgSaaOyl7/V6Dg6hn
dN85cCkaU3OrsSc030LjnwgH4a5wi/CHwqsLnyDcUvgz4TrCJ5ILhD8XHk3M
B9f41PrEaEf1G0TH7h+6HibckNwg/J+uRwlvpuv7xBd5WfgRmr6ntr7jeLhH
459qHvLpoksz4Q+ya35q14uivYA/hOcLz9dnN6lxTOKlnBsdqzernRm8JzfR
3DDeQfAebyA8VPj04He2AbGcrG+vIy+gd6O9pysqe0/rJtdqu2n8xuwYulfz
4yvHFjE4WHhQ5diE85i7onDhLWpnBcfMpsnfcWpwDPLd1IiN1P8ruHbcTrhH
cI4mV+8aXUugadA2/ZL17ODoevqcZL1+ZXT9fVN27U4Nv1Fyzif3XxVdj/dP
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
iM4FeLqbBfs/eL3Ns7kIjoKr6mWfb5BTya3rZucuOBKufCfZb+NvSPDP6mdr
A3IcuQ5NjbZGI+MNb57NZXAe3Ncsm+vgOLjuzWT/nzMN/K2Xkv04PFS8VGoC
agP0IPrxUeF7hO9hj+veOcJThKcInwI/q82ryhmI5n5MrpVXnXFka5YJwg8X
LfNNwXhEeEXLkrUNHjP+0ZLk2okaCi/xW+H7KnuU+B9fJ3tLeBR4FWhitPDt
0VqZ81i0PRqfs9Xa2ecRnDlxfvRDuZ8aF3+OGoFaAY2MF/xV8v8VjxT/C43N
//XaaO39VuFDzoDwI6mpqK2oqfDaiSlii3eKd4uGRdu0i9a2aLAPKmsA4nlp
cu1NDY6fAscODY5puHdKstcNR8PV9yfvRfYUe2tS8t4iRoiVh5LPpjlD57xi
avLfCnBmzfkGZ+Bo9xh9Nv5wcv3C3xjwtwYzk//WgL9B4G8RZiR773jw/C1A
t8I3p5e98UByLBEjxMqDyd9PjBFraJJPhSdHa5Xvy3ryNzH4e6eU9b44em9R
U1C/rQiuNb5Lrt2p4fHH/kvmFjiGs4+5ybUCNQPe0OTkXMaZD+cxzwqfWtmT
wpuiRnyf/RRdO3K+wnlPk8rnJw2ztTuaH+1fS9cfK+uzqZrfNLtWQNOj7am5
qb05f0EvU3NTe1Ojc7ZCzUXtxZkE+rNRtjan5qD2ODrb+6CG5XnwQN4jPqL5
5LXk2oAaAf/1y2R/lL95wQ9+Odnf54yOs7rXk88eOXPE734j+TyFM0n86/8D
+9bNuQ==
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncjVUeAPD3vfdaI4RSVIooJdmFImvJFtmy75nIFjEhLbaxZddQkmgR
TQs1i2VSyF5jJyqD9lJJNZP6/nreP36fc37f83vu+9znnuec817Va3Cb+1NZ
WVlbRC6RzmRl/ZqdlVUpQn7YYElWUduddWf501lZV4jLRTljdY3N0u6UN9Ef
oG6AuspRwyuz3qwXK8gOiLZsJBvJ6skLqSvFWrKW7Gf9C1gxbRPWmH2rX0pt
SXGNsTryJ7SH5R31H1I3Rl1jeQFenDVlTdgZ/R28sfassUr6N4lS+jexXup6
iqmRi/Zssnyyaxuqy8cuYo1YQ/GYfD0vz5rJm6nLyP8jmrPBbAi7WX6l2qqs
L+vDCrGD4m72IHuQ1ZeXjtr4TPW3GJutrS766S9Ut1DdXcZvZE3ZaDaaVWPr
4lrWIO6P/ap/iLXTjmKj2G3y/aING8FGsFvlG8S17E52Z8wD+V7Rmg1nw1nd
+M393SqsD+vNLmT7xF3sAfYAu0VeRV1XNpPNEC/Lr4rvwvrL+6krEt9DVIzI
JL/Lk9rSopp+P3V91RU2/l8xgE1j01l7eQlxibhafS1j07U3iwf0V6hboa6n
8XpsHPsbe4UNYB+Kzmwce5jdLr9QXUnWgrVg5/SLxH1r27I2MRfkG+WarNXa
V+KdiPsVffUXqFlgrI3POyI6sTFsLGsiv0jd1exu1pad1z/Fh2jnsDmsi3x6
PH/9Z/ga0cN1J9i9+lPVTTPWTl6bj2DPs+dZD3YxK8c6sg4sxU6KP8Uzit+D
dZAXVHcZa86as5/0a7JB2iXsadZRXVXWLd4zNpPdwWqwgexp9pRYE++pKMva
y9tlxUJibrGx8ZzYanQvq8ViwXmGLWGdWFFWhrVjd7Pf9Iuza7QdWHuWrW6P
uIMNZINYjfi+orgoE7+/sRna3fLb9e9TN1BddfnHojebyCayVvK6ah9iq2KO
in/Jt/NG7IdMMjdjjpbQr8C6qOni2twsPyvKGrNG7Bv9y/iloqyx2jH/tdvk
DfW/179e/wZRSb8lGx/zTyyN912MYavlq3xef3UfiDvZ/WwwqyV/XzRjg9j9
rKb8qLiHjWXjWFP5J6IPm8QmsdbyY6IHeyzWL9ZcvlHUZPewe1gx+UeiF5vA
JrCW8uOiJ3ucPc5ayOu455HsBfYC68Uqsw5sCpvCGrCWbAH7ZzxjcbGNZnM6
WeO+jncs3uNYm/X/wtZFnWtHxn7CprL1bB17kH0hRrPFMf9YP3krdU/GGs+2
swnsczGKLWKLWd+c9b5SKnmf470+Ib9LLGK75DvVTVLXla1kx9gxtoB1Yy+z
4+w4W8gWxdySp7P/mPJZG4y3VvdX7U62g02MOcWmpJLvH89hYyZ5LgvZdvk2
sUl+m3iMrZWvde1g134lHmHPsefYoNhj1M1lW7KTvfuRmCtsDtvMNrPx7Gsx
ia2MOc5GyL8U49kytowNlLdw7Ty2lW1lj8Y7xKazjWwDG80asMfZm+xNNpR1
YS+xD9lRNi/mPJvA3mJvsWGsKZvGNrD1bFQ8MPa9vJAoHN9Fvjjmr36u7GSt
jTV3SewD8gtEHrYp1h92Qp5P5GZvx3rhgue0B9gB9kTss2wp25udrKuxvvZk
a+N7xH2z+ey8OJVzH3E//eMcIJap2S/fr25mvOPxLrOurCvLG3sRu451Zp1Z
npz15c+pZI2MtTJj3rdjz7J98n3qZuTMjcmpZA2KtahAruReTuoXFBeKd9V0
EitiX5cfcu3sWAvYbPZu1LBxOetLCzaEDRXn5G3iubLd8l3qJsceyF5kR9kR
Npc9Kz6TF49nHefCWKvZaXmReNbsXXaGLdFuinnLpsk7+rzl7CA7yGbl7BX3
pZJzQJwHzmeSfbV0KjlHxXnqoLyteIrtke927ZRY09gL7Ag7zObknC26pJJ1
M9bPX+Tf8Jnsdfnr6sbIvxVPsDfYG2ysfIuoz76NvUW/XOwn+rPYO+reUfcw
WxZrh/yS+C3YVuP/TifnjM8yyX4T+85K8aOaYuJSdXvjN2TnYo0Tl7F98duk
kzPyV5nkfBfnvFfFb2quFmXUHTP+djrZwz7PJPtI7CfL431VUzLmgbptcQ9s
uHY+m8+6yz8Vw9g8No91k7+TTs7IX2aSs3qc2Telk73pi0xyjo7z9Crxk+tK
xN9x7f44L7H/ya+IYIdiH2e/yEuJy9nBVPIM41leF2tX/P1Mssf9sddlkr10
YZwN5GXEtZnkN5irvVZeXlTQbxDfJ/bZ+Ky4PpPsmwu0W9PJZ5/JJPVxXUr/
/+7jxgj3ciT2Tv5zPPe4R3aA/Rbrp/zKCLaD1Xfto3G2YmvYEDXvpZN7+C6T
/P24j9NiaNyrurnqusozxtOsOqsmxshziQyrIa+u7mP912Jt05ZhZXWPx1rI
CmmrsKrsK/0V6eT5xnN+Nc4J8jdEHv0KrIKxk6lknfxBXk5cI4bJ16jLa+x6
+fVKTsV6xvJrK7KK7NNUcs+pVHJdXL89zn7xO7Fu8m7q8rnu76IwqxrfjX2d
Sv7vKZJKvmt85z2xbqrLx26Q36DutP459rp2OVse50n50piX8qIiP9sce1js
3/G+xNrG3mPZPvOsvHzcH/sgzhTxDsvzxvvFdrMX2Zn4rFif2B72PPsm1v/4
O2wXyx2/ibYmq8E+0X9J3XfxPse7yd6P9YJla8vGM2Uf6Z9NJ/Mp5tVr8h/l
/4j1Xb82q23sh9jHYx/Q1mV12Y9xvmEltHVYHXZWP697Kaitx+qxz/XzsALa
W9mt7DP9wvGOaluxVuwX/d8BDdLMWw==
          "]]}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jtPk2EYgOEXoZRa5BAgSggafoAkEEcYCCMMhFEGA5sMhREHw4gmzpqw
wy+ABQwLjE72CKVWQ0IIiRwLIajo9QaHu9fzfV+T9+mhb2ZuMlMXQnivO8X5
VgfaehBCG7/wGcvs55/6EM45rBv3xpl0b4qP+USz5hd8w1G+4yQ/cZqrnOc6
F7kTz+VxuF8ii9+6VNZ1jjnmmWeBBRZZZIkl7nKXe7G4M8vc5z4rrPCzvWv8
FnOvyiq/c8Ozn3EN1z/i59WVlu33lR+4zbdc44Uy5hW+4kdOcIkjXOAgB/Ta
3MmXTHCM184b4hGfx/35lDXPD/lXrfqlM/Xaq4U9fMRuNsfvnml28SE7mGI7
m9gS36+kOc1GppjgafwNzQ1xLzo61NMqYdPLyf//xz/nGkph
        "]]}, {
       Line3DBox[{702, 1010, 480, 701, 1122, 923, 703, 1123, 924, 704, 1119, 
        1124, 925, 705, 1125, 926, 706, 1126, 927, 707, 1127, 1022, 1221, 708,
         1128, 928, 709, 1129, 929, 710, 1130, 930, 711, 1131, 931, 712, 1132,
         932, 713, 1133, 933, 714, 1322, 1011, 934, 1012}], 
       Line3DBox[{716, 1023, 1222, 715, 494, 717, 1134, 935, 718, 1135, 936, 
        719, 1136, 937, 720, 1137, 938, 721, 1138, 1024, 1223, 722, 1025, 
        1224, 723, 1139, 939, 724, 1140, 940, 725, 1141, 941, 726, 1142, 942, 
        727, 1143, 943, 728, 1144, 944, 729}], 
       Line3DBox[{731, 1026, 1225, 730, 1027, 1226, 732, 510, 733, 1145, 945, 
        734, 1146, 946, 735, 1147, 947, 736, 1148, 1028, 1227, 737, 1029, 
        1228, 738, 1030, 1229, 739, 518, 740, 1149, 948, 741, 1150, 949, 742, 
        1151, 950, 743, 1152, 951, 744}], 
       Line3DBox[{758, 956, 1158, 757, 955, 1157, 756, 954, 1156, 755, 534, 
        754, 1235, 1036, 753, 1234, 1035, 752, 1233, 1034, 751, 1232, 1033, 
        1155, 750, 953, 1154, 749, 952, 1153, 748, 526, 747, 1231, 1032, 746, 
        1230, 1031, 745, 1323, 1014, 1013, 1021}], 
       Line3DBox[{760, 1037, 1236, 759, 1038, 1237, 761, 1039, 1238, 762, 
        1040, 1239, 763, 542, 764, 1159, 957, 765, 1160, 1041, 1240, 766, 
        1042, 1241, 767, 1043, 1242, 768, 1044, 1243, 769, 1045, 1244, 770, 
        1046, 1245, 771, 1161, 958, 772, 1162, 959, 773}], 
       Line3DBox[{775, 1047, 1246, 774, 1048, 1247, 776, 1049, 1248, 777, 
        1050, 1249, 778, 1051, 1250, 779, 558, 780, 1163, 1052, 1251, 781, 
        1053, 1252, 782, 1054, 1253, 783, 1055, 1254, 784, 1056, 1255, 785, 
        1057, 1256, 786, 566, 787, 1164, 960, 788}], 
       Line3DBox[{792, 1165, 961, 790, 1166, 962, 794, 1167, 963, 796, 1168, 
        964, 798, 1169, 965, 800, 1170, 966, 802, 1171, 575, 804, 1172, 967, 
        806, 1173, 968, 808, 1174, 969, 810, 1175, 970, 812, 1176, 971, 814, 
        1177, 972, 816, 1179, 974, 818}], 
       Line3DBox[{817, 973, 1178, 815, 1269, 1069, 813, 1268, 1068, 811, 1267,
         1067, 809, 1266, 1066, 807, 1265, 1065, 805, 1264, 1064, 803, 1263, 
        574, 801, 1262, 1063, 799, 1261, 1062, 797, 1260, 1061, 795, 1259, 
        1060, 793, 1258, 1059, 789, 1257, 1058, 791}], 
       Line3DBox[{820, 1070, 1270, 819, 1180, 975, 821, 1181, 976, 822, 1182, 
        977, 823, 1183, 978, 824, 1184, 979, 825, 1185, 1071, 1271, 826, 591, 
        827, 1186, 980, 828, 1187, 981, 829, 1188, 982, 830, 1189, 983, 831, 
        1190, 984, 832, 1191, 985, 833}], 
       Line3DBox[{835, 1072, 1272, 834, 1073, 1273, 836, 1192, 986, 837, 1193,
         987, 838, 1194, 988, 839, 1195, 989, 840, 1196, 1074, 1274, 841, 
        1075, 1275, 842, 607, 843, 1197, 990, 844, 1198, 991, 845, 1199, 992, 
        846, 1200, 993, 847, 1201, 994, 848}], 
       Line3DBox[{850, 1076, 1276, 849, 1077, 1277, 851, 615, 852, 1202, 995, 
        853, 1203, 996, 854, 1204, 997, 855, 1205, 1078, 1278, 856, 1079, 
        1279, 857, 1080, 1280, 858, 623, 859, 1206, 998, 860, 1207, 999, 861, 
        1208, 1000, 862, 1209, 1001, 863}], 
       Line3DBox[{865, 1081, 1281, 864, 1082, 1282, 866, 1083, 1283, 867, 631,
         868, 1210, 1002, 869, 1211, 1003, 870, 1212, 1084, 1284, 871, 1085, 
        1285, 872, 1086, 1286, 873, 1087, 1287, 874, 639, 875, 1213, 1004, 
        876, 1214, 1005, 877, 1324, 1015, 1016, 878}], 
       Line3DBox[{880, 1088, 1288, 879, 1089, 1289, 881, 1090, 1290, 882, 
        1091, 1291, 883, 646, 884, 1215, 1006, 885, 1216, 1092, 1292, 886, 
        1093, 1293, 887, 1094, 1294, 888, 1095, 1295, 889, 1096, 1296, 890, 
        654, 891, 1217, 1007, 892, 1218, 1008, 893}], 
       Line3DBox[{895, 1097, 1297, 894, 1098, 1298, 896, 1099, 1299, 897, 
        1100, 1300, 898, 1101, 1301, 899, 662, 900, 1219, 1102, 1302, 901, 
        1103, 1303, 902, 1104, 1304, 903, 1105, 1305, 904, 1106, 1306, 905, 
        1107, 1307, 906, 670, 907, 1220, 1009, 908}], 
       Line3DBox[{922, 1020, 696, 921, 1321, 1118, 920, 1320, 1117, 919, 1019,
         1319, 1121, 918, 1318, 1116, 917, 1317, 1115, 916, 1316, 1114, 915, 
        1315, 1314, 1113, 914, 1313, 1112, 913, 1312, 1111, 912, 1311, 1110, 
        911, 1310, 1109, 910, 1309, 1108, 909, 1120, 1308, 1017, 1018}]}, {
       Line3DBox[{259, 481, 1122, 260, 494, 288, 1226, 509, 303, 1230, 524, 
        318, 1237, 539, 333, 1247, 554, 348, 1258, 569, 1166, 363, 584, 1180, 
        378, 1273, 599, 393, 1277, 614, 408, 1282, 629, 423, 1289, 643, 438, 
        1298, 658, 453, 1309, 673, 468}], 
       Line3DBox[{261, 482, 1123, 262, 495, 1134, 289, 510, 304, 1231, 525, 
        319, 1238, 540, 334, 1248, 555, 349, 1259, 570, 1167, 364, 585, 1181, 
        379, 600, 1192, 394, 615, 409, 1283, 630, 424, 1290, 644, 439, 1299, 
        659, 454, 1310, 674, 469}], 
       Line3DBox[{263, 686, 687, 1124, 264, 496, 1135, 290, 511, 1145, 305, 
        526, 320, 1239, 541, 335, 1249, 556, 350, 1260, 571, 1168, 365, 586, 
        1182, 380, 601, 1193, 395, 616, 1202, 410, 631, 425, 1291, 645, 440, 
        1300, 660, 455, 1311, 675, 470}], 
       Line3DBox[{265, 483, 1125, 266, 497, 1136, 291, 512, 1146, 306, 527, 
        1153, 321, 542, 336, 1250, 557, 351, 1261, 572, 1169, 366, 587, 1183, 
        381, 602, 1194, 396, 617, 1203, 411, 632, 1210, 426, 646, 441, 1301, 
        661, 456, 1312, 676, 471}], 
       Line3DBox[{267, 484, 1126, 268, 498, 1137, 292, 513, 1147, 307, 528, 
        1154, 322, 543, 1159, 337, 558, 352, 1262, 573, 1170, 367, 588, 1184, 
        382, 603, 1195, 397, 618, 1204, 412, 633, 1211, 427, 647, 1215, 442, 
        662, 457, 1313, 677, 472}], 
       Line3DBox[{269, 485, 1127, 271, 499, 1138, 293, 514, 1148, 308, 529, 
        1155, 323, 544, 1160, 338, 559, 1163, 353, 574, 1171, 368, 589, 1185, 
        383, 604, 1196, 398, 619, 1205, 413, 634, 1212, 428, 648, 1216, 443, 
        663, 1219, 458, 1314, 678, 473}], 
       Line3DBox[{273, 487, 1128, 274, 1224, 501, 295, 1228, 516, 310, 1233, 
        531, 325, 1241, 546, 340, 1252, 561, 355, 1264, 576, 1172, 370, 591, 
        385, 1275, 606, 400, 1279, 621, 415, 1285, 636, 430, 1293, 650, 445, 
        1303, 665, 460, 1316, 680, 475}], 
       Line3DBox[{275, 488, 1129, 276, 502, 1139, 296, 1229, 517, 311, 1234, 
        532, 326, 1242, 547, 341, 1253, 562, 356, 1265, 577, 1173, 371, 592, 
        1186, 386, 607, 401, 1280, 622, 416, 1286, 637, 431, 1294, 651, 446, 
        1304, 666, 461, 1317, 681, 476}], 
       Line3DBox[{277, 489, 1130, 278, 503, 1140, 297, 518, 312, 1235, 533, 
        327, 1243, 548, 342, 1254, 563, 357, 1266, 578, 1174, 372, 593, 1187, 
        387, 608, 1197, 402, 623, 417, 1287, 638, 432, 1295, 652, 447, 1305, 
        667, 462, 1318, 682, 477}], 
       Line3DBox[{279, 490, 1131, 280, 504, 1141, 298, 519, 1149, 313, 534, 
        328, 1244, 549, 343, 1255, 564, 358, 1267, 579, 1175, 373, 594, 1188, 
        388, 609, 1198, 403, 624, 1206, 418, 639, 433, 1296, 653, 448, 1306, 
        668, 463, 1319, 694, 695, 700}], 
       Line3DBox[{281, 491, 1132, 282, 505, 1142, 299, 520, 1150, 314, 535, 
        1156, 329, 1245, 550, 344, 1256, 565, 359, 1268, 580, 1176, 374, 595, 
        1189, 389, 610, 1199, 404, 625, 1207, 419, 640, 1213, 434, 654, 449, 
        1307, 669, 464, 1320, 683, 478}], 
       Line3DBox[{283, 492, 1133, 284, 506, 1143, 300, 521, 1151, 315, 536, 
        1157, 330, 551, 1161, 345, 566, 360, 1269, 581, 1177, 375, 596, 1190, 
        390, 611, 1200, 405, 626, 1208, 420, 641, 1214, 435, 655, 1217, 450, 
        670, 465, 1321, 684, 479}], 
       Line3DBox[{285, 688, 1322, 689, 286, 507, 1144, 301, 522, 1152, 316, 
        537, 1158, 331, 552, 1162, 346, 567, 1164, 361, 582, 1178, 1179, 376, 
        597, 1191, 391, 612, 1201, 406, 627, 1209, 421, 691, 1324, 692, 436, 
        656, 1218, 451, 671, 1220, 466, 696, 697, 698}], 
       Line3DBox[{467, 672, 693, 1308, 452, 657, 1297, 437, 642, 1288, 422, 
        628, 1281, 407, 613, 1276, 392, 598, 1272, 377, 583, 1270, 362, 1165, 
        568, 1257, 347, 553, 1246, 332, 538, 1236, 317, 523, 1323, 690, 302, 
        508, 1225, 287, 493, 1222, 258, 480, 685, 699}], 
       Line3DBox[{474, 679, 1315, 459, 664, 1302, 444, 649, 1292, 429, 635, 
        1284, 414, 620, 1278, 399, 605, 1274, 384, 590, 1271, 369, 575, 1263, 
        354, 560, 1251, 339, 545, 1240, 324, 530, 1232, 309, 515, 1227, 294, 
        500, 1223, 272, 486, 1221, 270}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJx1fHVYVVv3NYgioFgIdnvFDkwUnbai2IEoiGBji93Y3YGo2N0otk4URVFB
WtrT5wCi1070O7rWOO93+T28/6znnve42WftGWOMOdau4Ttt4NhCZmZmDYuY
mVkY1337olqdnK8irD987Ef/Wb9VSeywpH0aNew9d+yzp1oK/bywzszSarI9
E7G/sGsM2f2ul7N6ioHqOs3QpP5WkZX/K1We7ipF99sz4m71bNJ4egys2ktF
bV7tu3F6xxXOHpjkZZ2TTQ/37T7TooaSVuzMrnm88DMWaw6FDP8QPGnVK/Kf
cjWwwZoEdt2cfe7GxWx6apnZp/3ddLLuu3/s3eqpLNZsKrqi3THjf9OEesqX
dbZncsCRdtbP5mfR4udD88wfvySvvQ+f/mur5DWXLFfOjjbQ5dsbip68mkjn
D/fsZPx9rGpZauKbugZ63DO77XxtPMV6To1/e0jNjV0G7Hm9SU8Xz4yyezcg
jjq6XL0zc4eGLx/4rPznt46eLpvSSPcuhvy8mz/J8tRy9EnbZmGLdPRq5OBw
/4UvqOIgq59VLXUsV+r38X7OEq8o0z5iX7Gfp3SDLb1mKU3rgAbpvuW8NHTb
0atOoe8v6dHybcr73zU0ISXF7oFx7ZLbxi76zGPq/nfVk0vxWctnhWpoca2p
unHHd9zpPMJiiXfnLPnfamqU/Wt2t5CHfO3YkvikzCwqPeTE+5+VVFQo6kKV
IY/iWO0RYzXkRRb9nDP08JnJCqImwRMqj0phsWZRndPuDs+DMmjt/pFuzosz
uemr4pvvPTJQ8zXhvtvPp9Lg59pTk9squVTVU9UCqxrIs/hcj8CqyTS60IEz
LZ6o+GfnromdFujJvN22H9uzEunL4HXhSgsNn1t1f0bGKx0V+hbwQWmRQHmT
e5t/MDfuZ61RzcoM1FGvUU2jrvrE0ajlNwf0jtWyXMm/49PeVb/GkNx3ls/B
tP+IS8Qp4hP7iH3FfqrK1Jt9pKzCtK472ti21wodrc8a2vhYVDxt/LuqqfuC
iuV3VdTT8+ud1h64dZOSljm/dDV+D9+/9/e611lcX2+6vrwPzp8vRyzOhg/t
nMxiNdCuGpkalx8KckyZvEbbLZMPnqk6rEWknsJG/Xhh/G+6khnfvsw4JXdd
UjHvgZOeqmxxnLC5VBr9uBLUsVVVNT9r1mB76UAd3X7QdfbvwcmkKqr959cM
DX/w67ZhX2EdLXpjE7avcBLFug12yVikZbnSzYBv5rVLJJDcd5bPwbT/Mu5Z
5oEp/pHnyHvkO+IScYr4xD5iX7Gfg2xbfIiYkW5at6yf1X+z2kBfXq+au/jn
c6p09YpfdBUVtbT3LvLGM4vMxP+WKSb4DegZr6G2S1rvTehtoHfuw6KLekTy
e7dNCbpGOqofGWqtN67HiwycXG19EotVRzMDi19Iu6GmdWkHzmZGZfDJMdfM
xg/X0Va/x7YPfJXkyCPS/dcr+f2FmfGlcrX0SelUrHdIJi0oeaPokvlqdu5a
7ojNZC15Td4UcqlLGg0KSLj/KVvDcqVHL3r1mDU+meS+s3wOpv2Xcc8yD0zx
L+sOyzpkqj+om6ijqJ//zfMdd5DviEvEKeIT+4h9xX7OyH7X4tWsl6Z1vd3l
wRe9cqh0eIX+r5ezXF/R2UoNrbZsz6FJJQ6kzthyly3qHan7p0/UXd4jY0VG
Fm0Qz5U35MuXIZvXNViQms7tFtvdWOukoWXvFhr+rNW73706cq+Se+31W/Wr
sobCluZkGv+b6oxqan08Xs1yJfe7eZEzX2aS3HeWz8G0/zLuWeaBKf5l3WFZ
h0z1R9Z9ln3AVP/Rh9CX0I9QN1FHUT+R58h75DviEnGK+MQ+Yl+xnwOXvqrZ
9mOMaX05vFbhcWdzTf/ev3jVct9aptDwQnOVRybmknUt/077YqNZrJm0yF9X
YcKXbOpoXT+0ws9UjuzWtvTWDAVFVa18ffd+PZ0UfYVP5usvct9ZPgfT/su4
Z5kHpviXdYdlHTLVH1n3WfYBU/2XfZdlHzb1X/R19Hn0d/Qh9CX0o3z1nFE/
kefIe+Q74hJxivjEPmJfsZ9LNlplTXt937TO7PKz5kOvt1R6y8IXdSfdZ7HG
UuE+jlfXLHyDPOH8+SL3neVzMO2/jHuWeWCKf1l3WNYhU/2RdZ9lHzDVf9l3
WfZhU/+VuIclDjLhH+Ak4CbgJfR19Hn0d/Qh9CX0I9RN1FHUT+Q58h75jrhE
nCI+sY/YV+wnnsd/13/xfbn/9037L68v4z/aFP/yfmT9+V9/kfcv63+Sqf7L
3yv7b7Kp/8r9kfgnxYR/5H5K/Jlqwp/AncCh2H/gJOAmPC/0dfR5PF/0IfQl
xAPqJuoo4gd5jrxHvOWr52yq53Ifsa/YTxn3jBXxL/OF8+eLzC+W+WWq/zIf
Weajqf/K/OX8eEzmO8t8N+FPWR9Y1gcT/geOB65HPQHuBA5F/QFOAm5CvUJf
R59HfUMfQl9CPUTdRB1F/USeI++x/4hLxCniM189Z+ynrPuMFfVf9guW/YLR
L2R/MT0X9BfZj1j2IxP+lP2LZf8y4X/Z7yT/embiX+BF4Enoj8DxwPXop8Cd
wKHov8BJwE3o1+jr6PPo7+hD6EvYf9RN1FHEP/IceY98R1wiThGf2EfsK/Yz
Xz035YvESyzxEgMvSXzFEl8x8JXEYyzxmAvwmMRvLPGbif+CZ4J3Au+BF4En
AR8CxwPXA08CdwKHAn8CJwE3Yf/R19HnEf/oQ+hLqD+om6ijqJ/Ic+Q98j0f
PmfEJ/YR+4r9lLifsQL/S77A6/P1F8kvWPILBr+QfIQlH2HwEfB28HgTf5E8
E7wTfAe8CDwJ/Ag4Hrge+w/cCRyK+AdOAm5C/UFfR59H/UcfQl9CP8qnt5jw
D/IceY98R1wiTvPxWd6YL18k72Ws+L7ky5LPvjRdP189N90PdBDoIuDj4O3g
8eDv4Jngndh/8CLwJMQ/cDxwPeoPcCdwKOo/cBJwE/ov+jr6PPo7+hD6EvoR
6ibqKOon8vy/ea8G72XEKeIT+4h9xX5K3YdP5esvUi9iqRcx9CLoStCZoC9B
B4Eugv0HbwePR/yDZ4J3ov6AF4Enof4DxwPXo/8CdwKH/hd/pppwE/AS+jr6
PPo7+hD6EvoR6ibqKOon8hx5j3zPp7eY4hP7iH3Ffkrdk7FC/wy2K9Z7rdn/
1gEJsZWtR6sp2Hbdib3NNKSzSah6wVFBfTtG//iUrKI3mZF9bpw7TjE3vNMr
3s0i5T+rZtT4oqLAxxnntr7Rslzp992zqf8ufkGFbvf8t3BHHZ9JDN9YLlRL
i84bbN+Mjjb9e1wP15Gfs/yc813f9HfyXZ/k9RnXx7/H9XAd+TsZK36v/J0s
fzfj9+L3Yz/w+bpXF+9WDNt2x7HN9XTHQ9nyv5Wm+8B94X7++71td/B9+TnL
z13yXce0f7gOvvfff6fE/TF+B+5z2Vmvwz3o/1sDlbN7vTbi0u0D4z5917Jc
KSrqdrfFY6Lxuen/x+fy37NplddpOXndl83D1KRosXCz8zAlVRvrav7kvIr6
lL/v6J+p5ZL3ynW4WVNH5Q4ttT2TGYXPSX7O+Fxeh+V1GNfBdfF38Dn+Pa6H
6+Dv4e/jc1wXfwfXaRNlZZtaVEW1n1celGquJO27CA/f9hpyaOF9JsQhntRX
itdcl6In7lvvWnRZNQ3rOdN2W0wqdQ184enbSEOdzj6f7WbQUMmGKztdj31A
dbv9+mK7J4tyXCo+SD6kopMPzv+zZF4MLf/R4figCB3dX//g7PZs6CY7XfLH
z/yJ5wP2P75OGTuSyWungZqV/v3wZzcNjXlzdv8J1zC2Cio3OKlwDq161anu
/ZMKmpvboo9PnYuc1eLN2mY7sqjdlzqR02uq6WRk3BCvbdE85MizDUu/ZtOo
naXnPMrIJPcVDYP9Pj5hw/6Z5+bqs6jy9RnTrt1QUkL6wNC27RN54fTfTacf
zib6UsR1+ZT/zSNsJM+2kvVtcPWmMz33x7OqruXOrhFZdKrnssbR7f6nq3eU
/NtR9p3eB7N73LPM5N+HVoQU3pZFh9tNuTWjbDItrEv2PTIyeFapqE5V0g3k
MPVd1e0l0ujWrDqd1gUr+N4ze8fCPw20b8uX9mfaJZFZenCP+LsKPl1qoutz
I95acaPv9rhHybSm1q3y394rOcr9Wo0hEw30c9acr9V3JVC6S9myTi1VPETv
UD3klp5mFfJ1cQxLoiM3mhc9X0LNOutntetm6Gn4uHEXy1WJp2VOfgG3x6u5
yjP/SmWb6Glf1rcjm74mUNaDIV/Tf6p5t53D6rUeeprZuv2mqOhY6le1VvKg
MRrOrv9w6K+zOrrcJK5e4wnxdGvf/RaTIjQcN3/Ak1ZGnLvVEFPS/XgMnaRb
3Re10vIp/+0/9znpaN7A8ov1RePoR9zyQfb+Wk7YVPl9yBQjn/QPK3a/5Qty
/BxUylqv5cy8xfdtw7U0o2PXgBKxMVTuZaNe9jO19PD+nZXrbF/S7NkZFcs9
1FDzt8Uy2VtJA2anG2xdMil3v3nAsdY62tOpeteUXcm020+96tFKFdUdrqvh
WkRPO2vP9js9/ikdXj6qx/TeWipddnbDox91tPnscPO9S/dTpccXE2o30pN/
zT7vfxXTka7b3S5Bje+zT7u3X1yM/Ol7n/HtItdr6IFXhme2WyznHjib+GKq
gQp3bzF04kMVHS5A/3dd+st2+/oMnu1Uq/TCdD1lWvZd5XY/k+r5jcydk6zg
y63uO0d46ql8yat+/6jT6Geh4Y2/LlRxJ+e6LzcmGn/PjUrbm3qn0LCk4Red
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
Fd0IH2HosSKGNKUq7EnZbKAxIYt3Ty+UalqXT6xyPalJNgUuql9unv0TupW8
YmXh7ko63evD7ZWdssnnQGC1hcEHeHHdfu4NemgovtjXni/uGEhZqvzqmXWf
Mc/OiDlo7J9NYp+qPQb8b16fX09TZW2+NsshnbvGpPZXGuNjUGHbM8cdjfky
ruS90+8U/Dbu/fQhIRo6+XPkrudblbS3x1LrrXkqjglt9NnciMePf+z5sU1c
Jo0z1NcEz9XweLHS1s6HZ9TrlUZ7tY8MIVu0HJDnO+tRJw1dX1k7Is2Y96El
vTfsGaPjIsM+fEu21tDc4PT5o8yS6KFyk2dXGz0fHOP+4XK8mqK3hmc0Nk8g
r/cLIu5aZNPslJ5db7mHc8MHmVbffylp6Oid1RoNMtDxrYcm3DML4TP665em
ntXQkyLO5fYt1VKRWTtadhhylLp5dfqUd1ZPa8d8WmlmzOP67gGf86ZE0PKZ
xU4sX5dNN6s7z8wrm2haR8zfUyiq/2uKHTzfzDnkOvX1O3gxzyKTbg+ODHKv
9Jr2bx2ypPyLMPa8eXpPvaoqMvvstLOzTTZZSj3NJp+e9q1zMTe7qql86U2/
E9c6Kilh8Emt5w49zdSuSa9l5Hs2Tz/EFm2gIrW2rfm04Rpq0UzZJMxJzTfX
dFi+f5uK6k+yqqs/qKSDbzv4nNRpeKzzhg0Xrxr5zNnH/o7RmSTjnn+LPDDF
f3GPW+tVP3U8eOPutSknVZTVb3G38F7JlDXHbdbAE3r2XVI4pMZ2FX187TbC
V5NIeVFNnWt8y6IOnZotrF0tjj/ntf46xkNBVcuVDjlprKdvm2dVbn0kit0V
taxtnqsoU2t4VEqro4YHYo5+837Iv6rdqRb/UEsPrzdSRF9RU96G1gNXHD3P
W3fOr3/lnyw6G3WhcXSHDKp8cXbo+gdXiEotK9J8xGuy6lAz8Zt5tGnt13Xh
iDNN31DIg8CWu/23sZnL6DfDeiZThZXHftQPyqWSUk+zy6enZQ9cV2rroiR+
emNxnL9fMhlquqeV88whvxt9LnUqoeCF7oUbO91Op699Xwa1Oa2nad9XJRxp
oeY7Tq2sKjd5RZdSPArPdNNQRpddNvouWp5u22/m1O4Kensz6GacsS8/X//C
7slxHb8dU/pXg1MK8vd4af5lWyYli7rPqaIPmOq//+5mUzKNOLKp15bq2/IU
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
J24C91IJgXv5k8S9EidTIYGTGTg5S+QXtRb5xcivXiIfSeYj15L5WFPgcD4k
cDj/I3G4xO3UXuB2tpG4XeJ82itwPgPnS15A2YIXMHjBYVGvSNYrRr26JOob
XRf1jVHfmgjeQU0E7+A7kndYCp7CDwRPYQvJUySvIclrGLzmu+BBJHkQgwe9
FbyJDgjexOBNXoJnkeRZDJ71XtR52ijqPKPOzxJ9gWRfYPSFiYLH0VTB4zhG
8rgugvex5H0M3id5IkueyFckT5S8kiSvZPBKyUNpkuChXEXyUMlbaaPgrayQ
vLWD4LnUQPBcBs+VvJgGCl7M4MUHRd8k2TcZfbOM6LMk+yyjz/4UfJwkH+dJ
ko/7Cf5Okr+zTvL3XoLvc5jg+wy+P0voA5wn9AEuJPUBqTOQ1BkYOoPUJUjq
EgxdQuoYJHUMho6RJ3QPkroH/5C6h9RJSOokDJ2kQgE+xr0Cn5DEJwx8ckvo
MyT1GYY+EyT0HJJ6DkPPWSF0IZa6EEMXuih0JJY6EkNHgl8Q/kHgK+BF4Mee
EjdOlj7CMtJXGC71pftD799YHZtCFZfkVm53WUMzBj9rP/e6hvRu5b9M/xlN
Gd+HX93VRE/ZZcNfuZ3QkEOP9ApWm69Syd7VjqUpDWThPrRL7kc11W228vYh
yxDeqUmb5P0ki8Lu/modFWvsw4FnIsuGRfLLKbndJ9pm0w3Hnrldpyop8d65
trcS4zkg+9v8x+osetxj06/4T6/+z7lg1Fvfxr8712EFD6vjdmGor4FK9bYK
/jbByOvLOdbRNVFxdN+ntW1i9fT1ws7qzf2T6Kuf9ZXuI9VM8/9t4NVNTxuf
LFoy/kYC2b9y9XEfpuEH08Yrmhrr1p7s3uN7OsVT8129zazrGfH2sNLjj/TU
kd2jJeHOqbGkmvZ0kmpeEkW/fjrxYoianswbkxCzQ0fR90ovvOAdQX63xjZ8
3U5HvYMjpr8dqKN9kVP9/9k2lmZuune7Rrqe+s65tDJtoJa+Xpn0ycw7nAOS
OpQfd8xADc5tnG6eqKZZ3/nNpzexXGvpWHW3ZwbqYDG/1uia/1e/ypP9Imal
27s1M1QcONSu1T+ljTjz/tPWzkeTabHO3nVNqJrfeQ8Ibr/eeB8fpnXrtSuJ
FlbbdzTljoY1H6r4/LDRUUp2h9A+TxOo2hbNhMq7jHXWvmd01V1aim77OWq8
czzZjqrW/HBPY3/80KKfTT0j77Cvu+3PPozq59Kv0oA4Kr/zzPC77iryPtE8
IGGbEReu+FZsT78bZB4Xt+ClEU9Ou/yrrLWNgb7nnjCf8iCUW27oW7H/LB19
Ut++rD+io6Mfijdfsj+aI6LaxO2uqactc/qeeHjXyI+CDl35ZKfhWpUWX3M9
ZORdT7e/eRuWTPEBP9rOq6/lPUdfv1lYX0vfC1k0eHIoiQ5Mb+rz1UbHnx9W
tM64o6FDS+MUbsbfpZn4vmOTBzquv/uYp8cwDbU8diykh/H5ug17UPrelKfU
/vXz9HerFORfrNagRYHZ9PrfLRk9Z44im8bxUTHljDh+VYkBRS9k0QZlf5u7
3R9z6vjiRfz3aIh2Na5f8ZmeQjYPH9jjkJbrVal496udhhy9u017Y7zPHh2y
Etuu13HITLfaG0LVZK7pl9Pjz/7bx08c0U3PT69f6eA6Uk25p80VY41x2GrC
nEUlfO5Qu7RCnzr1TqcnZRZ+P7LwNdlazZsaMOwW9x95t8HAOwpyc13zpKdd
DrU7POVcrdJ6bpZmVWbDDBXNedxnf0vjc1dY3r9gFatnbbtybwxNVBRx90n/
psb4fz7l32ml9J1ouV1jf69hSXToULPZ837m0lKHgB9DfA38NX7QsrqsoA+O
5bt8NuaRS773aEFvP5LvPVqe+d6j1bqA92g5FfAerf753qPlLf1GI/K9R2uZ
9J3Mkz4U+ArmSZ/Bsnzvy/KSc3EfOSfHdeTf5cEFvC9L+vhM/j3MyZwLeF/W
kXzvyypIN5P7ye3lHKOB3M9TXddUu1LNQHFt784uEZrBYYoLI5c+yKDOESPS
rL4b686/sWVadMlg7mXm8PGpgopteDLoqbtxP2fsvPlsQTp7fFu6KKiamqxS
h1YfZOTl64fta9S6ahr7Vas5kIx87HTlck5hXzOpSvlPV248M/LmRf79zSpn
0VKvkdHh5onUeEmRqW0KJXKQesP4NPfX9Cn+U5GaHkl8p8iNZZ9qd+Hf2W6R
g4xxknZ4/oW7dxTc+2atUueH3iKPJeYzbY1x2P9EdJGQPRouH3Ku4sruj2lZ
yOSq+qd6mmC+b+rlmnp+WLWd78790bT5wqmcY8a8tr1UYnXfZwYu62Fd1vJt
LDUbU8x9kLG+1bDu1S1SncWTsya5hifG0/J7rbY8Mdb/z+079L22XUdXX1cZ
N+VfBbuYbWmlrp9JbUdvG+ZgrEd3PjYI/fJWwTs3Vu5ypZCS9u7c6X22iZqW
KeovHftMwY3iKxuuDFHTx0alqp/0UZB6eG6Tqz4K9p/ZSlXRTkeXR5zzX/DM
yDsGr+1v/y2T44aXmfapUhbdbZW73dctna9k8njl6Ds8e8Jn6/7GfGw4t1e9
CeXVnBeV2HLu4VE8YEWZk7vPZ5HXVdeWx2cZ60+C/5eAB6E0oIrDx+3G+tZu
oPO0NccMHHXUZ0In73CqUDPbLiHB+LzWnNfOsM3mRW4Xm3YIi6TKq4a3aWHs
g9v79ynLRtxy1GzdgoT3KvY8t8Vh56hM+h43tf+HGmqq7FSuVU4NNUe6Xb0c
aq+ki3UqBU5+pqBftlunGX83t69X5MJ54+8NcE142aJqGnmtDPkw5ouKLxcf
FdzUGA/bf5x5Ome1sW8GuJ17MvUpn0nNa1DBWPcC74zr66XX8IleDcc79b/B
bVrd7LTd2kAvP2ZWmJCuZ4stLw9OCxjLLz/FJG009q8Nmq9+s59kceFSlYdU
LBpCRz8O6HLe2N9vPbl4IvW9iqq5HPO5laThCjeK7NxmvP+X7ePbFfpXQT0z
nI+XMfbVilMW+543Pq9Jhzoey1iQToPHfQqNNuLVbjN9Xm82xnOPps1PVxym
4kMrZ/KEAXHcJqD/hGXG/pL+LGF8FxcdD7a0CrnmHcETPja3CTT22cA51Q76
G6/fOW3z0SvbdTyp0JvWGcY4ue6zYWvXLhlUbcDjtcZ84tNN4txzjXnU42b8
UnWImruH2lgWnZ/Eo1XcPcjYxw+W2d39ThM9v3YotGLcz2iulT5+Q00jzhk8
fqfBITSDihTd2SqkmoH3nfqpmm/M0xtuc672u6zh45ollXbEpvB6+zkxI414
qW2+cwGon/L7JL9P+P6hfL531JNB4u+ypfi7tF/+XXmf9EbcJ+E+5e+iHuJ3
EX5X6wL83qFif7i62B/C/sj9ZLmfNEXuZ5rYfxou9p8myv3vKZ4XHRPPi1rL
54W63zyfL3qCeO48RDx3wnNPEnHCMk4IcXJTxBVXF3FFiCsZh/Sj5N845CMy
DpNF3NLYrX/jlhC3Ms4pRMQ5Ic5lXtAIkRd0WuaF9P/wINmv0C+WivzikSK/
CPl1QeQjy3wkF5mPMn+5ishfQv5uE/nOx0S+00iZ7wXpVLJu0BxRNxh1Q9YZ
eizqDKPOjBR1ibJFXeKBsi41EnWMOrz4W8eov6xjYaLu0V1R9wh1D/0Y/Rl+
s4uifrJW1E+Kl/Xzvai3LOstod7uEfWZA0R9poayPjuLes73RD2nXbKefxH1
n6+J+k+o/7Jf0ETRL3iZ7Beyv1AZ0V/YSfYX2Y/oruhHjH40QPQvshP9i5fK
/pUu+h11Fv2O0e8+i/5Ii4r97Y+E/ih9jxyQzx+7SPRZbib6LKHPnhR9mauL
vkzoy5aij/Mm0ccJfVz2fW4h+j4Nk31f4gS2FziB7kmccFLgCo4XuIJY4grw
KId8+tUKiZ8WSTyF+5f4kL4IfMjvJT4sSL8C3vLK50s8Pv4v/uRlAn8y8KdS
4FWSeJUfS7zqIvAtSXzL8yS+HVSAH89B4GTqJ3Ay95Y4uaHA1ewscDVHSly9
SOBwkjicgcMlbqfLArczcLvE+SRxPteVOB94UdY3E77dIvgCJQu+wB0lX9j+
9i+/YMkvGPyil+AjLPkIz5J8RPIXkvyFwV+CBd8hyXf4sOQ7kh/RbsGPGPxI
8imSfIrtJJ9yLsAPdkrwMnokeBlvlbysyJu/PI4kj2PwuLuC97GZ4H0M3ucl
eCJLnsijJE8sIXgl3Re8ksErJQ8lyUMZPFTyVpK8lcFblwieS5Ln8l7Jc2MF
LybJixm8+EgBvqw5gneT5N0M3p0neDotEzydwdMnPfnL61nyegavfyJ0AJY6
AEMHUArdgJ8L3YChG+TXZzDXk/oDXRP6A5eR+oOD0CtI6hUMvULqGyT1DYa+
0UnoIRQl9BD+IvUQqZ+Q1E8Y+kn+87m9/sNf/q//6qXQbWiZ0G34qdRtngid
h5KEzsPQeZoJXYikLsTQhWyFjmS8j786EkNHkroTS92JoTs9EDoVS52KZ0qd
Kv+cFHrX3Hea0Z+UBur5tMnC2Vuv0tJxsY7hxuvLz7m9+Jzx+f8DS5zcKA==

     "]],
   Axes->True,
   BoxRatios->{1, 1, 0.4},
   Method->{"RotationControl" -> "Globe"},
   PlotRange->{{-1, 1}, {-1, 1}, {0., 2.999999142857204}},
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.539348020127677*^9}]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["ContourPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ContourPlot"]]],
 " to visualize the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Function]", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"x", " ", "y"}], "+", 
     SuperscriptBox["y", "2"]}]}], TraditionalForm]]],
 " ",
 "over ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}], "\[Times]", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], TraditionalForm]]],
 ".",
 " ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4443490719553337`*^9, 3.4443490744111*^9}, {3.444349243427834*^9, 
   3.4443492464133387`*^9}, 3.4443492831775723`*^9, {3.4443494369609203`*^9, 
   3.444349440481529*^9}, {3.475791436184556*^9, 3.47579144390418*^9}, {
   3.475791522924747*^9, 3.475791523336252*^9}, {3.475791562930889*^9, 
   3.475791574979184*^9}, {3.475791636044465*^9, 3.475791644821006*^9}, {
   3.475791677265746*^9, 3.4757917423343277`*^9}, {3.475791797870162*^9, 
   3.475791952189047*^9}, {3.5078953881563873`*^9, 3.507895402553184*^9}, 
   3.507895452825522*^9, {3.507895504855258*^9, 3.5078955051756153`*^9}, {
   3.507895569106813*^9, 3.5078955691069098`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"x", " ", "y"}], "+", 
    SuperscriptBox["y", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.539348029422267*^9, 3.53934803326193*^9}}],

Cell[BoxData[
 FormBox[
  GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJyNnAeYVUWWx9URFXVAZ8wYWEAcc1jTIFoiGFAU0xhQFEOLgDmgII6ugUVQ
EESUIGAkGGgkqNhaoG0kiCJ0o4IN3U3nbjDhzIqz/e6pX719//u9b5avv7nz
f1W36uRzKlz/49pbLyzYZquttjpiu622yjzt30bP87v5N387/+a6iN/OwG83
RDy2Q/cxHbqvj/j7pP+3EY9L2r+KeEKCP/C58xQWgYdbuwOPtPcjLrHxI37S
5o94rtEXcanR73Ln26g48qlP+AXDLxh+wfALht9cORYWgeEXDL9g+AXDLxh+
wfArelOc4gusT/gFwy8YfsHwm2snhUVg+AXDLxh+wfALhl8w/IpdKk7pTfkC
6xN+wfALht9cPygsAsMvGH7B8AuGXzD8guFX/E5xyi5Vb8oXWJ/wC4bfXD8v
LALDLxh+wfALhl8w/ILhV+KK4pTfqV2q3pQvsD7hNzeOFRaB4RcMv2D4BcMv
GH7B8CtxU3EqrqjfqV2q3pQvsD7hFwy/YPgFwy8YfsHwC4ZfyQuKU3FT44r6
ndql6k35AuszNx8VFuXmo8Ki3HxUWJSbjwqLcvNRYVFuPop5T3EqL2jc1Lii
fqd2qXpTvsD6hF8w/ILhFwy/YPiVvK44lfc0L2jc1Liifqd2qXpTvsD6hF8w
/ILhFwy/UrcoTuV1zXuaFzRualxRv1O7VL0pX2B9wi8YfsHwK3WZ4lTdonld
857mBY2bGlfU79QuVW/KF1if8AuGX6k7FafqMq1bNK9r3tO8oHFT44r6ndql
6k35AusTfqWuVpyqO7Uu07pF87rmPc0LGjc1rqjfqV2q3pQvsD7hN986Quts
rUO1TtM6RvO85kHNExpHNc6oH6qdqh6VT33ekuk+v8HzhH+wrRnLIr7Jnk76
p8bhPfr/9q/Mv++djsN82g+c76nzMg7z6riiV+2Xok9/V7kx7luJvBs9T1NP
Y97f9Qk92k9/1/l1HuEv9XueeV3HjPmMqfBnZx4daqJcwAuS/qsiLk8GWBzx
m9buwDwZV58PJfb65v973jMMu3x0tLNx3As2btQ3WOdlvBX2vlM+aFeMHTAu
8+qT/mDlg3n/3Tw6Dlj5hC/slvEVK5+0q92D6c/8tEOHYuyMeKPtjAfdYOKn
2o2uY2knnoKRh2LGIX7STvxU/sDwz/u0g+GP/viR8qd8qL3rOoZ29KUY/yDe
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
wwd2jx+B4UfPyfAD+NPvQ4hveg4J1u/soEPPSRkPenhf/Yf4BD26XgAjH713
QjzCD/W8Ue9HYJ/oWc8DdV2l8Yv4oPvYYL2fRX0Dpj5BTryHnPCH3Pq0sAi5
KZ3MhxzAuXG5PtJDPGV+xtV9OfjV81HkhTzV/5AH74OhF3kS36Bv+S67Nv+7
PX73d9eXp+/Z+651qe9oGu+/7fRePzf6GnvGdvh6Z+w5zX/Ze7qdHt69+S+7
71Qz8cVbR75f44du22WXbbs8Gf0GO3unftJu19ySXQfOGlp63U9zav2Pt9z+
XP/rN6S+a9lwyrsPll5cm/1+uuDycQWXZ7/DXNvv7mkrn2v+fWHLSQtbLknd
99ps4/rXbJ7U/a4XWj7Q8bfxZf7pnu892/O90tT5zL0mp5j3nrN+frK9F+vh
t4yviGcOe7nduOHVqftc041Ov8bojvVtoq5/NUV8VcndvUvuzt7XGur+/HuP
X8tT97VO/UMiZ/kupE/noIeYl94J8oOPoDen969KAz5p8+oWxa9k64IFpvcY
L5HjidbPrQty0+/HHjG63XjTW+p7rirTb5T7vNAOnzNMjnG8K00u7stA57uB
7hY3tH725D4bXK/6redsv2Sk//3/yvPUhUX0472zQj/e29xvyi/9pmSfvMc4
t372/pA9jm9wd9jT8+T38pYXjjpwcpk/dNLA0rc+qPGbKl58atR5a/3XUy58
4OwtNX7GkeUraxaX+i53Tr9s+b61ftBFJ9x90Qkrff/MdL/U+O+unrRzu9ZL
/LDOt+3e0KPGFzTsekXDrov9zEdOmvHISTW+18DVBc/0XuUmj3ux7bTKav9o
Is/57owLdjv9gt0q47zQwbzQwbzQwbzQMdHGddfZPJEO6IIO6Opm87o3jA7/
9z9dfOKCgkZ32JpjqvZZ+JaHLuicbu+7s+39yAd8BXpcf6PHrTL63XdGf5yn
a5i3etjIzJ8rdr996H4rj3TDB/MwL+MyD+MyD+MwLnzA1y6G3YOG/bxjeo9/
o8cnru+CzP+p9yc3rDilYcVa1+qrtn/8qm2Df+OShb22HlDp/lmdmajRb3n+
84s3H1Drtn4hefoZMzP/st+bENf0O42dPjxq5w+Pqvb7zNx7+g1TF/iJ/9V/
u5l7V/sPuvUo7tajwtU+sba6+c+vfuLBsQPbl7mtS/70jp+XPVdts/20cZ2X
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
yBU5/y9ZMYyi
    "], {{
      {RGBColor[0.293416, 0.0574044, 0.529412], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[CompressedData["
1:eJwllMlvSFEUxt/rO89M2ygxJKqRVk01LIw7IsHOsDIsNObEEGNrSoQa0lj4
A0wJMU9BRdMqMSywRCgSBImYgihNCL8v3+J7+c499937nXuGsurVs1YVJEmy
EAR4z+dHmiQnQAf4N1DAhlZwME+SCdhd8U0H27G/gGJ8d7Hv4PsOMuwG7GL4
ONAFPhkMZu8R7KPwj2AO/Al4Dh8PAn4anIX/Bovg58BF+B+wFF4IFqDzH/bn
sCZpawR18KmsvcC3BmyBzwAv4VtBHXwoaJUP7AzfobvOgFPw1+BTao3/siTJ
sSemXpPvA2hPrbELvErxwoeCcu6/AvrC94Cr8BX4e8DrOauiQ5LMDcf6DDyG
7wprkWZpHwNy+Aiwif87glJie4h9X2+FXZg5J8rNX1AEv4W/BV6DvzP8JGub
4VWgP/Y+MBK+P8z1JnqbdaCO9+zE/l/w9aAY3wHuqETv2rCvkbUr8AbO6Aff
C67BZ7E2LHUOlctRIODDwXrlBlxNrfkFfDXopfiw2+C7c+euiLVd8CWgvsBv
thg+Ag1Nmd/kcFiTtEmztFdht2SO+bi08s9A/m/GPwj7EChPfIbO+qU3yfym
etsy1moz52wfe0ux12XWuEMNwZ7e7L2HfRf7Xbg3xuJ6C+/F/nmZa1K1+Spc
27pTd/fBX41/K3aJein3WWex09w1odpYgr1c/yqnqWu+O3xI+K2kWdrb1U+K
D/91+MBwbaumVdul4bMVg2LZkLuWlJPR4TfR2yhmxV6fu1aV02nhnlXvKgcV
uj93rlVD07Fvh3tdb/JZ/R/Wfpm1r/CK3LlXT4wM96x694Jilr7cvVkCBsCL
wv8qZsW+irXl8J5gpWo53JuaSZpN3cJnqQfViy9zzwLV2CXsmeFefAoehXtM
vTYBzNdd4VpTTpSbxvBbdiWet7obVKfugWXwnblnXXcwib2Tw9q0Zw++KeFY
pLkSe2P4rJvYN+A3w72pGVkT1iRt6pnZ8Afh3lbNtvP/ttyzUjN2vOor3Hua
qZqtP8O11MRam2LNHZtm7Fjsa2GfauQNvvNh7apR1WpzWJtmhmZHbe5ZoRmn
WXcsXNvqKfXWf5O8uLU=
          "]]}]}, 
      {RGBColor[0.4962196443121998, 0.4100251672922865, 0.8144770558480205], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmnvU11WVxn+/7/d8X61JpVLwUoqVr6gFNq0ZQFfaRKbEzcDbUtSZTEEJ
mUlQ07HLCIgXLBFEUEBMQPESAl4INQRbJs0ouCzUFwMv02UEDDSJmdXl+bzP
M2vmj8M+v/M9Z599ztnn2c8+L4d/bcLIS6tWq/Vf+qeW3K5/ZqlsUP3Utv5R
+wjJh1X+rDJUZUxptb4i+aBkn45Wa7TqE1VfKdlW/7Eatku/L5c8QPI9lQ61
T5D8fXGfcZI7Vb6hPl1Nq/W26meq3kPy9MZzbVP9nWIbdkg+prai+hmSN6vP
NNW/LjlU9u6ltt7q2tlhuy9R/1EqleovSb6vb39W2aFycu32j6i+R6Wt+nbJ
AzV2leor1L9/5fn2U7kU2ySXS65uey1XZeyfVF5XeU/lbZVfpR192zInc7cz
z570/0P6bcs4xr+m8mb6v6GyRWv7gOb6Y7Fde6l+dtvfOLMPq/xGZadKX8YV
9/mD5G85A5WVKt/S73Eat7bY3j2Z//y29Z8n+WJs2RiJ/VtV/kdj5kgeLHlc
ZVufj43/nXW9pfKOisxtLWp57nuyhh2x9U8af4fkk5JXqozVwDWSz9Xuj50H
aP+Xq/0htY8uPtNfSF4lxUuk5MrGc76ffTqh8tz7Z37qJd93ZP4+0t8L30Ov
6nNU36z2ZbXXwp5PUH2N2lexdtpVtqi+XHJm7TPdlv1gfzZK1xHqP1myR+bh
LI5R20tqu0XlOzJkkuRzkv1yTpxR03ieT/Bduifmrs3W2C7Jf2ce5lfpp/Ka
ymaVTpVbNObj0jmkeP4NbdswTt8uUVmrsbPUvl5ytcpC1e9WOUD1n8Ue7LpB
bddXvp+cPz6ND9yq+ozKZzdW+sao3Kf6M5LrVA7inumMOtVnWrEv3qDvV6v8
QG3fr+wrv9O3kyU/JPn5rP0E7kKxvo9LTlffm1Rm6fdN2C95jsqAyv6wQuXp
+C3+O5x1qm20yr/kPnIvH9PYR1U2adxK/T5H7d+UnF/bx5a2glmSZ6mcqfYf
VcYacGSq5BUq56n98dzrFZVtGaryQLAOzANvrlPp07If4U//0bL8Uergyr/V
xpaHNaYHZ9i47VqVw1s+12+rPJF9u6b23g2p3Y8+nNX42vbjmxNS50zG51yQ
l6Z+W2WdnD/+8I3ae3hAbf03xDeuqu0fgP2TKgNUvS71z4Hfkk/V/s4eLsg+
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
x76tyFyj4yv4zBHFPIC97X7zCi8gPv6ysn3Yxvc10XOdxj4FfyrO+6iTx/FO
wtkQC25vvKecMxwWHAFDyAHBfTD8ocpzoH9u4z0Dd/EpuAP+uzvcgLwY/90e
nsD+EPvIr7elnT6Di7nWUdyF2m9zneEiS8KdjizmYR9rrGNn9HQlnrLnmzN2
QrD8vsp36++Sm5CjkOfDabZK9ivm9J2Nz4/zhnvMjP1bshbeGhizvnbuRt6z
b3E8GNk4b1oaXorv3B3/Qf6wMh87tvb7Y7/ogRuTB3Gv0Leu5TwAH+uOBY3H
/m2xnoXV/+VRC8PzwAO4aJ9wEt42r0o8h3PgS1vCU8C9oVnjsLRvTf9+GUuf
JTlH9u3vi9d2dOMcn3sEHyZmPB7fmJJ7yn0lr7w9/gwXnV+Zl+LXt8e370o7
e4Kclzr6VkUnc82JHngJeSrvEt+Nv+F3vFvcGh+G15DHEGvIg8h5nwgmzM68
YCG5EWvkjt6We9oRW+HQE/XPAtWPLf4+K33QvSz6ySvnZh+wCTt5A+FdhHwS
nt0nMZHY2Jk4TjznHWV67tHNlevYf2F4K+8AvCn+IPeRs52W8yXXoM79542H
WIK/zKy8D+SnFLg+3Jj9wSZ+0/+G4A82LI2tYM/c7PMF0XdFzmVBzo57yL3q
5sCV9wK8XVbMi+BQb6kcQh+1vVqbd8IheMc4JFyFtk+l/Yj0gZcOC8bhm/wG
y8Ax3j8Oztg3pL8XPCn8kPqN0X9Q6sRzfAi8PSc6uzGzch/2lr/hHBhuyXku
z5m+UlsvevDxd3K+fP+b2lzm242xb2Cxjp7R82gxj4JnbarNLbgP5Bft8JCX
G+vZlD5r/h//2CcxokfG0sY48hLOmji9M7j6Yu08jd/YTM7zv1wZic8Qrx7K
HSfXQQ/visR9OAo8hDMin2Sv36v8jXnQvyt9ji+OI9fK5kMbv90c1nh++tEH
jovfXBH/gfvi6xfXzt/hiODo7uAnOc2YnC++dkH6E6M642Pvpz9xYWKwlzp5
0LvBK2LlrtQXZ665wXX6k6/ydnFWba7bbvy2WzX2ZWJHVzDv3eAjOrCbHOc7
jf3je435H7xuU7E+9MLp3yp+m/hPyf2Tn/B3Tvg1PJv85PniHI1c7eVirjhQ
OicV86D5jWPUkuAtvgoWgB3kgaxz78ZrvDN7x9vIhVkv8qL0J0+Du2yVfKb4
ju1ovH5sOiU4Njr2s+ZdiRHENGIS8Yj3Et5NcMFxaSc+8eZwUm0/IZZ9NvvP
N8bzDlhrnQNVrzr8dzTqcBliemfu/sxin/txY33o5U2GuE0/Yveexvp/nrcv
uBR/xyJnm577grw57d1/d8oa0dEnegZFf6/EiHOz9vNrv9kRx5D8Rjf4cV70
k6sx5qzsB3/b5r1iQfaZ/HhRMc8gl+Vv8Pz9eqtsLx1++2s6HLMHxQb2jVhL
bOp+p6sdj4jDx2Y/905/4vzuvOselbcp3kx4D9kveTR/170mGIDvgKmv5l6f
VvvtCD/8bHHcndQYM8AOsG5U+pFb8S51evqDT+AUOEbuRQ7WP3jCGwrxiLep
U4Mt+6Y/WHZ35qW9Z+bCPsaNqJ3Hgl/gyOJwDd6d8P/xjePZpbmnXcEE5j01
NjybNeJLzEXuge3wd3g8MYr7vTk+AN+nfXDWgi5smxzuSHwnt8IGMG1s49h8
ceP9GBm/4v9CDKud1/A3Wt6JPsT9qv22BUed3JjDTG38/zD4/xivqL69cexb
VzzPxsz1vZK3ow7vw+D4CRK95HiXNOYD4ySvDybwVkTusj2xG7/Avt4t20id
/PmyvM/wf0kubMwBLmrsy6fUzp+p498fTYwA2zkfdAyJnovzfsH/ARmRs+Qs
BhTnYtc01ndy9MxKbj9H8q+XiHhu
          "]], PolygonBox[CompressedData["
1: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
pho2LboHVC+oGB7F/x+XSWK4
          "]]}]}, 
      {RGBColor[0.6135233943121997, 0.6074235672922865, 0.9106318058480205], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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

          "]], PolygonBox[CompressedData["
1:eJwtlVmMVkUQhe/9/65/EAZIYIzAKDhGgwRfQYzAC4sooDKCgQdQCMYEIwQC
Kr6wJEQwLkhkADUiixFEVqMxshhHAjNoRBh2CathVXGZEVmH73h8OMk5VXX7
dldXVVeNm1Q9sZBl2SyQwMLIsgF5ljVgXARfgHEh+hgYAl+FbSr8DP5P4UPA
WvSL6KHwVsn8H2xn4R2xPQcvx9YJPgW8D38Y9IAfBOX4p6APwev5Zhe6Ej0D
vhv0KWZZb1AqZdlgYibo38Q8Bq8KrzUQDCZ2EHoVvufRj8KXgxPwtuA6/rbo
bvC3iZmP3oluRi9H94fXYtsOb4dtOnwumJN7D2X8vyacm8vYzuF7En0Nvg48
Ad8ALuDvDErwuaADvlr06/AtfLMN3Rp9Bv0e2A/fCGbq/KDAv34n5mli/wXz
uJf22I7j66Nv8F0mfhv8V/yj8L+EHqGzo1fjbwLPwreGY0+hH9da4b3MRt+j
uwVN6GHgQXzrwazcZ9gIvw9/HbxeOUMPRXfJ/c1m9AvoYehq8Ad8E/gKHvgn
wscTU8q9xlvwZbq/3HeyAv4IGA9fiW0gfE1yLq+CA1ofvIO/HXoCvDpcKzpz
G9Va8r/7YfsgvIbWKpKvH1Rf+Gty71l7r8O2IneOd8H3ghbwRmzP4B8ezuU0
8BS8ApzEtxjU4F8a3stR/B/Bvw73hv7xbvI3+racNTegvw/v5Tf8I9B3KIe5
a6ZDuIZVy9pDA3y06l25BKfhk8DI3DlthB/T/4mtAF+iT4S5YhTbHRzJ3GPq
tZnoO+EXwSbVIvqb3Dm9H74f221F97B6+fNwrGpAtaAeVC/W6Q7hnUAtvA22
a8k1odr4BdvPqr3wbLgdNCf3kHpJ33wLb8T/QNF70t4CfVfBPd8Z/Spojz4L
1uD7LMw1czR7tKbW7s4af6EPh3OtGlQt3gQVBfdwJbxvcm30BJXE9gUjC+4h
9VJZ8qy4hD4Fz8FY9Gn0keSeUG9Ug16aNWBJ7proHZ4Zmh36ZkD8P2Pgd7On
c+qlcG9rxs0IzyjNqvm6A/hD4bU7cmeH0HtAQ+4Z1ZJ586ZqouAeeiPcs+pd
5ey/3CXfjc6ss2uIay190y9c06rtMvbzE/pq8izWDNqcfIe6S9WEaqOZmJ7E
3ovtteQaVC1qpnwCPx8+23ea7/CboAd6N/p6OIfKpXq6oNoL5/4V9tQ1eWZq
dmrmafZ9rP4qeCZoNnwY7i3NvGnaazhXmsGaxa1K3ptytDd5xmnW7cO2OPzm
6O3RG9EieYZqlqqnxsD/DtdOPfrP8Bl0lipsF8M9ql7Vm7AjPMM1y3XGG+Fv
9K1quElvW/KsUg/tC888zb5R2CYn50S5UU4z9r4nfBd6o/RWvZz8FigHKzX7
iakntBcxRfiS8Nn0JuttjpJ9elMS/Ivkt0EzQbNBb6TeSq3xY3INq5ZV81eK
7lH1qmbgMviF8NnVc+q9LeG3QjW+CH0LwlwOYA==
          "]]}]}, 
      {RGBColor[0.7129284647707331, 0.7671398557640955, 0.9128979352826735], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1lkts1VUQxv/3f8+5EmrixsRXkWhcKBgX1YQF+MAoIviKSIsYbS2WlJSI
brCW0mqpunDhI8b3QkAFxcRXoqaiRmNvE1qooGLiAhIVK7oBX7GlgL/P+Vyc
zPznfOfMzHdm5t7z2tfdem9ZFMUYq8q6nY9/WBdUiuJkKooPsb2Ri+Jn1rkA
dmKbVQ39HjBfY18DfglyNbKDdQX23cgu1jz0Hs6sRf4Kphvb7Gp816txl+7Z
zt4h9t5CToPfht8t6JtZB7G/hvwlh137so1z9gByEfZVyOuQR1gXYR8B04dt
Dvp67j+OfYSzNeRDKWx/oq91nIv4vtHfNyA/BvMc+CnkUDV8yfe17LWBuQZ5
vXNejHywDL/3c8/lfLeIB+TbrMPo7yPvYG1EX4n8KgdPrdx/p2LCfhfyKu64
krWJvTH2mtCncvC6i3Wx3sr6hWCeYm8UvSWFbdQYxSyuFU8LmB70FcgFrOXo
83O80R7WAvDjZXzrvW4rA9NQBDfiZD56ewrcM5xdkSKOp9EHkY9Xgl8V0zrz
+a5zFweyaW9pEfjLnON9xsu+rAzf8qvzXY5N77ixErV4fiVwp6L/bbxs84xX
nOJFfM0tYn+ZMfInbverhnLEcAL5V446OYrcz5qJvoP8Hktx5iS2N12f252L
MIrxqM/+gfyhjHoU58r74TLqrBOZqhHjOLga+lbu3ura3ux3f8Vv/02Ouztc
w7qjbt4Uj+JvBDfMeh19wL70Bkvcj0tzxDLs/lId9ZpH9Zx6T3copw1l9GO3
5QdFnKv7bK8xOlvUgjfx91uOXp5A5mrkqNqTrDnfSc61ep58Tz7nsF9J0T/q
oxFkndXE/vIUHIiL78DNxNdC9L3YJ1K8bQPyamPExWL34F5zuNBn1Vfqr305
7tX9ozl6W/X8LfL3HDWlOTfmGaJZMuG8DutNU9TRKSn4HHKP181/o/tsyPPh
U/e+ZsAs72uO7PJsVG22mRPFVPNcegd5jHUp+N346i9DF+c3pajfTzwzOtzj
N+fon1tcR4pP79VcxhwX5+/lqB/NvC73uHqqdF7KT7NB80vvvtJn1V/PsncJ
+unc8SjykTJqT/XV6V7b5/do4K1+KqMHxI/qaIPvFHaNfxeGPbNVt932K3xf
ivPb8HUcOc1qLCIHcaW6uZu9TehtOXIUJ4pzhmtDNaIYj7gX2s2x7lFcP9rv
oHMR5qMc+CdScK2YVRMHnIvw7X63uc5FeYj/HTny7LHfQfOjXlT/611nuz5U
G0+Cm4N+mua/6pO9GbXwech+1VuDPvsimGPoX+ToceWuOSB8r7nVHQPORX4H
jNHc6HfPTlaDP/Wf+nHK3OruSdfJep/XWf3WDfmdWo0R/kz1KfoZOWa5ZpRq
SX3T7nkrucq8T9uus1tSzIg9nH01R50+oN/YFHN8Zw6/B83VZzn+hzyfoh6b
XZOq/dX29VKKWvnSv5/9jv9/LsSh6qvbXJ2tmY9+Vo64pv2uelPNKtWQ7ujz
Pdo/YUyzeRKPTa5J5SV7i2vxv/lqXy2OWXhh26xrNna6f/W70ed3H87h62Vy
+jzHG72A/i++9jTG
          "]], PolygonBox[CompressedData["
1:eJwllElIllEUhj+//zvmALVpEY0ULZpoYUKQYRZUhKQS1a82+ltBIFmbotCK
JFsEzWDTShsoWzRABdlcCjlmEy1CqIy0jTSRmtbzchYvvO895557z3Dv5ET5
im1hEARxEIEsC4JVLKwE8+C3QA98Z1IQ3IRfBF3oTegL8DZgsSCYxd4uAuSh
y7FvB/nw9WA/vBF7Kvw9PumBnzEffR9MIVYc/QD+BAzCp7KWj28heg/6Nnti
8GPgBboFFGJfi94X+hnr4M/AEHw8/h+wD6AzuF8l8arRSWActo34LMa2GuwO
/Yw4/AeYgf8dfL7DT4JWbO0gwd4G9O/Q75yHHo2eHXpOyk01U+3kU4N+hO4P
Paez6Gbdh72lygE+SufB37F/pDnEF3KHtOQgKGLPXPyT0e3Y6iLnEWg1r4lq
U0mMNfDz2Ifhf8FT3R09J+Y1Uq3+gSriZbIWEL8C+w70dHQftgL0tCSP8Rzd
FLlNNVKtCsx7m8v2XmzZ5r1TTfvxe4MuQy8hxmt4Az4TWZ8AutEl6LbQa6ra
pqOzAt+zHF1snksFKIKPwD4T+xb0MvOeqrcD6MfmM6JZ+YN+qPua91Y1boSf
idxXPVAvNAOaBdVkEH3KvLeqsWp9wny2VAPVQjOr2a1irUSxzfkBsAH+0/xt
aGZ+wV+a3zWbtQ74UvNeK4dQs0/NF8W8B4fQuyJ/S6rRF+WO/oT/R3DJvMfq
td5YLbYF6CJsxSBH50U+KzkgldjXWOvGVkbMevMZ0CzoTZyLvGfqXQZ6jHlP
1Jsa1u5hS6APYqsGpfBh81lpwj5knrNyz2atA/+UZOeHOe+Iah15rEx8xuJ7
GXwOfcY0a7VaC/wPqYN3mtdqK/oV/Lr5Wfpzbpj/KfpbmtHHzc/QWX3ou+he
81wncYdv8FzzWJqpFHzjke/Vn6G/44r521aNrsKPRh5LOSt3zZxmT39GC7Z6
kBbzP01/2+bIZ1trb81rrtqrp53Yeszvohy/mvdQvVQN9mI/Hfmsqofq5X8k
67Ze
          "]]}]}, 
      {RGBColor[0.80726725, 0.861883, 0.894034], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtVDtsU0EQvPd8h6CggQYspYijYCJh8TUVCFJGCgJR5IPDJ6YHCdoQ2w2F
5fCzC8C2LIECFXRIdHyNG2wQyEmFqAJxKtImDTPaKVa73je3tzuz5+H8zYs3
YudcEZagj5wrw9r8HZzbj48z8AveuX2IXyI+BX8a1gcuJwyx/4JhiP0SGy4N
zO3I8m9QMwmfhRWQuwdcGvHOHc5t4+ww4rvIdSOL28ITewtWgY3E1uNx4M8h
PgG/C5ZCfAW+E1k/xP+FNWCjkeWZYw8814DVdE9P817H+SXEefhF4dvi5Aes
j7iLb8uIn6v3JeV5PzHEzuLbJnwN2CPIryJuwabUXwffrwbDX4MvJYwr8jkG
OwnLOJu1rJrsJ6m5MvCHYdXIzmQUc56J2LAXcMcA/hHqvw3WK/n+Fqw39jgD
yyJ+gFwm2NlD8F+lwaw4rmkn9ga7aw/8NnpeQe4nsLnY9KbWv7zx/hmYjcjq
c6an3rR4j/xvb9965NnbfrwIVo98kSvuAbXZCqZPSrqntH8j8PPSnfofg00i
Pqp97Eo/cszZqdF51FzD74/A5BGPI64i/u4NR03I+aR4f+ZNa2pOvtkfeea5
TWnUkl6c8QDsj/btQzAeyMdlzTCn3dkQfjwYd1sJO8tzu1HzXbA+2W87mI7U
c051unqLHe1zXnt7H/mDsc1QEafk9g7yD6UHuT+DuI74seYb0yzUZ009cI6c
NG3qLY1qvrTiT8G+NbztyKLeC3kvqLdXwKyjzmv4s7qX91e019SliPkLCatL
bFI7zFxTd6X1m/G6+iBnPdXhvVXNMuRs7waKqTE1m0efdW812Tt3kTM/8bbr
3JlLwe5oiIdpvdkpaVJXnm+2qJ7p+7qL+7CqneCOLItb7mxJ+L72iPiy3m1b
PJRUayDeiWlqdsYF3TukeVuamZx3VYf/bRN6t/yfzui/he+cvEx7O5NV/RXV
Yb3/q+G/kg==
          "]], PolygonBox[CompressedData["
1:eJwlkr0vg2EUxZ++7/OISCyEYGsNmtD43hg6SlgsbQihfwCDvX+ARIQY0HYh
YmK2CfGxUELCIjaUibVd/E7ucJJz7rnPfe/Hmyyszq5Ezrk08GApOPeUcC5F
cBkeE3xFD6E70NvgGz0O8ni3ArwL/xdvMdjbKrEF+Bv+J7wG3uE7xP7gWVBA
57zV+gFbeHPgHt5NjXl4Gb+SsG9eozPoMt4MGEXvokt4H+AcfRmMl8E+Xj+6
CJ8iPwPvBDeqDbLwfLBvaYacvu2t9ySxBtqDHngNnMDrwTz1eOdtJ9rNC7oR
O9emHtGTYAB/z1svX+ACr4IejCynHd0CeuFp0Brsjd5OgJR0sN41s2Y/DdaL
ZtJs9dhm0Y6162Fi05HVVO3jYLdZwy/iH4KjhN3gAW8s2C7XdWN4NdgtlHNA
7lWw3nWDEnoTbMD7eHOmXeh+ke1Iu3r2tgvNqFlVU7XV04hmDTabbqBbNDdZ
Lf1zj+T/A8FbT2w=
          "]]}]}, 
      {RGBColor[0.89653975, 0.891653, 0.85404], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNUTEKwlAMTW3/ImhB0VFQF8EWrHoBN8HNI3gAPZHeQE/RG7SjuFloJ8FB
UUHfIxkcHi9p8t9L0v5mt97WRGQE+EDHifQYByJjxEsUT+AukCAegt++9rD3
A34Cd2PmGRCgloL70HmA30AIXJA3wWfwAD1XxBHiAnzwNKdOBZTAqqbapdXZ
R++203yPt7HNyXnjQHsjp570vonWqZmaH31athPrzBeWc1e++4r6TZzOMQc3
gBzf6k7BOHGqwbdN8yxMk/Nxzgx8tJvwNlPTpDb3FU/nmzmdn3vw29PuWdkO
pe3zMP2vxaHdlP4vX29G/fzv3/DtD7fjRkA=
          "]], 
         PolygonBox[{{1315, 561, 229, 1314}, {1324, 233, 584, 1325}, {1454, 
          584, 196, 1453}, {1329, 212, 587, 1330}, {1332, 587, 233, 1331}, {
          1235, 414, 30, 1019}, {1298, 229, 414, 1299}, {1018, 14, 561, 
          1345}}]}]}}, {{}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.4], 
         LineBox[{1027, 1301, 1019, 1235, 1181, 1299, 1298, 1068, 1314, 1315, 
          1302, 1345, 1018, 1244, 1246}], 
         LineBox[{1057, 1284, 1453, 1454, 1323, 1325, 1324, 1069, 1331, 1332, 
          1328, 1330, 1329, 1290, 1293}]},
        "2.5`"],
       Annotation[#, 2.5, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.4], 
         LineBox[{1121, 1427, 1122, 1428, 1113, 1487, 1187, 1485, 1186, 1486, 
          1247, 1425, 1111, 1424, 1112, 1426, 1104, 1477, 1180, 1475, 1179, 
          1476, 1245, 1473, 1177, 1472, 1178, 1474, 1103, 1471, 1176, 1343, 
          1344}], LineBox[{1149, 1446, 1150, 1447, 1148, 1520, 1223, 1366, 
          1367, 1368, 1283, 1371, 1370, 1369, 1228, 1530, 1158, 1531, 1229, 
          1372, 1373, 1374, 1289, 1377, 1376, 1375, 1232, 1544, 1166, 1464, 
          1167, 1378, 1379}]},
        "2"],
       Annotation[#, 2, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.4], 
         LineBox[{1168, 1295, 1294, 1546, 1233, 1545, 1234, 1547, 1159, 1535, 
          1536, 1532, 1534, 1533, 1286, 1456, 1457, 1455, 1459, 1458, 1152, 
          1524, 1525, 1521, 1523, 1522, 1279, 1449, 1450, 1448, 1452, 1451, 
          1146, 1514, 1515, 1511, 1513, 1512, 1276, 1442, 1443, 1441, 1445, 
          1444, 1143, 1510, 1212, 1509, 1211, 1274, 1306, 1305}], 
         LineBox[{1174, 1300, 1241, 1340, 1339, 1338, 1175, 1468, 1102, 1469, 
          1470, 1341, 1342, 1017, 1242, 1025, 1349, 1348, 1479, 1478, 1109, 
          1483, 1484, 1350, 1351, 1026, 1250, 1031, 1353, 1352, 1489, 1488, 
          1119, 1490, 1491, 1354, 1355, 1032, 1255, 1035, 1357, 1356, 1493, 
          1492, 1125, 1494, 1195, 1358, 1359, 1360, 1258, 1304, 1303}]},
        "1.5`"],
       Annotation[#, 1.5, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.4], 
         LineBox[{1016, 1548, 1170, 1100, 1466, 1172, 1465, 1171, 1239, 1101, 
          1467, 1173, 1335, 1336, 1337, 1240, 1024, 1347, 1346, 1421, 1420, 
          1076, 1380, 1422, 1061, 1423, 1243, 1185, 1480, 1482, 1481, 1110, 
          1118, 1573, 1117, 1251, 1191, 1578, 1192, 1120, 1432, 1433, 1429, 
          1431, 1430, 1256, 1434, 1408, 1409, 1407, 1082, 1495, 1496, 1361, 
          1362, 1038, 1260, 1365, 1364, 1363, 1200, 1497, 1131, 1264, 1132, 
          1435, 1133, 1436, 1086, 1307, 1308, 1063, 1042, 1267, 1046}], 
         LineBox[{1136, 1575, 1137, 1134, 1202, 1559, 1043, 1268, 1135, 1504, 
          1206, 1502, 1205, 1503, 1272, 1141, 1438, 1440, 1439, 1089, 1386, 
          1387, 1064, 1048, 1275, 1050, 1562, 1217, 1145, 1218, 1563, 1051, 
          1278, 1053, 1565, 1224, 1151, 1225, 1566, 1054, 1285, 1058, 1417, 
          1418, 1416, 1094, 1540, 1541, 1537, 1539, 1538, 1291, 1230, 1542, 
          1231, 1543, 1160, 1292, 1060, 1570, 1169, 1099, 1313, 1333, 1394, 
          1067, 1334, 1296, 1297}]},
        "1"],
       Annotation[#, 1, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwl09dviFEYx/FT2hpRezUpbVNKjdaIFYQYMe6UK1zZFVqjZpFolVD+BOMC
CTEiSpEYiXHBLS6MUCsRKySURPF54uKb7/k973nO+77nvG/hkqryyoyU0gsU
Zac0PzOlh5iHHPl325QGZqVUKg/gMi7mVvVqHiFv5JG8if+ob+FR8mYezUcx
3FpH+CUW4Bg6q/01v9k4C9vM346tGCOfQKk5x/kN3uIkuqpl8zt0QDf5FC/D
aXSXO/J7dEIP+QyvxFn0lHP4Q6yF3vJ5/oLPqIh3VFvNk7Hc86xAcdwL39AL
ueY08ga0xD5gsFo1T4376VmFCvSR9/E0XsNrUYnc6OHp3I/7Ix95cp61angm
9qBEruMhKAjkep6LQziIsjgrFGBO9HADN/FlrMdsuYEP8CVuxDrMkvej0LpF
3F6tln/xA/7J97kdt6DE+AdXYYbxbuTrzecMtTa4F/vKdznxJ9w2/sh3Yr/j
vPkWhum9ya24jqHyjfiO4vzNu8av+Wo8E14ZN3EzX4lnwfc4X/TVe5GnxN65
vhf1OIyvak/5GZ7ggvw8zoo/oUucr/5zPAm1rk3kuvgOeBdP4B08nnfyUh7E
47iGx8Y58aL4b6y1mB9hYawvZ/JjlGf+/+/+AfvGaoY=
          "]]},
        "0.5`"],
       Annotation[#, 0.5, "Tooltip"]& ], {}, {}}}],
   AspectRatio->1,
   Frame->True,
   PlotRange->{{-1, 1}, {-1, 1}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5393480337749434`*^9}]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["Plot3D",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Plot3D"]], "InlineFormula"],
 " to visualize the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Function]", 
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     RowBox[{"x", " ", "y"}], "+", 
     SuperscriptBox["y", "2"]}]}], TraditionalForm]]],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "\[LessEqual]", "1"}], TraditionalForm]]],
 ". ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4443490719553337`*^9, 3.4443490744111*^9}, {3.444349243427834*^9, 
   3.4443492464133387`*^9}, 3.4443492831775723`*^9, {3.4443494369609203`*^9, 
   3.444349440481529*^9}, {3.475791436184556*^9, 3.47579144390418*^9}, {
   3.475791522924747*^9, 3.475791523336252*^9}, {3.475791562930889*^9, 
   3.475791574979184*^9}, {3.475791636044465*^9, 3.475791644821006*^9}, {
   3.475791677265746*^9, 3.4757917423343277`*^9}, {3.475791797870162*^9, 
   3.475791952189047*^9}, {3.5078953881563873`*^9, 3.507895391506703*^9}, {
   3.507895424601015*^9, 3.50789544502116*^9}, {3.507895476336988*^9, 
   3.507895477136826*^9}, {3.507895591080442*^9, 3.507895591907835*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "-", 
    RowBox[{"x", " ", "y"}], "+", 
    SuperscriptBox["y", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Function]", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "\[LessEqual]", "1"}]}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.539348029422267*^9, 3.539348069731456*^9}}],

Cell[BoxData[
 FormBox[
  Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXlc1sX2x7Vcs9LStKw0iyzbbLHSFiezBVustG5mWalZlpJKVpZLZZot
lkqmdOV2xUpzyXK5ZIKOPplZZBLu4AIILqCAIGgW8TOe8z7P73tE/+HFx2Hm
zGfOzJyZ+cx8W/UZ1K3fSTVq1Nhbp0aNk4/9LJzx8rNRXa51rbbfv6iyssjP
+GXI5R1qFrt+Q7/9NCkm0z9b9bPA33D6++3LErNdOH264otbzbgpqkuO4CHF
r3gi/7YFHXNdDfkH/tmyPvcmjN5Degfe4K4GPfOa7Cd/xb8/OuSG1UfVHsXz
+5WvjI47JOlz/JwGjd+MydztP7q29NF/0mE/eHxu3ANH07ao/eCfBvDQcflg
P/gtex5rN7V7ltoPTn2xH7zpkTkPtRm2T+0HP7p02rPH+MZ+xQd22+HPKSjV
36kf9vA7P78adFLnrLwNWl/wJVW8pWl9wUfMevuZtB7rtL42PfW1+VNf8PEB
e9IVXyT+QH3Bm//++v2pbfZqfYP2FFFfxeGB9qZ++CH8gAfbN0dx6sXv/PxP
lR/+pPyAh+0PKT8Wh5/q8wk5Wy78WDvhx9YLfsDhDX7A8R/hR3H6BbxRP/pp
0K/Sjf/nKI6fBP0q3fCTrnjYTxYbvyKfb4xfHZfenSB/dwJ7FDftbvLJMX6V
7s+S/ghv4IwzQd5C/nLp10HeQifoj6Hj/A28et5Cyk+Qt5DwM9nwFsGDvNl8
0p0tN8hbyPhnZPymXwd5i/AQ5C2k4zbzh8wnfun+DadlVah/eurB+A+f4MFx
NUdxO76B2/4bTB/xwyAe4dP+g0+bHj5t/vBZvT05Jv0G5dPWFz4tP8KnY362
fGIv/Bv/dJcH5iP1TzfezI/g1c8XIWfHQ/Dq+3XIncA/neXT5mP805Sr/ql2
Gv909Efjn874LeOSo7+b8dAxPpjx0Jl5TXEbV4BXP8+mOzuPgJ9gPHTV9+tI
ejMenoC3iD1mPHSM/2Y8dMwXZv51zC9m/nUmnlGc+cvMv87Gk+DxJh4Dt/EJ
+AnmX2fnEYub+dfZ/mvLNfOv2mnmX2fjE/IjnjHxmyP+MfGbC8ZLGr+pH5r4
Tft10K9y3AniN9vfXdAeO8/a9Bq/OTu+gdv5kf+HBxOfG//R+Nw1DfRHjc+d
XV+AnyA+N/ZofK7+b+JzZ+MKm49ZH7ngekTXRzrOYD844zb2g59gfeTs+gJ8
sYm3wYP961rPfHLB7LeWXFWTcW+TX3XpG60zkw7494a+e/K8hnnugqp0O329
FdmnxkXt87e//1R2/Sd3SP6pmv72L1e9m7iA9l6oePlfV59ZlrhP8cHXNNkS
nV/ke3zb4a3x3x0Ad6T/Yvja/87MOkD+is9stPbszKSD2Kn4kVdSd02KKsNO
h50pj816OrVNZD0IfuuCCXnPzdvp7nv0jtLouFzPz4fOWrehKDYDXP+/4oFp
O6/bFFl/ga965e6dGUnbtTx4gh/Blb9ksYfxE7xp40Z/rEjN1vrQDvAvuLYP
9SU97dBZ+Cc9+CzhjfS0A+1CenD4p53AaS/BNX27i+5b0uui4/J35GPsdNhj
8ncmH/ULayf5mPrCmzP8qL/Ap2kvR7uY9nK0I/0HnPYy/uPwE+M/Dr9ivADH
f0z/cvit8We1h/EHHH82/Vd5MP3U0Y9MP9X2Mv1U28X0U20X00+dGQfUX/Af
03+dHWfoH/DM+Ek713l3eu3MpDwdP8Fv/fXQ+MrKPbZcH7Q/pP6yNrfpwws6
Fuv4Cf50p/qfpfUoVf6x5/cZb32VnFCu7c54QDuadvGNP335kqguml7Hj3aT
i57t0bJc0zE+BdtR/cRfF0yv4xn5G/9UO4P9Md3XFd6C/Std6xtMH1I+g+lD
yptJ78DN+KDtbvJxJn+Nh4092j7Yb8ZPR30Nnw5+DG+mv+h47uDZtK9rF8S1
fUy7a/+lXOPPaqfxK3cCP1cejJ+7oN+qP7ug/6s/O/rL+RXb5iXF7PJb+72+
+lg6v2D8jJVFsTscv/P/4CWjdw+MySyU/p3s7p7+151H0/Ldjc27dI/qku98
9OkXxEVlu2tjx32ZuCDLDV8wt8M/5fDz5UGjOrYZtl3T8XekJ1/KIX9J7yW9
N+m9pPekN/n4366NPz8zqdiW6/+1PX9QUkw59nl+YqfUX/mot6nVulpty229
fPz6HYUtmpdrvtiLnfL3ynddycfwpvZgN/WjXoZ/rZdJ78CNPY78Tfs67DF2
Otrd8OOor/EfBz+GN83HtKPaY9rRmXpJ/1rtB2+/omRSVIlb+Ezp35MOFbpG
C1dURF+b5lo0efy6rGPrIPndy/97cP4env4ecnJifud94Mof+Yf74zrFD46/
e1yTlFL9nfzIBzvl745LT34G1/LJh7/n/0lv7NT01JN6U1/KZZwoGPfk25WV
+6z9jvoafhTn78Hf/un3hiP7R+ZNcPKnPWgf7DH5qD2saxjvX7zxtbNHT2V/
YYba27R548ZZeYW2XI892EE54ORLOeQf5GeGf3BLzYGJC/br+HiC9GoX6U25
7gT1cqZeymewXjN8rSGz7oz6o8j1XPifnTMnFtv0/gEp16T34xdeOm3mFvJZ
qOmbJG/fm5FUYMaHVP/WkwWfJSdYP1noGwfTaznYiX3g2BlMv9A/1PLNc+c1
tONSqvtk6OxV5xSUWP6dyV9xk7+uC8jf1Nc9GMDVf5zhTetheNP08GZw/6Cp
F+1evR8udPBJHEI8/qPECcQt4Mz7n/zWLCs6br/ED1v9kmVfrH21wy6bj5u3
L6HJyP7FNh+Xc+XBaYkLSmw+btOVaRnXbTqk6wLiE/IBJw4hH+yQ/Gw+Gk9R
L3Abz2AH+VAv7AzHUxtc7Vf3f1FZWWLt9Cb/49YFxh5v6qU8Beu1T/MzfCpu
+FQ+4MHk40z7Km7aV/mAB8YreJg4beuaVzsckjhzA/z73T+XXlWWuMvyae3R
c0niUuIB7J/ct6xvx3ZZJn2qrjuC+7qpvtFNt1W0aB5pL+arDTu7nnHKk7k2
H3dt80c+SU7It/m4rPiDF/7TT8iH+aj21S+WHUrUfU7N746WT/Xs2E79UOtx
uF+zt5NiSrS/kT64Hlyo5ZfJ+jS4LljoN5533us9WuaY/f+Fvrbkg52Me2c+
8dXyjeP2mnXEQmfyUdzko+OQyUfXO3lDVrZo+OEBrSf+MGXBK1f2n1es63f+
7hZpL9YLdl8O/yG/3BeW1yqOjcTb1G/6zl9O7V68X38nLtt3aZvHjqbttnZq
/uSr8cvwj1t3qJ1t0od8RlnBy0fTsjQ9+Ucn9z4wKWqXbRflzeTjbpF1Dfng
P7vnfzSuV9cC5Yf2xG+xj787KHbil5Rzjfgt5SnPUi68kU/vvkOeGrd6r+ZD
uTvFz7GP9NgJL40qSl+ImVvkmzxasS/j9ci5FPhHr9T4LLFziYu9cP+ipOF6
Hui3XDr5ubpNDut6s/n8GXnRt+f7+1/cfmf3ehGdAPih3Q2+f3XsYbfo9oQn
ovrt1vVutzpN22WddER/l//3OxtvCo2vm6XrW3DSS75aPvljX8K7PSfEDM/y
V+Tk7r1ud7a7utnEITH79uu49P7QZ1dHf7lL+4vUT+sl9Vee4MHgDt5M/m58
/+X/nn9DubXTwY/hwVFfsTuyry72Y7eUo/lTHjj1Wrs49d6o57f7hCbLY2MG
HJvfmvY6v8PBHMfv/D/4iGVPV0xKKHJjW13WMXPTD764w3Xv5r1U4nJuvKRi
0uJj9T0t88OYc1e6rm/sXN5nZYF74q4z68cl57vcoZs3Vk7Jdk1Hnx1/8kPZ
rnanfWfGTd+tPwvrPT4ooWaWpuPvSE95lE+5lEf5lHtGZsKaynM3+2GNVt0T
tfmA791p5G+P3JTn/vzzyJdJ92/yCVeP/zip4oCffM87XydPVNyB/zHogjeb
3FRGPo58bp1z0+SJz5S5Gme/MC4mdZeOYwXf9Kxccaw93jjt0JykDrnu5lcm
rapM3eubvjF5xs1bD7uTBm7YFz16r+7Dzzhw5WNZd2aRjr/T9B1HLKsTtziy
3774msVNM1vnqB3Ur6/UC7upH/WS9MoH9pv0jvqa/J1JrzyRP/Wk3tiPX+Kn
+KfUS/eTqNdHt784POYYD+lb03pHHcun94aR89IeVj49PJG/6e/aL4Rn3feC
Z/KlHPI344/2O2lfnT9pX+NXyo/xH+Xngl8a/1TpN+u6bUbzhwf2qMy1/VTH
GUmv+8OkZ5xSXaLwiX/gL/Bp+rtnHFhbcUOjuBVqj3/h8ZkXrH4ncg5FPrff
NzYm6UC5jqeMu/CMH+PX8Gx4881v+vWOmNTD2h6kr9V92yn9cw/ruM/4DP/8
Pf0M/k37aj60E+kpl3rCK3waP9T6Mj7SPvCm+5hh/pS3X1s3zoyeU6jxRqvK
V15p0nGPxV29t9Y/c7T3ocg+vrQD+ZhydXymXPwI+/ED5lvmIzNuOOpleHbM
g4ZnB2+GT/V/M/865lkzvjnaxfiPpjf+o+mNn2j/NfGD2m/GYbWfeZpxCH5M
f1F+jP/ruER70w60F+0t7aztS3uD4w9H1oyvnLR4hx/x98SXYhrv9z27x3Zv
OCGHccnLuOQZl/id/wfn78mPfGTe9DJveuZNmR+9zI+e+fFfcw9tqmy50t3y
35gJSf8r8g9OfX9Rr1Yl7ouuvQbHPL/djcuuUzvu2Pz/esbkpq++V479Wv62
k+K+i15Wbudrf8XLqx7/+YnDzOuen8zvZt73z3xYb9YLx/yBv6ce2G/iB81f
7MNetVPsU76xk/rDBzxI/eFDeYAXeAKHF3gy5dIujnIljiLOchpHBe10tKPh
wZ2ATwdvpt01PbzAk2lH/FDtxD7sxU7T7monfMEf/Fz6Zsm26JzIuf+KhBe2
XPev4+IHja/e+qFtjbjBhW7glk3nxKWs91t+Oxhb93+H3H1Dnr47qlORrpN2
z7yxZtdepa7nioKKSX2K3D01L11VeXiN73lw6PfDG5fa9O70v26eMv6RfdYe
Nyp616L87sfFRY44Crv5O+zHDsrJFXsoD/xUKZfyyIdyTf4e/IwhE8fFJK/3
Gyac+l3loEJfOa31kujPdttyPfmbeNgfTWhzcVbLAlf8afY1meVr/JjWPbdG
9yny75yVeDAjZ5+102O/5ENcr/G88AvfyvML59SdGHNdmnsqvml0VFmhH9z6
t9737i91k994c2t0t3XuXxmPXZRZ51i/+fGDub1+LbU8qD9Ie9P+2u7UHz7g
AbvhI3TBlGnJXfep3fABD9QfPuBB7KYear/YTT3UflOuc9/nvp33WKnWHz5M
Pl75kHzMuskZO2k3h53CA37h4AG7qYfh31MPyjXt64yfaPmUS3mUT7lmHeRY
T7H+Z/3LOte0i67X8Cf1L/Er/AC/wB/Mek3XKYwXjB+kv23soT+jS9J0v/29
nHtKi5oeiowXMn5QrtnfcKzfzf6GC+576Lyv8Z6Z9z3xgNij+/HYQ3yg+2GS
HrupxwnSa1zBudjBm99fXDm8yP39dm7vhDQdh3XfvusDHb/o1S3P4u6yC+If
jHmkzLaj8oDd1AN7Rs1vv7Xyyiz3cLvbP02aVuDL1w5osvmvcvfk5IT0yqIc
P2xBvddiUvf57xr9PiBheZbr0jvvmajiHNd31EMN4o7hN/Z5487TZh52fzSu
+VXS0Dz36Jp17TKX7fHrRz3XdcCRw27gn+/MSDr2++l3Lzkrbmieb/VU+YsJ
TbNIx9/53yW95Es5mj/2ib3+qrE1O61vkOMGvzl3R/RlB3zKRfVPiXs4w3/+
S/yN3U/KJT3103qZ9O6GTsv/GHFyuZN6Um9HfcVu6uGw3/DmsAc7pBzNn/LA
T2Cn5kN5lE+52Ie92Ek94Yl84J12IB/alXYmH+yjHthvcLUfP8AvjD942hl/
MHY62mXiF+7FmHsLdf85pUH9NmXbD1ne1B7jD5oP/oc/4lf4E/6FnZdUrRe8
rsd79u8w46pZ6HjjU+w9wXPD6XXd9uOiJtFthhW4FnLuDh4+7yh2m6t0CZsV
3zU8tl9qm1J3/ZxGaZWVu3Q9/l2/2GWTora7C2VdA/5xgx+692iZ4TLC+Rx3
fzBK9pmD9/u2ar3AT6nS927Tetn7g9QL/MP7e1Tev3KX1gv8XNGBUy/wXDlH
aCnrL/BDzaZ8P77soOpAWP/trkq/XXkA90u2vZ/WY7PyAH7N9Utv6V6crjzo
OnL/zkN9RqYpD+BHqvTb65QH8Efq1xrWZtjvygP4LNGNwwP4VVX78xnKA/jU
ysPlk6KylQfwbhOenzm+LE95AL/nlsot9x9bp7QL11dx9/YTP+V3PuhGtspN
qayM3Ct8/Ms6DUb2z1HewOdfGTM1v3Om8gYeU6VjX6+8gb/72EVPNEn5VXkD
b/128zsbfvij8mbvFcIbeNsq/kPKG3iC3FOAN/CbqvwqTXkDbznnni7/zFfw
Bj68Sue/U3kDD7dLrvIGvvbSPZtaNC9wW0T3Ax5ulwifzMuc+wT9MF10IJnG
D9P9GVXnOOuNH6b7f1f1uzXGD9P9SZMH9ElcsNz4YbqfH53ecfTURcYP04Wf
b40fpkt9Fxs/TPev1Br1Xa+uK40fHos3qvr1r8YP0/2doyaP6dx3o/HDdF/x
8T927jB+mO6bxd550eqjucon+AuiJwnyGfJtj+xfX6ttnuEz5FtNyEvcOG6H
4TPk50j/CvIZ8pOrxrdfDJ8h/36V36YYPkN+SlX6OYZPez8RPiN4kM+QH1OV
/zzDZ8i/XuWH3vAZ8nWE5yCfIT99yrV3d2y3yfAZ8o/nrH8ptU2W4TPkE6vS
71Y+0e+cIeez8Am+Qc554RO8fWnUpF5dtyqf4LdKv4NP8KGXz09OTggpn+Ap
VfdBvlU+wb+rGgfilM8agX/9b4FPkG8lPXyCJ0n+8Ak+WOyBT3DGDfgEv17q
C5/g64Uf45+ucPfHX9dqe8D6p+hpd1v/dL2kvYx/ui+kfY1/ulPFH4x/ujfF
f4x/ug/E34x/uvnV+6feTzT+6SaK/xv/dGOkvxj/dBOkfxn/dMx3xj8d44MZ
P12fXx9Ni46z83i6q2h3Q/uE0QV2/HTnyHhixk9Xc3I4fzN+umgZr8z4qTyb
8dO9JuOhGT/dnOrHT7mH9a0dP93XMj6b8dP99XF4PDfjp/tExn8zfrqGMl+Y
8dOF5/1MO7+71CUV93ZsV2bndxcv85eZ3906me/M/O5my/xo5nc3SuZTM7+7
C2X+NfO78JNm53e5/3Xc/O6ukXjAzO96n9HM7y5K4g0zv7uxEp+Y+d0NkHjG
zO/uA7nvZuJJt6JsdmmL5mU2nnS3SXxl4kl3n8RjJp50D0v8ZuJJ96nEeyae
dNdIfGjiSWmX4+JJ96jEnyaedH9IvGriSUd8a+JJ11biYRNPuuUSP5v1hQt1
vnxZdFyZXV+4MonPzfrC7ZZ43qwv3HkS/5v1hZsg6wV4AL+1+vWF9Ottdn3h
msn6xawv9P6jWV841kfYyTkR9xTM+s79LeMVdoL/t/r1nXtc1oNmfee6Xd1u
xLjVOXZ953ZMKqzXdWW25v+crPts/qNkPNh05oDrEkbv1/yniB7q27H/nZXW
46Da/8BPI16Jycz3lue5ss6yPIeW3PV5Uswef9GeZguTEyL2Z0i/iar/5kux
p+Sr/QfPnL8vOm6vn966S0qvrsXqP/zcW/B48dyGkXjjfjn3+9LMj8/UGtY0
LirP2/F8hOj67fjz8ZM7n4jqsttfa/pRkayPbD+q8+Ds92Iyc3Q9S71ayP0A
2y7Y//3OUydcNWuv+g/231ylZyvS8XlSFf/b/PLcsrjOfSPrr1DVueF2H2PW
C6VV+2o7jotv+Wnjsa+mZfwVHZflbfywQu4r2Pluc1mnzplJ2d6Oz8/KeseO
z5+I/XacWSX2n2X6F/aPPav71plZ2coP9nPvm3EG+1Pn31d79NQIb+dV8b/e
P5+UecXqoxHe0AN+Y9atYX/YeNw6a67sc9p1AT9tHFtf9KU27mpfpX/L8DZO
KJZ1jY0TWoj9dl67X+y34zP223EJ+8P7HtnK21axf4n4IbzdU5X/Kj+4MKtb
TGau8sZ+sN0nOaWqvj8ft97vL+cpdn26uqrd1x63nuKnjf9XVvnh797Gqwdl
/WLj1a5iv42v5on9Nh7AfjuvYX+cjOfw9qPYP/3GivM61N6l8QD2h9PnK587
quyM81vG167dofZeEyfM8PVOunnzqx2ylc8Xq8qde9y+0yHR5dr9k2+r6pV0
3Hp/oOhL7fqUn9Wvp/gZWU/V+jxsv43/j4j9Nl4dLPbb+Ar7bZwwX+yvFXPz
k537blc+Y8T+cXIfFj6jxK4h64fP3Thuv4lXk93ZEufD55fh/F1tyR8+94rO
1u7j9Qjb7+x+VJbolu3+yYZw+zq73i8w6yb45Kddnz4t9tv11Bdiv43/sd/G
q73EfuIueAuP57+7divqDUptE1k3cT+L+RfeVoT93OHn8NZHzivjzD5wrXA/
cnb/c6bof+0+XnS4nzq777Rf1il232m52G/3Sfhp1/XYb9eh2G/XTbXF/oEm
zsf+kNwjgE8Zz11Wl75dOy4+FLknKTp99tvhE7sYb+HzKzkvK5PxGT5fC4/n
zu6r3yPnEXY/+dzwfOHsvugzsk6x+6LXi/12H6+O2G/3nbR/m30S7Lfr+tfF
ftah8MN9zCabbp8Ye8oh5WdWeB53zOPwQznM+/BTHI4THHEC/KwMxxWuiTl3
iAvHIc7utx+QdYrdb98UjnOc3TdeLvbbfU7st/ty/LT7SAfFfsqFh77heNV9
2mjeozGZpcrDvaJfIz6EB/LDr+DhPLmH+pDEn/BQOxyvuvrm/GW2eR8GHuLC
8bC72pw7vC73YS8w++fYb/d7sT9R4nPspJ99LPOmzvvh9YKz51/9ZF1jz7+6
htcjzp4T3SD3bePN+UjLmLOuzkza566cvvSHFs13Kp/zht97clzUAV+asebB
ju0i+0X1Rc94p9z7AK8reCfBqVepnG933d522zmnRtplsqynXuu7KLvPyFyt
L+NKr1q3XD96ap7azzl5sdyHhU/7rovFeccDO8E7i53G3/z08+JfTlwQiXNY
N+GH4PLT7y++49CK1BITV7N+2Wn7u+//5OzzsvK26bjK+qKxjAOKy7rg39OO
vpfXpMSNCPPimks8vPqxNa061I7gIYkPmdfA75I4cPNfhRPOKTig+BXC92CJ
H8CXS5x2bszIrBbN99n4zbUQ3OTjekp7mXLdIImfjZ3uk9BlH3Xuu8vWyz1n
1imyvnMJwoPhxw2QdZ/h0z0nPJv1siuU9jLt6HbLOtq0u8MfyB/9bAdpX+P/
+k6L6S9uefX+6egvFsc/TX90z6Xfv7NPxSHbj9w3Zl9C2k3jQ7Pv4aZXv+/h
njb9TvY93Ajpp4wb88WeCz+dsndSVGR8sPcxsVPfcZJzFuwEH7Clc+GI/nvV
HvDzks6aed2mIrNePuBPbjMgc+O4EuWNctPkPQ3akfNu9tlMO/plVfHhYbM/
nOOXy74l/sm5W2/Zbw/iIb9fzjUM7q6U8ziTj7tLzj1NuS5X1pVmPJE49rCt
l0sy+gT8Z5nxQ/bB0oUfw5s7QXu5WsKzaS93vrSLaS83UNrRtJej3emP7Gs1
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
dHW0L/o6dGy0L3o2dHW0I/lvkvUpvA2Vdeh+eS8Ae4ZV7ctly75lstqJHmmg
6HStbor7/ODc6w/JfW9w5i/eVaG+vA9TLvpg8PfkPIt79Va/xL1xcO6/c/85
qAvK1n0Dq6uZLe+VWB0O7yCA1xSdz6OiG7a6IO7bWx0R98at7oj70uBjZN8P
PwPnHjHv41gdC/c2re6Fd0+sTmaA6LOt3ob3FKw+h/v2Vs9DXGr1P9z3Bmff
lXUZOPu0vO9Df+SdH961sfoN7odYHQjvklg9Ce9BWB0L7x1YPQz39q2uhvvq
Vp/D/W1w7nFzPwr8Mbk3zbqDcSlW9uV418PqKIgzGU/Y3+OdJnDOjw5Jv7Z6
g6ekX4N/JO0ucbiOM8TzsdLf7fk771/Y83red7Dn+/R3xlXOfUqkv9tzavq7
PdfuK/0dfIqcK9HfwT+ScyjeIaI/cZ5FvwbnnZMnpF+DL5PxrY70a3Deo6Bf
23Nn3hGw59SDpN8xPr8r76hwzwH8VRmH6XfgPwS+m5mh4/kvs7oU9BmZo9+z
Ztzmfjf3TEg/Re47c5+Z9Nxrfs6cN3E/l3vm1Iv75ow/2Mm5JPeiwV+Q+J/7
4cQVnLe2lX6i+6LSLy6X/gD+uOxLc38bfLLUi37HvMM+EvcSsZ/7idznwW+5
18N9J+xnvcY9JcrlvpKMt8et07n/Bs/zg/eYdBzmvgn7fowb3YbWqjyUuF3t
Z3zoIbiuzyX9u3LfxOpe2Pezeg/iVfTl4OjM0d9TX3T4zE+Uf9Oc8anRcRE9
JXh4Hom8V2PXieRj+aE+4CNFj8T4BX6heacOnP5OfcC3LGlx2ryGkfcTwPvc
XTkv/4fI/Qj8hzgBO8HTOt836p95gvqqTltw7Ae/27y/AR7WdRRq/pR/ZsvM
R8at/iWiWxWc83Tyt+mpF3il5E8+lFOvatxbFrlvK3hdg9s4Ifj+cHzK+mrf
H45PubHa94c517bvD8envFTt+8PxKcnVvj8cn4K+NPjOcHzKomrfGY5PWVLt
O8PxKUOqfWc4PuXmat8Zjk+5odp3huNTuHcQvM8bn9JI9nXhB3vxZ/gBv8v4
G3gj4w/63qFpL/CPpb3gAdy+ZwV+kuQDD+CnGb+ydsKD6jO/vG1MfueIf1P+
+fee1bL/vIhfgv/8QLPMEf0j4wD4OtO/9Nzc+D94bbFf77EKXtPUC9y+NwX+
m5Sr998FXyN2Yj/loJPHfnDurWA/+G9mfAA/XXjGTvBTDf/gayUfyuXvss09
QXDsp1xw9ADkb3HyUZ6kHckHfIT4Mzj8fTK218VliXnaH+w9HXD8hf6l72Lx
HqQZ/9W/xB5+p30Yt8kfnPFH9zcFx5/JHxz/1HNuwWl3yqUdmBdIB36GtCP2
gMfK+IM94PT34Lusm3V+0XhFcPyN9gPHH+y6kvdOVX8m7Zwv8zL1Al9n6gVu
35PU+7LS76gv+FIZh6kvOOOYrmcEp7/rOkRw+hH1BcfPqa+OH+In1Bc//WxG
xee12kbGK3Dma+oLTrtQX3DmTcoDD95niU+x9yPgQd+7NeO2vhNmxjdwO26A
234NTj+if+p+u+mn2LXIvEuJXUtMO9p1JemtDpz04CeZdrc47UL9iGfI3+qo
9bxZ8NNMP7LrR31/THDG2+vNeueArHfwB40LJgft0fugZhwDt+MM+G+mX6uO
2vg5OO2LnbSnjWPBiXvxW/BfJU7GfnDGZ+wHH27GYfA1Zpy06yDsB7f364mb
br0+s2JFauRdbvBBsh7EHnD7Pht47s+lV5UlRuI21iPEY6ovF/4OmPfTwA/L
ObKuN4RX1i/UR+MC4Rk7qB/1Aqd+1Guk2RcabHDqlzj0l7HjVkfyAc+T+o40
69lM806FtoPYif3g+0y94KlUeIAX8oMf0vP/+KGeY0k+4PzO35VJPsHvnkTi
Z36n3o3M91Dwa/vOjL53Yt6NgZ9fxP9JR/6Z5h0S/p91JenAbXryt++T6HcP
zHsj2Es+wXckjq3b6kzftHFcZP6i3S+S9S9+w/+H96XzFCe/DaJ7V72a/D/7
KpRHPvnmPRP8lnctSEc+F0u5qheUv8Nv/w8PgqTJ
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
lnGSb1dklpWSk6fSv33uvf1k5vOss/xa5jXQ/J/NtS2hn/FuLaNjap+Untca
uef2iuR7Dih9vv9K53eadDh9ZlR81p9I513xYsWNbyrsq26pdYLWhL9dbl9n
H571m/xl6C7SwZLB0TEy6Z0deK9VmeWRZNEb4DNz+xUHyL4FHygbL1hffK71
KX2+NkCX0jaAl5WOD8revLZwk9+jGMhvub+9O3RiZpk1JZ15nf0R9FkA/8Tc
/olygYoZ6V0vTf7OZ1y7oTR+T3ZB6ZyCfJMjS9v2svEHJN9nXW7dp+/bED0P
igcqLniR/F71p89A8BUaE3wZ+AZ9Y+7cnmx+2cfPJr/4AegzhX2L+6FVaQ20
bvRvkuIAigfsXlrOKB7WPNrOlz/duLRMGsi/h9L8aJ4WZ7ZxZd8qFloXOoTf
W4Ebgq+U/gFvDx4AzsG1wP1z2xfdk42h+MeF8JfDn5VZ38xP+1hn8KLcayqZ
L9n/UGZ9Jl02r/T6PpbWV+t1umyI0mdBMd2tuWdX8DDu2Ra8B/i63Gd7N8ku
cBVwHfAlufMYByY7R/pWOkPnX3kNxaVvyH3e5dMp3rh1cFxZZ/49fu+Y+yz8
R/s899mQEBud2edeprWsON71crAvKfnzdrAvrJjVyuD9oH2xCnxlxXGt5cH+
puJjQ6P3geJyygPJt1VM7JVgn07+9+pg31wxt3eCfXPFyoZEx+VrpPicxn+f
d5wbnAtQTkAxvxvBX+SO7Sme813ufaz9rD1+efT+U9zvw2Afs67kXvC9dWS7
lo5FKyZ9brD/rv0yKHhdfpKtFywbvwL3DN4nG+WXRMf9v9TaQuvDv5x3aBed
o1LsUfEw2eEj4fcL3odaq/OD997X9DkxOu+luNnlwbmh38BDg/fDr+DBwfvh
Z/DA4DPyA/ji4P38Y+mckWI5inUrTyb/4q/CcVD5FBNz528U2/mFPlcE7xnl
NC4Kfv/vNUawzV9V+ic6R6hYq2KuPeA/yzjNaNvQlmttCseVZB/KtqqS2RaQ
PqyVdOILSZYqXro1fZrntgslg+/KLIcVC1ZMWLr+RM0V194ubM+uTTbtvZlt
R9mN8rlb5PYHj6P/n9Kn0rGyc3LnYqWH6yRdLHvz5cz3VtX13PF02d2y82S3
bKH3yh1j219nKXd8bVz6vW165j2Zn7umcD5Vz10SnHtS3GJxcK6wOvO2KHje
qkXHp3W+VsguDM5bKbakfIDyAhm854JljuLPqmeQHFIM9olgX+l/eftgmfCt
9kN0jkpxb9mjskufK217bpLsT+U2lOOQnaP5fibNeddgWfEF/Pr03SV3LG33
3L6E5rwRdLfcsUDZfLL9tC7roE1yxz3nR9cB9GGcz8G/5I7frkrzo3kaHn1O
dF66Rdc6bAPuEl0zUQ3cPbrWoQZ4qnzdwr5w7+j6hh3g94iujdgW3Dm6VmNr
6f0klzSfLwXroF3hT6NPi8L++F20Awr71OdG12FUL52H0r5Q3ElxANXYvAo9
Kzh39luwrFAtwCuSS9F1IdvDuzLafpK91DO6PmM78Onp/SP4/ejY1nhwR8kd
+UWl8y6KlypuemZ6zyrgDvITwJvKBgD/B7wZ+Iz0/pvo/EbbAbJ5TgE301yB
z4+ua6kF7hRdB7MV+JzoOpiq4PbS35oT8IvBursheF/wj7LzoCfTpyl9cvkc
4OaaN9nv4L3BmWyq9J6KS8yMzpFLbjSJ1udLoXvKD2DMw4LjOf/Cfzc6x6Q9
qLy88uLKBWtNpxeOZaq2RHkVxRIVU9ydPnMY5wj5tel9FEtRDErn5r3omJX8
eNln02izZS9KNuSOaymnukdMdkd0nEjxogh/cppDGRoHSwZlXi/lzhQPvrNw
LFdxWdXDfFQ4LqpcgXJnin+rfmBKmlvFRpRzV2xK39wn2Ib/R75ecE2R1mW7
4Dqe7aHTctcp1QH3TjJftsDw0npf+VXlyBU3rBHsj48HHwWdWTgPoBzE9LTH
FOfpn+S89M6swnUxyiPck/aVYj7Kz04GvxZtjymWrvqTC6Lz7rW53jc6776T
fIFo+0m262PBefYdwY8HxwbV59EkD6Wv5wfneXeG/1Rwzr0e+P7gPL7O+5zg
2gCdnYXBOfq6sovlg2ieS9eJSb8cz/Wbo2sdpKNviq6BkB6cF1zHonceGV0z
IV15Zul4jWp4FJeoxlyfEFyz0Y8x50KfTDJZMnZBcD1AHfiHM84fufPviqsq
z6o4673B9TOSXUdE7zPFfI6OzpErv9wqOqcuGfJgcF2Ezmbr6Pz67/BmBdc2
SBbNTHaO4m/HR9eyaM88HFyHIBk4Irr+Q/r62Ogc/99cfyi4HkNyqW10Xv8v
eB9Hx6fkXxwTXbvwB/yPomOdW0DfTLaT7Lq3gu32RqVrVJQrVn7w6WS/Sce9
E11bc418iGj7Vb7zM8G6rD74ougaEa21bGjpNe2zy6J9Bo1/XbQdLFvoxuD9
L9lyQ3StjHTcsGgbXb7e1dE2sXTWNdE+g2yza6Pte9lmn4EPKVzLNyC6HkV7
aT3459z59KXBNUi7lM7FK/6s2HC/6NoU7dULo2tBtLflH+nsSwa8GV1rpZz1
KvBekhvgldE1jnuKBvtTu5WuiZL8eDg63vFc4fjH9OCaPemvV4PzRLKNT4iu
T/pXNnV0bZbeU7lOxUWnwr80uo5K4w+KrnfRnA+OrmWRPO8fXXOjPaz6IsXd
Z0Avia6DkX6U3Sz7WfmPAcG1VXrufcE1MNLRqgGdXnEOelxw7aL02s3cM4Ux
TwqWUYotvc3Y+4IPyrw3JgbXLkqv6b31/tJ9U4JjxdJrk4NrHaXvFPvtluTh
hOB6SOm7kcH1nNJHtwTXWEofzeCZh9P/h8J2h+phVBfzbeGYv/IIqqdR3cSO
wftC510yVjkUxXAUy1EeVrENrZ3iS4dmtgNuDq4FlW4dF11zphi7cnB65tro
vI+2gGouVBugegfl5VWL+33F8UDFxlWrqdi96vEUD1dcXDUrql3Rflocrf+U
Ix4fXT+n2P6E6No75RpqB8e1dwnWs8o1q35Q9bdKpKrG5f7o/J/sT9U8aOw3
097vlXke7ovOF8oulU5Ufkb1hor9fqyYS3CdbZ7Zrnsyek6V75OPHSquW7kt
umZOuYa7g+tpZWMsidZJjdP56JJ0lmJQio0rRq6aPeVvVAOwgHYneLlsquD6
NPkmM9K+lYy6PboeUXmW64Lrf5RDGRVdqyf/aExwza1sG9kpyq0pb9GstL+s
epax0bVuvyW9oNoi1UuMia63k8/VLdhfkz+oOljFtxTDVf2x4v2qtZiUbCTl
dxSj0N57HNo9uLZQslex4qOSbFGOVf64/HLFMX7k9yLo09G6WbWdip2enrn2
o0dwPaRku2otVN+qmg3Fb2WzfBAdJ1HsZzS0S3D8SrJdMWHlWJS36Bwcr1Dc
YnR0zZ98wKei8+jyizU/ygO/kOTT+4rHcd/7wTlc+dSKd6keQzlc5UAHpn3Y
Mbj+TbpMNWzyB+UXSmcqV6ncpXKIygXqm28Nzr8oD6MYjnL+yjUrhqO6BtU+
LYyupZCfrpoixeSei66pkF/ZLjimeVfF9SG9UrxH+ZXOKe6l+PJ/AVWDoF0=

          "]], Polygon3DBox[CompressedData["
1:eJwtmnfgT9Ufxu86N1GpSKWFSpS2hvIrhSaV0ZIKJVpGIgkho6wkLU0l7YHK
qKREi0hIg0hWaWlPv+flOX+c7/c8933u+Nx7zvv9vJ/3qdmha8suWZIke+VJ
Uuj/tiFJztb/Z3SwTZkkLwn3TJPkL+GThAdp0Imy19X4u4QfEm4sPE74PeFt
NL658FMaf4Hwp7KPEr5R9leER8t+qq73p3BD4YrC58j+rMZfJDxVuIfsNXTe
/4SP0P+fhH9UO1z9D9QGavw1Ov952esJvyfbZrUj1a+s62yv9oDGVNSxT3Rs
hPo3aPxLGr9ceKRwb+GXhSvofmcJP61zLhTeRfgS4ZnCVwi3Fl4s/JfakepX
V+uo/puyXy37DF3nC+GX1Marv7uOb9F9nxLeXv8r6X4X6H93tRdkO0t4R/2v
JLxM4yvpei009jkda6vr7a3/qdoUHausMcPU9srcr5V6HOM7qL+LrvUi1xc+
W9e6RufvqetdJfyOxnURXib7cOFesk8Vrq3j1dS20/lV1Bpr/KuyPyr7dNmr
CLcVnq4xlwsv1fm3CfeUfYrwbrJfJvyG7FcKL5Z9qHB32ScLzxK+XvhS4aeE
b9I9dsj8LfZUu072WrLvLvvZsr8h3FO4nfDTwnvo+lcKz9M51wrvKtxBeJZw
Z+HdhS8Xni18lfBewlcLvyvcVbivrtdAuJauN0b4PR2/Rri57s0E7612lLr7
yD5a9tU6f65sT+jYUepfL/vh6u8h+3DZbxCuL7y38CjhXsJHxvUyUrib8MHC
1YRvFe4qXE94F+Fhwv8I1xTuo+c4Q/gq4drCO8o+VLgF60m2R3VslI5dIVxN
/e3Ubyb7V3qm1rKv1rGL1a+v4/cK36f2kOz/xvd5k/CZwis15gT1F+pYC/Xf
0W87TngH/f9cx67U+P2ZW7rOEI2/THgf4QrCg4T/E64jPEjnNBe+VHh34Vz2
gcJ/CO8ifK3spwi3Fd4uYUCSnCbcU/gIwT2FRwj/LlyV9arxTYUvFt5VOJX9
ZuE/4+/FCZ1a+jfyWz+SfZrwJbLvJpwJDxDuJLwva0v4FuFrhPcUvl34HeEe
wocJVxe+TXiwrne8fvs3wsuFW8o+RXguPkfHWgk3071nCk8Q/kt4D/Wv17HT
Nb6z8H7CO8g2WPgAHW+gdoyuUVXtvMJ+83cda8R8E7hZ+CqNf1a4HetdOOS+
3gD8mvABwncKXyRcSXhL/P2DhU8SPkj2e4Rv1/Ofpvv8LfvJwltkP1T22/Al
wrcINxI+UOPvFn5c+Azhk4U7CO8U7B+manx74arCFwvPEO4ovIPwucIvCl9S
es4wd+br/CbCOwqfLzxF9nbClYXPE54sfKnwQN3vBOE6Gj9OeGfZLxKeJvtl
wvNlH8R8kf0F4Wdkv0a/Z4jstwv3l/142feTfSz+BZ8h/Flmf3I3fp71p3Me
0bH3NX6A8NU6/hz+ojReldm/n6f/dTPP9XPwOaXjxerM/n6v0s/zVeZ4tErP
867GTdWxYfj30t/vy8z+8kLdb1vhf+P87Sd8nPC+uv8dwkOETxaux7oU3qe0
v/xG419V/3lds4uufydrVrhGaX/8rfBr6rfR+RWF/4vraW7h399R13tGuL3w
TsIjhN8Wvjyup4q5/cm/uvZ/aksT+7B5Or5B/3fVsc/U/0RtR/Vr6vpn69xV
xG3et459pf4atdrqH6C2Vv0VavclPvY1cwo+oH6uc1fqfpn+n5Xap46P16+h
a9dTO1q29axP2Vfr+LLS18f1Vo/X4/7Yj1Rbp34FjT9P/WM0pgYcQu1d4oOO
faH+HN3/a+HRam+pP1+tZeZnaqh+yPzb+I1vaMxvvAu1Nbh7/T9U16+r/sdq
h6m/lvmv4/up/5We7ynipfCvusaa0msQX4SPY23yTfB1vHO+1aXqV1C/rc7Z
SXiizm+v/iF61qWMZX4Ifxv9za/qL1Jbhc9jHqgN590Lf682Tv0RvHv1f0j8
Tng39dXWq/+rWjsd/5/wb+pX1jUbqr9J/U/VH6v+bWpfasx3ar+o/4HaCuYU
85jvI3y52m74IrWLUv+GYbLdGN/Pf/CY0vdrGmPFa/qt3+VeG03j/f9h3ql/
tI7dkZnHwedOUfudmKv3cbr62+DD1P81+r/O0X9tjv6ug/CJwnfkvtaZOudf
9WvBH9TvpLaH+ncE34/7fq7xE+BnwvqX1NWf5+BxwmfhkzX+ruD5WcT5elhp
frJO9hml1zi/h9+1QHh7jWuj8ct17PnM8/FJ9c/XsYrqPxT8/k/X+A80vk+c
r9hWCT8QPJZzzg2OKU2Ez8gca27Q/1bCj8m+jWw/CzcWPlntZuFjC8/v5cKt
Cz9PK+EL4U3EVrUXEj/jVlyaT8IrV+NLgtfGT7rWZ8J/5Z6bfOPKcDfZG6l/
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
          "]], 
         Polygon3DBox[CompressedData["
1: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
300n5tO3aSabvrXim2sY9g+nuhIt
          "]], 
         Polygon3DBox[{{1281, 815, 1042, 1589, 1160, 
          1161}}]}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1FOXHWEUhOFOMrFt27ZtTZzL/IDkPrZt27ZtWxPbtpPnW7l4p2rvqrOm
+zvdJ2+3HrHd40VRVN6fEzT4xwmiqDAzk68eE0UP+J5IHj+KUiAZWtonsSvD
J8V0PgmdRjejoXwTHYvbuJowirbSqvat9Lbw99EHNcyzaE3ZHboLJ/Vb2+/k
n6I/apvb6szh7+Kazj7axn4vfY5BqGe+K5sXPqN/j47DYNSXnZEd5OejsnkB
zUCP0nS4KM9ozoxMKITX9nH2q51JA/Tny9it5y/zb8O96RVGEWRDDtyWZafV
cEynKO2IRXwVupgexz29hubh/Du8R1PXfsP+NN9Zdop+whm0M5+lZ+VL6QXU
1e9if57/HO4D7c0PdC7xK9FM5yrtan+FfgnniA7m9rLr/Hn9b/QrRofrkNUP
1xLuFzHmYiiOm+YSNA9a6+SlCVESlTBFXor+pC3kB5xXQX4Kfeo5q8AfDmcq
m8qX1s2H/EiENvZZ7G+hgHkDTUwLYiMfK2/Gj+G/4weqJ4qi5vZxfBPZKDoZ
a9HSvC48I/I19DLOud/G9iP5SVgVrtXcTmc1vwI3dc7RRvYj6EQsQ3PzclrN
/6yj/5H/EN6lcG2y0z53kk/Ax8cSPjetiMT8FXk8PhdyYpjdBFy3j3MusejD
l7Bbw1/i3/BDMT68rD7zl2alt2RZaAWUxx/73/iFhTgS3jmdtrLD/Eu8Cmfk
ug+FZ0jWQDaEf4GB4ZkyH6CnZHPpftTSr2M/gH+GfmFnvqOzh5+Nxjq7wztt
35c+Qe/w3Zh3hPOSn9B/zD/CNnSS1bDfzs8M76J5Bk1Py6Ic0qCVTlqaEqmR
Cr30HobvJ+b/79g/ym+gXA==
        "]]}, {
       Line3DBox[{1405, 1292, 1404, 1401, 1629, 1573, 1183, 1291, 1628, 1181, 
        1290, 1627, 1179, 1289, 1626, 1177, 1288, 1625, 1175, 1287, 1624, 
        1173, 1286, 1623, 1171, 821, 1622, 1169, 1285, 1621, 1167, 1284, 1620,
         1165, 1283, 1619, 1163, 1282, 1618, 1161, 1281, 1617, 1442, 1443, 
        1280, 1749, 1444, 1399, 1400, 1398, 1407, 1408}], 
       Line3DBox[{1481, 1473, 1472, 1470, 1264, 1432, 1759, 1424, 1323, 1358, 
        1263, 1768, 1462, 1322, 1357, 1262, 1763, 1449, 1441, 1321, 1396, 
        1731, 1507, 901, 1356, 1261, 1459, 1597, 1571, 1355, 1260, 1431, 1422,
         1596, 1569, 1469, 1259, 1471, 1494}], 
       Line3DBox[{1482, 1359, 1745, 234, 1324, 1570, 1598, 1265, 1109, 1587, 
        1599, 1266, 1448, 1765, 1447, 1267, 1110, 1600, 1508, 1662, 1111, 
        1440, 1509, 1762, 1461, 1460, 1601, 1268, 1112, 1423, 1602, 1269, 
        1439, 1572, 1603, 1270, 1360, 246, 1604, 1361, 1502}], 
       Line3DBox[{1483, 1466, 1746, 1581, 1363, 1275, 1326, 1732, 1121, 1274, 
        1609, 1120, 772, 1119, 1665, 1512, 1118, 1664, 1511, 1117, 1663, 1510,
         1608, 1116, 1273, 1607, 1115, 1272, 1606, 1114, 1271, 1605, 1113, 
        764, 1325, 1327, 1376, 1733, 1375, 1495}], 
       Line3DBox[{1484, 1340, 1430, 1758, 1429, 1316, 1428, 1757, 1218, 1315, 
        1654, 1217, 1314, 1653, 1216, 865, 1215, 1706, 1554, 1214, 1705, 1553,
         1213, 1704, 1552, 1652, 1212, 1313, 1651, 1211, 1312, 1650, 1210, 
        1311, 1649, 1209, 857, 1208, 1753, 1551, 1413, 1414, 1583, 1741, 1415,
         1504}], 
       Line3DBox[{1485, 1332, 1412, 1752, 1133, 1434, 1410, 1433, 1411, 1751, 
        1134, 1518, 1671, 1135, 1519, 1672, 1136, 791, 1137, 1614, 1279, 1138,
         1615, 1520, 1673, 1139, 1521, 1674, 1140, 1522, 1675, 1141, 1523, 
        1676, 1142, 1524, 1677, 1143, 1525, 1678, 1144, 1755, 1425, 1426, 
        1145, 1756, 1427, 1333, 1505}], 
       Line3DBox[{1486, 1467, 1747, 1386, 1232, 1345, 1712, 1574, 1233, 1560, 
        1713, 1234, 882, 1235, 1659, 1320, 1236, 1660, 1561, 1714, 1237, 1562,
         1715, 1238, 1563, 1716, 1239, 1564, 1717, 1240, 1565, 1718, 1241, 
        927, 1346, 1242, 1582, 1744, 1468, 1499}], 
       Line3DBox[{1487, 1374, 1748, 1390, 1389, 1251, 1348, 1726, 1576, 1250, 
        1586, 1725, 1419, 1249, 1724, 1568, 1248, 1723, 1567, 1247, 1722, 
        1566, 1661, 1246, 890, 1245, 1416, 1721, 1584, 1244, 1347, 1720, 1575,
         1243, 1387, 1388, 1719, 1373, 1506}], 
       Line3DBox[{1488, 1475, 1474, 1252, 1418, 1754, 1585, 1417, 1349, 1253, 
        1577, 1727, 1350, 1254, 1578, 1728, 1351, 1750, 1255, 1352, 1729, 
        1579, 1256, 1353, 1730, 1580, 1257, 1354, 1420, 1012, 1421, 1258, 
        1476, 1477, 1595}], 
       Line3DBox[{1489, 1480, 1464, 1379, 1331, 1364, 1330, 1735, 1132, 1278, 
        1613, 1131, 785, 1130, 1670, 1517, 1129, 1669, 1516, 1128, 1668, 1515,
         1127, 1667, 1514, 1612, 1126, 1277, 1611, 1125, 1276, 1610, 1124, 
        777, 1123, 1666, 1513, 1122, 1734, 1329, 1362, 1328, 1378, 1463, 1479,
         1503}], 
       Line3DBox[{1490, 1403, 1334, 1365, 1436, 1435, 1760, 1146, 1452, 1453, 
        1451, 1679, 1588, 1147, 1526, 1680, 1148, 1527, 1681, 1149, 1528, 
        1682, 1150, 805, 1151, 1616, 1529, 1683, 1152, 1530, 1684, 1153, 1531,
         1685, 1154, 1532, 1686, 1155, 1533, 1687, 1156, 1534, 1688, 1157, 
        813, 1158, 1736, 1335, 1366, 1393, 1478, 1392, 1500}], 
       Line3DBox[{1491, 1382, 1397, 1383, 1368, 1336, 1737, 1182, 1700, 1544, 
        1180, 1699, 1543, 1178, 1698, 1542, 1176, 1697, 1541, 1174, 1696, 
        1540, 1172, 1695, 1539, 1170, 1694, 820, 1168, 1693, 1538, 1166, 1692,
         1537, 1164, 1691, 1536, 1162, 1690, 1535, 1160, 1589, 1689, 1454, 
        1456, 1455, 1159, 1591, 1766, 1450, 1367, 1381, 1395, 1380, 1497}], 
       Line3DBox[{1492, 1384, 1409, 1385, 1369, 1545, 1738, 1184, 1457, 1458, 
        1767, 1293, 1185, 1630, 1294, 1186, 1631, 1295, 1187, 1632, 1296, 
        1188, 1633, 1297, 1189, 1634, 1546, 1701, 1190, 836, 1191, 1635, 1298,
         1192, 1636, 1299, 1193, 1637, 1300, 1194, 1638, 1301, 1195, 1590, 
        1639, 1302, 1445, 1764, 1338, 1370, 1377, 1402, 1465, 1496}], 
       Line3DBox[{1493, 1391, 1372, 1339, 1740, 1207, 1310, 1648, 1206, 1309, 
        1647, 1205, 1308, 1646, 1204, 1307, 1645, 1203, 850, 1202, 1703, 1550,
         1201, 1702, 1549, 1644, 1200, 1306, 1643, 1199, 1305, 1642, 1198, 
        1304, 1641, 1197, 1303, 1640, 1196, 1761, 1548, 1446, 1437, 1438, 
        1739, 1547, 1371, 1337, 1406, 1394, 1501}], 
       Line3DBox[{1498, 1592, 1219, 1341, 1342, 1742, 1220, 1555, 1707, 1221, 
        870, 1222, 1655, 1317, 1223, 1656, 1318, 1224, 1657, 1556, 1708, 1225,
         1557, 1709, 1226, 1558, 1710, 1227, 1559, 1711, 1228, 878, 1229, 
        1658, 1319, 1230, 1743, 1343, 1344, 1231, 1593, 1594}]}, {
       Line3DBox[{997, 995, 996, 989, 1731, 756, 604, 1662, 760, 613, 1663, 
        769, 624, 1667, 781, 637, 1673, 794, 651, 1683, 807, 665, 1694, 821, 
        679, 1701, 835, 693, 1702, 848, 707, 1704, 862, 721, 1708, 874, 734, 
        1714, 885, 745, 1722, 892, 752, 937, 1750, 993, 994, 992, 998, 999}], 
       Line3DBox[{1081, 1079, 941, 967, 897, 905, 898, 1598, 609, 765, 1605, 
        620, 777, 633, 1672, 790, 647, 1681, 803, 661, 1691, 817, 1619, 675, 
        831, 1631, 689, 844, 1641, 703, 858, 1649, 717, 870, 730, 1713, 881, 
        741, 1720, 930, 957, 931, 979, 958, 1080, 1108}], 
       Line3DBox[{1083, 968, 988, 969, 943, 901, 603, 759, 1600, 612, 768, 
        1608, 623, 780, 1612, 636, 793, 1615, 650, 806, 1616, 664, 820, 1622, 
        678, 834, 1634, 692, 847, 1644, 706, 861, 1652, 720, 873, 1657, 733, 
        884, 1660, 744, 891, 1661, 751, 1728, 936, 961, 981, 985, 980, 1100}],
        Line3DBox[{1084, 1029, 1759, 1030, 607, 1041, 1018, 1039, 763, 1602, 
        616, 772, 627, 1670, 784, 640, 1676, 797, 654, 1686, 810, 668, 1697, 
        824, 1625, 682, 838, 1636, 696, 851, 1645, 710, 865, 724, 1711, 877, 
        737, 1717, 888, 748, 1725, 1011, 895, 755, 1012, 940, 1106}], 
       Line3DBox[{1085, 964, 1745, 965, 608, 906, 764, 619, 1666, 776, 632, 
        1671, 789, 646, 1680, 802, 660, 1690, 816, 1618, 674, 830, 1630, 688, 
        843, 1640, 702, 857, 716, 1707, 869, 729, 1712, 926, 880, 740, 977, 
        1719, 1065, 1098}], 
       Line3DBox[{1086, 948, 1746, 974, 973, 949, 911, 1735, 912, 643, 1019, 
        1755, 1020, 657, 813, 671, 1700, 827, 1628, 685, 1045, 1046, 1639, 
        699, 854, 1648, 713, 1024, 1757, 1025, 727, 924, 1743, 925, 954, 975, 
        976, 1744, 929, 1107}], 
       Line3DBox[{1087, 1069, 774, 630, 1002, 1752, 1003, 1001, 787, 644, 
        1033, 1760, 1034, 1032, 800, 658, 1766, 1053, 1054, 1043, 1044, 814, 
        1749, 672, 918, 1738, 828, 686, 1037, 1038, 1036, 1739, 841, 700, 
        1013, 1014, 1005, 1741, 1006, 855, 714, 1073, 1074, 1097}], 
       Line3DBox[{1088, 1076, 1075, 1068, 1027, 1758, 1028, 1026, 922, 953, 
        921, 1740, 920, 952, 919, 1764, 1047, 1049, 1048, 991, 1629, 917, 
        1737, 916, 951, 915, 1736, 914, 950, 913, 1021, 1023, 1756, 1022, 
        1067, 1071, 1072, 1096}], 
       Line3DBox[{1089, 955, 1747, 255, 728, 868, 1742, 923, 715, 856, 1753, 
        1004, 701, 842, 1761, 1035, 687, 1767, 829, 1055, 673, 1617, 815, 
        1042, 1689, 659, 801, 1031, 1679, 645, 788, 1751, 1000, 631, 775, 
        1734, 910, 618, 235, 1733, 909, 1105}], 
       Line3DBox[{1090, 1066, 1748, 978, 956, 928, 927, 739, 1658, 879, 726, 
        1654, 867, 712, 1647, 853, 698, 1638, 840, 684, 1627, 826, 1699, 670, 
        812, 1688, 656, 799, 1678, 642, 1613, 786, 629, 908, 1732, 907, 947, 
        972, 1604, 1064, 1095}], 
       Line3DBox[{1091, 934, 1010, 1754, 1009, 1008, 1007, 1721, 742, 882, 
        731, 1655, 871, 718, 1650, 859, 704, 1642, 845, 690, 1632, 832, 676, 
        1620, 818, 1692, 662, 804, 1682, 648, 791, 634, 1610, 778, 621, 1606, 
        766, 610, 1599, 1016, 1015, 1017, 1596, 896, 1093}], 
       Line3DBox[{1092, 1063, 986, 966, 962, 938, 1729, 753, 893, 1723, 746, 
        886, 1715, 735, 875, 1709, 722, 863, 1705, 708, 849, 1703, 694, 836, 
        680, 1623, 822, 1695, 666, 808, 1684, 652, 795, 1674, 638, 782, 1668, 
        625, 770, 1664, 614, 761, 1762, 1060, 1062, 1061, 605, 1763, 757, 
        1052, 944, 971, 990, 970, 1094}], 
       Line3DBox[{1099, 1077, 959, 933, 932, 1726, 749, 889, 1718, 738, 878, 
        725, 1653, 866, 711, 1646, 852, 697, 1637, 839, 683, 1626, 825, 1698, 
        669, 811, 1687, 655, 798, 1677, 641, 785, 628, 1609, 773, 617, 1603, 
        904, 1040, 903, 946, 1070, 1082}], 
       Line3DBox[{1101, 899, 942, 900, 1597, 1056, 1057, 1058, 1051, 1765, 
        1050, 611, 767, 1607, 622, 779, 1611, 635, 792, 1614, 649, 805, 663, 
        1693, 819, 1621, 677, 833, 1633, 691, 846, 1643, 705, 860, 1651, 719, 
        872, 1656, 732, 883, 1659, 743, 890, 750, 1727, 935, 960, 984, 1078, 
        983, 1103}], 
       Line3DBox[{1102, 982, 902, 945, 758, 1768, 606, 1059, 762, 1601, 615, 
        1665, 771, 626, 1669, 783, 639, 1675, 796, 653, 1685, 809, 667, 1696, 
        823, 1624, 681, 837, 1635, 695, 850, 709, 1706, 864, 723, 1710, 876, 
        736, 1716, 887, 747, 1724, 894, 754, 1730, 939, 963, 987, 
        1104}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJyMvXVcVVvQ/4+FCordhaiA3YE12KLYGAhii2J3d3eLYgEmFnaBDkqIgSKd
h9OF3YV8z717fc7zuuf58Xp+95/9ct/N2rNmZs2atdZ79qk7YfbQyYWtrKz0
1lZWRUzXyCGre3esl8Htrto8nmlvpJs+yQ1X18mglfVmaaec2R/e3avIqrHd
DeLfKmpq/Luw1/Uovn16VWKKzEDlhp/99KeGkgrHXak1PDqBVZ7xJYa/MtCf
RSOCLsyQEzU/MbXmuHSWrgZyDBlZ+UVANm055uPuslLGLXJK7XoYrafWmyMn
7LucQR4vNOdndFRw2drn6xyurSfvUos9D9dOo4mFj19oE6vkP917JndbpqNC
nfb+3mdIpm2GEc1OxyXSjn+vKuq9rHrVg9V19OJOty3H79+jlDUuqW7rtbT1
VLPS/UzXh05jHAv/usNh/151NDU9vcLjX2oqfSHmWFG3eK6Q3zB300w9Obea
q87IV1JwkYuRI7qnsXTV08G6MnXn33JySp+xWdNLxicv1B7V5qmOIsb9fmX6
N92QJXYpP0XBPVdVz3vcSke1djtN3VU2k37fCHBtV1vFz1s23lfusJbCHvdc
mO+RRsrimgZ/56r5s1+v7UeLamnFO5uIo0VTzP1B/9CvYaXbfI6Zm2W+7t62
YPAulZ6+v9m4eOWfF1Tj5g2/l7WU1LbS2GLvvA1kJf23Rj7Vb0jfRDV1XNX+
SFJ/PX0cOeplcc+n/Ml9Z5K2qZYaPb1VUme6nik2dEadbSksXbU073CpK5l3
VbQ18/hFWVw2n5t028p3tJb2+D0p/XiCgpzYK2v+NgV/ujIvsexbDX1VtLLt
f11Gy8rcLb5qqYpdelYJtpmhoTEzdl6/2iOThq1NevTVqGZxpehX/fos8E0j
0X8W+jDr4b/+tz8cfgi7ws6wL/oPfUAPc40f2+QsSDVft1W45hE6JpfKRVYb
/GYdi2sOXazRpMTufbk03e54xtzdD7hIw2Dnc0uV5LyuT/b6bANtl+zB2y38
bfiurY2XZWRxp5UV7m5ppaY1H5fr/7na935w0+eIgvsd8dv4t6aaIlbnykz/
JsdxLUqeSVSxuNLIB3lP56XKSOiLhf7MehN+w8KPzP4jxgOL8WEeFxifGK8Y
p/B7jAP4P/wD/gI/gV6gJ+hn6Ooch45f4s3X1NH1ik65+Nb89/NL1a7ys206
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
tT1SaN/ZH8vuyx5x801Pgm41MlK3mnFn7ssUZrvCzpDnUeULp93t9HT33+t5
anF3c/f1pTQUdHJrRbffetp0O6Rr7dRDHPf8/tmOf1Rk29eq9uvWBlK3aJc1
YfMznvhswf4fe5XkbtN6/yidaTw+rjT2SkAcu9hnyjU9FRS5Oe/FuA5Giqxz
IXtZ0jMuNvfF7/TyCipltfN3+SJ6eva19MXCHnIO3dty9D11Bn2v9LzVlnl6
+jlx84vR7nL+OmGMv8fodNKGvZs77KWertXqc77Tvhx++/7L7qfd0qnF4iGv
PD+Z1sXXd4+LKaujgA+p/jFlU+nz6LNv+q5R8pZY1YD+s3V0ofmAobbWqaTo
F7J/Q2ImN9w86fW+43rqa5fvvfx7Nq3Vt+oXWDWL5YotSX8qGWh63Nadpn/T
qNtxA5pWNJDjsKvdC69OZtukD16178opQG61Pe6kaZwHfW3UtG8KF/dYZ5/e
ModY/qTL+fsGsm55bckkpzTuon/+66hvNtph0Q5ZtMOiHbJoh0U7hHYK+W2u
ffuaKa9VOAUGD1awdurZdgM3pJO6VHFPRYSOetglVCh2S8HZbs8Hzm2eZrYT
7AZ7rZZ/aV35egSHD34/oK6tgRbr3KfPXqairy26lvGaGcbL7W8Uf+RjoJfx
lep8bqWi1mOa3/Ceks3rGvmMTaxroL1DTkwutCuDfPc3i+j0w0BvGj3MapSf
xNuGxr51/ygjtIv3oP3XE150CtxhoHGvW7Vfc/AJd7ja8VLySCW5+f5Y39Ik
X/VK47OST73mHxPPW6ecUlCK31n1rgUGSjz361igfRIXvupPI/fLCfaDPWHH
/ISzXU6ZxgVvLlva3VfGQ/b1Gj9tXBYVttvl0WCKnrYtH+ND+3M4bGDJw+uf
ZZj9Ff4Lv4V8kBdywl/hv/BbvA/vx3vztT1r9nDN5kXayqP73dbTg5Jjqpbq
mmX2b/g7/BzyQV7I+bF/eE/P6Ums6GhfbWewkUqeH/nqWKFsOlP4nt/kvTKu
XHaIy9FZpnmg2qVnod9T6dK7128id6s47h1dH1xDR55Lhs67dD+JnueMdIte
95yshjV/fDBJSy3jl0ctH6mhiD+lQn7VVnOuk8eg05e05LjF66ZsVRI9mXHo
+eFJGm4Q6//LapuGBszs2XtIF9M691H4QK8Vcqoe27zUz8I5NEbzeerMk1oS
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
Gt7FwD/cY8rHbkhF3DHHG8QZjEOMS4xH7ONgXwd6gNzoB+QZNSLZY/ZiFafN
8OzRpKlpfZF15diWmCT6Eb7q+SHPeHJaXEaxv6qWvmt6p4ac09DtLq51fYaq
+VXRwt1Or9OSwsbL02VmEq06XKqDZzUNu6yoW2x/goYOt049MbR7EhlsTs7b
PEhJL5vd9C7zM4POjdixwGO9lsRzLP7O/Lxol8V7zO1/2tnw1LZTeroqP9Zu
Qd4dOpaT67W1lZo6eUwM3lPBSF+3lqv1ofkFzsnw63lrqZJEf1j0z9yvVqGV
1zRM1lFMzjPH2NVKNtYacnjj8GT0k0W/Gf0VcrPoB0N+IQcLuRjyiHbxHnP7
Qj7Ia5YTf4/20A7eh/fjvZAP8kJO6AV6QjvQO+yAdmBX2BntQG70A/JDbvQD
8sMP4BcW/mC2M+wLe8A+sMsO7ZuoflP1ZD15zKYhGxR8NSJrTyubFLOdYDfI
A3+F/6Id+B/8Ee+FP8G/IKeHfYt53scSWelsfaBnjIHO913T7GWn/6kTdBX1
Ik6Cg33qGHN1tSab/Wyn9s3LMMWBhBc3TpbMpAm3/zaqFiVn46z4v4fc9HTZ
f0GbdQ/SqO3WzmX7dVZyu7FRM66a1u/R6SErv95KofWFmyQvOZdGpxomu10z
6bna6Ol9zhfV0YH6C/1CfJ9R0Lpxfeb011C5igubnPqipV0XRxc6svoY1XgS
mlTf1O/5DgM+/bXVkrbXgx4BzR7x+E7vv3d21tOvAb6dnm5T0+Mx2d5G99f8
9vjF5Fez9FS0d5sR06KUFFRA/aDb6r+l923L5oWt6pVbnqUjmfXAje6PZNTQ
z+ftojTTvNjukUuMKS+uWuamXwNVJv0pPLrZj+VK7ubinLojWUv+d2vsazE2
nUaljA51eabijJJBk8MGm+SbcmxIv+apVL2dtnigRk2/3Nu2cH/8mkZ1iBlx
coeWLgyoI+vsJyeHHtPy7nqlU6Zu0a/6PnpqtnJW6VWnkqmDx/klVd3ltPjq
+J11hxloQ8tp3zZ0fUz7PN92m9pTRT3KVH/rX89Ar7r3MsYvCOGiXt0/O3TT
0IoghztTZCb/GNO3UZms5+xwtE+ru921VKiHlYufXkOnC6grnKP12vT8TRaX
t3aLrDLFdL/SvZa21xX0J/jYg1JaOcsrvanZ1U5LJa8VH7OOc6hJ5Gjri5FK
PjqoTnpCoIZO/ihW+te+LNK72W7720bNt+49L+TbTEM8cca3munptCLjcIcx
IzQc2S9q53BW04OPCyp7meL812DHZR3XGejK45uZWUs28v4R0zYsGqIi/5PX
O3YcqKNK7w/cctNcp8KtZif+fqGhSp/ON/bKVtHwm5XyJtg9oTYphTed9dNT
RvbvxWsryehOTHO3dfamfKHFvR4z9xtJs6T8u53Rr6ntiwqKE7czaOt3tXXr
q7mUNad/0WujrtLYoPSFzbbJyfdtVLjnkFwK/qxye/v2Ed/vtDlm6lXT+qNG
zZ9vDxpoawH1hhdXbluSG5nJzcqM2f65qZo+FllpCPNXU8/gyRt/Jck5/dPE
QiMaqenn+GE7c3oraeWsUeOoiIplb3qdkX9RUfrajqfXdjP54aSFFYJOqfnT
iaAiTS+oyMatZ2Vd+WxyWWl0UMs0fNr/71cP03qmdrMHxX43yaD2Nk+myV9r
uUfD8fUjS6rI6fSGYgvCUiln5GPfCyWNdMh+mebazmj+yZu3fIlT0K2eO9p3
2qSnhb1C/MbdCOdF33JWnOiipo5t0p+3qKQl35MnXo+yDebUVd4tw+vqaNEA
O4XnVCU9jenou+92KFXvse7pjWpGenPTa0OYWwaFXh1bfVhUDA2onPZ8y/E3
NLlUvXTr008puq0q81WTRHL2n/pkQfpb8nui3RX84QSXChnwfn2RDKpT7UpA
SIe3VFTUiZWwqEPcET57U62AdL5bpnXJG/fk1GFw7cpTquipxckLCZXWytnr
0psrKz0VpHl/6EK7jqY4O/f8+uKOKq7fcODeSvsV9GFV8ylJF5TkkfDl0yYb
DVsdzTiy9pCp/y/Dau1dKacZgdMi5vppeX+xaR1HrlZQRFqQq8ozm/7uXxUy
abaOU6Z6tZ7iraAW/b4P+DQ8g3rMPxs6872BOsXt+vC2cCJvGh+gTnKSU9ez
FZKOJehpYCNf3+/f49kxflXDdcOUdO3bbE3H8jpqUfRK/4BaL3j5zxe9rUpo
aOeJOmnXpqlpwZRv2wo7RrH/yLMdj9XR0/uZB35MmiinPSsHLUgPuM69fV4V
ejshl1xaDNzkNCyZYs4N6Xy5fDBldGjXbZHjO2occz3qp2MY3QjQp4yrH0Xt
FWWf1Z/+nmwt6hOLifqvwdUeBd25nswLJv4NW/cshV4vtCvvlZ1LYw5pLx92
y+EaWc6e9m0zaPzVPQerndVT4vhby1LzlbyxvG3V8x2z6Grk5AGdt2rIZqSd
4vdADb9ovTnEMDablh6RWzVOUFLuvWpfIvVaPl4j4mGzQjJT/G11ceAuOSWs
Dne+Y6PnQ6W0tvdHyOh+741+dydkk+Ho0QvllhvENZ13Z2bn13HMpqA9W6ZM
26kX1zT2mn/hWNt5Jvu77ohMaqcT11ReKWu1T3tHSW3+xI265qIR12SeYOjf
6+piDQ0d9HTAg85KcU3g71zT+lKInsYNLhG5+nSmuD5n1e9XY3cWe0Pr2tev
PPT0S3F9yM2tu01ySEZ94vnO0vVwOOoTF0rPs3R9SC3E895S+yxdn5NatD9E
koelawL9EPK0kuRn6ZpME4X8or8s+kvor9APC/2Qt9BPvXvOzZfJTPnD2vnp
9mtlPLvKfc+x7hkUFHSi/ms7PdWs29ju/kgZ6wtntiKPbNiLhL0Y9hL2JWFf
hn2TJH8g4Q8cKvxhnOQ/JPyHxwn/8ZD8jRZJ/sbxwt+qiPrECqI+Ef5ZSfJn
vif5M8Of20r+z1mS/3Om8P+30njhTdJ4oT5ivOyQxhfPlcYXHRHj66o0Hrm5
NB5phRiPj88f2ZP6XM8JstdNq72Jp9DrG8v7jlXSw7N2j/za6en+nhKtS7dV
8I0yDye9j0ul6dNq+WTN01FcsYsP4r1M67vjrdfX7Z+BeEIinvAjEU+GS/GH
8gP+jT98U8SfjlK8IhGv+L2IVy2l+EbeUnxjlYhve6R4SPekeMjtRTwsLeoW
bSzqFlmKt1RGireMeDtais/8RIrPjPisk+I535biOQ8U8XyBFP85R4r/XEPE
fzFfsLc0X1CamC96tM5Ium9ax353SPS9MDac7n8pYv+5n5o8v916WmGfjkKL
+g5u+FDJJbouWdfrTDLmLxLzFzuK+UvMdyTmO64l5rt+0vxIH6X5kYuL+XG1
NJ+SmE8Z82kvaf4lMf8y5t8r0nxNYr7mD2K+3lFAPeMlKR+gMCkfYOQDT6X8
gcdJ+QMjf5BL+Qa3l/INRr6RLOUnHCblJ1xC5CcVpXyGPaV8htuKfOb8sIi/
A7rp+NeqT36vRt7gtiEPp7dO11BGWrnk8qSl6MBwp6oj1Nwkb1j3AauTkV+R
yK84XORXBikfI5GP8QORj4n8jUT+xidE/pYn5Xsk8j0uIfK9+VJ+SCI/5Lki
PzxbQJ2jj5R/ksg/GfnnWylfpWJSvsrLRb66VMpvWeS33F3kt42kfJg7Svkw
LxH5cIiUP3MDKX/mLJE/lyvW/WfLLDX99bXxTo3X8I8dTYpnuiYjPyeRn7Na
5OcinyeRzzPy+UZS/k8i/+cqIv/vJ60XSKwXOFusF04VUP8YLa1HSKxHuIhY
j7yR1i8k1i+M9Us/ab3DYr3D88R6Z7u0PuJgaX3EWB9ZZZ3ok/hATiFlp7m9
6K/ndXcH7kuITqOVzlSpT3Y2LSgb161Wlp4rzfpYe59dJrkWUOc4UloPkkJa
D3KIWA96r29ywu9LLOmPzbu0WGfgmnfmzr59V0GjHVOmzHW5SjO7FWv896CB
g9cmdNlaU1Xg+rH756U/W37K5uuJq6Nrf9HTgoFfpjc4kUG+lQ0fxrOcf11e
0dN9qZ46V6rVLMw2jVz6zj4cujiR5z2w2useZKC9RfwzX6yRF7iO85o9fEbK
hWw+b3/yx9Z8HW2d9GRGZmsZDQk/szg/W84zPBp/7nZMR0/WdMhu/CeD2pb7
fN55upJnbPhdvm1zHRWLe6a73TONkkd8bpn2Odt8DV4ZuPTNHx19V14Mt2r2
mlZ/mbIr+K+SOi4vPLxBHz1dkf9a61PzKrVJbD39Va6GHpWdN+O0i44OyY7u
97vxkFtOm2l9f7eOXlyTOSwYZJp32mhdJld8zRsaz515ra2eDl9ttjWguqrA
dVmRusuirepmc+96i55+DNCS7auwmG2jFFRyXuWVPb/IuaSrzZVfU7WU5+Jf
Keu4jP7WDbEadFvJDfpt3OFbQ0vTHS9/WdoukwwJxt9jS6hZ7/glMyhaQy00
JU+lTEijqNqDcltNNFDbmGhZZq1N9O7OeRf7ZSo6texAVFqKluQTvqXVnMz0
8JF/x67lTO9/cqtGoVgl3Y300vdZH0/qstX803fpadL1lYfmFM4wX9dNq3Un
pbmRDq9oVGVJpVi6n7Z+Q9HeCgrp9zlsQzcjjT9+uM7yE8d5pfOgkY37qCnR
9kffV+F6UpStumme83PmhdnxJ3Uaav76mcpzyP/U/1quv5SGXbcXVM7invEZ
gxVr1TSsaOkLZ5zUpJhS5mHIRzm/T/g0Z/h1NZ3743PwxR4FHemzuuSePCXH
32r6rZBpPjnzpe+XDgkymqJvpD6xWM2+0pX2dA+a27BfJh3RROuv79bw2rwJ
C6K7qenOhvoxmZPSKGtwnxFPixqpLMXfjhoQyffHzBvg8FdBu2VudauO0NOn
zJUXO8Vd45RLD89eO6+m2GIuVY6u1lCxBfvbdh1+inqN6fY176KOtkz6usHK
5L+NRq79ljczhtbNsz27bquR7tm7zMurmGy+ei31Lxw3+A299lhq5XL9Dg30
OxmaV0RGYR5PA0bWeEPH9gxfVfVVBHvfC/FvWFtJVt9aHehuYyRrsc6ysVhn
/exu616hdgZffTfo7G1XBSV5nNN479fRPM3mrHqmPMPm2efXxRsrSaXpWGj2
aDW1aaloHtFKxfc2d113bK+SGk0v4aw7qaCT77uOP6dV82SX7dtDb5rm14tP
5ju9lJHwP86X/NHsh79D7/gU/WWg6Ts6Ht1bI4FbRDms+TlKTtYfVr4tlWiK
310D7bfvjuNzO4dfuv1MSTKNPrqsRktNjsef+jk2iv/WCa+TGKWhqDtN5S9v
qChve/uh609d5j0Hlja60cBAF+OuNHvZNZtqhi68te3xDaKya4q19npDJbo6
JP8s9NJ8HdRzudeFFu/o+uPDbQ/N38tWnSe+G9U3japtOP27UcBbKiPWUxUs
1lPGoVvL7lmRws/urkyY75dGeoeRmVW8c8nv7oCr3ezkvHxk0WatwrLox8DU
gA4hOpr9a2NScBsVh7dqV6Jm8xy6mu5ZdJ67mrJ7HLTR9dDwnNKD5s3qLaf3
9wLuJWxQ0IttryrEntHy+0nl/jY+L6f5nqmFvu+VUVr+8cjFR3WcUWv1zJI5
cvpzZPr4EaY45n14Y9tnOw1UvEmnOg2i0nh7t1V/Lq7Nph6jW9cYcFlPbW7l
HdmrTOFVDasYy2ea1pldaiZm99VRjZmXgt65JPF8d49mvstV9GNX8ng/U77a
eMpX26ze8Xx73jU/xTUtaark7/04TkFFruVOjMyM4o09f4dlexlp7c4agwNG
pFLewvJ3g5cGsfdVq1sxMW9p513dp3az2Xzt4JVXaNv692I9dbjzf68f6Gj/
M+u/eMez55exRTk4ktI7FBk8Yfs7ej/lZO94u2z2nvCtbcUlr2nzqHtbi9XP
JdWcdgP8WckVv39svHRnCv30VC/qNlpH1qdqKxKnajgyMjr/zcN0mjBmg35N
vimulq623amajk8Pd2+tfpxJ8ek1PLibgno2PMBJrfW8P6Si1QhTHrlde+1n
h7oyCp7USav+rKdL79t3VJjmq8etrLu7mOapu73y3Mv8E6/jTiy5bZJryxdl
bpS9DO3TKal9RvvFJXnosSQPTxTyqCX5qbwkP0P+j1J/yVPqL28S/T0p6YeG
Sfph6KeSxfde4J9rJb0zrtD/KsleXGHRv/Yi2Esl2ZeLS/Yl2Pe75A/cTPIH
gj8I/+Fakv8Q/GfA1g0R7dz1tGSuaki1PDl36G//flalNMK8i3kY86/wc3on
+TnDz2XSuKDZ0rhgjAsxjuieNI4Y42i6NO5oqTTuGOPurTROKVYap4xxWkqs
m0pYrJtUUhyg/E7/xgGuLuJAISleMK6IGyFSnOHyUpxhVxFnRFzi8jv+jUu0
V8QlEce4pRTHKF/EsdpVyl0/F6/nT60NNdsHx9Eoeb2SNi9M69A5Td6fPquj
AH/f02F7lVz2cb22o9TJ9HlGS5lXnpbcghdv6HtOyfKP0fNv9UtDvDXP/4i3
gVJ8JhGfOVTE57ZSPKe7UjxnxHMR/6mkFP8Z8f+PNF9QqDRfMOaLnRbrpj5i
Xg6S5iPykuYjLiTmoxhp/uL+0vzFmL/uSPMc4+ot5jsxP7KTND/yejE/ivmU
f8z/dz7l3mI+feL4wC99kpbGNO80bE9JNWdcL/XN2yoF8ziJeZwxj2O+x/yP
eT9AyhPolZQnMPIEpZRX0Dspr2DkFWopD6EeUh7CyEMKWh9ppTyHHkp5DrcQ
ec5GKS+iFVJexEkiL9ov5VEs8ihGHjVByrcYV+RdNlKexrelPI01Ik/re3mq
U6lSGgru+Gf67Tka/nMkdlJc8RTkhyTyQ0Z+iPkb8zn8ykbKP6mElH8y8s9i
Ur5KvaR8lZGvFrQ+ipLyYVov5cOMfPiElD9TCyl/5jiRP5+W8m0W+TYj3/4q
5ecs8nPuJPJzzJeYPzFvPtjcburlS9nkeKPbLe1fHTs/GxFQoY2swPVRJ2k9
QmI9wliPaMOv9L959Qk1OWEYsG6rgSd9c3j121NJ58b0mT1qRhBFXSqsqJek
5wY+61JWOKupW4DVyCo3b3Pu4Zltqrc0UnbE1DJFGylJL75j0kB81yRNfHfi
g7hfX9zPEPdtu87nOofjOPRm+XUl2UhF/DPSPGQ5xP5TiuWtfMa1FGuti7Ux
0h2X/W2/1lVQ0c3zLgUkJnJ3ecCQiWoDuUzz6tHka06BdbgFfdeloPu5Bcif
/2VmoEFvyvuGbp9WZq6cOsUvPdHvtA5+yMIPCX4Y1M/9+vJGGhZXGu9pqBQe
mEJJTQ99Pt5HRTcL32kor5tGVk12Lti5TkuTAlYuOXLQ5M/7Ty+/2jaOmukS
XUIXaxEH2EeKA4Q48GJBrxjtFS1PijGyYayKIuR/JuY6p9Kh63JfZwc9Px66
f/d9XwW1Obz68podqZjXeKk0rxHmtYVj83NnPdPz2aoKh1mFcmiZvl/wsUIZ
FCTlD3xZyh/okcgfPBvlD1syzcAebaqsvWeKo85z6h53TcjCfRoh3WcncV/Y
iYtIdqOOwl4if+YZUv5MyJ/D53Z698PWyHMKb/igOvKE8ltVqR0fqMA6hStI
6xTCOkXogYQeGHoQ6z7OlNZ9jHXfREnPfEHSM0PPsBPsNk7YS6yfGddTYh39
W/IHzpP8geEPiZJ9+bZkX4Z9C/pOi+X9/uK+toDvt6gKuH9pfYb/j3pK2jg9
MlCTp2P1wTtDLqUl01RpX4LEvgRjXwJ2hZ1h324ibrhaxI3iwn6wZzthxyfS
OKXa0jjlW2KcRun2vl1W/Q7ZKWRxl0z3mz9+XzbVQUl2BXyn5XXHuR4vGr/g
1j/ejf242kgNvhtODlotJ8Pj7YXrbUniN+uXV/jU1Uj1Mxa5aQfL6OLBexfK
52XzqtnKgdmdDVQuuuTcnkvTqfqVN0vK35Rz7c0PwhzP6+ndx08NA6alUoL4
3kcx8f0PL/E9DbHPxmKfjX6KfbawMTHyoT81fPuG7dwPcjXNNzy/XHdDEvYt
WexbUlOxbyn221nstxP228W5BotzDZojzjXEeRyL8zjCeZw49+QD0rkn/RLn
nuL8nf9I5++M8/dwSU4ScjLkXCPxCXxa4hMYfEJBfij0Q0I/DP38HfD//b2R
GpKeSeiZ3wo9X5bsQsIuXFbYJVeyIwk7cj1hxxTJ7iTszvWF3WPbuNU/vyKZ
3uZkNVzVX00r/zyeMcFNS28OHL775UQqHe359lReTRVlV3jSrsVTLfUOevHg
0f0k+rK1bOjaUUaeGDGibExSNlUU/pYr/K2JkH97UqNKcfbJrNa/37DFlIct
3n95Zt9MU94jtcOiHZos2vmSYuf3opSMh71vS+eWG6hSw65D305Joyuz/cPK
FJdxh2sXZlsPNdDK08t3PauaTgarZ+v7vlRzly4n9zR+p6Exhbxbd/+b9L++
77FZfAfjmbjvbnF/vMV3Nu7jOxvi/kqL++K9JN7LeK9e0hsfk/TG0FtBdv8q
9ZdEf7mC6G+o1F9qL/WX0d+C5l/L71TcKOA+nm8bH3S5a0kZlUlKUG/3NfDV
D1GTdjxMo0OuC3fFvTfZt/yDiTbzjJwz671Vb49sKiPlDyTyB0b+cEB6nsXz
JBfPzyvgOxKtpfdyWem9hPeKc14W57y0R5zz7hHfbdgjvttwu6jUzoICvudg
eZ/E/Yv13ab2ts/gClfvT5xlbyTZj3z/OQ4ZBcqpcXO9dNH0fHtNy2UPTM+X
atXW9pV9Bl2S2qHyUjucKdrRSc+TeJ7xfCE7p8W+oTq6WnzH8lkjj1G7cY0e
yVZrqERN9w3PZAbSpqtKO8fcYVq/bFDjI0pyu3r7xIQTBnq8rceVyM8n2bCj
ehcnRxXtLNmsQtlXBiqWdr6X6tl1PnjEmHQ8Wkke+xqH7eyvI/X4+pNfPVfw
Ck3w0iUhJn0t3FungkpHrrUa/uxQTMkDts3zU4emUJZzYsXhr0zrrQjPtK5t
lBz75JST54wUaiftb5PY32bsb+fKjux9NFxJE4Krj1f76vjhgLKFfoSkUjuJ
1yLBa3GU4LUCpXbxHnP74fcPGOJ7rqObz8YemdtGz7dyGz/49FZNJaT+oH/m
fn1tv3PPEAc97fq4RPNnmoJLN3Dc7bwxlTrNLSIP/qGjbnt27HVNVLAPvbed
/ymF/KX8mUX+TMifv9z79718Q3ov3RHv7S+dR/AM6TyCTonziPY2F/vfG6lk
TcUyUTRVR40OxfH84FT6JK2juZ+0jiaso4X+WeifVv5X/yz0T9C/WKezWKcT
1unQl7ALPRV6E/vD/F3aHybsD1tJfsUfJL/i9sKvikt+xSrJr8hV+FVfya94
q+RXZPyvX7GNsAP0L/IcFnkOqUSeA7+BH0HOPt8o/sFZPU2bGXXGf2Akf949
tHLVRBWlf4vJ1NoaqePofqGXu7/kcbuulK9mWsf1T6/VfrWdkcIytDGFY56w
LlXz7/djd/TMTB9T1kiLBixYZN/hBffY3q9E2yYKKrvdesNYg46Ol7nh1X55
Djtsd77e9EgWRcdNeHhrm55sSqoS2/WT86Nw18BnhdKp88Je084909PdaZOj
15TI4aizZBz2I50ud2k+MSxQT0sMDVPf2ch5TZDXE5+B6XRI9bH237FKXlbz
yBGHATqaWH/U0ImfUwtcv9gebrpG01vJ4QvyUoOPm/Tgpnz0Kz+FuFPvzUtN
793n7DDNKzeB/7Qp/u2tUkFfzx+vmRhuoMhHI2YmzEvheNuGo65dl9HjUOuI
g1cM1Dds+aLCLqn8aMbTrGEDZdRd2o9lsR9LK8V+rGif90jtk0X7/Fhqn16L
9sV+L5eQ9nsJ+73ivdxHei89Fu+dKOwHe34RdkxS+6VMDopmm/BFXur6Bnp0
b9zUgTYqGjyoRHuPn9kcmKRX2DYwjaPY4RedMtOpx5IL/ts0BmrYpHzEEVUi
n6h/P2y5Lofk1TvELnxhWk8uuWS0OZ3Mk6pP7lujvGldqWms3LpQTwn1jKfl
ZTP4rEfFnD5/c+jdfO+W7xs9Zf9AmnZFZyC7qkdqH7ihIJ8Cvhsw2uK+i7jf
K9h51PlYOe+YM89HW15PQ1c3HJa+Pp0GT/6cVzgqmxWnz08Im2Lq78lrJ2Of
ZNH7Yv01l3KyuVznio2fPdRTl5HBly4syqRfsyPtOidl84VX0VtTNujpUp+j
biGDsmiXlOeQyHMYeU5my/UbRl9Vc+O/E1dMddJS2dz5HLkuCfdJ3Ocy4r7I
x/idlI/xKpGPCS6CBRdBJQUXIXhI3izxkAQecsLmcKWmkoGip3axuzH0Eg1I
35eT8lRVYH7etfLjqDWrdHxxjd+oOXoldWOXdd+nJJNs+vzJDiN13Pr5WfmG
TiqauUUdcs9gfp7E8+z63+dJPM94Xpwbsp10bsg4NxwvyckaSU4eKOT8XUA+
XFA+U6KA9Y5l3oXv+822qCMOFvWPg0UdqZOoK10t6iUTCk3I9m+TzHynYkal
Q0aK/Pyrq/sJ07p7cGKSbU0lR37Ouuhk8ivH9iXClh1Jpp97Qyb6PUqiu1k5
5YaEqqmj+9GH0dW0RAvshnnpNfyp1qqHSYU0VHK6816b3knk9dNj6O1yBvqR
V37JjkWXKSi7xLhlcSoaLd1nx7//3udgcV+0Q6IdRjtfpffyPem9jPcKOUnI
yQ2EnElSv0j0ix+LfsXwm65Lmtxj76gm2VvGGWn74irLA1MVdCI9UTPOTsaT
y7s0vrXJQEUD4+wPtEujzu6nPtY6q+ZLOTM+1OikpS9ZRWbvH5FEPj/ad+k0
XMchsesqzCPT/PrFtXqUKonGSvfpvHSfcV+0Q6IdRjteol61uKhXDcL3ASR5
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
8zKOF+dlPaTzNRbna4zzNXEex+I8jm+I87iTaydenlw+myodaDnrVWs977Hf
975jXRmVl+IwiTjMiMN/qlyxvhwUR3ZFGsy4F6/n6bVrdrF6oaTlfr0XJQw8
wYtvlTufdcRA869bv8huojLXdaPOG/uZC6YExy8KeMIz6n/1LlTKSI4vP425
E6gw1zOjvhn7oqjL7WZx3mRZv4x6c9SNo44c55IZoi4addI4JxXnrSTOWxnn
rVcKqBcuYlEXjHr8WVK/aLrUL3YS/eos6hJRp4h9JNQl6kSdIvbTCqoLs5XO
YUmcw3I/cQ6LOq9ssa59Lp6/euVifPlex7jYC48tF0N1/OzExpdHVmtovXSf
rKX79FTcx3oJdSdfxbppzpaFxokn9OTSrPRWzdHX/OX60rRm85W4z52l+/RJ
3Ee9ibOoNzkp6k0K4l7Ae/y24D3Al4M3B2deT/D34PHB4ae3KLt54MTr7BO1
ZEn55wbaUdvj83WTfx4Nrl1YmfSUk1xH7+ptZ6SDH0rOKD1dQXeerzMcWBFD
285/b/G7q5baX8/sVH6gloJ/LSvevt90Gjv+86M6OTralRrkudw0ry34xe++
vnvN9VZPVvV6rqeuRZbWm+jwv8/NY0Xcy/BqEf57jpI3Zu2rcqScjsr+1JRo
fCqNro2TV+19S8U2O9ruWrxNS7O6VtvU+2AKbbzt9GAyq3nAmCPrcmy05PBq
X2v/iCQaN6jzoBpDEqjqgQujH5jWjWPPtl6btFdPT9f/tPUfdJcKJSQsSzXl
FbOv/a1Y0kZPv96eLTTz8S1uu31g9cGmvPmrKuyaLlhLpz6Xar3q2EuOieuQ
cMhBR7sXDTwb9UBN9gGBN75WUHO9GitvuwVqqOKzfe/eR6SR+6jH5R7OfEZd
3rzI+rhRTvNt6w1bcdhIbz7szu47bxzZNEuMi69iyrc22g0pfsVA2xWDbR70
fsIZvqWKzfdXEx1s1qj6cx1d3zV6aJ9ADTesVf3Bjwpqchrba/Y7U/vtpi5a
YTc+nDplFv7arX8WxZZf/it4+RsqXWLJrLWj7vNgnweNh4bLyd1tc2zfCrn0
YuaH2WV13WhdhWbzx4xKocDAlguX/HlLwRbfH/a2+P5w+wK+P9yqgO8PD7b4
/vBYwft6WXx/eI3gSpcIzhT84RLBI66x+M7wGMHnjRe8HtoR72WPAr4zLHh2
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
     "]],
   Axes->True,
   BoxRatios->{1, 1, 0.4},
   Method->{"RotationControl" -> "Globe"},
   PlotRange->{{-1, 1}, {-1, 1}, {0., 1.500702098332472}},
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5393480702057037`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Packages", "Section",
 CellChangeTimes->{
  3.444215112539296*^9, {3.4442153785609617`*^9, 3.444215379655527*^9}, 
   3.444348978973599*^9, {3.444349405900198*^9, 3.444349408132859*^9}, {
   3.444349738835936*^9, 3.4443497397112226`*^9}, {3.507957455872913*^9, 
   3.50795745600063*^9}}],

Cell[TextData[{
 "Additional ",
 ButtonBox["packages",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/MathematicaPackages"],
 " can be loaded. For example, after loading the ",
 Cell[BoxData[
  FormBox[
   StyleBox["PhysicalConstants`", "Input"], TraditionalForm]]],
 " package. "
}], "Text",
 CellChangeTimes->{{3.413260882628826*^9, 3.4132608826288853`*^9}}],

Cell[BoxData[
 RowBox[{"<<", "PhysicalConstants`"}]], "Input",
 CellChangeTimes->{{3.444349839001595*^9, 3.444349848546935*^9}, {
  3.444349960197566*^9, 3.444349962675712*^9}}],

Cell[TextData[{
 "one has access to physical constants such as ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["\[HBar]", TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "0"], TraditionalForm]]],
 ", along with their SI units."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", "c", "]"}], "=", "SpeedOfLight"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", "e", "]"}], "=", "ElectronCharge"}]], "Input",
 CellChangeTimes->{{3.4443499772856207`*^9, 3.444349985741705*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", "\[HBar]", "]"}], "=", "PlanckConstantReduced"}]], "Input",\

 CellChangeTimes->{{3.4443499896265583`*^9, 3.444350003138579*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   SubscriptBox["\[Epsilon]", "0"], "]"}], "=", 
  "VacuumPermittivity"}]], "Input",
 CellChangeTimes->{{3.444350136024638*^9, 3.444350144655933*^9}, {
  3.507895021793048*^9, 3.507895023089823*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   SubscriptBox["m", "e"], "]"}], "=", "ElectronMass"}]], "Input",
 CellChangeTimes->{{3.444350136024638*^9, 3.444350144655933*^9}, {
  3.507895021793048*^9, 3.507895023089823*^9}, {3.507895117565555*^9, 
  3.50789512878836*^9}}],

Cell[TextData[{
 "\[HBar] is entered as \[AliasDelimiter]\[InvisibleSpace]hb\[InvisibleSpace]\
\[AliasDelimiter] .  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "0"], TraditionalForm]]],
 " is entered as \[AliasDelimiter]\[InvisibleSpace]e\[InvisibleSpace]\
\[AliasDelimiter]\[ControlKey]\[LeftModified]_\[RightModified]\
\[InvisibleSpace]0 ."
}], "Warning",
 CellChangeTimes->{{3.444349124014515*^9, 3.4443491963190527`*^9}, {
  3.444349328321682*^9, 3.4443493775500517`*^9}, {3.444350032123075*^9, 
  3.44435012846772*^9}}],

Cell[TextData[{
 "Instead of assigning the symbols ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["\[HBar]", TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "0"], TraditionalForm]]],
 ", we assign their ",
 StyleBox["numerical value",
  FontSlant->"Italic"],
 ". In this way we can work with expressions involving these symbols but, if \
we numerically evaluate such an expression, a numerical value results."
}], "Warning",
 CellChangeTimes->{{3.444349124014515*^9, 3.4443491963190527`*^9}, {
  3.444349328321682*^9, 3.4443493775500517`*^9}, {3.444350032123075*^9, 
  3.444350155918729*^9}}],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288565834*^9, 3.5079575548617983`*^9}],

Cell[TextData[{
 "After entering the above inputs, use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "=", 
    RowBox[{"m", " ", 
     SuperscriptBox["c", "2"]}]}], TraditionalForm]]],
 " to compute the rest-mass energy of an electron in electron volts. You will \
need to numerically evaluate the energy first and use ",
 Cell[TextData[ButtonBox["Convert",
  BaseStyle->"Link",
  ButtonData->"paclet:Units/ref/Convert"]], "SearchResultTitle"],
 " to obtain energies in electron volts. ",
 StyleBox["[2 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4443490719553337`*^9, 3.4443490744111*^9}, {3.444349243427834*^9, 
   3.4443492464133387`*^9}, 3.4443492831775723`*^9, {3.4443494369609203`*^9, 
   3.444349440481529*^9}, {3.444349471085791*^9, 3.444349483618422*^9}, {
   3.4443496089837933`*^9, 3.444349719861471*^9}, {3.444349773242219*^9, 
   3.444349792242279*^9}, {3.4443501775498867`*^9, 3.44435018389774*^9}, {
   3.5078951519725237`*^9, 3.507895241239395*^9}, {3.50789535473421*^9, 
   3.507895354979711*^9}, {3.50789703443406*^9, 3.507897096181898*^9}, {
   3.507897261914291*^9, 3.5078972654452972`*^9}, {3.507897333837134*^9, 
   3.50789736304077*^9}, {3.5393481308772087`*^9, 3.539348138687406*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Convert", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     SubscriptBox["m", "e"], 
     SuperscriptBox["c", "2"]}], "]"}], ",", "ElectronVolt"}], "]"}]], "Input",\

 CellChangeTimes->{{3.53934811456252*^9, 3.539348243246491*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"510998.9098476405`", " ", "ElectronVolt"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5393481217549267`*^9, {3.5393481535749807`*^9, 3.539348243697159*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288565834*^9, 3.507957557054199*^9}],

Cell[TextData[{
 "The fine structure constant, ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]]],
 ", is a dimensionless number that appears in quantum electrodynamics. It is \
not currently known if it can be derived from first principles in terms of \
mathematical constants. In SI units (see ",
 ButtonBox["http://physics.nist.gov/cuu/Units/units.html",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://physics.nist.gov/cuu/Units/units.html"], None}],
 "), ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", "\[Pi]", " ", 
       SubscriptBox["\[Epsilon]", "0"]}]], 
     FractionBox[
      SuperscriptBox["e", "2"], 
      RowBox[{"\[HBar]", " ", "c"}]]}]}], TraditionalForm]]],
 ". Compute the numerical value of ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]]],
 " and show that it is a ",
 StyleBox["dimensionless",
  FontSlant->"Italic"],
 " constant (",
 StyleBox["Hint",
  FontSlant->"Italic"],
 ": express the derived units Volt, Coulomb, and Joule in terms of ",
 Cell[BoxData[
  FormBox[
   StyleBox["m",
    FontSlant->"Plain"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["Kg", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   StyleBox["s",
    FontSlant->"Plain"], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Plain"], TraditionalForm]]],
 "). Also compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "\[Alpha]"}], TraditionalForm]]],
 ". ",
 StyleBox["[3 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4443490719553337`*^9, 3.4443490744111*^9}, {3.444349243427834*^9, 
   3.4443492464133387`*^9}, 3.4443492831775723`*^9, {3.4443494369609203`*^9, 
   3.444349440481529*^9}, {3.444349471085791*^9, 3.444349483618422*^9}, {
   3.4443496089837933`*^9, 3.444349719861471*^9}, {3.444349773242219*^9, 
   3.444349792242279*^9}, {3.4443501775498867`*^9, 3.44435018389774*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", "\[Pi]", " ", 
     SubscriptBox["\[Epsilon]", "0"]}]], 
   FractionBox[
    SuperscriptBox["e", "2"], 
    RowBox[{"\[HBar]", " ", "c"}]]}], "]"}]], "Input",
 CellChangeTimes->{3.539348686822962*^9}],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"0.007297352536796446`", " ", 
    SuperscriptBox["Coulomb", "2"], " ", "Volt"}], 
   RowBox[{"Ampere", " ", "Joule", " ", "Second"}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5393486873007193`*^9, 3.539348773033409*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"{", "\[VeryThinSpace]", 
   RowBox[{
    RowBox[{"Coulomb", "\[Rule]", 
     RowBox[{"Ampere", " ", "Second"}]}], ",", 
    RowBox[{"Joule", "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["Meter", "2"], " ", "Kilogram"}], 
      SuperscriptBox["Second", "2"]]}], ",", "\[VeryThinSpace]", 
    RowBox[{"Volt", "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["Meter", "2"], " ", "Kilogram"}], 
      RowBox[{
       SuperscriptBox["Second", "3"], " ", "Ampere"}]]}]}], "}"}]}]], "Input",\

 CellChangeTimes->{{3.53934831270045*^9, 3.5393483434153757`*^9}, {
  3.539348408553982*^9, 3.539348505268916*^9}, {3.5393486576674957`*^9, 
  3.539348657871372*^9}, {3.539348778129039*^9, 3.539348795016574*^9}}],

Cell[BoxData[
 FormBox["0.007297352536796446`", TraditionalForm]], "Output",
 CellChangeTimes->{3.53934830915574*^9, 3.539348343858534*^9, 
  3.539348440346562*^9, 3.5393485059572153`*^9, 3.5393486591898117`*^9, 
  3.539348795809752*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["1", "%"]], "Input",
 CellChangeTimes->{{3.539348560873456*^9, 3.539348562304666*^9}}],

Cell[BoxData[
 FormBox["137.03599969407566`", TraditionalForm]], "Output",
 CellChangeTimes->{3.539348562565683*^9, 3.53934866217666*^9, 
  3.5393487975570917`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Using the Web", "Section",
 CellChangeTimes->{
  3.444215112539296*^9, {3.4442153785609617`*^9, 3.444215379655527*^9}, 
   3.444348978973599*^9, {3.444349405900198*^9, 3.444349408132859*^9}, 
   3.44434975500642*^9, {3.507957457536924*^9, 3.507957457656546*^9}}],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288588668*^9, 3.507957558797389*^9}],

Cell[TextData[{
 "At ",
 ButtonBox["mathworld.wolfram.com/PiFormulas.html",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://mathworld.wolfram.com/PiFormulas.html"], None}],
 " you will find a number of formulas for ",
 Cell[BoxData[
  FormBox["\[Pi]", TraditionalForm]]],
 ". Confirm equations (5), (6), and (9). ",
 StyleBox["[3 Marks]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4443490719553337`*^9, 3.4443490744111*^9}, {3.444349243427834*^9, 
   3.4443492464133387`*^9}, 3.4443492831775723`*^9, {3.4443494369609203`*^9, 
   3.444349440481529*^9}, {3.444349471085791*^9, 3.444349483618422*^9}, {
   3.4443496089837933`*^9, 3.444349719861471*^9}, {3.444349773242219*^9, 
   3.444349792242279*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["\[Pi]", "4"], "\[LongEqual]", 
   RowBox[{
    RowBox[{"4", " ", 
     RowBox[{
      SuperscriptBox["tan", 
       RowBox[{"-", "1"}]], "(", 
      FractionBox["1", "5"], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["tan", 
      RowBox[{"-", "1"}]], "(", 
     FractionBox["1", "239"], ")"}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.539348831180914*^9, 3.539348855786916*^9}}],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{3.539348856868243*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["\[Pi]", "4"], "\[LongEqual]", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "\[Infinity]"], 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"k", "+", "1"}]], 
     RowBox[{
      RowBox[{"2", " ", "k"}], "-", "1"}]]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.539348865999291*^9, 3.539348899308353*^9}}],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{{3.539348891778263*^9, 3.5393488998698807`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"\[Pi]", "\[LongEqual]", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "0"}], "\[Infinity]"], 
    FractionBox[
     RowBox[{"2", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "k"], 
      SuperscriptBox["3", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "-", "k"}]]}], 
     RowBox[{
      RowBox[{"2", " ", "k"}], "+", "1"}]]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.539348865999291*^9, 3.5393489627563066`*^9}}],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{3.5393489632732897`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Exercise",
 CellChangeTimes->{3.444354288610421*^9, 3.507957560989452*^9}],

Cell[TextData[{
 "Lookup the primary definition for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"log", "(", "z", ")"}], TraditionalForm]]],
 " at ",
 ButtonBox["http://functions.wolfram.com/",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://functions.wolfram.com/"], None}],
 ". Enter this definition into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and check it. ",
 StyleBox["[1 Mark]", "ExerciseMark"]
}], "Text",
 CellChangeTimes->{{3.413261315894496*^9, 3.413261320311421*^9}, {
   3.413261490726389*^9, 3.4132615049336853`*^9}, {3.413503970345894*^9, 
   3.4135039733616447`*^9}, 3.444348109328478*^9, {3.444348190754891*^9, 
   3.4443482443940163`*^9}, {3.444348737363947*^9, 3.444348762072199*^9}, {
   3.444348822653267*^9, 3.444348901805154*^9}, 3.4443489985774813`*^9, {
   3.4443490719553337`*^9, 3.4443490744111*^9}, {3.444349243427834*^9, 
   3.4443492464133387`*^9}, 3.4443492831775723`*^9, {3.4443494369609203`*^9, 
   3.444349440481529*^9}, {3.444349471085791*^9, 3.444349483618422*^9}, {
   3.4443496089837933`*^9, 3.444349719861471*^9}, {3.444349773242219*^9, 
   3.44434980299452*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"log", "(", "z", ")"}], "\[LongEqual]", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "\[Infinity]"], 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"k", "-", "1"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "-", "1"}], ")"}], "k"]}], "k"]}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.539348997361239*^9, 3.53934900211473*^9}}],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{{3.539348998857121*^9, 3.539349002584796*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowSize->{1268, 747},
WindowMargins->{{17, Automatic}, {Automatic, 43}},
DockedCells->{
  Cell[
   BoxData[
    GridBox[{{"", 
       RowBox[{"Math2200: Applied Mathematics", "  \[LongDash]  Solutions to", 
         RowBox[{"Assignment ", 1}]}], 
       TagBox[
        ButtonBox[
         StyleBox["Next Exercise \[FilledRightTriangle]", FontSize -> 10], 
         Appearance -> None, ButtonFunction :> FrontEndExecute[{NotebookFind[
              EvaluationNotebook[], "Exercise", Next, CellStyle]; 
            FrontEndToken[
              EvaluationNotebook[], "OpenCloseGroup"]}]], "Button", 
        TagBoxNote -> 
        "Click here to move the selection to the next exercise"]}}]], 
   GridBoxOptions -> {
    GridBoxAlignment -> {"Columns" -> {{Left, Center, Right}}}, 
     GridBoxItemSize -> {"Columns" -> {
         Scaled[0.12], 
         Scaled[0.7], 
         Scaled[0.18]}}}, "Title", FontSize -> 10, CellSize -> {100, 18}, 
   Background -> RGBColor[0.255, 0, 0], CellMargins -> {{0, 0}, {0, 0}}, 
   CellTags -> "DockedTitle"]},
ShowSelection->True,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Titles", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], ShowCellBracket -> False, ShowSelection -> 
             True, ShowGroupOpener -> False, CellMargins -> {{0, 0}, {0, 0}}, 
             FontSize -> 22, FontWeight -> "SemiBold", FontColor -> 
             RGBColor[0.96, 0.96, 0.96], Background -> 
             RGBColor[0.255, 0, 0], $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None], 
            Cell[
             StyleData["Title", "SlideShow"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 22, FontWeight -> 
             "SemiBold", FontColor -> RGBColor[0.96, 0.96, 0.96], Background -> 
             RGBColor[0.255, 0, 0], $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None], 
            Cell[
             StyleData["Title", "Printout"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 22, FontWeight -> 
             "SemiBold", $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, ShowSelection -> 
             True, ShowGroupOpener -> False, CellMargins -> {{0, 0}, {0, 0}}, 
             FontSize -> 18, FontWeight -> "SemiBold", FontColor -> 
             RGBColor[0.96, 0.96, 0.96], Background -> 
             RGBColor[0.355, 0, 0], $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None], 
            Cell[
             StyleData["Subtitle", "SlideShow"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 18, FontWeight -> 
             "SemiBold", FontColor -> RGBColor[0.96, 0.96, 0.96], Background -> 
             RGBColor[0.355, 0, 0], $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None], 
            Cell[
             StyleData["Subtitle", "Printout"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 18, FontWeight -> 
             "SemiBold", $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 14, FontWeight -> 
             "SemiBold", FontColor -> RGBColor[0.96, 0.96, 0.96], Background -> 
             RGBColor[0.455, 0, 0], $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None], 
            Cell[
             StyleData["Subsubtitle", "SlideShow"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 14, FontWeight -> 
             "SemiBold", FontColor -> RGBColor[0.96, 0.96, 0.96], Background -> 
             RGBColor[0.455, 0, 0], $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None], 
            Cell[
             StyleData["Subsubtitle", "Printout"], ShowCellBracket -> False, 
             ShowSelection -> True, ShowGroupOpener -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, FontSize -> 14, FontWeight -> 
             "SemiBold", $CellContext`MenuPosition -> 
             None, $CellContext`MenuCommandKey -> None]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Sections", "Subsection", 
          CellChangeTimes -> {{3.443916926560617*^9, 
           3.4439169279993553`*^9}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> TextData[{
                CounterBox["Section"], ". "}], ShowGroupOpener -> True, 
             WholeCellGroupOpener -> True, 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "Theorem", 0}}, FontColor -> RGBColor[0, 0, 0.498039]], 
            Cell[
             StyleData["Section", "Presentation"], CellDingbat -> TextData[{
                CounterBox["Section"], ". "}], 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "DisplayFormulaNumbered", 0}, {"Theorem", 0}}, FontColor -> 
             RGBColor[0, 0, 0.498039]], 
            Cell[
             StyleData["Section", "Condensed"], CellDingbat -> TextData[{
                CounterBox["Section"], ". "}], 
             CellMargins -> {{28, Inherited}, {6, 12}}, 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "DisplayFormulaNumbered", 0}, {"Theorem", 0}}, FontColor -> 
             RGBColor[0, 0, 0.498039]], 
            Cell[
             StyleData["Section", "Printout"], CellDingbat -> TextData[{
                CounterBox["Section"], ". "}], 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "DisplayFormulaNumbered", 0}, {"Theorem", 0}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"]}], ShowGroupOpener -> True, 
             WholeCellGroupOpener -> True, FontColor -> 
             RGBColor[0, 0.333333, 0]], 
            Cell[
             StyleData["Subsection", "Presentation"], CellDingbat -> TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"]}], 
             CellChangeTimes -> {3.47458489839288*^9}, FontColor -> 
             RGBColor[0, 0.333333, 0]], 
            Cell[
             StyleData["Subsection", "Condensed"], CellDingbat -> TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"]}], 
             CellMargins -> {{30, Inherited}, {6, 12}}, FontColor -> 
             RGBColor[0, 0.333333, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], CellDingbat -> TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"]}], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"], ".", 
                CounterBox["Subsubsection"]}], ShowGroupOpener -> True, 
             WholeCellGroupOpener -> True, FontColor -> 
             RGBColor[0, 0, 0.368627]], 
            Cell[
             StyleData["Subsubsection", "Presentation"], CellDingbat -> 
             TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"], ".", 
                CounterBox["Subsubsection"]}], FontColor -> 
             RGBColor[0, 0, 0.368627]], 
            Cell[
             StyleData["Subsubsection", "Condensed"], CellDingbat -> TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"], ".", 
                CounterBox["Subsubsection"]}], 
             CellMargins -> {{30, Inherited}, {6, 12}}, FontColor -> 
             RGBColor[0, 0, 0.368627]], 
            Cell[
             StyleData["Subsubsection", "Printout"], CellDingbat -> 
             TextData[{
                CounterBox["Section"], ".", 
                CounterBox["Subsection"], ".", 
                CounterBox["Subsubsection"]}], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsection"], ShowGroupOpener -> True, 
             WholeCellGroupOpener -> True, MenuSortingValue -> 1355, 
             FontColor -> RGBColor[0, 0.262745, 0]], 
            Cell[
             StyleData["Subsubsubsection", "Presentation"], MenuSortingValue -> 
             1355, FontColor -> RGBColor[0, 0.262745, 0]], 
            Cell[
             StyleData["Subsubsubsection", "Printout"], 
             CellMargins -> {{Inherited, 0}, {7, 14}}, MenuSortingValue -> 
             1355, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsubsection"], MenuSortingValue -> 1356], 
            Cell[
             StyleData["Subsubsubsubsection", "Presentation"], 
             MenuSortingValue -> 1356], 
            Cell[
             StyleData["Subsubsubsubsection", "Printout"], 
             CellMargins -> {{Inherited, 0}, {7, 14}}, MenuSortingValue -> 
             1356]}, Closed]]}, Open]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Theorem-Proof", "Section", 
       CellChangeTimes -> {{3.443916926560617*^9, 3.4439169279993553`*^9}, {
        3.469269419329535*^9, 3.469269424322864*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Theorem"], CellDingbat -> TextData[{
             StyleBox["Thm", FontWeight -> "Bold"], " ", 
             CounterBox["Section"], ".", 
             CounterBox["Theorem"], "  "}], CellMargins -> {{50, 10}, {7, 7}},
           CellGroupingRules -> {"SectionGrouping", 80}, 
          CounterIncrements -> {"Theorem", 1}, MenuSortingValue -> 1800], 
         Cell[
          StyleData["Theorem", "Presentation"], CellDingbat -> TextData[{
             StyleBox["Thm", FontWeight -> "Bold"], " ", 
             CounterBox["Section"], ".", 
             CounterBox["Theorem"], "  "}], CellMargins -> {{50, 10}, {7, 7}},
           CellGroupingRules -> {"SectionGrouping", 80}, 
          CounterIncrements -> {"Theorem", 1}, MenuSortingValue -> 1360, 
          FontSize -> 24], 
         Cell[
          StyleData["Theorem", "Printout"], CellDingbat -> TextData[{
             StyleBox["Thm", FontWeight -> "Bold"], " ", 
             CounterBox["Section"], ".", 
             CounterBox["Theorem"], "  "}], CellMargins -> {{50, 10}, {7, 7}},
           CellGroupingRules -> {"SectionGrouping", 80}, 
          CounterIncrements -> {"Theorem", 1}, MenuSortingValue -> 1360]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Proof"], CellDingbat -> TextData[{
             StyleBox["Proof:", FontSlant -> "Italic"], ""}], 
          CellMargins -> {{60, 10}, {7, 7}}, 
          CellGroupingRules -> {"SectionGrouping", 85}, MenuSortingValue -> 
          1810], 
         Cell[
          StyleData["Proof", "Presentation"], CellDingbat -> TextData[{
             StyleBox["Proof:", FontSlant -> "Italic"], ""}], 
          CellMargins -> {{60, 10}, {7, 7}}, 
          CellGroupingRules -> {"SectionGrouping", 85}, MenuSortingValue -> 
          1365, FontSize -> 24], 
         Cell[
          StyleData["Proof", "Printout"], CellDingbat -> TextData[{
             StyleBox["Proof:", FontSlant -> "Italic"], ""}], 
          CellMargins -> {{60, 10}, {7, 7}}, 
          CellGroupingRules -> {"SectionGrouping", 85}, MenuSortingValue -> 
          1365]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InlineFormula"], CellMargins -> {{10, 4}, {0, 8}}, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           LanguageCategory -> "Formula", ScriptLevel -> 1, 
          SingleLetterItalics -> True, MenuSortingValue -> 
          1650, $CellContext`StripStyleOnPaste -> True], 
         Cell[
          StyleData["InlineFormula", "Presentation"], 
          CellMargins -> {{10, 4}, {0, 12}}, LineSpacing -> {1, 5}, FontSize -> 
          24], 
         Cell[
          StyleData["InlineFormula", "Condensed"], 
          CellMargins -> {{8, 10}, {6, 6}}, LineSpacing -> {1, 1}, FontSize -> 
          11], 
         Cell[
          StyleData["InlineFormula", "Printout"], 
          CellMargins -> {{2, 0}, {6, 6}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DisplayFormula"], 
          CellMargins -> {{60, Inherited}, {Inherited, Inherited}}, 
          CellGroupingRules -> "NormalGrouping", DefaultFormatType -> 
          DefaultInputFormatType, TextAlignment -> Center, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           LanguageCategory -> "Formula", ScriptLevel -> 0, 
          SingleLetterItalics -> True, MenuSortingValue -> 1700, 
          UnderoverscriptBoxOptions -> {
           LimitsPositioning -> True}, $CellContext`StripStyleOnPaste -> 
          True], 
         Cell[
          StyleData["DisplayFormula", "Presentation"], 
          CellMargins -> {{60, Inherited}, {1.5 Inherited, 1.5 Inherited}}, 
          LineSpacing -> {1, 5}, FontSize -> 24], 
         Cell[
          StyleData["DisplayFormula", "Condensed"], LineSpacing -> {1, 1}, 
          FontSize -> 11], 
         Cell[
          StyleData["DisplayFormula", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DisplayFormulaNumbered"], 
          CellMargins -> {{60, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> True, CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["DisplayFormulaNumbered"], ")"}]]}, {None, None}}, 
          DefaultFormatType -> DefaultInputFormatType, TextAlignment -> 
          Center, HyphenationOptions -> {
           "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
          "Formula", ScriptLevel -> 0, SingleLetterItalics -> True, 
          CounterIncrements -> "DisplayFormulaNumbered", MenuSortingValue -> 
          1710, UnderoverscriptBoxOptions -> {
           LimitsPositioning -> True}, $CellContext`StripStyleOnPaste -> 
          True], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Presentation"], 
          CellMargins -> {{60, Inherited}, {1.5 Inherited, 1.5 Inherited}}, 
          CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["Section"], ".", 
                CounterBox["DisplayFormulaNumbered"], ")"}]]}, {None, None}}, 
          LineSpacing -> {1, 5}, FontSize -> 24], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Condensed"], 
          CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["Section"], ".", 
                CounterBox["DisplayFormulaNumbered"], ")"}]]}, {None, None}}, 
          LineSpacing -> {1, 1}, FontSize -> 11], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Program"], CellFrame -> {{0, 0}, {0.5, 0.5}}, 
          CellMargins -> {{60, 4}, {0, 8}}, Hyphenation -> False, 
          LanguageCategory -> "Formula", ScriptLevel -> 1, MenuSortingValue -> 
          1800, FontFamily -> "Courier", $CellContext`StripStyleOnPaste -> 
          True], 
         Cell[
          StyleData["Program", "Presentation"], CellFrame -> {{0, 0}, {1, 1}},
           CellMargins -> {{60, 4}, {0, 12}}, LineSpacing -> {1, 5}, FontSize -> 
          24], 
         Cell[
          StyleData["Program", "Condensed"], CellMargins -> {{8, 10}, {6, 6}},
           LineSpacing -> {1, 1}, FontSize -> 11], 
         Cell[
          StyleData["Program", "Printout"], CellMargins -> {{2, 0}, {6, 6}}]},
         Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "References", "Section", 
       CellChangeTimes -> {{3.443916926560617*^9, 3.4439169279993553`*^9}, {
        3.469269419329535*^9, 3.469269424322864*^9}, {3.469271823780828*^9, 
        3.469271825171331*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Reference"], CellDingbat -> TextData[{"[", 
             CounterBox["Reference"], "]"}], 
          CellMargins -> {{60, 10}, {7, 7}}, 
          CounterIncrements -> {"Reference", 1}, MenuSortingValue -> 1990], 
         Cell[
          StyleData["Reference", "Presentation"], CellDingbat -> 
          TextData[{"[", 
             CounterBox["Reference"], "]"}], 
          CellMargins -> {{60, 10}, {7, 7}}, 
          CounterIncrements -> {"Reference", 1}, FontSize -> 18], 
         Cell[
          StyleData["Reference", "Printout"], CellDingbat -> TextData[{"[", 
             CounterBox["Reference"], "]"}], 
          CellMargins -> {{20, 10}, {7, 7}}, 
          CounterIncrements -> {"Reference", 1}]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Others", "Section", 
       CellChangeTimes -> {{3.443916926560617*^9, 3.4439169279993553`*^9}, {
        3.469269419329535*^9, 3.469269424322864*^9}, {3.469271823780828*^9, 
        3.469271825171331*^9}, {3.474583951374827*^9, 3.47458395192933*^9}}], 
      
      Cell[
       StyleData["CompleteThis"], CellDingbat -> "\[Wolf]", MenuSortingValue -> 
       2000, FontColor -> RGBColor[1, 0, 0], $CellContext`MenuPosition -> 
       10000], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Warning"], CellDingbat -> "\[WarningSign]", 
          CellMargins -> {{36, 24}, {Inherited, Inherited}}, 
          LineSpacing -> {1, 3}, MenuSortingValue -> 
          2010, $CellContext`MenuPosition -> 1560], 
         Cell[
          StyleData["Warning", "SlideShow"], CellDingbat -> "\[WarningSign]", 
          CellMargins -> {{36, 24}, {Inherited, Inherited}}, 
          LineSpacing -> {1, 3}, FontSize -> 20, $CellContext`MenuPosition -> 
          1560]}, Closed]], 
      Cell[
       StyleData["Item"], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{75, 10}, {4, 4}}, 
       CellGroupingRules -> {"SectionGrouping", 52}, CellFrameLabelMargins -> 
       4, CounterIncrements -> "Item", 
       CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
       MenuSortingValue -> 1600, $CellContext`ReturnCreatesNewCell -> True]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Exercises", "Section", 
       CellChangeTimes -> {{3.443917031568693*^9, 3.4439170337125263`*^9}}], 
      Cell[
       StyleData["Exercise"], CellDingbat -> TextData[{"Exercise ", 
          CounterBox["Exercise"], ":  "}], ShowGroupOpener -> True, 
       WholeCellGroupOpener -> True, CellMargins -> {{Inherited, 2}, {6, 6}}, 
       CellElementSpacings -> {"ClosedGroupTopMargin" -> 8}, 
       CellGroupingRules -> {"SectionGrouping", 50}, CounterIncrements -> 
       "Exercise", MenuSortingValue -> 1900, MenuCommandKey -> "6", 
       FontFamily -> "Arial", FontSize -> 12, FontWeight -> "Bold"], 
      Cell[
       StyleData["Subexercise"], CellDingbat -> TextData[{"Exercise ", 
          CounterBox["Exercise"], ".", 
          CounterBox["Subexercise"], ":  "}], ShowGroupOpener -> True, 
       WholeCellGroupOpener -> True, CellMargins -> {{Inherited, 2}, {6, 6}}, 
       CellElementSpacings -> {"ClosedGroupTopMargin" -> 8}, 
       CellGroupingRules -> {"SectionGrouping", 51}, CounterIncrements -> 
       "Subexercise", MenuSortingValue -> 1910, FontFamily -> "Arial", 
       FontSize -> 12, FontWeight -> "Bold"], 
      Cell[
       StyleData["Solution"], ShowGroupOpener -> True, WholeCellGroupOpener -> 
       True, CellMargins -> {{36, 4}, {6, 12}}, 
       CellElementSpacings -> {"ClosedGroupTopMargin" -> 4}, 
       CellGroupingRules -> {"SectionGrouping", 55}, CounterIncrements -> 
       "Subsubsection", CounterAssignments -> {{"Subsubsection", 0}}, 
       MenuSortingValue -> 1920, FontFamily -> "Helvetica", FontWeight -> 
       "Bold"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Assignments", "Section", 
       CellChangeTimes -> {{3.443916926560617*^9, 3.4439169279993553`*^9}, {
        3.469269419329535*^9, 3.469269424322864*^9}, {3.469271823780828*^9, 
        3.469271825171331*^9}, {3.474583951374827*^9, 3.47458395192933*^9}, {
        3.474585935039929*^9, 3.47458593716241*^9}}], 
      Cell[
      "MarkersComment has shortcut", "Text", 
       CellChangeTimes -> {{3.4769374667820883`*^9, 3.476937481985606*^9}, {
        3.512189014200873*^9, 3.512189014342642*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MarkersComment"], CellFrame -> False, CellDingbat -> 
          "\[FilledCircle]", 
          CellMargins -> {{54, 25}, {Inherited, Inherited}}, 
          LineSpacing -> {1, 3}, CounterIncrements -> "Text", 
          MenuSortingValue -> 2500, MenuCommandKey -> "m", FontColor -> 
          RGBColor[0.5, 0.5, 0], Background -> 
          GrayLevel[1], $CellContext`MenuPosition -> 9000], 
         Cell[
          StyleData["MarkersComment", "Printout"], 
          CellMargins -> {{18, 4}, {Inherited, 0}}, LineSpacing -> {1, 3}, 
          FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["AssignmentMark"], Deletable -> False, CellFrame -> True, 
          CellMargins -> {{54, 25}, {Inherited, Inherited}}, CellFrameColor -> 
          RGBColor[1, 0, 0], LineSpacing -> {1, 3}, CounterIncrements -> 
          "Text", MenuSortingValue -> 2510, FontColor -> RGBColor[1, 0, 0], 
          Background -> GrayLevel[1]], 
         Cell[
          StyleData["AssignmentMark", "Printout"], Deletable -> False, 
          CellFrame -> True, CellMargins -> {{18, 4}, {Inherited, 0}}, 
          LineSpacing -> {1, 3}, FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseMark"], CellFrame -> False, CellDingbat -> 
          "\[FilledCircle]", 
          CellMargins -> {{54, 25}, {Inherited, Inherited}}, 
          LineSpacing -> {1, 3}, CounterIncrements -> "Text", 
          MenuSortingValue -> 2520, FontColor -> RGBColor[1, 0, 0], 
          Background -> GrayLevel[1]], 
         Cell[
          StyleData["ExerciseMark", "Printout"], 
          CellMargins -> {{18, 4}, {Inherited, 0}}, LineSpacing -> {1, 3}, 
          FontSize -> 10]}, Closed]]}, Closed]]}, Visible -> False, 
  FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, 2011)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
"AssignmentNumber" -> 1
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 152, 2, 67, "Section"],
Cell[577, 19, 673, 17, 20, "Warning"],
Cell[1253, 38, 198, 2, 20, "Warning"],
Cell[1454, 42, 232, 3, 20, "Warning"],
Cell[1689, 47, 252, 5, 20, "Warning"],
Cell[1944, 54, 620, 15, 20, "Warning"],
Cell[2567, 71, 903, 25, 87, "DisplayFormula"]
}, Closed]],
Cell[CellGroupData[{
Cell[3507, 101, 177, 3, 37, "Section"],
Cell[3687, 106, 422, 11, 26, "Text"],
Cell[4112, 119, 889, 27, 28, "Text",
 CellID->511613194],
Cell[5004, 148, 1333, 26, 36, "Text",
 CellID->770721223],
Cell[6340, 176, 1531, 37, 38, "Text",
 CellID->1445160792],
Cell[7874, 215, 254, 5, 26, "Text"],
Cell[CellGroupData[{
Cell[8153, 224, 84, 1, 26, "Exercise"],
Cell[8240, 227, 398, 10, 26, "Text"],
Cell[CellGroupData[{
Cell[8663, 241, 12990, 323, 60, "WolframAlphaShortInput"],
Cell[21656, 566, 1156, 16, 103, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[22861, 588, 86, 1, 26, "Exercise"],
Cell[22950, 591, 510, 12, 32, "Text"],
Cell[CellGroupData[{
Cell[23485, 607, 14333, 350, 76, "WolframAlphaShortInput"],
Cell[37821, 959, 161, 5, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[38031, 970, 84, 1, 26, "Exercise"],
Cell[38118, 973, 646, 16, 32, "Text"],
Cell[CellGroupData[{
Cell[38789, 993, 17525, 395, 102, "WolframAlphaShortInput"],
Cell[56317, 1390, 118, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56472, 1397, 227, 6, 54, "Input"],
Cell[56702, 1405, 148, 4, 50, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[56899, 1415, 86, 1, 26, "Exercise"],
Cell[56988, 1418, 935, 23, 29, "Text"],
Cell[CellGroupData[{
Cell[57948, 1445, 23933, 465, 81, "WolframAlphaShortInput"],
Cell[81884, 1912, 313, 9, 27, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[82246, 1927, 84, 1, 26, "Exercise"],
Cell[82333, 1930, 1351, 35, 33, "Text"],
Cell[CellGroupData[{
Cell[83709, 1969, 41446, 756, 88, "WolframAlphaShortInput"],
Cell[125158, 2727, 79568, 1289, 302, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[204775, 4022, 84, 1, 26, "Exercise"],
Cell[204862, 4025, 1095, 20, 26, "Text"],
Cell[CellGroupData[{
Cell[205982, 4049, 106590, 1980, 165, "WolframAlphaShortInput"],
Cell[312575, 6031, 2003, 35, 182, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[314627, 6072, 110, 2, 26, "Exercise"],
Cell[314740, 6076, 1060, 19, 26, "Text"],
Cell[CellGroupData[{
Cell[315825, 6099, 80365, 1563, 79, "WolframAlphaShortInput"],
Cell[396193, 7664, 1929, 59, 54, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[398183, 7730, 124, 2, 37, "Section"],
Cell[398310, 7734, 1160, 32, 29, "Text"],
Cell[399473, 7768, 948, 19, 27, "Text"],
Cell[400424, 7789, 618, 16, 26, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[401079, 7810, 169, 3, 37, "Section"],
Cell[CellGroupData[{
Cell[401273, 7817, 120, 1, 34, "Subsection"],
Cell[401396, 7820, 159, 4, 26, "Text"],
Cell[CellGroupData[{
Cell[401580, 7828, 84, 1, 26, "Exercise"],
Cell[401667, 7831, 392, 10, 29, "Text"],
Cell[CellGroupData[{
Cell[402084, 7845, 118, 2, 30, "Input"],
Cell[402205, 7849, 586, 8, 58, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[402852, 7864, 86, 1, 26, "Subsection"],
Cell[402941, 7867, 157, 7, 26, "Text"],
Cell[CellGroupData[{
Cell[403123, 7878, 85, 1, 26, "Exercise"],
Cell[403211, 7881, 444, 11, 29, "Text"],
Cell[CellGroupData[{
Cell[403680, 7896, 120, 2, 27, "Input"],
Cell[403803, 7900, 178, 3, 30, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[404030, 7909, 84, 1, 26, "Exercise"],
Cell[404117, 7912, 452, 10, 26, "Text"],
Cell[CellGroupData[{
Cell[404594, 7926, 121, 2, 27, "Input"],
Cell[404718, 7930, 117, 2, 27, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[404884, 7938, 86, 1, 26, "Exercise"],
Cell[404973, 7941, 456, 10, 26, "Text"],
Cell[CellGroupData[{
Cell[405454, 7955, 147, 3, 27, "Input"],
Cell[405604, 7960, 1156, 16, 103, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[406809, 7982, 86, 1, 26, "Exercise"],
Cell[406898, 7985, 789, 21, 32, "Text"],
Cell[CellGroupData[{
Cell[407712, 8010, 229, 6, 40, "Input"],
Cell[407944, 8018, 165, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408146, 8026, 124, 2, 27, "Input"],
Cell[408273, 8030, 114, 2, 27, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[408448, 8039, 96, 1, 26, "Subsection"],
Cell[408547, 8042, 397, 9, 26, "Text"],
Cell[408947, 8053, 381, 7, 27, "Text"],
Cell[CellGroupData[{
Cell[409353, 8064, 86, 1, 26, "Exercise"],
Cell[409442, 8067, 499, 14, 26, "Text"],
Cell[CellGroupData[{
Cell[409966, 8085, 125, 2, 27, "Input"],
Cell[410094, 8089, 116, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410247, 8097, 157, 3, 27, "Input"],
Cell[410407, 8102, 116, 3, 27, "Output"]
}, Open  ]],
Cell[410538, 8108, 87, 2, 20, "Warning"]
}, Closed]],
Cell[CellGroupData[{
Cell[410662, 8115, 86, 1, 26, "Exercise"],
Cell[410751, 8118, 719, 18, 28, "Text"],
Cell[CellGroupData[{
Cell[411495, 8140, 149, 3, 27, "Input"],
Cell[411647, 8145, 134, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411818, 8153, 109, 3, 29, "Input"],
Cell[411930, 8158, 98, 2, 27, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[412089, 8167, 222, 3, 26, "Subsection"],
Cell[CellGroupData[{
Cell[412336, 8174, 83, 1, 26, "Exercise"],
Cell[412422, 8177, 999, 33, 37, "Text"],
Cell[CellGroupData[{
Cell[413446, 8214, 268, 7, 47, "Input"],
Cell[413717, 8223, 123, 3, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413877, 8231, 266, 7, 47, "Input"],
Cell[414146, 8240, 120, 3, 47, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[414315, 8249, 85, 1, 26, "Exercise"],
Cell[414403, 8252, 824, 21, 26, "Text"],
Cell[CellGroupData[{
Cell[415252, 8277, 128, 3, 27, "Input"],
Cell[415383, 8282, 98, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415518, 8289, 185, 6, 27, "Input"],
Cell[415706, 8297, 116, 3, 27, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[415871, 8306, 88, 1, 26, "Exercise"],
Cell[415962, 8309, 731, 18, 29, "Text"],
Cell[CellGroupData[{
Cell[416718, 8331, 182, 3, 33, "Input"],
Cell[416903, 8336, 184, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417124, 8346, 119, 2, 27, "Input"],
Cell[417246, 8350, 117, 2, 27, "Output"]
}, Open  ]],
Cell[417378, 8355, 219, 6, 26, "Text"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[417658, 8368, 192, 3, 37, "Section"],
Cell[CellGroupData[{
Cell[417875, 8375, 94, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[417994, 8380, 82, 1, 26, "Exercise"],
Cell[418079, 8383, 857, 22, 33, "Text"],
Cell[CellGroupData[{
Cell[418961, 8409, 427, 13, 40, "Input"],
Cell[419391, 8424, 6584, 180, 163, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426012, 8609, 125, 2, 27, "Input"],
Cell[426140, 8613, 171, 5, 30, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[426372, 8625, 97, 1, 26, "Subsection"],
Cell[CellGroupData[{
Cell[426494, 8630, 85, 1, 26, "Exercise"],
Cell[426582, 8633, 803, 18, 44, "Text"],
Cell[CellGroupData[{
Cell[427410, 8655, 309, 9, 38, "Input"],
Cell[427722, 8666, 743, 26, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428502, 8697, 118, 2, 27, "Input"],
Cell[428623, 8701, 593, 22, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429253, 8728, 157, 3, 27, "Input"],
Cell[429413, 8733, 116, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429566, 8741, 152, 3, 27, "Input"],
Cell[429721, 8746, 98, 2, 27, "Output"]
}, Open  ]],
Cell[429834, 8751, 293, 7, 26, "Text"],
Cell[430130, 8760, 548, 15, 20, "Warning"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[430727, 8781, 110, 1, 26, "Subsection"],
Cell[CellGroupData[{
Cell[430862, 8786, 84, 1, 26, "Exercise"],
Cell[430949, 8789, 736, 18, 38, "Text"],
Cell[CellGroupData[{
Cell[431710, 8811, 214, 7, 50, "Input"],
Cell[431927, 8820, 591, 21, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432555, 8846, 174, 4, 27, "Input"],
Cell[432732, 8852, 169, 5, 48, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[432950, 8863, 86, 1, 26, "Exercise"],
Cell[433039, 8866, 763, 18, 38, "Text"],
Cell[CellGroupData[{
Cell[433827, 8888, 229, 6, 49, "Input"],
Cell[434059, 8896, 460, 16, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434556, 8917, 315, 10, 55, "Input"],
Cell[434874, 8929, 245, 7, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435156, 8941, 309, 9, 50, "Input"],
Cell[435468, 8952, 250, 8, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435755, 8965, 309, 9, 50, "Input"],
Cell[436067, 8976, 223, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436327, 8987, 132, 2, 27, "Input"],
Cell[436462, 8991, 543, 18, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437042, 9014, 174, 4, 27, "Input"],
Cell[437219, 9020, 169, 5, 48, "Output"]
}, Open  ]],
Cell[437403, 9028, 405, 14, 20, "Warning"]
}, Closed]],
Cell[CellGroupData[{
Cell[437845, 9047, 86, 1, 26, "Exercise"],
Cell[437934, 9050, 1482, 44, 36, "Text"],
Cell[CellGroupData[{
Cell[439441, 9098, 497, 15, 45, "Input"],
Cell[439941, 9115, 172, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[440150, 9125, 649, 19, 45, "Input"],
Cell[440802, 9146, 205, 6, 46, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[441068, 9159, 110, 1, 26, "Subsection"],
Cell[CellGroupData[{
Cell[441203, 9164, 84, 1, 26, "Exercise"],
Cell[441290, 9167, 1253, 33, 32, "Text"],
Cell[CellGroupData[{
Cell[442568, 9204, 380, 10, 45, "Input"],
Cell[442951, 9216, 336, 9, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443324, 9230, 373, 10, 49, "Input"],
Cell[443700, 9242, 430, 13, 29, "Output"]
}, Open  ]],
Cell[444145, 9258, 332, 7, 20, "Warning"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[444538, 9272, 244, 4, 37, "Section"],
Cell[CellGroupData[{
Cell[444807, 9280, 84, 1, 26, "Exercise"],
Cell[444894, 9283, 2211, 56, 56, "Text"],
Cell[CellGroupData[{
Cell[447130, 9343, 539, 16, 51, "Input"],
Cell[447672, 9361, 17105, 286, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464814, 9652, 719, 22, 51, "Input"],
Cell[465536, 9676, 728, 20, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466301, 9701, 574, 18, 54, "Input"],
Cell[466878, 9721, 16745, 280, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483660, 10006, 179, 4, 27, "Input"],
Cell[483842, 10012, 33362, 554, 239, "Output"]
}, Open  ]],
Cell[517219, 10569, 617, 22, 20, "Warning"]
}, Closed]],
Cell[CellGroupData[{
Cell[517873, 10596, 86, 1, 26, "Exercise"],
Cell[517962, 10599, 1702, 42, 29, "Text"],
Cell[CellGroupData[{
Cell[519689, 10645, 428, 13, 33, "Input"],
Cell[520120, 10660, 58648, 955, 309, "Output"]
}, Open  ]],
Cell[578783, 11618, 1728, 44, 29, "Text"],
Cell[CellGroupData[{
Cell[580536, 11666, 433, 13, 33, "Input"],
Cell[580972, 11681, 35401, 607, 367, "Output"]
}, Open  ]],
Cell[616388, 12291, 1681, 39, 29, "Text"],
Cell[CellGroupData[{
Cell[618094, 12334, 727, 23, 33, "Input"],
Cell[618824, 12359, 77959, 1269, 302, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[696844, 13635, 293, 5, 37, "Section"],
Cell[697140, 13642, 365, 11, 26, "Text"],
Cell[697508, 13655, 177, 3, 27, "Input"],
Cell[697688, 13660, 372, 15, 26, "Text"],
Cell[698063, 13677, 88, 2, 27, "Input"],
Cell[698154, 13681, 158, 3, 27, "Input"],
Cell[698315, 13686, 173, 4, 27, "Input"],
Cell[698491, 13692, 244, 6, 27, "Input"],
Cell[698738, 13700, 274, 6, 27, "Input"],
Cell[699015, 13708, 539, 12, 21, "Warning"],
Cell[699557, 13722, 726, 22, 20, "Warning"],
Cell[CellGroupData[{
Cell[700308, 13748, 86, 1, 26, "Exercise"],
Cell[700397, 13751, 1570, 28, 29, "Text"],
Cell[CellGroupData[{
Cell[701992, 13783, 262, 8, 33, "Input"],
Cell[702257, 13793, 205, 5, 27, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[702511, 13804, 84, 1, 26, "Exercise"],
Cell[702598, 13807, 2301, 65, 74, "Text"],
Cell[CellGroupData[{
Cell[704924, 13876, 283, 9, 52, "Input"],
Cell[705210, 13887, 283, 7, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[705530, 13899, 785, 20, 53, "Input"],
Cell[706318, 13921, 237, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[706592, 13930, 113, 2, 47, "Input"],
Cell[706708, 13934, 164, 3, 27, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[706933, 13944, 268, 4, 37, "Section"],
Cell[CellGroupData[{
Cell[707226, 13952, 84, 1, 26, "Exercise"],
Cell[707313, 13955, 1066, 21, 26, "Text"],
Cell[CellGroupData[{
Cell[708404, 13980, 446, 14, 48, "Input"],
Cell[708853, 13996, 101, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[708991, 14003, 456, 14, 57, "Input"],
Cell[709450, 14019, 127, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[709614, 14026, 523, 16, 57, "Input"],
Cell[710140, 14044, 103, 2, 27, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[710292, 14052, 84, 1, 26, "Exercise"],
Cell[710379, 14055, 1122, 25, 26, "Text"],
Cell[CellGroupData[{
Cell[711526, 14084, 525, 17, 57, "Input"],
Cell[712054, 14103, 125, 2, 27, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}
]
*)

