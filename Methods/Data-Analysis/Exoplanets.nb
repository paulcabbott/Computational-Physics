(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    733463,      13548]
NotebookOptionsPosition[    714017,      13191]
NotebookOutlinePosition[    721717,      13311]
CellTagsIndexPosition[    721218,      13295]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 
 CounterBox["Section"],
 StyleBox[" | Exoplanets", "SectionBar"]
}], "Section",
 CounterAssignments->{{"Section", 0}},
 CellID->1419792089,ExpressionUUID->"4637abc1-4cce-4a45-806d-62668f94d5db"],

Cell["\<\
Ordinarily, pulsars are highly regular astronomical clocks. Suppose however \
that the pulsar has one heavy unseen companion. Then the pulsar will orbit \
around the centre of mass of the combined system, sometimes moving towards \
the earth and sometimes away from it.  This will lead to a sinusoidal \
variation in the timings as measured by an earth-based observer. If there is \
more than one unseen companion the timing variation will be more complicated \
but, to a good approximation, will be a linear superposition of sinusoidal \
variations with differing periods.\
\>", "Text",
 CellID->2000098685,ExpressionUUID->"f3fa4cbb-a299-4427-9b56-ae62508f0d86"],

Cell[TextData[{
 "Wolszczan and Frail (1992) and Wolszczan (1994) studied timing variations \
for the pulsar PSR B1257+12 over a 3-year period. The timing variations for \
PSR B1257+12 indicate that it is orbited by at least two \"planets\".  The \
data in ",
 Cell[BoxData[
  TagBox[
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", 
       StyleBox[
       "\"Pulsar data\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"172", ",", "5"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["29064", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    {{1, 1990.6870210174, -0.0188495, -2.38513, 0.00374001}, {
     2, 1990.7198110055, -0.335115, -53.2436, 0.00406533}, {
     3, 1990.7308038784, -0.52507, -83.7903, 0.00361276}, {
     4, 1990.796315351, 0.257191, 42.0048, 0.0033555}, {
     5, 1990.8454862483, 2.15298, 346.865, 0.0030225}, {
     6, 1990.8619252345, 2.10726, 339.513, 0.00405043}, {
     7, 1990.9520679727, -2.59551, -416.737, 0.00429112}, {
     8, 1990.9548400972, -2.62171, -420.951, 0.00426934}, {
     9, 1990.9739766716, -2.32315, -372.939, 0.00356533}, {
     10, 1990.9767141212, -2.22064, -356.454, 0.00367144}, {
     11, 1991.2007342076, -0.568935, -90.8442, 0.00496769}, {
     12, 1991.2198732517, -0.150349, -23.5316, 0.00501596}, {
     13, 1991.3018784967, -0.488403, -77.8939, 0.00509022}, {
     14, 1991.3045542805, -0.494481, -78.8713, 0.00554574}, {
     15, 1991.3100219687, -0.469674, -74.8821, 0.00370191}, {
     16, 1991.3920105529, 1.94947, 314.14, 0.00295921}, {
     17, 1991.3947749973, 1.97185, 317.738, 0.00415883}, {
     18, 1991.4465531284, 0.0107999, 2.38279, 0.00474497}, {
     19, 1991.4466372877, 0.0066815, 1.72051, 0.00559556}, {
     20, 1991.5531690398, -0.0770058, -11.7372, 0.00528773}, {
     21, 1991.5558718251, 0.128978, 21.387, 0.00410521}, {
     22, 1991.5968403723, 2.46479, 397.008, 0.00392502}, {
     23, 1991.5996631559, 2.52511, 406.708, 0.00400384}, {
     24, 1991.6351258513, 1.86379, 300.362, 0.00431816}, {
     25, 1991.6787402187, -0.689795, -110.28, 0.00397195}, {
     26, 1991.6815117389, -0.815304, -130.463, 0.00514167}, {
     27, 1991.6897023337, -1.12602, -180.429, 0.00462773}, {
     28, 1991.7006161087, -1.37461, -220.405, 0.00388203}, {
     29, 1991.7197436919, -1.37764, -220.891, 0.00341908}, {
     30, 1991.763463578, -0.223993, -35.3742, 0.00449185}, {
     31, 1991.7661874004, -0.155781, -24.4051, 0.00428948}, {
     32, 1991.8017139476, 0.231833, 37.927, 0.00370139}, {
     33, 1991.8045551139, 0.218089, 35.7169, 0.0068466}, {
     34, 1991.8073499041, 0.19759, 32.4204, 0.00361446}, {
     35, 1991.8235755928, 0.02412, 4.52479, 0.00501393}, {
     36, 1991.8263441563, -0.0089064, -0.786178, 0.00280956}, {
     37, 1991.8509037221, -0.22583, -35.6696, 0.00397159}, {
     38, 1991.8536394174, -0.222086, -35.0676, 0.00582826}, {
     39, 1991.864562417, -0.150962, -23.6301, 0.00428761}, {
     40, 1991.8809417027, 0.176626, 29.0493, 0.00430881}, {
     41, 1991.8836622772, 0.253788, 41.4577, 0.0039639}, {
     42, 1991.9082918688, 1.07285, 173.17, 0.00535605}, {
     43, 1991.911014374, 1.16397, 187.824, 0.00329768}, {
     44, 1991.9137876216, 1.24854, 201.424, 0.00292127}, {
     45, 1991.9191785889, 1.40647, 226.819, 0.00385515}, {
     46, 1991.9219234465, 1.46948, 236.952, 0.00343073}, {
     47, 1991.9683767716, 1.15017, 185.605, 0.00358882}, {
     48, 1991.9902868391, -0.019696, -2.52125, 0.00277697}, {
     49, 1992.0693549278, -1.89477, -304.052, 0.00401908}, {
     50, 1992.1211210174, 1.7299, 278.83, 0.00367567}, {
     51, 1992.1346736867, 2.39416, 385.65, 0.00566567}, {
     52, 1992.1565233648, 2.67063, 430.109, 0.00335053}, {
     53, 1992.1592484698, 2.63692, 424.688, 0.0035353}, {
     54, 1992.1866057487, 1.47038, 237.097, 0.00218335}, {
     55, 1992.1918937593, 1.12811, 182.057, 0.00375854}, {
     56, 1992.1946365208, 0.939938, 151.797, 0.00654772}, {
     57, 1992.2628227478, -1.63623, -262.475, 0.00402911}, {
     58, 1992.2983104757, -0.571845, -91.3122, 0.00360093}, {
     59, 1992.3010457931, -0.467178, -74.4807, 0.00534363}, {
     60, 1992.3037997633, -0.370373, -58.9136, 0.00373193}, {
     61, 1992.3065306454, -0.27104, -42.9398, 0.00339501}, {
     62, 1992.3092348104, -0.185139, -29.1261, 0.00478694}, {
     63, 1992.3119583512, -0.100059, -15.4443, 0.00687745}, {
     64, 1992.314729908, -0.0191635, -2.43562, 0.00221544}, {
     65, 1992.3174066763, 0.0613637, 10.51394, 0.00514451}, {
     66, 1992.3201242815, 0.135984, 22.5137, 0.0025472}, {
     67, 1992.3228839155, 0.193437, 31.7526, 0.00552977}, {
     68, 1992.325622043, 0.262972, 42.9345, 0.00377196}, {
     69, 1992.3310505375, 0.3573, 58.1034, 0.00389827}, {
     70, 1992.333602086, 0.386537, 62.805, 0.00350004}, {
     71, 1992.3854852429, 0.108196, 18.045, 0.00356508}, {
     72, 1992.3882019184, 0.0782136, 13.2236, 0.00512582}, {
     73, 1992.4180166309, 0.0979297, 16.3941, 0.00355005}, {
     74, 1992.4190893804, 0.116686, 19.4103, 0.00998865}, {
     75, 1992.4207998711, 0.139112, 23.0166, 0.00637712}, {
     76, 1992.4997946862, 1.2944, 208.799, 0.00333334}, {
     77, 1992.5025570273, 1.23173, 198.721, 0.00276248}, {
     78, 1992.5570821185, -1.44589, -231.868, 0.00348378}, {
     79, 1992.5597913701, -1.58387, -254.055, 0.00374151}, {
     80, 1992.5734421005, -2.143, -343.969, 0.00498782}, {
     81, 1992.5761872056, -2.21118, -354.933, 0.00328834}, {
     82, 1992.6633057105, 1.77407, 285.933, 0.00290841}, {
     83, 1992.6660188019, 1.93837, 312.355, 0.00384108}, {
     84, 1992.7204788528, 2.01038, 323.934, 0.00523181}, {
     85, 1992.7232036527, 1.85777, 299.393, 0.00339915}, {
     86, 1992.7505881383, -0.0428941, -6.25172, 0.00408742}, {
     87, 1992.7559180723, -0.405188, -64.5121, 0.00384283}, {
     88, 1992.7586672431, -0.595059, -95.0452, 0.00271168}, {
     89, 1992.7885948208, -1.85679, -297.944, 0.00255076}, {
     90, 1992.7913422913, -1.89844, -304.641, 0.00415062}, {
     91, 1992.837629624, -0.804781, -128.771, 0.00431506}, {
     92, 1992.8403784481, -0.68503, -109.513, 0.00235731}, {
     93, 1992.8731207781, 0.49313, 79.9462, 0.00361793}, {
     94, 1992.8758394374, 0.550665, 89.1982, 0.00384311}, {
     95, 1992.9166856266, 0.564317, 91.3936, 0.00444981}, {
     96, 1992.960284242, 0.154039, 25.417, 0.00426736}, {
     97, 1992.9630151574, 0.17036, 28.0415, 0.00393564}, {
     98, 1993.0257505433, 1.16419, 187.86, 0.00461566}, {
     99, 1993.0285142072, 1.17307, 189.287, 0.00383606}, {
     100, 1993.0858884972, -0.619972, -99.0514, 0.00218937}, {
     101, 1993.0886669789, -0.764877, -122.354, 0.00394609}, {
     102, 1993.121391818, -2.11591, -339.612, 0.00355035}, {
     103, 1993.170602129, -0.76415, -122.237, 0.00337862}, {
     104, 1993.1733204071, -0.576337, -92.0344, 0.00414793}, {
     105, 1993.2362483846, 2.80614, 451.901, 0.00400935}, {
     106, 1993.2389006661, 2.80191, 451.221, 0.00314941}, {
     107, 1993.2689427372, 1.70996, 275.624, 0.00426958}, {
     108, 1993.2717048084, 1.52628, 246.086, 0.00346607}, {
     109, 1993.2744120184, 1.34718, 217.285, 0.00503254}, {
     110, 1993.277158797, 1.15426, 186.263, 0.00493767}, {
     111, 1993.2798832483, 0.958417, 154.769, 0.00506803}, {
     112, 1993.2825965967, 0.752647, 121.679, 0.00300516}, {
     113, 1993.2853930777, 0.542753, 87.9259, 0.0034442}, {
     114, 1993.2880854311, 0.337932, 54.9887, 0.00305631}, {
     115, 1993.2935323926, -0.0750401, -11.4211, 0.0029541}, {
     116, 1993.2962406469, -0.274558, -43.5056, 0.00240823}, {
     117, 1993.298999314, -0.47054, -75.0213, 0.00414849}, {
     118, 1993.3017237313, -0.667524, -106.698, 0.00386681}, {
     119, 1993.3044529011, -0.851145, -136.226, 0.0039097}, {
     120, 1993.307188662, -1.02325, -163.903, 0.00512012}, {
     121, 1993.3126705087, -1.34591, -215.79, 0.00198874}, {
     122, 1993.3154018819, -1.48888, -238.78, 0.00596932}, {
     123, 1993.3180888591, -1.61345, -258.812, 0.00458909}, {
     124, 1993.3208519329, -1.73499, -278.356, 0.00295183}, {
     125, 1993.3263010174, -1.91916, -307.973, 0.00270185}, {
     126, 1993.3290609087, -1.9923, -319.734, 0.00394153}, {
     127, 1993.3318175587, -2.04945, -328.925, 0.00280299}, {
     128, 1993.3345530938, -2.09106, -335.617, 0.00340661}, {
     129, 1993.3836913831, -0.774774, -123.945, 0.00359278}, {
     130, 1993.3864252048, -0.647009, -103.3992, 0.00484562}, {
     131, 1993.4301317795, 0.938914, 151.633, 0.00450036}, {
     132, 1993.4312026007, 0.951182, 153.605, 0.00897471}, {
     133, 1993.4329067828, 0.967501, 156.23, 0.00347792}, {
     134, 1993.4793281653, 0.531234, 86.0737, 0.00376451}, {
     135, 1993.4820550696, 0.479443, 77.745, 0.00419021}, {
     136, 1993.5202770713, 0.222164, 36.3722, 0.00475944}, {
     137, 1993.5421364643, 0.516191, 83.6545, 0.0028759}, {
     138, 1993.5448600731, 0.560826, 90.8322, 0.00467011}, {
     139, 1993.5503268568, 0.649746, 105.1315, 0.00389204}, {
     140, 1993.5585156449, 0.771456, 124.704, 0.00298269}, {
     141, 1993.566712558, 0.857604, 138.557, 0.00411959}, {
     142, 1993.5694745647, 0.87025, 140.591, 0.00406215}, {
     143, 1993.5721937687, 0.882395, 142.544, 0.00303427}, {
     144, 1993.5749649909, 0.889598, 143.702, 0.00360905}, {
     145, 1993.5804430263, 0.873126, 141.053, 0.00357951}, {
     146, 1993.5858400493, 0.832191, 134.47, 0.00351089}, {
     147, 1993.5885955955, 0.800181, 129.323, 0.00344621}, {
     148, 1993.5913972534, 0.757595, 122.475, 0.00329937}, {
     149, 1993.5940362548, 0.708435, 114.569, 0.00473692}, {
     150, 1993.5967637217, 0.654172, 105.843, 0.00399648}, {
     151, 1993.5995171914, 0.585253, 94.7604, 0.00291019}, {
     152, 1993.6022684441, 0.513836, 83.2759, 0.00596982}, {
     153, 1993.6049613576, 0.43218, 70.1447, 0.00344488}, {
     154, 1993.6077461201, 0.345518, 56.2087, 0.00292049}, {
     155, 1993.6240958356, -0.303461, -48.1535, 0.00396231}, {
     156, 1993.6269166459, -0.430591, -68.5972, 0.00456491}, {
     157, 1993.6323126734, -0.679269, -108.587, 0.00438878}, {
     158, 1993.6350227406, -0.809463, -129.523, 0.00432945}, {
     159, 1993.6377838609, -0.929009, -148.748, 0.00406611}, {
     160, 1993.6404940856, -1.05495, -169., 0.00361267}, {
     161, 1993.6432340993, -1.18237, -189.49, 0.00348601}, {
     162, 1993.6459646083, -1.30095, -208.559, 0.00518006}, {
     163, 1993.6514417119, -1.5187, -243.576, 0.0039609}, {
     164, 1993.654143143, -1.6279, -261.137, 0.00501629}, {
     165, 1993.6568900622, -1.70974, -274.296, 0.00604314}, {
     166, 1993.6596236717, -1.79757, -288.421, 0.00381171}, {
     167, 1993.6623588277, -1.87084, -300.203, 0.00540518}, {
     168, 1993.665099383, -1.93, -309.717, 0.00388641}, {
     169, 1993.7142594936, -0.703003, -112.404, 0.00282368}, {
     170, 1993.7170115586, -0.515862, -82.3096, 0.00616035}, {
     171, 1993.7608615065, 2.36768, 381.392, 0.00522218}, {
     172, 1993.7634240634, 2.46275, 396.68, 0.00317729}},
    SelectWithContents->True,
    Selectable->False],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]],
  CellChangeTimes->{{3.770539754944522*^9, 3.770539807190915*^9}, {
   3.770655772624902*^9, 3.770655780431499*^9}},ExpressionUUID->
  "29b72b03-fb46-4cee-bfc6-5da4e1a544e1"],
 " (kindly supplied by Alex Wolszczan) represents post-fit residuals after \
fitting out a standard timing model assuming a single pulsar (",
 StyleBox["i.e.",
  FontSlant->"Italic"],
 ", taking into account the earth's orbital motion, ",
 StyleBox["etc",
  FontSlant->"Italic"],
 "). "
}], "Text",
 CellTags->{"pulsar PSR1257+12", "timing residuals", "Alex Wolszczan"},
 CellID->1207958768,ExpressionUUID->"dc70f6f1-4826-434a-bd95-3cb32a038b26"],

Cell[TextData[{
 "In this chapter we fit a double planet model to the ",
 Cell[BoxData[
  TagBox[
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", 
       StyleBox[
       "\"Pulsar data\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"172", ",", "5"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["29064", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    {{1, 1990.6870210174, -0.0188495, -2.38513, 0.00374001}, {
     2, 1990.7198110055, -0.335115, -53.2436, 0.00406533}, {
     3, 1990.7308038784, -0.52507, -83.7903, 0.00361276}, {
     4, 1990.796315351, 0.257191, 42.0048, 0.0033555}, {
     5, 1990.8454862483, 2.15298, 346.865, 0.0030225}, {
     6, 1990.8619252345, 2.10726, 339.513, 0.00405043}, {
     7, 1990.9520679727, -2.59551, -416.737, 0.00429112}, {
     8, 1990.9548400972, -2.62171, -420.951, 0.00426934}, {
     9, 1990.9739766716, -2.32315, -372.939, 0.00356533}, {
     10, 1990.9767141212, -2.22064, -356.454, 0.00367144}, {
     11, 1991.2007342076, -0.568935, -90.8442, 0.00496769}, {
     12, 1991.2198732517, -0.150349, -23.5316, 0.00501596}, {
     13, 1991.3018784967, -0.488403, -77.8939, 0.00509022}, {
     14, 1991.3045542805, -0.494481, -78.8713, 0.00554574}, {
     15, 1991.3100219687, -0.469674, -74.8821, 0.00370191}, {
     16, 1991.3920105529, 1.94947, 314.14, 0.00295921}, {
     17, 1991.3947749973, 1.97185, 317.738, 0.00415883}, {
     18, 1991.4465531284, 0.0107999, 2.38279, 0.00474497}, {
     19, 1991.4466372877, 0.0066815, 1.72051, 0.00559556}, {
     20, 1991.5531690398, -0.0770058, -11.7372, 0.00528773}, {
     21, 1991.5558718251, 0.128978, 21.387, 0.00410521}, {
     22, 1991.5968403723, 2.46479, 397.008, 0.00392502}, {
     23, 1991.5996631559, 2.52511, 406.708, 0.00400384}, {
     24, 1991.6351258513, 1.86379, 300.362, 0.00431816}, {
     25, 1991.6787402187, -0.689795, -110.28, 0.00397195}, {
     26, 1991.6815117389, -0.815304, -130.463, 0.00514167}, {
     27, 1991.6897023337, -1.12602, -180.429, 0.00462773}, {
     28, 1991.7006161087, -1.37461, -220.405, 0.00388203}, {
     29, 1991.7197436919, -1.37764, -220.891, 0.00341908}, {
     30, 1991.763463578, -0.223993, -35.3742, 0.00449185}, {
     31, 1991.7661874004, -0.155781, -24.4051, 0.00428948}, {
     32, 1991.8017139476, 0.231833, 37.927, 0.00370139}, {
     33, 1991.8045551139, 0.218089, 35.7169, 0.0068466}, {
     34, 1991.8073499041, 0.19759, 32.4204, 0.00361446}, {
     35, 1991.8235755928, 0.02412, 4.52479, 0.00501393}, {
     36, 1991.8263441563, -0.0089064, -0.786178, 0.00280956}, {
     37, 1991.8509037221, -0.22583, -35.6696, 0.00397159}, {
     38, 1991.8536394174, -0.222086, -35.0676, 0.00582826}, {
     39, 1991.864562417, -0.150962, -23.6301, 0.00428761}, {
     40, 1991.8809417027, 0.176626, 29.0493, 0.00430881}, {
     41, 1991.8836622772, 0.253788, 41.4577, 0.0039639}, {
     42, 1991.9082918688, 1.07285, 173.17, 0.00535605}, {
     43, 1991.911014374, 1.16397, 187.824, 0.00329768}, {
     44, 1991.9137876216, 1.24854, 201.424, 0.00292127}, {
     45, 1991.9191785889, 1.40647, 226.819, 0.00385515}, {
     46, 1991.9219234465, 1.46948, 236.952, 0.00343073}, {
     47, 1991.9683767716, 1.15017, 185.605, 0.00358882}, {
     48, 1991.9902868391, -0.019696, -2.52125, 0.00277697}, {
     49, 1992.0693549278, -1.89477, -304.052, 0.00401908}, {
     50, 1992.1211210174, 1.7299, 278.83, 0.00367567}, {
     51, 1992.1346736867, 2.39416, 385.65, 0.00566567}, {
     52, 1992.1565233648, 2.67063, 430.109, 0.00335053}, {
     53, 1992.1592484698, 2.63692, 424.688, 0.0035353}, {
     54, 1992.1866057487, 1.47038, 237.097, 0.00218335}, {
     55, 1992.1918937593, 1.12811, 182.057, 0.00375854}, {
     56, 1992.1946365208, 0.939938, 151.797, 0.00654772}, {
     57, 1992.2628227478, -1.63623, -262.475, 0.00402911}, {
     58, 1992.2983104757, -0.571845, -91.3122, 0.00360093}, {
     59, 1992.3010457931, -0.467178, -74.4807, 0.00534363}, {
     60, 1992.3037997633, -0.370373, -58.9136, 0.00373193}, {
     61, 1992.3065306454, -0.27104, -42.9398, 0.00339501}, {
     62, 1992.3092348104, -0.185139, -29.1261, 0.00478694}, {
     63, 1992.3119583512, -0.100059, -15.4443, 0.00687745}, {
     64, 1992.314729908, -0.0191635, -2.43562, 0.00221544}, {
     65, 1992.3174066763, 0.0613637, 10.51394, 0.00514451}, {
     66, 1992.3201242815, 0.135984, 22.5137, 0.0025472}, {
     67, 1992.3228839155, 0.193437, 31.7526, 0.00552977}, {
     68, 1992.325622043, 0.262972, 42.9345, 0.00377196}, {
     69, 1992.3310505375, 0.3573, 58.1034, 0.00389827}, {
     70, 1992.333602086, 0.386537, 62.805, 0.00350004}, {
     71, 1992.3854852429, 0.108196, 18.045, 0.00356508}, {
     72, 1992.3882019184, 0.0782136, 13.2236, 0.00512582}, {
     73, 1992.4180166309, 0.0979297, 16.3941, 0.00355005}, {
     74, 1992.4190893804, 0.116686, 19.4103, 0.00998865}, {
     75, 1992.4207998711, 0.139112, 23.0166, 0.00637712}, {
     76, 1992.4997946862, 1.2944, 208.799, 0.00333334}, {
     77, 1992.5025570273, 1.23173, 198.721, 0.00276248}, {
     78, 1992.5570821185, -1.44589, -231.868, 0.00348378}, {
     79, 1992.5597913701, -1.58387, -254.055, 0.00374151}, {
     80, 1992.5734421005, -2.143, -343.969, 0.00498782}, {
     81, 1992.5761872056, -2.21118, -354.933, 0.00328834}, {
     82, 1992.6633057105, 1.77407, 285.933, 0.00290841}, {
     83, 1992.6660188019, 1.93837, 312.355, 0.00384108}, {
     84, 1992.7204788528, 2.01038, 323.934, 0.00523181}, {
     85, 1992.7232036527, 1.85777, 299.393, 0.00339915}, {
     86, 1992.7505881383, -0.0428941, -6.25172, 0.00408742}, {
     87, 1992.7559180723, -0.405188, -64.5121, 0.00384283}, {
     88, 1992.7586672431, -0.595059, -95.0452, 0.00271168}, {
     89, 1992.7885948208, -1.85679, -297.944, 0.00255076}, {
     90, 1992.7913422913, -1.89844, -304.641, 0.00415062}, {
     91, 1992.837629624, -0.804781, -128.771, 0.00431506}, {
     92, 1992.8403784481, -0.68503, -109.513, 0.00235731}, {
     93, 1992.8731207781, 0.49313, 79.9462, 0.00361793}, {
     94, 1992.8758394374, 0.550665, 89.1982, 0.00384311}, {
     95, 1992.9166856266, 0.564317, 91.3936, 0.00444981}, {
     96, 1992.960284242, 0.154039, 25.417, 0.00426736}, {
     97, 1992.9630151574, 0.17036, 28.0415, 0.00393564}, {
     98, 1993.0257505433, 1.16419, 187.86, 0.00461566}, {
     99, 1993.0285142072, 1.17307, 189.287, 0.00383606}, {
     100, 1993.0858884972, -0.619972, -99.0514, 0.00218937}, {
     101, 1993.0886669789, -0.764877, -122.354, 0.00394609}, {
     102, 1993.121391818, -2.11591, -339.612, 0.00355035}, {
     103, 1993.170602129, -0.76415, -122.237, 0.00337862}, {
     104, 1993.1733204071, -0.576337, -92.0344, 0.00414793}, {
     105, 1993.2362483846, 2.80614, 451.901, 0.00400935}, {
     106, 1993.2389006661, 2.80191, 451.221, 0.00314941}, {
     107, 1993.2689427372, 1.70996, 275.624, 0.00426958}, {
     108, 1993.2717048084, 1.52628, 246.086, 0.00346607}, {
     109, 1993.2744120184, 1.34718, 217.285, 0.00503254}, {
     110, 1993.277158797, 1.15426, 186.263, 0.00493767}, {
     111, 1993.2798832483, 0.958417, 154.769, 0.00506803}, {
     112, 1993.2825965967, 0.752647, 121.679, 0.00300516}, {
     113, 1993.2853930777, 0.542753, 87.9259, 0.0034442}, {
     114, 1993.2880854311, 0.337932, 54.9887, 0.00305631}, {
     115, 1993.2935323926, -0.0750401, -11.4211, 0.0029541}, {
     116, 1993.2962406469, -0.274558, -43.5056, 0.00240823}, {
     117, 1993.298999314, -0.47054, -75.0213, 0.00414849}, {
     118, 1993.3017237313, -0.667524, -106.698, 0.00386681}, {
     119, 1993.3044529011, -0.851145, -136.226, 0.0039097}, {
     120, 1993.307188662, -1.02325, -163.903, 0.00512012}, {
     121, 1993.3126705087, -1.34591, -215.79, 0.00198874}, {
     122, 1993.3154018819, -1.48888, -238.78, 0.00596932}, {
     123, 1993.3180888591, -1.61345, -258.812, 0.00458909}, {
     124, 1993.3208519329, -1.73499, -278.356, 0.00295183}, {
     125, 1993.3263010174, -1.91916, -307.973, 0.00270185}, {
     126, 1993.3290609087, -1.9923, -319.734, 0.00394153}, {
     127, 1993.3318175587, -2.04945, -328.925, 0.00280299}, {
     128, 1993.3345530938, -2.09106, -335.617, 0.00340661}, {
     129, 1993.3836913831, -0.774774, -123.945, 0.00359278}, {
     130, 1993.3864252048, -0.647009, -103.3992, 0.00484562}, {
     131, 1993.4301317795, 0.938914, 151.633, 0.00450036}, {
     132, 1993.4312026007, 0.951182, 153.605, 0.00897471}, {
     133, 1993.4329067828, 0.967501, 156.23, 0.00347792}, {
     134, 1993.4793281653, 0.531234, 86.0737, 0.00376451}, {
     135, 1993.4820550696, 0.479443, 77.745, 0.00419021}, {
     136, 1993.5202770713, 0.222164, 36.3722, 0.00475944}, {
     137, 1993.5421364643, 0.516191, 83.6545, 0.0028759}, {
     138, 1993.5448600731, 0.560826, 90.8322, 0.00467011}, {
     139, 1993.5503268568, 0.649746, 105.1315, 0.00389204}, {
     140, 1993.5585156449, 0.771456, 124.704, 0.00298269}, {
     141, 1993.566712558, 0.857604, 138.557, 0.00411959}, {
     142, 1993.5694745647, 0.87025, 140.591, 0.00406215}, {
     143, 1993.5721937687, 0.882395, 142.544, 0.00303427}, {
     144, 1993.5749649909, 0.889598, 143.702, 0.00360905}, {
     145, 1993.5804430263, 0.873126, 141.053, 0.00357951}, {
     146, 1993.5858400493, 0.832191, 134.47, 0.00351089}, {
     147, 1993.5885955955, 0.800181, 129.323, 0.00344621}, {
     148, 1993.5913972534, 0.757595, 122.475, 0.00329937}, {
     149, 1993.5940362548, 0.708435, 114.569, 0.00473692}, {
     150, 1993.5967637217, 0.654172, 105.843, 0.00399648}, {
     151, 1993.5995171914, 0.585253, 94.7604, 0.00291019}, {
     152, 1993.6022684441, 0.513836, 83.2759, 0.00596982}, {
     153, 1993.6049613576, 0.43218, 70.1447, 0.00344488}, {
     154, 1993.6077461201, 0.345518, 56.2087, 0.00292049}, {
     155, 1993.6240958356, -0.303461, -48.1535, 0.00396231}, {
     156, 1993.6269166459, -0.430591, -68.5972, 0.00456491}, {
     157, 1993.6323126734, -0.679269, -108.587, 0.00438878}, {
     158, 1993.6350227406, -0.809463, -129.523, 0.00432945}, {
     159, 1993.6377838609, -0.929009, -148.748, 0.00406611}, {
     160, 1993.6404940856, -1.05495, -169., 0.00361267}, {
     161, 1993.6432340993, -1.18237, -189.49, 0.00348601}, {
     162, 1993.6459646083, -1.30095, -208.559, 0.00518006}, {
     163, 1993.6514417119, -1.5187, -243.576, 0.0039609}, {
     164, 1993.654143143, -1.6279, -261.137, 0.00501629}, {
     165, 1993.6568900622, -1.70974, -274.296, 0.00604314}, {
     166, 1993.6596236717, -1.79757, -288.421, 0.00381171}, {
     167, 1993.6623588277, -1.87084, -300.203, 0.00540518}, {
     168, 1993.665099383, -1.93, -309.717, 0.00388641}, {
     169, 1993.7142594936, -0.703003, -112.404, 0.00282368}, {
     170, 1993.7170115586, -0.515862, -82.3096, 0.00616035}, {
     171, 1993.7608615065, 2.36768, 381.392, 0.00522218}, {
     172, 1993.7634240634, 2.46275, 396.68, 0.00317729}},
    SelectWithContents->True,
    Selectable->False],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]],
  CellChangeTimes->{{3.770539754944522*^9, 3.770539807190915*^9}, {
   3.770655772624902*^9, 3.770655780431499*^9}},ExpressionUUID->
  "104064f4-e028-4048-8ebe-e6d8f48d8eec"],
 " and determine the orbital periods of each planet."
}], "Text",
 CellTags->{"timing residuals", "Alex Wolszczan"},
 CellID->199620186,ExpressionUUID->"056147d0-b82f-441c-9026-acbd99b4ae72"],

Cell[CellGroupData[{

Cell["Dataset", "Subsection",
 CellID->647009488,ExpressionUUID->"e9b5a951-2579-4854-ae59-127d81fed41e"],

Cell[TextData[{
 "Convert the data file to a structured ",
 ButtonBox["Dataset",
  BaseStyle->"Link"],
 " based on a hierarchy of lists and associations: "
}], "CodeText",
 CellID->1578760055,ExpressionUUID->"87c9f90e-0a42-40de-b273-0e1b35a58f69"],

Cell[BoxData[
 RowBox[{
  RowBox[{"headers", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<n\>\"", ",", "\"\<epoch\>\"", ",", "\"\<residual\>\"", ",", 
     "\"\<phase\>\"", ",", "\"\<error\>\""}], "}"}]}], ";"}]], "Input",
 CellLabel->"In[35]:=",
 CellID->2059785700,ExpressionUUID->"2177b5b7-5d37-4140-8da3-4a70429db2d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "=", 
  RowBox[{"Dataset", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{"headers", "\[Rule]", "##"}], "]"}], "&"}], "/@", 
     TagBox[
      InterpretationBox[
       DynamicModuleBox[{Typeset`open = False}, 
        TemplateBox[{"List", 
          StyleBox[
          "\"Pulsar data\"", "IconizedCustomName", StripOnInput -> False], 
          GridBox[{{
             RowBox[{
               TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["List", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Dimensions: \"", "IconizedLabel"], 
               "\[InvisibleSpace]", 
               TagBox[
                RowBox[{"{", 
                  RowBox[{"172", ",", "5"}], "}"}], "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Byte count: \"", "IconizedLabel"], 
               "\[InvisibleSpace]", 
               TagBox["29064", "IconizedItem"]}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          Dynamic[Typeset`open]},
         "IconizedObject"]],
       {{1, 1990.6870210174, -0.0188495, -2.38513, 0.00374001}, {
        2, 1990.7198110055, -0.335115, -53.2436, 0.00406533}, {
        3, 1990.7308038784, -0.52507, -83.7903, 0.00361276}, {
        4, 1990.796315351, 0.257191, 42.0048, 0.0033555}, {
        5, 1990.8454862483, 2.15298, 346.865, 0.0030225}, {
        6, 1990.8619252345, 2.10726, 339.513, 0.00405043}, {
        7, 1990.9520679727, -2.59551, -416.737, 0.00429112}, {
        8, 1990.9548400972, -2.62171, -420.951, 0.00426934}, {
        9, 1990.9739766716, -2.32315, -372.939, 0.00356533}, {
        10, 1990.9767141212, -2.22064, -356.454, 0.00367144}, {
        11, 1991.2007342076, -0.568935, -90.8442, 0.00496769}, {
        12, 1991.2198732517, -0.150349, -23.5316, 0.00501596}, {
        13, 1991.3018784967, -0.488403, -77.8939, 0.00509022}, {
        14, 1991.3045542805, -0.494481, -78.8713, 0.00554574}, {
        15, 1991.3100219687, -0.469674, -74.8821, 0.00370191}, {
        16, 1991.3920105529, 1.94947, 314.14, 0.00295921}, {
        17, 1991.3947749973, 1.97185, 317.738, 0.00415883}, {
        18, 1991.4465531284, 0.0107999, 2.38279, 0.00474497}, {
        19, 1991.4466372877, 0.0066815, 1.72051, 0.00559556}, {
        20, 1991.5531690398, -0.0770058, -11.7372, 0.00528773}, {
        21, 1991.5558718251, 0.128978, 21.387, 0.00410521}, {
        22, 1991.5968403723, 2.46479, 397.008, 0.00392502}, {
        23, 1991.5996631559, 2.52511, 406.708, 0.00400384}, {
        24, 1991.6351258513, 1.86379, 300.362, 0.00431816}, {
        25, 1991.6787402187, -0.689795, -110.28, 0.00397195}, {
        26, 1991.6815117389, -0.815304, -130.463, 0.00514167}, {
        27, 1991.6897023337, -1.12602, -180.429, 0.00462773}, {
        28, 1991.7006161087, -1.37461, -220.405, 0.00388203}, {
        29, 1991.7197436919, -1.37764, -220.891, 0.00341908}, {
        30, 1991.763463578, -0.223993, -35.3742, 0.00449185}, {
        31, 1991.7661874004, -0.155781, -24.4051, 0.00428948}, {
        32, 1991.8017139476, 0.231833, 37.927, 0.00370139}, {
        33, 1991.8045551139, 0.218089, 35.7169, 0.0068466}, {
        34, 1991.8073499041, 0.19759, 32.4204, 0.00361446}, {
        35, 1991.8235755928, 0.02412, 4.52479, 0.00501393}, {
        36, 1991.8263441563, -0.0089064, -0.786178, 0.00280956}, {
        37, 1991.8509037221, -0.22583, -35.6696, 0.00397159}, {
        38, 1991.8536394174, -0.222086, -35.0676, 0.00582826}, {
        39, 1991.864562417, -0.150962, -23.6301, 0.00428761}, {
        40, 1991.8809417027, 0.176626, 29.0493, 0.00430881}, {
        41, 1991.8836622772, 0.253788, 41.4577, 0.0039639}, {
        42, 1991.9082918688, 1.07285, 173.17, 0.00535605}, {
        43, 1991.911014374, 1.16397, 187.824, 0.00329768}, {
        44, 1991.9137876216, 1.24854, 201.424, 0.00292127}, {
        45, 1991.9191785889, 1.40647, 226.819, 0.00385515}, {
        46, 1991.9219234465, 1.46948, 236.952, 0.00343073}, {
        47, 1991.9683767716, 1.15017, 185.605, 0.00358882}, {
        48, 1991.9902868391, -0.019696, -2.52125, 0.00277697}, {
        49, 1992.0693549278, -1.89477, -304.052, 0.00401908}, {
        50, 1992.1211210174, 1.7299, 278.83, 0.00367567}, {
        51, 1992.1346736867, 2.39416, 385.65, 0.00566567}, {
        52, 1992.1565233648, 2.67063, 430.109, 0.00335053}, {
        53, 1992.1592484698, 2.63692, 424.688, 0.0035353}, {
        54, 1992.1866057487, 1.47038, 237.097, 0.00218335}, {
        55, 1992.1918937593, 1.12811, 182.057, 0.00375854}, {
        56, 1992.1946365208, 0.939938, 151.797, 0.00654772}, {
        57, 1992.2628227478, -1.63623, -262.475, 0.00402911}, {
        58, 1992.2983104757, -0.571845, -91.3122, 0.00360093}, {
        59, 1992.3010457931, -0.467178, -74.4807, 0.00534363}, {
        60, 1992.3037997633, -0.370373, -58.9136, 0.00373193}, {
        61, 1992.3065306454, -0.27104, -42.9398, 0.00339501}, {
        62, 1992.3092348104, -0.185139, -29.1261, 0.00478694}, {
        63, 1992.3119583512, -0.100059, -15.4443, 0.00687745}, {
        64, 1992.314729908, -0.0191635, -2.43562, 0.00221544}, {
        65, 1992.3174066763, 0.0613637, 10.51394, 0.00514451}, {
        66, 1992.3201242815, 0.135984, 22.5137, 0.0025472}, {
        67, 1992.3228839155, 0.193437, 31.7526, 0.00552977}, {
        68, 1992.325622043, 0.262972, 42.9345, 0.00377196}, {
        69, 1992.3310505375, 0.3573, 58.1034, 0.00389827}, {
        70, 1992.333602086, 0.386537, 62.805, 0.00350004}, {
        71, 1992.3854852429, 0.108196, 18.045, 0.00356508}, {
        72, 1992.3882019184, 0.0782136, 13.2236, 0.00512582}, {
        73, 1992.4180166309, 0.0979297, 16.3941, 0.00355005}, {
        74, 1992.4190893804, 0.116686, 19.4103, 0.00998865}, {
        75, 1992.4207998711, 0.139112, 23.0166, 0.00637712}, {
        76, 1992.4997946862, 1.2944, 208.799, 0.00333334}, {
        77, 1992.5025570273, 1.23173, 198.721, 0.00276248}, {
        78, 1992.5570821185, -1.44589, -231.868, 0.00348378}, {
        79, 1992.5597913701, -1.58387, -254.055, 0.00374151}, {
        80, 1992.5734421005, -2.143, -343.969, 0.00498782}, {
        81, 1992.5761872056, -2.21118, -354.933, 0.00328834}, {
        82, 1992.6633057105, 1.77407, 285.933, 0.00290841}, {
        83, 1992.6660188019, 1.93837, 312.355, 0.00384108}, {
        84, 1992.7204788528, 2.01038, 323.934, 0.00523181}, {
        85, 1992.7232036527, 1.85777, 299.393, 0.00339915}, {
        86, 1992.7505881383, -0.0428941, -6.25172, 0.00408742}, {
        87, 1992.7559180723, -0.405188, -64.5121, 0.00384283}, {
        88, 1992.7586672431, -0.595059, -95.0452, 0.00271168}, {
        89, 1992.7885948208, -1.85679, -297.944, 0.00255076}, {
        90, 1992.7913422913, -1.89844, -304.641, 0.00415062}, {
        91, 1992.837629624, -0.804781, -128.771, 0.00431506}, {
        92, 1992.8403784481, -0.68503, -109.513, 0.00235731}, {
        93, 1992.8731207781, 0.49313, 79.9462, 0.00361793}, {
        94, 1992.8758394374, 0.550665, 89.1982, 0.00384311}, {
        95, 1992.9166856266, 0.564317, 91.3936, 0.00444981}, {
        96, 1992.960284242, 0.154039, 25.417, 0.00426736}, {
        97, 1992.9630151574, 0.17036, 28.0415, 0.00393564}, {
        98, 1993.0257505433, 1.16419, 187.86, 0.00461566}, {
        99, 1993.0285142072, 1.17307, 189.287, 0.00383606}, {
        100, 1993.0858884972, -0.619972, -99.0514, 0.00218937}, {
        101, 1993.0886669789, -0.764877, -122.354, 0.00394609}, {
        102, 1993.121391818, -2.11591, -339.612, 0.00355035}, {
        103, 1993.170602129, -0.76415, -122.237, 0.00337862}, {
        104, 1993.1733204071, -0.576337, -92.0344, 0.00414793}, {
        105, 1993.2362483846, 2.80614, 451.901, 0.00400935}, {
        106, 1993.2389006661, 2.80191, 451.221, 0.00314941}, {
        107, 1993.2689427372, 1.70996, 275.624, 0.00426958}, {
        108, 1993.2717048084, 1.52628, 246.086, 0.00346607}, {
        109, 1993.2744120184, 1.34718, 217.285, 0.00503254}, {
        110, 1993.277158797, 1.15426, 186.263, 0.00493767}, {
        111, 1993.2798832483, 0.958417, 154.769, 0.00506803}, {
        112, 1993.2825965967, 0.752647, 121.679, 0.00300516}, {
        113, 1993.2853930777, 0.542753, 87.9259, 0.0034442}, {
        114, 1993.2880854311, 0.337932, 54.9887, 0.00305631}, {
        115, 1993.2935323926, -0.0750401, -11.4211, 0.0029541}, {
        116, 1993.2962406469, -0.274558, -43.5056, 0.00240823}, {
        117, 1993.298999314, -0.47054, -75.0213, 0.00414849}, {
        118, 1993.3017237313, -0.667524, -106.698, 0.00386681}, {
        119, 1993.3044529011, -0.851145, -136.226, 0.0039097}, {
        120, 1993.307188662, -1.02325, -163.903, 0.00512012}, {
        121, 1993.3126705087, -1.34591, -215.79, 0.00198874}, {
        122, 1993.3154018819, -1.48888, -238.78, 0.00596932}, {
        123, 1993.3180888591, -1.61345, -258.812, 0.00458909}, {
        124, 1993.3208519329, -1.73499, -278.356, 0.00295183}, {
        125, 1993.3263010174, -1.91916, -307.973, 0.00270185}, {
        126, 1993.3290609087, -1.9923, -319.734, 0.00394153}, {
        127, 1993.3318175587, -2.04945, -328.925, 0.00280299}, {
        128, 1993.3345530938, -2.09106, -335.617, 0.00340661}, {
        129, 1993.3836913831, -0.774774, -123.945, 0.00359278}, {
        130, 1993.3864252048, -0.647009, -103.3992, 0.00484562}, {
        131, 1993.4301317795, 0.938914, 151.633, 0.00450036}, {
        132, 1993.4312026007, 0.951182, 153.605, 0.00897471}, {
        133, 1993.4329067828, 0.967501, 156.23, 0.00347792}, {
        134, 1993.4793281653, 0.531234, 86.0737, 0.00376451}, {
        135, 1993.4820550696, 0.479443, 77.745, 0.00419021}, {
        136, 1993.5202770713, 0.222164, 36.3722, 0.00475944}, {
        137, 1993.5421364643, 0.516191, 83.6545, 0.0028759}, {
        138, 1993.5448600731, 0.560826, 90.8322, 0.00467011}, {
        139, 1993.5503268568, 0.649746, 105.1315, 0.00389204}, {
        140, 1993.5585156449, 0.771456, 124.704, 0.00298269}, {
        141, 1993.566712558, 0.857604, 138.557, 0.00411959}, {
        142, 1993.5694745647, 0.87025, 140.591, 0.00406215}, {
        143, 1993.5721937687, 0.882395, 142.544, 0.00303427}, {
        144, 1993.5749649909, 0.889598, 143.702, 0.00360905}, {
        145, 1993.5804430263, 0.873126, 141.053, 0.00357951}, {
        146, 1993.5858400493, 0.832191, 134.47, 0.00351089}, {
        147, 1993.5885955955, 0.800181, 129.323, 0.00344621}, {
        148, 1993.5913972534, 0.757595, 122.475, 0.00329937}, {
        149, 1993.5940362548, 0.708435, 114.569, 0.00473692}, {
        150, 1993.5967637217, 0.654172, 105.843, 0.00399648}, {
        151, 1993.5995171914, 0.585253, 94.7604, 0.00291019}, {
        152, 1993.6022684441, 0.513836, 83.2759, 0.00596982}, {
        153, 1993.6049613576, 0.43218, 70.1447, 0.00344488}, {
        154, 1993.6077461201, 0.345518, 56.2087, 0.00292049}, {
        155, 1993.6240958356, -0.303461, -48.1535, 0.00396231}, {
        156, 1993.6269166459, -0.430591, -68.5972, 0.00456491}, {
        157, 1993.6323126734, -0.679269, -108.587, 0.00438878}, {
        158, 1993.6350227406, -0.809463, -129.523, 0.00432945}, {
        159, 1993.6377838609, -0.929009, -148.748, 0.00406611}, {
        160, 1993.6404940856, -1.05495, -169., 0.00361267}, {
        161, 1993.6432340993, -1.18237, -189.49, 0.00348601}, {
        162, 1993.6459646083, -1.30095, -208.559, 0.00518006}, {
        163, 1993.6514417119, -1.5187, -243.576, 0.0039609}, {
        164, 1993.654143143, -1.6279, -261.137, 0.00501629}, {
        165, 1993.6568900622, -1.70974, -274.296, 0.00604314}, {
        166, 1993.6596236717, -1.79757, -288.421, 0.00381171}, {
        167, 1993.6623588277, -1.87084, -300.203, 0.00540518}, {
        168, 1993.665099383, -1.93, -309.717, 0.00388641}, {
        169, 1993.7142594936, -0.703003, -112.404, 0.00282368}, {
        170, 1993.7170115586, -0.515862, -82.3096, 0.00616035}, {
        171, 1993.7608615065, 2.36768, 381.392, 0.00522218}, {
        172, 1993.7634240634, 2.46275, 396.68, 0.00317729}},
       SelectWithContents->True,
       Selectable->False],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], ")"}]}]}]], "Input",
 CellLabel->"In[36]:=",
 CellID->1381870260,ExpressionUUID->"cb227241-3c3e-4971-9f3d-d03e5c1d7f57"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "n" -> 1, "epoch" -> 1990.6870210174, "residual" -> -0.0188495, 
        "phase" -> -2.38513, "error" -> 0.00374001|>, <|
       "n" -> 2, "epoch" -> 1990.7198110055, "residual" -> -0.335115, 
        "phase" -> -53.2436, "error" -> 0.00406533|>, <|
       "n" -> 3, "epoch" -> 1990.7308038784, "residual" -> -0.52507, 
        "phase" -> -83.7903, "error" -> 0.00361276|>, <|
       "n" -> 4, "epoch" -> 1990.796315351, "residual" -> 0.257191, "phase" -> 
        42.0048, "error" -> 0.0033555|>, <|
       "n" -> 5, "epoch" -> 1990.8454862483, "residual" -> 2.15298, "phase" -> 
        346.865, "error" -> 0.0030225|>, <|
       "n" -> 6, "epoch" -> 1990.8619252345, "residual" -> 2.10726, "phase" -> 
        339.513, "error" -> 0.00405043|>, <|
       "n" -> 7, "epoch" -> 1990.9520679727, "residual" -> -2.59551, 
        "phase" -> -416.737, "error" -> 0.00429112|>, <|
       "n" -> 8, "epoch" -> 1990.9548400972, "residual" -> -2.62171, 
        "phase" -> -420.951, "error" -> 0.00426934|>, <|
       "n" -> 9, "epoch" -> 1990.9739766716, "residual" -> -2.32315, 
        "phase" -> -372.939, "error" -> 0.00356533|>, <|
       "n" -> 10, "epoch" -> 1990.9767141212, "residual" -> -2.22064, 
        "phase" -> -356.454, "error" -> 0.00367144|>, <|
       "n" -> 11, "epoch" -> 1991.2007342076, "residual" -> -0.568935, 
        "phase" -> -90.8442, "error" -> 0.00496769|>, <|
       "n" -> 12, "epoch" -> 1991.2198732517, "residual" -> -0.150349, 
        "phase" -> -23.5316, "error" -> 0.00501596|>, <|
       "n" -> 13, "epoch" -> 1991.3018784967, "residual" -> -0.488403, 
        "phase" -> -77.8939, "error" -> 0.00509022|>, <|
       "n" -> 14, "epoch" -> 1991.3045542805, "residual" -> -0.494481, 
        "phase" -> -78.8713, "error" -> 0.00554574|>, <|
       "n" -> 15, "epoch" -> 1991.3100219687, "residual" -> -0.469674, 
        "phase" -> -74.8821, "error" -> 0.00370191|>, <|
       "n" -> 16, "epoch" -> 1991.3920105529, "residual" -> 1.94947, "phase" -> 
        314.14, "error" -> 0.00295921|>, <|
       "n" -> 17, "epoch" -> 1991.3947749973, "residual" -> 1.97185, "phase" -> 
        317.738, "error" -> 0.00415883|>, <|
       "n" -> 18, "epoch" -> 1991.4465531284, "residual" -> 0.0107999, 
        "phase" -> 2.38279, "error" -> 0.00474497|>, <|
       "n" -> 19, "epoch" -> 1991.4466372877, "residual" -> 0.0066815, 
        "phase" -> 1.72051, "error" -> 0.00559556|>, <|
       "n" -> 20, "epoch" -> 1991.5531690398, "residual" -> -0.0770058, 
        "phase" -> -11.7372, "error" -> 0.00528773|>, <|
       "n" -> 21, "epoch" -> 1991.5558718251, "residual" -> 0.128978, "phase" -> 
        21.387, "error" -> 0.00410521|>, <|
       "n" -> 22, "epoch" -> 1991.5968403723, "residual" -> 2.46479, "phase" -> 
        397.008, "error" -> 0.00392502|>, <|
       "n" -> 23, "epoch" -> 1991.5996631559, "residual" -> 2.52511, "phase" -> 
        406.708, "error" -> 0.00400384|>, <|
       "n" -> 24, "epoch" -> 1991.6351258513, "residual" -> 1.86379, "phase" -> 
        300.362, "error" -> 0.00431816|>, <|
       "n" -> 25, "epoch" -> 1991.6787402187, "residual" -> -0.689795, 
        "phase" -> -110.28, "error" -> 0.00397195|>, <|
       "n" -> 26, "epoch" -> 1991.6815117389, "residual" -> -0.815304, 
        "phase" -> -130.463, "error" -> 0.00514167|>, <|
       "n" -> 27, "epoch" -> 1991.6897023337, "residual" -> -1.12602, 
        "phase" -> -180.429, "error" -> 0.00462773|>, <|
       "n" -> 28, "epoch" -> 1991.7006161087, "residual" -> -1.37461, 
        "phase" -> -220.405, "error" -> 0.00388203|>, <|
       "n" -> 29, "epoch" -> 1991.7197436919, "residual" -> -1.37764, 
        "phase" -> -220.891, "error" -> 0.00341908|>, <|
       "n" -> 30, "epoch" -> 1991.763463578, "residual" -> -0.223993, 
        "phase" -> -35.3742, "error" -> 0.00449185|>, <|
       "n" -> 31, "epoch" -> 1991.7661874004, "residual" -> -0.155781, 
        "phase" -> -24.4051, "error" -> 0.00428948|>, <|
       "n" -> 32, "epoch" -> 1991.8017139476, "residual" -> 0.231833, "phase" -> 
        37.927, "error" -> 0.00370139|>, <|
       "n" -> 33, "epoch" -> 1991.8045551139, "residual" -> 0.218089, "phase" -> 
        35.7169, "error" -> 0.0068466|>, <|
       "n" -> 34, "epoch" -> 1991.8073499041, "residual" -> 0.19759, "phase" -> 
        32.4204, "error" -> 0.00361446|>, <|
       "n" -> 35, "epoch" -> 1991.8235755928, "residual" -> 0.02412, "phase" -> 
        4.52479, "error" -> 0.00501393|>, <|
       "n" -> 36, "epoch" -> 1991.8263441563, "residual" -> -0.0089064, 
        "phase" -> -0.786178, "error" -> 0.00280956|>, <|
       "n" -> 37, "epoch" -> 1991.8509037221, "residual" -> -0.22583, 
        "phase" -> -35.6696, "error" -> 0.00397159|>, <|
       "n" -> 38, "epoch" -> 1991.8536394174, "residual" -> -0.222086, 
        "phase" -> -35.0676, "error" -> 0.00582826|>, <|
       "n" -> 39, "epoch" -> 1991.864562417, "residual" -> -0.150962, 
        "phase" -> -23.6301, "error" -> 0.00428761|>, <|
       "n" -> 40, "epoch" -> 1991.8809417027, "residual" -> 0.176626, "phase" -> 
        29.0493, "error" -> 0.00430881|>, <|
       "n" -> 41, "epoch" -> 1991.8836622772, "residual" -> 0.253788, "phase" -> 
        41.4577, "error" -> 0.0039639|>, <|
       "n" -> 42, "epoch" -> 1991.9082918688, "residual" -> 1.07285, "phase" -> 
        173.17, "error" -> 0.00535605|>, <|
       "n" -> 43, "epoch" -> 1991.911014374, "residual" -> 1.16397, "phase" -> 
        187.824, "error" -> 0.00329768|>, <|
       "n" -> 44, "epoch" -> 1991.9137876216, "residual" -> 1.24854, "phase" -> 
        201.424, "error" -> 0.00292127|>, <|
       "n" -> 45, "epoch" -> 1991.9191785889, "residual" -> 1.40647, "phase" -> 
        226.819, "error" -> 0.00385515|>, <|
       "n" -> 46, "epoch" -> 1991.9219234465, "residual" -> 1.46948, "phase" -> 
        236.952, "error" -> 0.00343073|>, <|
       "n" -> 47, "epoch" -> 1991.9683767716, "residual" -> 1.15017, "phase" -> 
        185.605, "error" -> 0.00358882|>, <|
       "n" -> 48, "epoch" -> 1991.9902868391, "residual" -> -0.019696, 
        "phase" -> -2.52125, "error" -> 0.00277697|>, <|
       "n" -> 49, "epoch" -> 1992.0693549278, "residual" -> -1.89477, 
        "phase" -> -304.052, "error" -> 0.00401908|>, <|
       "n" -> 50, "epoch" -> 1992.1211210174, "residual" -> 1.7299, "phase" -> 
        278.83, "error" -> 0.00367567|>, <|
       "n" -> 51, "epoch" -> 1992.1346736867, "residual" -> 2.39416, "phase" -> 
        385.65, "error" -> 0.00566567|>, <|
       "n" -> 52, "epoch" -> 1992.1565233648, "residual" -> 2.67063, "phase" -> 
        430.109, "error" -> 0.00335053|>, <|
       "n" -> 53, "epoch" -> 1992.1592484698, "residual" -> 2.63692, "phase" -> 
        424.688, "error" -> 0.0035353|>, <|
       "n" -> 54, "epoch" -> 1992.1866057487, "residual" -> 1.47038, "phase" -> 
        237.097, "error" -> 0.00218335|>, <|
       "n" -> 55, "epoch" -> 1992.1918937593, "residual" -> 1.12811, "phase" -> 
        182.057, "error" -> 0.00375854|>, <|
       "n" -> 56, "epoch" -> 1992.1946365208, "residual" -> 0.939938, "phase" -> 
        151.797, "error" -> 0.00654772|>, <|
       "n" -> 57, "epoch" -> 1992.2628227478, "residual" -> -1.63623, 
        "phase" -> -262.475, "error" -> 0.00402911|>, <|
       "n" -> 58, "epoch" -> 1992.2983104757, "residual" -> -0.571845, 
        "phase" -> -91.3122, "error" -> 0.00360093|>, <|
       "n" -> 59, "epoch" -> 1992.3010457931, "residual" -> -0.467178, 
        "phase" -> -74.4807, "error" -> 0.00534363|>, <|
       "n" -> 60, "epoch" -> 1992.3037997633, "residual" -> -0.370373, 
        "phase" -> -58.9136, "error" -> 0.00373193|>, <|
       "n" -> 61, "epoch" -> 1992.3065306454, "residual" -> -0.27104, 
        "phase" -> -42.9398, "error" -> 0.00339501|>, <|
       "n" -> 62, "epoch" -> 1992.3092348104, "residual" -> -0.185139, 
        "phase" -> -29.1261, "error" -> 0.00478694|>, <|
       "n" -> 63, "epoch" -> 1992.3119583512, "residual" -> -0.100059, 
        "phase" -> -15.4443, "error" -> 0.00687745|>, <|
       "n" -> 64, "epoch" -> 1992.314729908, "residual" -> -0.0191635, 
        "phase" -> -2.43562, "error" -> 0.00221544|>, <|
       "n" -> 65, "epoch" -> 1992.3174066763, "residual" -> 0.0613637, 
        "phase" -> 10.51394, "error" -> 0.00514451|>, <|
       "n" -> 66, "epoch" -> 1992.3201242815, "residual" -> 0.135984, "phase" -> 
        22.5137, "error" -> 0.0025472|>, <|
       "n" -> 67, "epoch" -> 1992.3228839155, "residual" -> 0.193437, "phase" -> 
        31.7526, "error" -> 0.00552977|>, <|
       "n" -> 68, "epoch" -> 1992.325622043, "residual" -> 0.262972, "phase" -> 
        42.9345, "error" -> 0.00377196|>, <|
       "n" -> 69, "epoch" -> 1992.3310505375, "residual" -> 0.3573, "phase" -> 
        58.1034, "error" -> 0.00389827|>, <|
       "n" -> 70, "epoch" -> 1992.333602086, "residual" -> 0.386537, "phase" -> 
        62.805, "error" -> 0.00350004|>, <|
       "n" -> 71, "epoch" -> 1992.3854852429, "residual" -> 0.108196, "phase" -> 
        18.045, "error" -> 0.00356508|>, <|
       "n" -> 72, "epoch" -> 1992.3882019184, "residual" -> 0.0782136, 
        "phase" -> 13.2236, "error" -> 0.00512582|>, <|
       "n" -> 73, "epoch" -> 1992.4180166309, "residual" -> 0.0979297, 
        "phase" -> 16.3941, "error" -> 0.00355005|>, <|
       "n" -> 74, "epoch" -> 1992.4190893804, "residual" -> 0.116686, "phase" -> 
        19.4103, "error" -> 0.00998865|>, <|
       "n" -> 75, "epoch" -> 1992.4207998711, "residual" -> 0.139112, "phase" -> 
        23.0166, "error" -> 0.00637712|>, <|
       "n" -> 76, "epoch" -> 1992.4997946862, "residual" -> 1.2944, "phase" -> 
        208.799, "error" -> 0.00333334|>, <|
       "n" -> 77, "epoch" -> 1992.5025570273, "residual" -> 1.23173, "phase" -> 
        198.721, "error" -> 0.00276248|>, <|
       "n" -> 78, "epoch" -> 1992.5570821185, "residual" -> -1.44589, 
        "phase" -> -231.868, "error" -> 0.00348378|>, <|
       "n" -> 79, "epoch" -> 1992.5597913701, "residual" -> -1.58387, 
        "phase" -> -254.055, "error" -> 0.00374151|>, <|
       "n" -> 80, "epoch" -> 1992.5734421005, "residual" -> -2.143, 
        "phase" -> -343.969, "error" -> 0.00498782|>, <|
       "n" -> 81, "epoch" -> 1992.5761872056, "residual" -> -2.21118, 
        "phase" -> -354.933, "error" -> 0.00328834|>, <|
       "n" -> 82, "epoch" -> 1992.6633057105, "residual" -> 1.77407, "phase" -> 
        285.933, "error" -> 0.00290841|>, <|
       "n" -> 83, "epoch" -> 1992.6660188019, "residual" -> 1.93837, "phase" -> 
        312.355, "error" -> 0.00384108|>, <|
       "n" -> 84, "epoch" -> 1992.7204788528, "residual" -> 2.01038, "phase" -> 
        323.934, "error" -> 0.00523181|>, <|
       "n" -> 85, "epoch" -> 1992.7232036527, "residual" -> 1.85777, "phase" -> 
        299.393, "error" -> 0.00339915|>, <|
       "n" -> 86, "epoch" -> 1992.7505881383, "residual" -> -0.0428941, 
        "phase" -> -6.25172, "error" -> 0.00408742|>, <|
       "n" -> 87, "epoch" -> 1992.7559180723, "residual" -> -0.405188, 
        "phase" -> -64.5121, "error" -> 0.00384283|>, <|
       "n" -> 88, "epoch" -> 1992.7586672431, "residual" -> -0.595059, 
        "phase" -> -95.0452, "error" -> 0.00271168|>, <|
       "n" -> 89, "epoch" -> 1992.7885948208, "residual" -> -1.85679, 
        "phase" -> -297.944, "error" -> 0.00255076|>, <|
       "n" -> 90, "epoch" -> 1992.7913422913, "residual" -> -1.89844, 
        "phase" -> -304.641, "error" -> 0.00415062|>, <|
       "n" -> 91, "epoch" -> 1992.837629624, "residual" -> -0.804781, 
        "phase" -> -128.771, "error" -> 0.00431506|>, <|
       "n" -> 92, "epoch" -> 1992.8403784481, "residual" -> -0.68503, 
        "phase" -> -109.513, "error" -> 0.00235731|>, <|
       "n" -> 93, "epoch" -> 1992.8731207781, "residual" -> 0.49313, "phase" -> 
        79.9462, "error" -> 0.00361793|>, <|
       "n" -> 94, "epoch" -> 1992.8758394374, "residual" -> 0.550665, "phase" -> 
        89.1982, "error" -> 0.00384311|>, <|
       "n" -> 95, "epoch" -> 1992.9166856266, "residual" -> 0.564317, "phase" -> 
        91.3936, "error" -> 0.00444981|>, <|
       "n" -> 96, "epoch" -> 1992.960284242, "residual" -> 0.154039, "phase" -> 
        25.417, "error" -> 0.00426736|>, <|
       "n" -> 97, "epoch" -> 1992.9630151574, "residual" -> 0.17036, "phase" -> 
        28.0415, "error" -> 0.00393564|>, <|
       "n" -> 98, "epoch" -> 1993.0257505433, "residual" -> 1.16419, "phase" -> 
        187.86, "error" -> 0.00461566|>, <|
       "n" -> 99, "epoch" -> 1993.0285142072, "residual" -> 1.17307, "phase" -> 
        189.287, "error" -> 0.00383606|>, <|
       "n" -> 100, "epoch" -> 1993.0858884972, "residual" -> -0.619972, 
        "phase" -> -99.0514, "error" -> 0.00218937|>, <|
       "n" -> 101, "epoch" -> 1993.0886669789, "residual" -> -0.764877, 
        "phase" -> -122.354, "error" -> 0.00394609|>, <|
       "n" -> 102, "epoch" -> 1993.121391818, "residual" -> -2.11591, 
        "phase" -> -339.612, "error" -> 0.00355035|>, <|
       "n" -> 103, "epoch" -> 1993.170602129, "residual" -> -0.76415, 
        "phase" -> -122.237, "error" -> 0.00337862|>, <|
       "n" -> 104, "epoch" -> 1993.1733204071, "residual" -> -0.576337, 
        "phase" -> -92.0344, "error" -> 0.00414793|>, <|
       "n" -> 105, "epoch" -> 1993.2362483846, "residual" -> 2.80614, "phase" -> 
        451.901, "error" -> 0.00400935|>, <|
       "n" -> 106, "epoch" -> 1993.2389006661, "residual" -> 2.80191, "phase" -> 
        451.221, "error" -> 0.00314941|>, <|
       "n" -> 107, "epoch" -> 1993.2689427372, "residual" -> 1.70996, "phase" -> 
        275.624, "error" -> 0.00426958|>, <|
       "n" -> 108, "epoch" -> 1993.2717048084, "residual" -> 1.52628, "phase" -> 
        246.086, "error" -> 0.00346607|>, <|
       "n" -> 109, "epoch" -> 1993.2744120184, "residual" -> 1.34718, "phase" -> 
        217.285, "error" -> 0.00503254|>, <|
       "n" -> 110, "epoch" -> 1993.277158797, "residual" -> 1.15426, "phase" -> 
        186.263, "error" -> 0.00493767|>, <|
       "n" -> 111, "epoch" -> 1993.2798832483, "residual" -> 0.958417, 
        "phase" -> 154.769, "error" -> 0.00506803|>, <|
       "n" -> 112, "epoch" -> 1993.2825965967, "residual" -> 0.752647, 
        "phase" -> 121.679, "error" -> 0.00300516|>, <|
       "n" -> 113, "epoch" -> 1993.2853930777, "residual" -> 0.542753, 
        "phase" -> 87.9259, "error" -> 0.0034442|>, <|
       "n" -> 114, "epoch" -> 1993.2880854311, "residual" -> 0.337932, 
        "phase" -> 54.9887, "error" -> 0.00305631|>, <|
       "n" -> 115, "epoch" -> 1993.2935323926, "residual" -> -0.0750401, 
        "phase" -> -11.4211, "error" -> 0.0029541|>, <|
       "n" -> 116, "epoch" -> 1993.2962406469, "residual" -> -0.274558, 
        "phase" -> -43.5056, "error" -> 0.00240823|>, <|
       "n" -> 117, "epoch" -> 1993.298999314, "residual" -> -0.47054, 
        "phase" -> -75.0213, "error" -> 0.00414849|>, <|
       "n" -> 118, "epoch" -> 1993.3017237313, "residual" -> -0.667524, 
        "phase" -> -106.698, "error" -> 0.00386681|>, <|
       "n" -> 119, "epoch" -> 1993.3044529011, "residual" -> -0.851145, 
        "phase" -> -136.226, "error" -> 0.0039097|>, <|
       "n" -> 120, "epoch" -> 1993.307188662, "residual" -> -1.02325, 
        "phase" -> -163.903, "error" -> 0.00512012|>, <|
       "n" -> 121, "epoch" -> 1993.3126705087, "residual" -> -1.34591, 
        "phase" -> -215.79, "error" -> 0.00198874|>, <|
       "n" -> 122, "epoch" -> 1993.3154018819, "residual" -> -1.48888, 
        "phase" -> -238.78, "error" -> 0.00596932|>, <|
       "n" -> 123, "epoch" -> 1993.3180888591, "residual" -> -1.61345, 
        "phase" -> -258.812, "error" -> 0.00458909|>, <|
       "n" -> 124, "epoch" -> 1993.3208519329, "residual" -> -1.73499, 
        "phase" -> -278.356, "error" -> 0.00295183|>, <|
       "n" -> 125, "epoch" -> 1993.3263010174, "residual" -> -1.91916, 
        "phase" -> -307.973, "error" -> 0.00270185|>, <|
       "n" -> 126, "epoch" -> 1993.3290609087, "residual" -> -1.9923, 
        "phase" -> -319.734, "error" -> 0.00394153|>, <|
       "n" -> 127, "epoch" -> 1993.3318175587, "residual" -> -2.04945, 
        "phase" -> -328.925, "error" -> 0.00280299|>, <|
       "n" -> 128, "epoch" -> 1993.3345530938, "residual" -> -2.09106, 
        "phase" -> -335.617, "error" -> 0.00340661|>, <|
       "n" -> 129, "epoch" -> 1993.3836913831, "residual" -> -0.774774, 
        "phase" -> -123.945, "error" -> 0.00359278|>, <|
       "n" -> 130, "epoch" -> 1993.3864252048, "residual" -> -0.647009, 
        "phase" -> -103.3992, "error" -> 0.00484562|>, <|
       "n" -> 131, "epoch" -> 1993.4301317795, "residual" -> 0.938914, 
        "phase" -> 151.633, "error" -> 0.00450036|>, <|
       "n" -> 132, "epoch" -> 1993.4312026007, "residual" -> 0.951182, 
        "phase" -> 153.605, "error" -> 0.00897471|>, <|
       "n" -> 133, "epoch" -> 1993.4329067828, "residual" -> 0.967501, 
        "phase" -> 156.23, "error" -> 0.00347792|>, <|
       "n" -> 134, "epoch" -> 1993.4793281653, "residual" -> 0.531234, 
        "phase" -> 86.0737, "error" -> 0.00376451|>, <|
       "n" -> 135, "epoch" -> 1993.4820550696, "residual" -> 0.479443, 
        "phase" -> 77.745, "error" -> 0.00419021|>, <|
       "n" -> 136, "epoch" -> 1993.5202770713, "residual" -> 0.222164, 
        "phase" -> 36.3722, "error" -> 0.00475944|>, <|
       "n" -> 137, "epoch" -> 1993.5421364643, "residual" -> 0.516191, 
        "phase" -> 83.6545, "error" -> 0.0028759|>, <|
       "n" -> 138, "epoch" -> 1993.5448600731, "residual" -> 0.560826, 
        "phase" -> 90.8322, "error" -> 0.00467011|>, <|
       "n" -> 139, "epoch" -> 1993.5503268568, "residual" -> 0.649746, 
        "phase" -> 105.1315, "error" -> 0.00389204|>, <|
       "n" -> 140, "epoch" -> 1993.5585156449, "residual" -> 0.771456, 
        "phase" -> 124.704, "error" -> 0.00298269|>, <|
       "n" -> 141, "epoch" -> 1993.566712558, "residual" -> 0.857604, "phase" -> 
        138.557, "error" -> 0.00411959|>, <|
       "n" -> 142, "epoch" -> 1993.5694745647, "residual" -> 0.87025, "phase" -> 
        140.591, "error" -> 0.00406215|>, <|
       "n" -> 143, "epoch" -> 1993.5721937687, "residual" -> 0.882395, 
        "phase" -> 142.544, "error" -> 0.00303427|>, <|
       "n" -> 144, "epoch" -> 1993.5749649909, "residual" -> 0.889598, 
        "phase" -> 143.702, "error" -> 0.00360905|>, <|
       "n" -> 145, "epoch" -> 1993.5804430263, "residual" -> 0.873126, 
        "phase" -> 141.053, "error" -> 0.00357951|>, <|
       "n" -> 146, "epoch" -> 1993.5858400493, "residual" -> 0.832191, 
        "phase" -> 134.47, "error" -> 0.00351089|>, <|
       "n" -> 147, "epoch" -> 1993.5885955955, "residual" -> 0.800181, 
        "phase" -> 129.323, "error" -> 0.00344621|>, <|
       "n" -> 148, "epoch" -> 1993.5913972534, "residual" -> 0.757595, 
        "phase" -> 122.475, "error" -> 0.00329937|>, <|
       "n" -> 149, "epoch" -> 1993.5940362548, "residual" -> 0.708435, 
        "phase" -> 114.569, "error" -> 0.00473692|>, <|
       "n" -> 150, "epoch" -> 1993.5967637217, "residual" -> 0.654172, 
        "phase" -> 105.843, "error" -> 0.00399648|>, <|
       "n" -> 151, "epoch" -> 1993.5995171914, "residual" -> 0.585253, 
        "phase" -> 94.7604, "error" -> 0.00291019|>, <|
       "n" -> 152, "epoch" -> 1993.6022684441, "residual" -> 0.513836, 
        "phase" -> 83.2759, "error" -> 0.00596982|>, <|
       "n" -> 153, "epoch" -> 1993.6049613576, "residual" -> 0.43218, "phase" -> 
        70.1447, "error" -> 0.00344488|>, <|
       "n" -> 154, "epoch" -> 1993.6077461201, "residual" -> 0.345518, 
        "phase" -> 56.2087, "error" -> 0.00292049|>, <|
       "n" -> 155, "epoch" -> 1993.6240958356, "residual" -> -0.303461, 
        "phase" -> -48.1535, "error" -> 0.00396231|>, <|
       "n" -> 156, "epoch" -> 1993.6269166459, "residual" -> -0.430591, 
        "phase" -> -68.5972, "error" -> 0.00456491|>, <|
       "n" -> 157, "epoch" -> 1993.6323126734, "residual" -> -0.679269, 
        "phase" -> -108.587, "error" -> 0.00438878|>, <|
       "n" -> 158, "epoch" -> 1993.6350227406, "residual" -> -0.809463, 
        "phase" -> -129.523, "error" -> 0.00432945|>, <|
       "n" -> 159, "epoch" -> 1993.6377838609, "residual" -> -0.929009, 
        "phase" -> -148.748, "error" -> 0.00406611|>, <|
       "n" -> 160, "epoch" -> 1993.6404940856, "residual" -> -1.05495, 
        "phase" -> -169., "error" -> 0.00361267|>, <|
       "n" -> 161, "epoch" -> 1993.6432340993, "residual" -> -1.18237, 
        "phase" -> -189.49, "error" -> 0.00348601|>, <|
       "n" -> 162, "epoch" -> 1993.6459646083, "residual" -> -1.30095, 
        "phase" -> -208.559, "error" -> 0.00518006|>, <|
       "n" -> 163, "epoch" -> 1993.6514417119, "residual" -> -1.5187, 
        "phase" -> -243.576, "error" -> 0.0039609|>, <|
       "n" -> 164, "epoch" -> 1993.654143143, "residual" -> -1.6279, 
        "phase" -> -261.137, "error" -> 0.00501629|>, <|
       "n" -> 165, "epoch" -> 1993.6568900622, "residual" -> -1.70974, 
        "phase" -> -274.296, "error" -> 0.00604314|>, <|
       "n" -> 166, "epoch" -> 1993.6596236717, "residual" -> -1.79757, 
        "phase" -> -288.421, "error" -> 0.00381171|>, <|
       "n" -> 167, "epoch" -> 1993.6623588277, "residual" -> -1.87084, 
        "phase" -> -300.203, "error" -> 0.00540518|>, <|
       "n" -> 168, "epoch" -> 1993.665099383, "residual" -> -1.93, 
        "phase" -> -309.717, "error" -> 0.00388641|>, <|
       "n" -> 169, "epoch" -> 1993.7142594936, "residual" -> -0.703003, 
        "phase" -> -112.404, "error" -> 0.00282368|>, <|
       "n" -> 170, "epoch" -> 1993.7170115586, "residual" -> -0.515862, 
        "phase" -> -82.3096, "error" -> 0.00616035|>, <|
       "n" -> 171, "epoch" -> 1993.7608615065, "residual" -> 2.36768, "phase" -> 
        381.392, "error" -> 0.00522218|>, <|
       "n" -> 172, "epoch" -> 1993.7634240634, "residual" -> 2.46275, "phase" -> 
        396.68, "error" -> 0.00317729|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "n"} -> 1, {All, "epoch"} -> 
        1, {All, "residual"} -> 1, {All, "phase"} -> 1, {All, "error"} -> 1|>,
        
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "n" -> TypeSystem`PackageScope`AtomShape[34], "epoch" -> 
            TypeSystem`PackageScope`AtomShape[60], "residual" -> 
            TypeSystem`PackageScope`AtomShape[60], "phase" -> 
            TypeSystem`PackageScope`AtomShape[60], "error" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 5, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"n", "epoch", "residual", "phase", "error"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 172], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "n"} -> 1, {All, "epoch"} -> 
        1, {All, "residual"} -> 1, {All, "phase"} -> 1, {All, "error"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "n" -> TypeSystem`PackageScope`AtomShape[34], "epoch" -> 
            TypeSystem`PackageScope`AtomShape[60], "residual" -> 
            TypeSystem`PackageScope`AtomShape[60], "phase" -> 
            TypeSystem`PackageScope`AtomShape[60], "error" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 5, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"n", "epoch", "residual", "phase", "error"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 172], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 5, "DataRowCount" -> 172, 
     "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["epoch", 
                  Style[
                  "epoch", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "epoch"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "epoch"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["residual", 
                  Style[
                  "residual", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "residual"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "residual"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["phase", 
                  Style[
                  "phase", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "phase"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "phase"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "error"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "error"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1990.69"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0188495"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-2.38513"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00374001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1990.72"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.335115"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-53.2436"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00406533"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1990.73"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.52507"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-83.7903"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00361276"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1990.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.257191"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["42.0048"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0033555"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1990.85"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.15298"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["346.865"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0030225"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1990.86"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.10726"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["339.513"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00405043"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1990.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-2.59551"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-416.737"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00429112"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1990.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-2.62171"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-420.951"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00426934"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1990.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-2.32315"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-372.939"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00356533"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1990.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-2.22064"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-356.454"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00367144"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1991.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.568935"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-90.8442"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00496769"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1991.22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.150349"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-23.5316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00501596"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1991.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.488403"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-77.8939"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00509022"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1991.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.494481"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-78.8713"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00554574"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1991.31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.469674"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-74.8821"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00370191"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1991.39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.94947"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["314.14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00295921"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1991.39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.97185"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["317.738"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00415883"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1991.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0107999"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.38279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00474497"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1991.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0066815"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.72051"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00559556"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1991.55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["epoch"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0770058"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["residual"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-11.7372"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["phase"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00528773"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 172, 1], {1, 172 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 172, 1], {1, 172 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[172, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[172, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 172, 1], {1, 172 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 172, 1], {1, 172 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       346.4152413194444, {286.50005700683596`, 293.73247888183596`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      346.4152413194444, {286.50005700683596`, 293.73247888183596`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[36]=",
 CellID->649567894,ExpressionUUID->"d9de6b24-5406-447b-a3e3-e93c8788bf36"]
}, Open  ]],

Cell[TextData[{
 " Use ",
 ButtonBox["Key",
  BaseStyle->"Link"],
 "s to ",
 ButtonBox["ListPlot",
  BaseStyle->"Link"],
 " the ",
 StyleBox["residual",
  FontSlant->"Italic"],
 " versus ",
 StyleBox["epoch",
  FontSlant->"Italic"],
 ": "
}], "CodeText",
 CellID->1076366161,ExpressionUUID->"2c0ad3be-0a13-4abb-9c4b-ce7af43b4d18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "[", 
  RowBox[{"ListPlot", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<epoch\>\"", ",", "\"\<residual\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[37]:=",
 CellID->83825599,ExpressionUUID->"7394376f-ef79-46f5-bac1-24e66502f2a0"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], PointBox[CompressedData["

1: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

         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Point[CompressedData["
1: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

              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{1990.6229292872795`, 1993.7634240634}, {-2.62171,
              2.80614}}, "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {1990.6229292872795`, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{1990.6229292872795`, 1993.7634240634}, {-2.62171, 
            2.80614}}, "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {1990.6229292872795`, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1: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

          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{1990.6229292872795`, 1993.7634240634}, {-2.62171, 
         2.80614}}, "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {1990.6229292872795`, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1990.6229292872795`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{1990.6229292872795`, 1993.7634240634}, {-2.62171, 2.80614}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[37]=",
 CellID->1628216757,ExpressionUUID->"c362a924-5c77-4a2d-919f-620622efe16c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["EventSeries", "Subsection",
 CellID->1894587400,ExpressionUUID->"53d7de91-8bae-47f9-8277-5fa314e6a1d4"],

Cell[TextData[{
 "One can also turn the structured ",
 ButtonBox["Dataset",
  BaseStyle->"Link"],
 " into an ",
 ButtonBox["EventSeries",
  BaseStyle->"Link"],
 ": "
}], "CodeText",
 CellID->1590397731,ExpressionUUID->"8f71f078-25a9-4913-803b-a86612420ecf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"events", "=", 
  RowBox[{"EventSeries", "@", 
   RowBox[{"Normal", "@", 
    RowBox[{"dataset", "[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<epoch\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<residual\>\"", ",", "\"\<phase\>\""}], "}"}]}], "}"}]}],
      "]"}]}]}]}]], "Input",
 CellLabel->"In[38]:=",
 CellID->85710708,ExpressionUUID->"1969b396-1224-467a-bd03-857698e2f82f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["EventSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, 
              
              GraphicsComplexBox[{{1., 1.0786974808168008`}, {2., 
               0.8225923764690866}, {3., 1.2351515192384148`}, {4., 
               2.175007457486014}, {5., 2.2418867917949643`}, {1., 0.}, {2., 
               0.}, {3., 0.}, {4., 0.}, {5., 0.}, {1., 1.0786974808168008`}, {
               2., 0.8225923764690866}, {3., 1.2351515192384148`}, {4., 
               2.175007457486014}, {5., 
               2.2418867917949643`}}, {{{}, {}, {}, {}, {
                  GrayLevel[0.5], 
                  PointSize[0.125], 
                  AbsoluteThickness[1.6], 
                  Opacity[0.5], 
                  LineBox[{6, 1}], 
                  LineBox[{7, 2}], 
                  LineBox[{8, 3}], 
                  LineBox[{9, 4}], 
                  LineBox[{10, 5}]}}, {{}, {
                  GrayLevel[0.5], 
                  PointSize[0.125], 
                  AbsoluteThickness[1.6], 
                  PointBox[{11, 12, 13, 14, 15}]}, {}}}], {}}, AspectRatio -> 
             1, Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.32700000000000007`, 0.136688848545716}, 
             Background -> GrayLevel[0.93], DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> {
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.880722, 0.611041, 0.142051]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.560181, 0.691569, 0.194885]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.922526, 0.385626, 0.209179]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.528488, 0.470624, 0.701351]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.772079, 0.431554, 0.102387]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.363898, 0.618501, 0.782349]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0.75, 0]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.647624, 0.37816, 0.614037]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.571589, 0.586483, 0.]]}, "RangePadding" -> 
               Scaled[0.1]}, 
             PlotRange -> {{1., 5.}, {0.8225923764690866, 
              2.2418867917949643`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1990.6870210174`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1993.7634240634`", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["172", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, 
              
              GraphicsComplexBox[{{1., 1.0786974808168008`}, {2., 
               0.8225923764690866}, {3., 1.2351515192384148`}, {4., 
               2.175007457486014}, {5., 2.2418867917949643`}, {1., 0.}, {2., 
               0.}, {3., 0.}, {4., 0.}, {5., 0.}, {1., 1.0786974808168008`}, {
               2., 0.8225923764690866}, {3., 1.2351515192384148`}, {4., 
               2.175007457486014}, {5., 
               2.2418867917949643`}}, {{{}, {}, {}, {}, {
                  GrayLevel[0.5], 
                  PointSize[0.125], 
                  AbsoluteThickness[1.6], 
                  Opacity[0.5], 
                  LineBox[{6, 1}], 
                  LineBox[{7, 2}], 
                  LineBox[{8, 3}], 
                  LineBox[{9, 4}], 
                  LineBox[{10, 5}]}}, {{}, {
                  GrayLevel[0.5], 
                  PointSize[0.125], 
                  AbsoluteThickness[1.6], 
                  PointBox[{11, 12, 13, 14, 15}]}, {}}}], {}}, AspectRatio -> 
             1, Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.32700000000000007`, 0.136688848545716}, 
             Background -> GrayLevel[0.93], DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> {
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.880722, 0.611041, 0.142051]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.560181, 0.691569, 0.194885]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.922526, 0.385626, 0.209179]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.528488, 0.470624, 0.701351]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.772079, 0.431554, 0.102387]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.363898, 0.618501, 0.782349]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0.75, 0]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.647624, 0.37816, 0.614037]], 
                 Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0.571589, 0.586483, 0.]]}, "RangePadding" -> 
               Scaled[0.1]}, 
             PlotRange -> {{1., 5.}, {0.8225923764690866, 
              2.2418867917949643`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1990.6870210174`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1993.7634240634`", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["172", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.00008415930005867267`", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[
  EventSeries, {{{<|"residual" -> -0.0188495, "phase" -> -2.38513|>, <|
      "residual" -> -0.335115, "phase" -> -53.2436|>, <|
      "residual" -> -0.52507, "phase" -> -83.7903|>, <|
      "residual" -> 0.257191, "phase" -> 42.0048|>, <|
      "residual" -> 2.15298, "phase" -> 346.865|>, <|
      "residual" -> 2.10726, "phase" -> 339.513|>, <|
      "residual" -> -2.59551, "phase" -> -416.737|>, <|
      "residual" -> -2.62171, "phase" -> -420.951|>, <|
      "residual" -> -2.32315, "phase" -> -372.939|>, <|
      "residual" -> -2.22064, "phase" -> -356.454|>, <|
      "residual" -> -0.568935, "phase" -> -90.8442|>, <|
      "residual" -> -0.150349, "phase" -> -23.5316|>, <|
      "residual" -> -0.488403, "phase" -> -77.8939|>, <|
      "residual" -> -0.494481, "phase" -> -78.8713|>, <|
      "residual" -> -0.469674, "phase" -> -74.8821|>, <|
      "residual" -> 1.94947, "phase" -> 314.14|>, <|
      "residual" -> 1.97185, "phase" -> 317.738|>, <|
      "residual" -> 0.0107999, "phase" -> 2.38279|>, <|
      "residual" -> 0.0066815, "phase" -> 1.72051|>, <|
      "residual" -> -0.0770058, "phase" -> -11.7372|>, <|
      "residual" -> 0.128978, "phase" -> 21.387|>, <|
      "residual" -> 2.46479, "phase" -> 397.008|>, <|
      "residual" -> 2.52511, "phase" -> 406.708|>, <|
      "residual" -> 1.86379, "phase" -> 300.362|>, <|
      "residual" -> -0.689795, "phase" -> -110.28|>, <|
      "residual" -> -0.815304, "phase" -> -130.463|>, <|
      "residual" -> -1.12602, "phase" -> -180.429|>, <|
      "residual" -> -1.37461, "phase" -> -220.405|>, <|
      "residual" -> -1.37764, "phase" -> -220.891|>, <|
      "residual" -> -0.223993, "phase" -> -35.3742|>, <|
      "residual" -> -0.155781, "phase" -> -24.4051|>, <|
      "residual" -> 0.231833, "phase" -> 37.927|>, <|
      "residual" -> 0.218089, "phase" -> 35.7169|>, <|
      "residual" -> 0.19759, "phase" -> 32.4204|>, <|
      "residual" -> 0.02412, "phase" -> 4.52479|>, <|
      "residual" -> -0.0089064, "phase" -> -0.786178|>, <|
      "residual" -> -0.22583, "phase" -> -35.6696|>, <|
      "residual" -> -0.222086, "phase" -> -35.0676|>, <|
      "residual" -> -0.150962, "phase" -> -23.6301|>, <|
      "residual" -> 0.176626, "phase" -> 29.0493|>, <|
      "residual" -> 0.253788, "phase" -> 41.4577|>, <|
      "residual" -> 1.07285, "phase" -> 173.17|>, <|
      "residual" -> 1.16397, "phase" -> 187.824|>, <|
      "residual" -> 1.24854, "phase" -> 201.424|>, <|
      "residual" -> 1.40647, "phase" -> 226.819|>, <|
      "residual" -> 1.46948, "phase" -> 236.952|>, <|
      "residual" -> 1.15017, "phase" -> 185.605|>, <|
      "residual" -> -0.019696, "phase" -> -2.52125|>, <|
      "residual" -> -1.89477, "phase" -> -304.052|>, <|
      "residual" -> 1.7299, "phase" -> 278.83|>, <|
      "residual" -> 2.39416, "phase" -> 385.65|>, <|
      "residual" -> 2.67063, "phase" -> 430.109|>, <|
      "residual" -> 2.63692, "phase" -> 424.688|>, <|
      "residual" -> 1.47038, "phase" -> 237.097|>, <|
      "residual" -> 1.12811, "phase" -> 182.057|>, <|
      "residual" -> 0.939938, "phase" -> 151.797|>, <|
      "residual" -> -1.63623, "phase" -> -262.475|>, <|
      "residual" -> -0.571845, "phase" -> -91.3122|>, <|
      "residual" -> -0.467178, "phase" -> -74.4807|>, <|
      "residual" -> -0.370373, "phase" -> -58.9136|>, <|
      "residual" -> -0.27104, "phase" -> -42.9398|>, <|
      "residual" -> -0.185139, "phase" -> -29.1261|>, <|
      "residual" -> -0.100059, "phase" -> -15.4443|>, <|
      "residual" -> -0.0191635, "phase" -> -2.43562|>, <|
      "residual" -> 0.0613637, "phase" -> 10.51394|>, <|
      "residual" -> 0.135984, "phase" -> 22.5137|>, <|
      "residual" -> 0.193437, "phase" -> 31.7526|>, <|
      "residual" -> 0.262972, "phase" -> 42.9345|>, <|
      "residual" -> 0.3573, "phase" -> 58.1034|>, <|
      "residual" -> 0.386537, "phase" -> 62.805|>, <|
      "residual" -> 0.108196, "phase" -> 18.045|>, <|
      "residual" -> 0.0782136, "phase" -> 13.2236|>, <|
      "residual" -> 0.0979297, "phase" -> 16.3941|>, <|
      "residual" -> 0.116686, "phase" -> 19.4103|>, <|
      "residual" -> 0.139112, "phase" -> 23.0166|>, <|
      "residual" -> 1.2944, "phase" -> 208.799|>, <|
      "residual" -> 1.23173, "phase" -> 198.721|>, <|
      "residual" -> -1.44589, "phase" -> -231.868|>, <|
      "residual" -> -1.58387, "phase" -> -254.055|>, <|
      "residual" -> -2.143, "phase" -> -343.969|>, <|
      "residual" -> -2.21118, "phase" -> -354.933|>, <|
      "residual" -> 1.77407, "phase" -> 285.933|>, <|
      "residual" -> 1.93837, "phase" -> 312.355|>, <|
      "residual" -> 2.01038, "phase" -> 323.934|>, <|
      "residual" -> 1.85777, "phase" -> 299.393|>, <|
      "residual" -> -0.0428941, "phase" -> -6.25172|>, <|
      "residual" -> -0.405188, "phase" -> -64.5121|>, <|
      "residual" -> -0.595059, "phase" -> -95.0452|>, <|
      "residual" -> -1.85679, "phase" -> -297.944|>, <|
      "residual" -> -1.89844, "phase" -> -304.641|>, <|
      "residual" -> -0.804781, "phase" -> -128.771|>, <|
      "residual" -> -0.68503, "phase" -> -109.513|>, <|
      "residual" -> 0.49313, "phase" -> 79.9462|>, <|
      "residual" -> 0.550665, "phase" -> 89.1982|>, <|
      "residual" -> 0.564317, "phase" -> 91.3936|>, <|
      "residual" -> 0.154039, "phase" -> 25.417|>, <|
      "residual" -> 0.17036, "phase" -> 28.0415|>, <|
      "residual" -> 1.16419, "phase" -> 187.86|>, <|
      "residual" -> 1.17307, "phase" -> 189.287|>, <|
      "residual" -> -0.619972, "phase" -> -99.0514|>, <|
      "residual" -> -0.764877, "phase" -> -122.354|>, <|
      "residual" -> -2.11591, "phase" -> -339.612|>, <|
      "residual" -> -0.76415, "phase" -> -122.237|>, <|
      "residual" -> -0.576337, "phase" -> -92.0344|>, <|
      "residual" -> 2.80614, "phase" -> 451.901|>, <|
      "residual" -> 2.80191, "phase" -> 451.221|>, <|
      "residual" -> 1.70996, "phase" -> 275.624|>, <|
      "residual" -> 1.52628, "phase" -> 246.086|>, <|
      "residual" -> 1.34718, "phase" -> 217.285|>, <|
      "residual" -> 1.15426, "phase" -> 186.263|>, <|
      "residual" -> 0.958417, "phase" -> 154.769|>, <|
      "residual" -> 0.752647, "phase" -> 121.679|>, <|
      "residual" -> 0.542753, "phase" -> 87.9259|>, <|
      "residual" -> 0.337932, "phase" -> 54.9887|>, <|
      "residual" -> -0.0750401, "phase" -> -11.4211|>, <|
      "residual" -> -0.274558, "phase" -> -43.5056|>, <|
      "residual" -> -0.47054, "phase" -> -75.0213|>, <|
      "residual" -> -0.667524, "phase" -> -106.698|>, <|
      "residual" -> -0.851145, "phase" -> -136.226|>, <|
      "residual" -> -1.02325, "phase" -> -163.903|>, <|
      "residual" -> -1.34591, "phase" -> -215.79|>, <|
      "residual" -> -1.48888, "phase" -> -238.78|>, <|
      "residual" -> -1.61345, "phase" -> -258.812|>, <|
      "residual" -> -1.73499, "phase" -> -278.356|>, <|
      "residual" -> -1.91916, "phase" -> -307.973|>, <|
      "residual" -> -1.9923, "phase" -> -319.734|>, <|
      "residual" -> -2.04945, "phase" -> -328.925|>, <|
      "residual" -> -2.09106, "phase" -> -335.617|>, <|
      "residual" -> -0.774774, "phase" -> -123.945|>, <|
      "residual" -> -0.647009, "phase" -> -103.3992|>, <|
      "residual" -> 0.938914, "phase" -> 151.633|>, <|
      "residual" -> 0.951182, "phase" -> 153.605|>, <|
      "residual" -> 0.967501, "phase" -> 156.23|>, <|
      "residual" -> 0.531234, "phase" -> 86.0737|>, <|
      "residual" -> 0.479443, "phase" -> 77.745|>, <|
      "residual" -> 0.222164, "phase" -> 36.3722|>, <|
      "residual" -> 0.516191, "phase" -> 83.6545|>, <|
      "residual" -> 0.560826, "phase" -> 90.8322|>, <|
      "residual" -> 0.649746, "phase" -> 105.1315|>, <|
      "residual" -> 0.771456, "phase" -> 124.704|>, <|
      "residual" -> 0.857604, "phase" -> 138.557|>, <|
      "residual" -> 0.87025, "phase" -> 140.591|>, <|
      "residual" -> 0.882395, "phase" -> 142.544|>, <|
      "residual" -> 0.889598, "phase" -> 143.702|>, <|
      "residual" -> 0.873126, "phase" -> 141.053|>, <|
      "residual" -> 0.832191, "phase" -> 134.47|>, <|
      "residual" -> 0.800181, "phase" -> 129.323|>, <|
      "residual" -> 0.757595, "phase" -> 122.475|>, <|
      "residual" -> 0.708435, "phase" -> 114.569|>, <|
      "residual" -> 0.654172, "phase" -> 105.843|>, <|
      "residual" -> 0.585253, "phase" -> 94.7604|>, <|
      "residual" -> 0.513836, "phase" -> 83.2759|>, <|
      "residual" -> 0.43218, "phase" -> 70.1447|>, <|
      "residual" -> 0.345518, "phase" -> 56.2087|>, <|
      "residual" -> -0.303461, "phase" -> -48.1535|>, <|
      "residual" -> -0.430591, "phase" -> -68.5972|>, <|
      "residual" -> -0.679269, "phase" -> -108.587|>, <|
      "residual" -> -0.809463, "phase" -> -129.523|>, <|
      "residual" -> -0.929009, "phase" -> -148.748|>, <|
      "residual" -> -1.05495, "phase" -> -169.|>, <|
      "residual" -> -1.18237, "phase" -> -189.49|>, <|
      "residual" -> -1.30095, "phase" -> -208.559|>, <|
      "residual" -> -1.5187, "phase" -> -243.576|>, <|
      "residual" -> -1.6279, "phase" -> -261.137|>, <|
      "residual" -> -1.70974, "phase" -> -274.296|>, <|
      "residual" -> -1.79757, "phase" -> -288.421|>, <|
      "residual" -> -1.87084, "phase" -> -300.203|>, <|
      "residual" -> -1.93, "phase" -> -309.717|>, <|
      "residual" -> -0.703003, "phase" -> -112.404|>, <|
      "residual" -> -0.515862, "phase" -> -82.3096|>, <|
      "residual" -> 2.36768, "phase" -> 381.392|>, <|
      "residual" -> 2.46275, "phase" -> 396.68|>}}, CompressedData["
1:eJwtz30w1AkYB/Ct9kLZ2iFUkl0ss6yhTdiN86uIs1nGy+2RvFui81JOzrnU
JXm5PeXlDHV+jrwWifOyuNveZLYiNeQlFnXk6GVcb46rve/O3B/PfGaeeV6Z
YfHekWsoFMqq/+MKovizhB9kW0miedJIdxpq6Y6JXsCIYvevrfRJor6a1RsK
t4jOXjwK922Zm++H2bzSGw/hwU/GATMwjCEzm4Pelc6Svm0k4cxKMp2GPcsV
hrsMSCL2rvaEHYw3Eic7wvxp29jzsLN0xqkQlrF5LnIYpnQ7qDJqfDHRdjtJ
uLcl2/LgSLCheTgc5GzZIIZtIXFBOdBarUGtHdaX2CqkULHNd89NeNnMM64P
jmV9T52Gd49EymmGJOFBiyugw5v7T761gYYdggk7aDb/SsqHCcfEIgHklrIt
hfAJW+gTBR3PH2PEwOS6Uc9v4PaFQp1MaFR0S5EFp07s06uA9M43U5egJm+x
vQZqzJs6NsAs6xbNJjhPZ5dNwpD+67T3cDJmmerKIIlDT1lqaVCdMfs8G57a
WedaDhdm1bQqYfWDAh0ZpHDvp9+Gd/ruCXuhXCOaSWOSxB8mHik74JiVv4sN
LFe66dnB8QiLZzw4MKRZ6wC/Pbf6qBPsKv7JbS98n7JnrQu8p6jtd4VzPZsq
3KGFeCLeA+am//XJG36kyi/4wbDfL3XnQD1ZX4YEluyWaF6BDbtvsxqgiTd7
thHeIS3vKmEG17NstRFJFDC6j/Fh9Yu/eY7Q+nWUjQD+9pBKFcKI9ou8GtjJ
HaLUw8WvdvVMw9789Lw/4QaBZSnFmCRe64dvXAurHtOn1GFmofiMGfSwqfAz
hx8yCrv84eEV8x8DYbEkWPsE7GiijZ+Ew+srr9ZDasl132Eo4lcxxqBXq3/Q
VhOSKKINcg2gMNXsjQgm8jPuBUCnVcbCNNil5dPcCGfKn6deg4FtmxcWYb5n
SMVbqFMgjdRmkcSyupynC399lKzcDGvXZDzQhz+PtJVsh6YFlFAmnHPQ+dwE
GlAVSlNoFHOjgAM73Vr9rWD5gSkOFyaO0j/YqPr9Tt60g0vG9Xl8yK5q5hAw
Ttm6tBfy/9WRuqj2dUZL3GBOyRhTCDV6RO+84JHYlV4f1Rwt3aIvYdNIxGwW
nDit2ZILr+kdT+qAg1c5EikMPjwv6IL0WsrQPLTVHyFfwiD707c2mZKEhHjE
soCJufdfW0Jn66dZO2FJUubCbhi8IvByhmwDkYkrNO9nv/wCrg8lbx1Q1W2r
DfaG0h1JsyK4dLuvIwBajzoWH4JUh3WCEHguQU03HA7UDT2PhO76G6XRcDHl
Y2osjOpQ+sbBZ5JlrXT4+GX8+1NQbPNP2lkY0i3elwNfhdrqSWD3d40TebCu
6d3lfKirKTtepPrDKVv7Agywbxn+BSpG5DXlMHV/eFIlvJEWsacaeqwb2Fin
ytsNi5+o/uK42itU9wW6Gq43IwlmlYaMBv8D3z9Kwg==
    "], 1, {"Discrete", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> None, ValueDimensions -> 1}}, False, 14.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[38]=",
 CellID->593429452,ExpressionUUID->"a40c3039-abc7-4e70-9939-d085191ddb81"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Time Series", "Subsection",
 CellID->2041193480,ExpressionUUID->"e0b6b4b0-7540-49ee-90a8-4f963df4403b"],

Cell[TextData[{
 StyleBox["Create a ",
  FontSlant->"Plain"],
 ButtonBox["TimeSeries",
  BaseStyle->"Link"],
 StyleBox[" from the ",
  FontSlant->"Plain"],
 StyleBox["residual",
  FontSlant->"Italic"],
 StyleBox[" (in ms), versus the ",
  FontSlant->"Plain"],
 StyleBox["epoch",
  FontSlant->"Italic"],
 StyleBox[", (time in decimal years, minus 1990):",
  FontSlant->"Plain"]
}], "CodeText",
 CellID->287557535,ExpressionUUID->"781beb6c-cfd8-4420-b47d-4720e729c7c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ts", "=", 
  RowBox[{"TimeSeries", "[", 
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"dataset", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "\"\<residual\>\""}], "\[RightDoubleBracket]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Normal", "@", 
       RowBox[{"dataset", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "\"\<epoch\>\""}], "\[RightDoubleBracket]"}]}], 
      "-", "1990"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[39]:=",
 CellID->1141284995,ExpressionUUID->"2a3106a1-e304-4aab-8242-1583109c501d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAdx4rnBP85T+gPldIak2Tv3H6BmHp
luc//S3FMe683L9oZOrLTVTpP7mh98+Kn8k/XPguRi706j831w7NSD4AQE2C
YVfmi+w/mFxRhjAY4T87mpsOLUbuP9qEY3heQgLAJtw21e/i7z+AyvBx05kA
wAfW7KAg0fA/EVDr5ZvC+r/5OLUitazxP1w+n9qjb/S/6jAurId58j+YZ+u6
9RLtv9nvqoihV/M/DP9MF2z92L/HQ9hs+Sb0P3p+97bBFNS/s5J8HD3y9D8q
+1EmrVDev56oJB/IzvU/sHlwRfl88T+HU30pkZz2P55FOl6aXvQ/b8XZhqF7
9z8obdhNAy2Ev1Uyra+dVvg/qcj+RxiMqr86NDHg1yL5P3aA7WuJve8/Hf24
Y1kA+j+S54qogmgAQP9a8e4Yz/o/Dn+OAuId4L/ffy3NH6/7PxZB4VW8mvG/
vp/gdhKL/D8YeWZvsXujP5tURChDWP0/Jn7/vU2zs7920Kssuzb+P9qYu0vG
Pto/UOHDOHEG/z/h+Vw5JqD1PyjtUhAT0v8/yn6j7Pvlrj//33IdflcAQHqc
IHDiNfS/6pOUtpG+AEBoThNDOybOv1QrOPlILgFA0XNz1DZ2BEA9QJch9psB
QCLhtPkSM+Y/pZ/OTUICAkAQdpnGVxjzv43ihyMycQJAiy587yhH1L/0bxn9
wNgCQHOukRyrGtE/2npmvEU+A0CZBM48a++2Pz9pNSVurANAHz2NPYpr5j8k
otyRNRMEQPhiWOiwsew/iL4FqKCCBEAfu8OkNfX7v2slB8Kq6gRAkJYy3GAa
3b/NCcTBqlAFQEvjm8AYb/0/r9ECa06/BUDCZ8PJqA8AQBDkGRiRJgZAqBIi
IZFg8L/w2bJud5YGQKDfEey7OvK/T00Hq1MEB0ADczOuiKLhPy4LNOvOagdA
qH8MAQDQ3T+MrOLU7dkHQOJm9qW2jd0/aZhpwqtBCEDDwlJuQf7wP8UBrJVf
pwhAnktcDfFZ37+gTnAStxUJQN5YseDPm/u/++UMk618CUDga0jzIUG5P9Vg
K71H7AlAoGMJd9j8BUAuWQXN11kKQC4uOEw+jbm/Bpy34AbACkDknPaacoL9
v17C653ZLgtAQKspBxSizb81M/heS5YLQLGF6hgOTuo/i4eGyWAGDEDDfA8a
tZzVP2BZ0BlsdAxA4jW/+JLk5z+1dfJtFtsMQDYDlR9wpdc/iXWWa2RKDUAq
2Pfuc339v9y/Em1Rsg1A4uzMR84+6L9iqEoMfhsOQA4I/kG1swNA8gHc7g==

                   "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0.6870210173999582, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0.6870210173999567, 0}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0.6870210173999567, 
               3.7634240633999525`}, {-2.2824067502375387`, 
               2.748459749197039}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.6870210173999567`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3.7634240633999525`", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["172", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAdx4rnBP85T+gPldIak2Tv3H6BmHp
luc//S3FMe683L9oZOrLTVTpP7mh98+Kn8k/XPguRi706j831w7NSD4AQE2C
YVfmi+w/mFxRhjAY4T87mpsOLUbuP9qEY3heQgLAJtw21e/i7z+AyvBx05kA
wAfW7KAg0fA/EVDr5ZvC+r/5OLUitazxP1w+n9qjb/S/6jAurId58j+YZ+u6
9RLtv9nvqoihV/M/DP9MF2z92L/HQ9hs+Sb0P3p+97bBFNS/s5J8HD3y9D8q
+1EmrVDev56oJB/IzvU/sHlwRfl88T+HU30pkZz2P55FOl6aXvQ/b8XZhqF7
9z8obdhNAy2Ev1Uyra+dVvg/qcj+RxiMqr86NDHg1yL5P3aA7WuJve8/Hf24
Y1kA+j+S54qogmgAQP9a8e4Yz/o/Dn+OAuId4L/ffy3NH6/7PxZB4VW8mvG/
vp/gdhKL/D8YeWZvsXujP5tURChDWP0/Jn7/vU2zs7920Kssuzb+P9qYu0vG
Pto/UOHDOHEG/z/h+Vw5JqD1PyjtUhAT0v8/yn6j7Pvlrj//33IdflcAQHqc
IHDiNfS/6pOUtpG+AEBoThNDOybOv1QrOPlILgFA0XNz1DZ2BEA9QJch9psB
QCLhtPkSM+Y/pZ/OTUICAkAQdpnGVxjzv43ihyMycQJAiy587yhH1L/0bxn9
wNgCQHOukRyrGtE/2npmvEU+A0CZBM48a++2Pz9pNSVurANAHz2NPYpr5j8k
otyRNRMEQPhiWOiwsew/iL4FqKCCBEAfu8OkNfX7v2slB8Kq6gRAkJYy3GAa
3b/NCcTBqlAFQEvjm8AYb/0/r9ECa06/BUDCZ8PJqA8AQBDkGRiRJgZAqBIi
IZFg8L/w2bJud5YGQKDfEey7OvK/T00Hq1MEB0ADczOuiKLhPy4LNOvOagdA
qH8MAQDQ3T+MrOLU7dkHQOJm9qW2jd0/aZhpwqtBCEDDwlJuQf7wP8UBrJVf
pwhAnktcDfFZ37+gTnAStxUJQN5YseDPm/u/++UMk618CUDga0jzIUG5P9Vg
K71H7AlAoGMJd9j8BUAuWQXN11kKQC4uOEw+jbm/Bpy34AbACkDknPaacoL9
v17C653ZLgtAQKspBxSizb81M/heS5YLQLGF6hgOTuo/i4eGyWAGDEDDfA8a
tZzVP2BZ0BlsdAxA4jW/+JLk5z+1dfJtFtsMQDYDlR9wpdc/iXWWa2RKDUAq
2Pfuc339v9y/Em1Rsg1A4uzMR84+6L9iqEoMfhsOQA4I/kG1swNA8gHc7g==

                   "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0.6870210173999582, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0.6870210173999567, 0}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0.6870210173999567, 
               3.7634240633999525`}, {-2.2824067502375387`, 
               2.748459749197039}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.6870210173999567`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3.7634240633999525`", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["172", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.00008415930005867267`", "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1:eJwtknlUDAgcgKfMREmUjimxRovtsMkVm+k3xiKkCK+alhwpqVC5PYZ0U4ua
HG06KNV06D7QbzRJMh3jiMQcpXtkmtQ0HTPbe7t/fP9/73sf5dAJlyPqBAJB
bYqcKWbqWEc67IhDYZS7dXjQByRd597zbBAh68MpKv90MxyMmh6/Y50abQbj
KoXdRqAZRqzE+1wiR1qTY7RRQeSEPmjIbmKpcxTXrnYLuGqctDu7rMpWteMa
UL5Ns+diqqVupnKDEM/HCdPi0oVoTgyKMpstwKyIo6em26igQNzLKryhAufr
3lr0BeEwym1izt5/EU7Y3JdmlBYhM31I7B7CAZ05PH5H2TRaut8Sof9KIs24
PuqMwdtJENpWjfD0utAwSvPYqGEfOm2yuLGMKMM8PSsdH+Uw0ln3qc1aIzix
puZcA5uHjK2WValSLlaTb/1WnNMAFJIzxbXvDdAp6jqp216D0fsyXm/hXdiu
5L0MpYZgxe4/3FTdPDxACT6yM4CH083PaVW4cNGirmlzXmItKK9M15hj3wwl
tqPVXhaD8M27XC05WQZL5Xb6pLEhqBXz8ruujIA/sf30ZIgchgIDMsk+Mthd
HGS93DIe5+nJ3cZ2KpGauDeZnTsOU5U9qEun0RhPv9OD95Fo5W67rvmSSTRv
/TfLcsPlsCjjT73n2jKIu+nQNjp3AN5UWYaolo2h2Yqc9hjHdix1+Bxj3/UV
h27F/1xe/BFnmYwtLXfjo57vPGZa4SuMeMg+dTapAlOi55XdTY7DfWUuxnP8
8kFSdficxOcFsGb5WVyvroNMkTQk8n0zuBuV8QmCFij19c8nPf8EZp9js54W
PoWba03ONJKKISKpsbJftwIS2V3rFgmfg1cCVdO/8QXo6UPtl5KfEDZjbahF
yRBkNJ+P2bdIjpatBbqRrgqsSjax/vqrGqcjhmfGfKLGIWsGrLtzaAIeVX+i
35ymgjA60ZRuQKCVthhpBlRMgrHioLntSDq6vPs9495AKzqQNawqtDrQ+qHb
cd+SSTQtMExWP6BEpyXHDWo4vZgg+TSjpr8Tg7ezKYF/CyEn88Uq7WQxHD0d
FN6u0w6elx+/vlHGhbzhTXSPxpeQ7RBWEJYiA/2i/dqdNTJgDM4Ka2rpwNiG
2D3C8z1IWf957aHvBI4ixaeoL7gHLW2atjEC27F6DCIUQRo0fh693vmYBo11
yZWo8hiHDcl1cY/8RsF9VVKSduwwJG0P3Nt6VgbGtV8XMtgDYPZxh3m+QQ+0
vDaOttsvBoa3bnRuygdwPH9Y/m51Ec59WlrmcZuPpONfG3bPF+DlwKxtHn91
Yp/E62T8+n7MMWV42XlKUYosyafIYSQXVn4IfitHVeFF2ZNmBe6yaRSGVo+j
b9az+eJiJaookyOnRSpc7pihtfkIgbOx3jn7UiWBU7FT8VFW34Mm8i5bx+Jv
+M/qc56smQPg7cO3Mzg5ALPm22XWDA9AfNWcIIFKBNwhlwKbfAEYJVmVCE7w
YEv2j4m0UBE4dhjt3yoTA/VBwi/l9d9gvGDr5Zr8HsjzThq8FNgP2uqWEYat
/fCfvwRe1t1el3BWAhE2vT/Spf1gw19Ick7tg7xl660NEnsh70GcwNa+B4p+
RIuY7C44mm+/YGzgG6xw/8L0qmwHfarUxi1QBO91mDtaMtvA9ML1CLlpC5AX
Pc7v9nuHYZJnMQ2xbfhuNMz19rNOXOukNbSguxcrdQ0NAiu/Y9YjJ9pcsRQX
u5k2TvTJ/u/2E+NHNDzvOo5iY+RbgWjmGDYnRu8he4yjYM/UmdUTaPfqimR4
YBLFF/TztoiVaJGLiwnMLtRR+GgMXhXhycV2a9QH1Wkv6lM3lRZNo/0L1a/e
DA==
    "], CompressedData["
1:eJwt0ns01GkYB/B3sjLTajaXFaZ1ORpF0ib3rX4/slYis9Ok1Npk0ayVZJSR
dharEnasyHXCnlVNEYn2EKs5cnQbuWys28mu1SKtLjuEYvY75+wfz/mc5z3P
+z7Pe97XMvQIP1yLEML4PyoRpN4uyeDdU4r8uGBUwxyD1zubQ6FFoyAycYIi
PKf1buxJityrdx/NhcYP6D3xUxTxUXbpSmHfa/Mu2xcUWaE1t8UD+vyg7+T8
L/LznYWp0HAyQ/JYRZFKm4C4Ydh0tqB/GvqcHqz8dIYi45F5ah4UXxo15L6h
SNqC1WGNsqN37/bPUmRt/0D/KAz57lt55hzmqQ1zLYB9KQ0JNvMUUayqMxuC
8ogB8RgUi3jarLfoV7K5wQkKrWb0UuHa2vNcl3cUcXSq9/eETA6j+zd48g/7
Y8NQJm8cewYV7YXB6xdwX+GlOlcYddnV/wJUeT1KlsO+ixFUDxRX7go0XsS8
AnaiFUx6uzw4DdLjj77PgR+Ptg6XwNXyYlUdtGhROiigfFu5WKJGvZuWSx9s
7lGxpIQmt1p3sGfhClrZYcCgyZJD/Cwa9rZ/sNob+pWuWSeBJKxAnQYzi/Mv
SOE5g05P0yU0Obm96GUorDtwI10IaXW2fTSsvx/YJoJlFSa8BPjaQntUAo9v
+Cg7FT5/laKbDvN+/fxCFuzMsPE6DwOVt4aLoJG6e+EinGedc6mArSe2J3yo
RRN7STGLAx3iTU32wn3xaTv2QZ9yvjIYZlL7c9WQGV6yWfs9mlh7iMfioF//
U9EJGPKkQ5gHhT+zmDJ4L9pNtFObJnHhVxkCOFITmX4HSrlqs/twVd4+R8ZS
mjxxaTPThb7XLBV6UNemfVkALBJ6VQjgFMsmvhZ2z+w2boD2nNvW72DMQU49
Q4cmVSu9D+yGTIfkK1WaPM7Xow6WRdY2OTJpYsuRh7tDmWrn39VwJI6ZfxNK
lnjLZuFx7qWwYBZNHnh0TIfC+qiNvX/B1aUKrwloay16aL2MJiq9cyI76Hnx
n8WNkKfDLHWBdjWHN22BftaMFk/YmWB70ge6M5vU/tDrccqaIBiXHVn7JaQL
FUFhcOSG5dTXmv0V5NQR+PIzgfkxyPcND0qCQ4vfvDql2Te7LjZD0+9Yl2k2
NNx0c5sM6qdXP/sJ9vXOZF3WnMO1s70GQ2ruK/Xex//TMYlYCUM3TI3HQPmB
IFMRbO5+nH8cWvAYV3tglPN1ahA2xSw9Y6NLE9Pk8h2BcMSocHg/TAtp1TsE
HSZ0f4+HzTP5ZWmQ717lI4UC2a6BHGjUsvVMoabOjXe7HMZ+Na6shi/PFh+9
CUNuJNo3QqbYME8BLf5k27XBsl0VHQ9hrrNZbJem76v56V74KEZ9ZQi2caa5
i7BycPi51nKaKIWv59hQIW4/bQiH7kTZm0Lxmy8azSH/4OQeLrQzlrywhSMS
/TXOsC4movoT2FSTE+ABVZlt494wZe5eih8sMiwz52vWo6vaf4GCvdKYJljW
IN1qxMa7+xpIOGz6P0IrAmQ=
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, False, 14.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[39]=",
 CellID->598035552,ExpressionUUID->"0269daff-80cb-4ce9-bbbd-40a85a4e6c38"]
}, Open  ]],

Cell[TextData[{
 "This",
 StyleBox[" ",
  FontSlant->"Plain"],
 ButtonBox["TimeSeries",
  BaseStyle->"Link"],
 StyleBox[" permits directly extraction of the following information:",
  FontSlant->"Plain"]
}], "CodeText",
 CellID->1896839114,ExpressionUUID->"8a1d4ebe-345c-4e38-b42d-feb7e980ea37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ts", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellLabel->"In[40]:=",
 CellID->780249283,ExpressionUUID->"06b7732a-888e-48ef-bc80-c8dc627533b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"DatePath\"\>", ",", "\<\"Dates\"\>", ",", "\<\"FirstDate\"\>", 
   ",", "\<\"FirstTime\"\>", ",", "\<\"FirstValue\"\>", 
   ",", "\<\"LastDate\"\>", ",", "\<\"LastTime\"\>", ",", "\<\"LastValue\"\>",
    ",", "\<\"Path\"\>", ",", "\<\"PathComponent\"\>", 
   ",", "\<\"PathComponents\"\>", ",", "\<\"PathFunction\"\>", 
   ",", "\<\"PathLength\"\>", ",", "\<\"Times\"\>", 
   ",", "\<\"ValueDimensions\"\>", ",", "\<\"Values\"\>"}], "}"}]], "Output",
 CellLabel->"Out[40]=",
 CellID->2046647581,ExpressionUUID->"2536d865-2c69-4b7f-8dae-1bfce3e610b6"]
}, Open  ]],

Cell["Extract the minimum time value, in decimal years:", "CodeText",
 CellID->1902909659,ExpressionUUID->"61827152-b906-44e0-86f3-ab710883b2cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ts", "[", "\"\<FirstTime\>\"", "]"}]], "Input",
 CellLabel->"In[41]:=",
 CellID->1876167689,ExpressionUUID->"84bf50f5-b154-48ab-b26f-ebdfa0b44ad2"],

Cell[BoxData["0.6870210173999567`"], "Output",
 CellLabel->"Out[41]=",
 CellID->1849392225,ExpressionUUID->"3cb01138-babd-46c8-b9d7-1ddf57e69416"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Residuals", "Subsection",
 CellTags->"residuals",
 CellID->2140473852,ExpressionUUID->"507b4ba3-1ac6-43c6-be33-5d4b1c126ee9"],

Cell[TextData[{
 "Visualize the ",
 StyleBox["residuals",
  FontSlant->"Italic"],
 ":"
}], "CodeText",
 CellID->297976020,ExpressionUUID->"a7910346-7732-4c42-b899-4f3159fff143"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"residuals", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"ts", ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"1", "/", "6"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"AbsolutePointSize", "[", "3", "]"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[42]:=",
 CellID->151103336,ExpressionUUID->"ffb77d30-c5e6-4008-accc-4255417af032"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[1, 0, 0], AbsolutePointSize[3], AbsoluteThickness[2], 
        PointBox[CompressedData["
1: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
HX2YDohrNs9PVQr+qb279WmuCPwHcM7eFg==
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.009166666666666668], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              AbsolutePointSize[3]], 
             Point[CompressedData["
1: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
HX2YDohrNs9PVQr+qb279WmuCPwHcM7eFg==
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0.6229292872749584, 
             3.7634240633999525`}, {-2.62171, 2.80614}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0.6229292872749584, 0}, "ImageSize" -> {360, 60},
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            Rational[1, 6], "DefaultStyle" -> {
              Directive[
               PointSize[0.009166666666666668], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0], 
               AbsolutePointSize[3]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0.6229292872749584, 
            3.7634240633999525`}, {-2.62171, 2.80614}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0.6229292872749584, 0}, "ImageSize" -> {360, 60}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           Rational[1, 6], "DefaultStyle" -> {
             Directive[
              PointSize[0.009166666666666668], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0], 
              AbsolutePointSize[3]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0], 
          AbsolutePointSize[3]], 
         Point[CompressedData["
1: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
HX2YDohrNs9PVQr+qb279WmuCPwHcM7eFg==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0.6229292872749584, 3.7634240633999525`}, {-2.62171, 
         2.80614}}, "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {0.6229292872749584, 0}, "ImageSize" -> {360, 60}, 
        "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
        Rational[1, 6], "DefaultStyle" -> {
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0], 
           AbsolutePointSize[3]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 6], 0.16666666666666666`],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.6229292872749584, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{831.4609375, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.6229292872749584, 3.7634240633999525`}, {-2.62171, 2.80614}},
  
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[42]=",
 CellID->77555049,ExpressionUUID->"76c7e798-827a-4799-8cd1-ef47cb47c888"]
}, Open  ]],

Cell[TextData[{
 "The data is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " evenly spaced. However, in regions where there is sufficient data, it does \
look like it might be explained by ",
 StyleBox["a linear superposition of sinusoidal variations of differing \
periods",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellID->1285255358,ExpressionUUID->"a7cc8fcc-b6d4-46d7-832c-442ec8ceceb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discrete Fourier transform", "Subsection",
 CellID->274623367,ExpressionUUID->"ce4e2951-e9db-42b7-9b5d-981c53b6ba81"],

Cell[TextData[{
 "The discrete Fourier transform (DFT) can be used to determine the principal \
frequencies of a periodic system. However, ",
 ButtonBox["Fourier",
  BaseStyle->"Link"],
 " can only be used for ",
 StyleBox["uniformly",
  FontSlant->"Italic"],
 " sampled data. One way to approximately determine the orbital frequencies \
is to interpolate the timing data, re-sample it uniformly, and then apply ",
 ButtonBox["Fourier",
  BaseStyle->"Link"],
 ". This is somewhat clumsy and introduces additional numerical error.  "
}], "Text",
 CellGroupingRules->{"SectionGrouping", 55},
 CellTags->{
  "Fourier", "astronomical time-series data", "spectral analysis", 
   "irregularly sampled data", "interpolation", "resampling", 
   "linear least-squares", "spectral energy"},
 CellID->1896280380,ExpressionUUID->"a32ab72a-724d-4845-8948-8d8096ab841e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Periodogram", "Subsection",
 CellID->1048980303,ExpressionUUID->"bcaf1db0-4b35-4c10-91a1-014ec13132e5"],

Cell[TextData[{
 "There is a simple ",
 StyleBox["spectral analysis method",
  FontSlant->"Italic"],
 " that avoids interpolation and resampling: For each frequency ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]],ExpressionUUID->
  "5674376b-2115-4c61-9742-2f336f9b28d0"],
 ", fit ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]],ExpressionUUID->
  "c638ec56-3790-4760-aa19-8fab5a0481a2"],
 " and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]],ExpressionUUID->
  "7917a7c6-dd81-4890-a2fd-da78e4fc37f1"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"\[Omega]", " ", "t"}], ")"}]}], "+", 
    RowBox[{"\[Beta]", " ", 
     RowBox[{"cos", "(", 
      RowBox[{"\[Omega]", " ", "t"}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"6a60e157-5bfc-44cc-909e-d9e94cf86215"],
 " to the data by ",
 StyleBox["linear",
  FontSlant->"Italic"],
 " least-squares (",
 StyleBox["i.e.",
  FontSlant->"Italic"],
 ", using ",
 Cell[BoxData[
  FormBox[
   StyleBox["Fit", "Input"], TraditionalForm]],ExpressionUUID->
  "0456f564-f4f7-4d63-90ed-1d222910fa6e"],
 "). The ",
 StyleBox["spectral energy",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalE]", "(", "\[Omega]", ")"}], TraditionalForm]],
  ExpressionUUID->"f5e4b126-57c2-43d2-9d10-c1232cbab059"],
 " is then the square amplitude integrated over one period, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "=", 
    RowBox[{"2", " ", 
     RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], TraditionalForm]],ExpressionUUID->
  "96194f13-31c1-4a6b-94fb-3c17e4bfdaa2"],
 " (normalised by dividing by ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]],ExpressionUUID->
  "e4a768a0-f63d-471b-81a9-6ed7afce7f7d"],
 "). This is, essentially, the ",
 ButtonBox["Lomb-Scargle Periodogram",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://docs.astropy.org/en/stable/timeseries/lombscargle.html"], 
    None},
  ButtonNote->
   "https://docs.astropy.org/en/stable/timeseries/lombscargle.html"],
 " as discussed in Press et al. (2011)."
}], "Text",
 CellTags->{
  "Fourier", "astronomical time-series data", "spectral analysis", 
   "irregularly sampled data", "interpolation", "resampling", 
   "linear least-squares", "spectral energy"},
 CellID->2127025180,ExpressionUUID->"d3adde84-2020-40af-98e4-211857ebff13"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spectral Energy", "Subsection",
 CellID->1899412298,ExpressionUUID->"16b2cbd9-da23-4d2b-bf84-dd912d04771a"],

Cell[TextData[{
 "To determine ",
 StyleBox["good starting values",
  FontSlant->"Italic"],
 " for nonlinear fitting, one approach is to extract these from the maxima of \
the ",
 ButtonBox["spectral density",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Spectral_density"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Spectral_density"],
 "."
}], "Text",
 CellID->1078079831,ExpressionUUID->"997446fc-befb-4886-bd74-e2646dcd3e3f"],

Cell["Since", "Text",
 CellID->968189878,ExpressionUUID->"c5044735-2ab4-4093-911b-30ae8d9249df"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "\[Omega]"]], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Omega]", " ", "t"}], ")"}]}], "+", 
         RowBox[{"\[Beta]", " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Omega]", " ", "t"}], ")"}]}]}], ")"}], "2"], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "\[Omega]"]], 
     RowBox[{"1", 
      RowBox[{"\[DifferentialD]", "t"}]}]}]], "\[LongEqual]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "2"], "+", 
      SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}], 
  TraditionalForm]], "DisplayFormula",
 CellID->883686227,ExpressionUUID->"e0e52837-2626-4e73-9bd3-6ea84850fb64"],

Cell[TextData[{
 "the spectral energy or ",
 ButtonBox["spectral density",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Spectral_density"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Spectral_density"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalE]", "(", "\[Omega]", ")"}], TraditionalForm]],
  ExpressionUUID->"0df9aef7-8ce8-43fa-bbf5-e805cb506d02"],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Omega]", " ", "t"}], ")"}]}], "+", 
     RowBox[{"\[Beta]", " ", 
      RowBox[{"cos", "(", 
       RowBox[{"\[Omega]", " ", "t"}], ")"}]}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"f5b512e3-f3f8-4ef6-b98b-444c7406c93a"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[ScriptCapitalE]", "(", "\[Omega]", ")"}], "=", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "+", 
       SuperscriptBox["\[Beta]", "2"]}], ")"}], " "}]}], TraditionalForm]],
  ExpressionUUID->"561762f1-f24f-469d-a011-89e3d0ff7980"],
 "."
}], "Text",
 CellID->117514537,ExpressionUUID->"f0e20b57-125e-44d0-a273-667da4e85413"],

Cell[TextData[{
 "Use  ",
 StyleBox["pattern-matching ",
  FontSlant->"Italic"],
 "to c",
 "ompute the spectral density for the time series:"
}], "CodeText",
 CellTags->"spectral energy",
 CellID->1529351766,ExpressionUUID->"4e317bbe-b769-43b3-93bc-c92f00c34fe7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalE]", "[", 
   RowBox[{"\[Omega]_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Fit", "[", 
    RowBox[{
     RowBox[{"Normal", "[", "ts", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Omega]", " ", "t"}], "]"}], ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Omega]", " ", "t"}], "]"}]}], "}"}], ",", "t"}], "]"}], "/.",
    "\[VeryThinSpace]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]_", " ", 
      RowBox[{"Sin", "[", "t_", "]"}]}], "+", 
     RowBox[{"\[Beta]_", " ", 
      RowBox[{"Cos", "[", "t_", "]"}]}]}], "\[RuleDelayed]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "+", 
       SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}]}]}]], "Input",
 CellLabel->"In[43]:=",
 CellID->583360219,ExpressionUUID->"9c274a24-d7d6-4c17-ae8c-c6443d86e2d7"],

Cell[TextData[{
 "The use of the replacement rule ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]_", " ", 
      RowBox[{"sin", "(", "t_", ")"}]}], "+", 
     RowBox[{"\[Beta]_", " ", 
      RowBox[{"cos", "(", "t_", ")"}]}]}], "\[RuleDelayed]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "+", 
       SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"dec7f7f5-a702-45c4-a66d-7eab2f4c0de4"],
 ", is somewhat subtle. It effectively uses ",
 StyleBox["pattern-matching",
  FontSlant->"Italic"],
 " to compute the normalized integral over one period. we can use \
pattern-matching to replace specific expressions of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Alpha]_", " ", 
     RowBox[{"sin", "(", "t_", ")"}]}], "+", 
    RowBox[{"\[Beta]_", " ", 
     RowBox[{"cos", "(", "t_", ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "fd7a1937-e60f-4a06-b43d-dd3ba144d622"],
 " with its normalised square-integral over one period, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Alpha]", "2"], "+", 
      SuperscriptBox["\[Beta]", "2"]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"25917265-0eb4-4bb6-bee3-87f8731013fb"],
 ". This is fast and does not involve using (numerical) integration."
}], "Text",
 CellDingbat->"\[Wolf]",
 CellID->865956175,ExpressionUUID->"8c74e1df-787c-44f0-a14a-99fbe026615e"],

Cell[TextData[{
 "Plot ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalE]", "(", "\[Omega]", ")"}], TraditionalForm]],
  ExpressionUUID->"3089a2e0-bcef-48a6-b57e-4332410e812f"],
 " as a function of \[Omega]:"
}], "CodeText",
 CellID->1272352178,ExpressionUUID->"1eef7c0e-3bec-4f77-b515-3a5c86a5ec20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[ScriptCapitalE]", "[", "\[Omega]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", "1", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[44]:=",
 CellID->1928382467,ExpressionUUID->"68782f08-4e7d-4627-be1b-74b40e0389e4"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJwUV3c80F8Xtvfee++9SeMcIyRJKoWyEyVlbyHJzAjZe2VllZGszPxSIamQ
rIQ0jCTj9f71/ZzPuec5z3nO/d57rqDdTdMrRAQEBO4UBAT//1L736QhJPgJ
DlJtcyxPU8DFRP9I/NGf4DvYL3LuVCoMifG78Ab8BCu3m7HvF1MhaWRo8NDm
Txh9xiltIZ0GXLJyMe4rv+CG5UDIz+EMCCQme0Yg9Rti3xydUgvNhKkPk0v3
r/6GSBNjAX6FLCiIiDOsmPkN2wHmG6Zx2SA5vUI5N74Gd5SvXRDmzIPop92H
3NnW4enaup+bcx6sxGY5E5xbh+WLH36dbMyDmkNGAzyv14Ejd8NFwzAfmBhE
/pbTbEDK7dON6ffzwXPhn8Qhww24v65WK/46HzQeVESe79mAFs73oyk6BZDh
fKdplmgTYpqd8pe8C2AHLBfdcBNuNR0bMysuACs2ZQ6C4E3Q/BXnVTJUAB0r
VAb3n21Cg/RUStXvAhB6MePD83cTSkMj+g0YCyE8vaW0XO0PzBpyOlyWKoSF
m0nvNTz/wKddgboPRwtBX+8aeV/tHyCu1CF4crIQyni01c//+AO2Y/EpP84W
AtUa59VZmS24rnE+LsmsEFwGfqW6XduCjGy/9McH/qHcgd790i2gbamptjmI
V/DO34yb3wIWW8vsvgP8JCM/MR7hvxBcxZJBK10I60JnzMpt/oKFEVezHXMh
mP2ViNDI+Qtpn/qtdzcLoOk1wdPeT39hZe3CY86xAuAqGZ8/x7kNphGTy1s1
BRAYWMM6a7YNTFtOM9P3CmDKNPK4W/I2OF5qN+G2LACUtPHaf7sNLoo/TDak
CqBgX704jv4fiHxJfdn2Jx+uVH4lKY/+ByUe2aXXovKhN6xdRaP/H3ReMdbd
NM4HCfOHDr2kO8AjQ7HUxZQPK6T63TMhO8CSdYnLPzUPPK1L7nD77ELH3OMv
xfK5MKYaXP+oYRfIWm2py2tzQIPGbFb99y4cY90NvKOaAztNpDrnbuxBxMXv
bGrHs8EqftJ9pnwPukK52fSGs6DjypOCW4t74JxrcCrNPgvuMF0hirPfh1/c
PL8wJRMCNeNrDEr2wfHskuyuXCZ42zVbkXzbh0vGmtkn3mSARo8b2TQrAUpl
FyR0+GWAyoeIyaPqBJj+0Wngt3QGKHzPbMi8SIAC1lX1jl/TQZawNuavHwEe
OfUx82FlOkix9tpdyCRAVX3LL+sB6SAm+enQk1YClFuwlvpyPh2Ejv5kYJ4i
wFNXaLNrNdOB/wzp4q19AiwxJBGukkoHnitc7UMChEhx1LuVWiwdOPzkU2W0
CVGkWWFxQyYdWON0b0TbE2KMz6ZoOKQDU7657mI4ISo5YVrb5XSge+LKrVdC
iMtF5C+z7qUD9cCd34V9hCgaHJdF+jwdKCbTBgi/EeILWU2b17vpQPKrKs+a
igjVHhZxdZzIAELSFz7PpYnw8mL1dlxeBuxxjBtznyLCv1+vbn8mzIRtme+i
fq5EuPWEu8r4Rib8QaLdsXgi1P/4XO3KTCb8dJKpSBomwmKChD2/r1mwEqgV
9nONCI9mDmyc986Gbwlm5sasxKjitf/nIU0OzDSFkFNdJEay3w6/6o1y4R3F
O/vQSWIkt/xmyUOSD8M8S5qf94jx7d0dqyfW+TCksM94VIAEuVaV0g1a86H/
omTHlh0JnjKiOEnlUwAtZUE8txZJcHY2NlJlqRCetiatvaIkxVf20ySvdIug
/k3pS2lpUtyOZ+XZzi6Cyq23vl9vkCL/3fvtTCeLIcdA7J3VGim+caY36o0q
gYxLhytbWchQK5h6x3u4BB7eMrnDpUaGtBU8POvspZAcfsXC9wIZlj5r8qC2
KIWENH/FMV8y9BUKiYpJK4W4yngKlQwydKeO9NQZKYXojqLPic/IsJXX9CkR
VRlEjDY//TFBhgIKP/jSj5TBncWhuFN7ZDiUl9s6dq0MQnZmHSr4ydGwnW08
JrkMAhn+HqbUIkfeB2Z7kc1l4CdCx3zVjhyNvs5z5H4oA28N4aXuO+S457Gc
nLteBu5GGp1CxeRoMBSUfonqEdy0OZUW0kuOQbQapx5xPQIXT7ubU1/JceHu
lJSF6CNwivTRO0JJgf7RKQ7HpR6Bw9YivYMEBTbtbwqESz4CayeLDzH6FChi
xNbvJ/wILMYHC+odKVBqrS6KiuMRmBkcdfl0lwKvFnyx4SV/BKZN1arExRSY
p3UqJOtnGZySENiX6qZAF9HdTq/RMjBIS+w3naXAtWc/OTLrykCXgjjJn4gS
x743EBHHlAH6eloWCFKiZ+rPzbLLZXB4cV7kJVJifmnPcJxUGahdvLD6y5oS
Vb1fHW36VQpK/f2NnLcpUZfiGplqfSnIaWiGauVQYmmqqAf7zVKQLKswdH5O
ifSiCxF+oqUgEHl/sukfJS5cpo3SDysBnq39kmkuKpRkPfaYSrIE2J3cblFo
UuFG69rWv5fFQGdwjviiLxV+JQOVK4TFsEPOJflnnQr7dY4WF2MhbPnE/OZj
ocZXTmMcf/oLYO3rzjM9ZWpkv3n1K/XpAljq+2yc6kaNVNmhpwXN8uH9vWJP
1VVq/Ob/KS+iMQeG/7Adu0xLgxnaLuZPnmXD0NVI8rsyNMglVKnI2pUF3frX
M0av0aCJHeHmnfEM6GicsN+JokGlq2at1Evp8EzcWFbkEQ1a/6CarydIhzpy
xQ6PrzToEUw7+QUeQrVPQVQmGS3K3vJtj3BOhUdfmc++EKXFtHH8GZmRAnl9
m/NMDrT49IZ5pzFLMmSpOz3WvEOLXW6K1N2XH8DD0g++dgW0+KFCf/Pv4yS4
f6+Vum6aFrcYHKndbyZC9B/Zdx/2aXH70CzV1kQC3L2am0PIT4eR9rbYdzYB
Qt4zOEkeo0NVSqLp7tJ4CNQPUzxz+cC/+mUztOU++DaubfsG0mHL15N8uZ/j
wEP8SndeJh0anrz++AtbHLg+HIvrb6FD7n8+vjvWsXCN3ODCzw90WOS3pprY
EgOOPs0CHH/psMPSjFpJLAZsv0otAQc9qt9+t2lXEA2XLmTVX1WnR/n9B0cy
5aLhYh9tULwZPUq81OnVexkF59Rv6zV60WPBzJRnn2cUnC79Sf85mR4bDV7Y
ectGgSG73QeyBnrMTWBgLV6LBL17IwVyI/RIw1OdmdMbCR9WNLeaf9FjAmFp
iWJJJKhJvi0RomDAiNqx0EcJkUAwEX7GiZ0BH3rlaZ6+Gwkv72vsVIkx4GZf
1TXnO5GQrLVSsqbKgPzyb9eOREeC1XrumUPHGTC+RqqGNj0SJErP7gSfY0Aa
4gF2/seR8NucvLTbngG1wukmGwYjoZXm2RkqDwa8OCoYyrwaCRHtrjunwxjw
SVfZlxDWKDBxFypNSWRAi4m/HbpaUcAlOnbmUx4DBvqMnXh0Kwrm3kftCNQw
4P2M7Ph/BVFQHX201LGdAdOedFDHvo8C7Z9FO78mGfABdeCN57rRQFN4sVT9
OwPOlm8ksgRGw9h5GtOgHQaUCXE0Z6+PhmvPPEopuBmRReO+YT9vDKi4ipsa
SzHiqddFORYmMbAn8GnnwSFG7J827bcNiYH+kfulHwwYkTSNv9G2KgaSIrRN
+S8yotdIi/rCWAxcOrS543CVEWmfvjpzZycGxFYelZZ7M6KLlW3OO95Y+Jlz
2fTnXUac+FuYEqYZCy1nGHdVUxhRvWB4WMM0FsJJekoDihhR4QHrqRqHWDBu
9DXtrGfELwoy4eVuscBxTWaX7AUjZixN5f72jYUZnulSo2FG1Ks7FXrZPxYq
Xz8wTfrCiFkT5j0DXrHgHaa/+/4nIwq/T2vkvx4LqPqvlJeACRv43FTPWMQC
1WK1qT09E9ataoaa68TCaIbdbhkfE35c8SU9KhYLOafYylZlmfAqtR8FJXEs
OBG8NFU5yoQ1sd9MRj7EgFJ90K6fERPufRdvbS6PgZ0rimXtlkyYKqbX98Ur
Bno55k1JrzMhXeM6te/hGEgYTNs19GdCkUuVdY//RYNFsFFZQhQTFn18+Knz
aTSIKBKcHUtjwhW/if0Vl2hYna3f5S5jQqLFDSNPvmgIO8F9trSXCYU/0ZU0
Hux/o52h3ZV3TNhhcCadmisK2B6HlSnNM6F7iLvs0rNIKGdZ2n1OzIwlYymT
0Zv3YPhzU9koMqN2reLYYZMIEPQ22yN8xnxwvt0XMX8fBibPcygeDDLj30fR
Z+utwyCE5CuTyAQzmgikNdB/C4XpJB9xvV1m/Pfu+NPE/RDIe5xmEg0seKfj
lt+928HwZnPagtuEBdlCtWlelgUBwTHJK5U2LBjk6qO8/i4QrP9r9hsKZcEh
IZ5dhSMBwPftYwFTNwvmEL1yotPwBWMF4arCURZ0ux0qlRziA8E+1xtV5lmw
ouONf/t/3jBJujNoRsaKXkS29Gk3vSBLiHcjw4AVR2Otn4tNuAPXJWt94Ves
uGBik7jk6wKGhaVnGiZZ0YBejjHX6Tr4L/2wPL7KirEF3a6PLl+DD74ht67S
s6FOF92mzkUnoOjo99/iZ0OVcateKauroEHOeDdKgQ2/yMxXM19zhLSU/PSK
M2wY4U0ztJDsAP0T3wqP2LGhCYY7XWqwhy1hpepX7mwopTci/e2jHVys6+r6
8YANnWrqWKOO2ULkX6pXIUVsOH+8NFEr0Aaa8Ox7xidsWH/oNn1DuDWwv55d
Vh5jw0R9htzVt5dAj01ms3uBDStp73UfSbYE78ueBGZ/2PDVq5I3b5wtoKSo
leorOTveCWV2OXbWHMaWSVh9OdiR4nqVAOOZi0CmfIqfUpIdZVqemw7aXwA1
/xTJjEPs+DL9rMN8jBk4dk4qSxuyo3VhEPGrgfOQSiF2rNWCHVXUTAvneM9D
72lXg1PX2dFNh5n/TuQ52Ex9ajoVwI5Dh6Qi1ijPgdjU3qWbsQd45UjvVXAW
zovqXyXIZsd32RYKh03PQrhLvFtiFTsaByd8uMF5Fhrq3wcItbHj8Mn3ryW3
TGFumz+ifugg36KMaOiqKbBoOyXofmbHRSb/wYAdU9BpnHrQssqOvV7Lnh/4
zoK7zPmHCnvsKDv6z677/FkoyB/MKKHlQD/ebV+5/LPwlk07h4eXA+eq61VJ
CM8BQWxTfpIMB0r8umsl63UOFAjliymOcOBCd3R93O45sPYuLgs+yYG3d39X
kGach/vL3JXrFhy4atN9yMPQDJ7bJD2+do0DlY6YJNfRXYCVdxT1034c6HR+
hCJ34QLwnLz91CyKAyOf9r5hHr4IJzs2mv9L48AqSb/vK2/MwV/V5bl2GQe2
PUuioJi1gPLymY6mRg68TyFqfpziElCkvO4rGuPAncssT5pjrECdSm+Qa4ED
f9/PVev9Zg2Ot1uHEjY4UIzNdMqkygZ6nB+9C2ThxMzmwleXNO1gfYr/w29h
TkwYVssjorcHkXOpE07KnOh5NUxF4Ls9hB27M3vOlBNp8mXVqXuvQG3934WX
tpy4yfFZl6bTEaYlbi2hGycGn0qV+d5zFYD58i+ZBE585nVfiGjVGXa+qu2T
DHFisjprAUebK0hfriIKmORETX03XR3yW2AxLEz2a4UT71ZPt0U8uQXNrQy0
k9RceIPKwYZR1B0WFe8xnOXmwpCzwcNvF9yBo3SXeUCK62C+9aZPfOwB3olL
XE9OcKHBZEGk+AUvKCaz5ZM250KriBf+yWreMBrwXjDfiQsvCNPPSvH5gLJj
t0TcPS6U0HwXyUnuBz81c9Su9HBhj9OfPu4TQcBfw6L5aZQLi+L4xyfdg8FY
NObomTkunFkbTbMovQ1V9L66R4m5cZq84esYRyhMhK/q1zNx47isDTd5dyjQ
bDuclBTiRu5D5f28XmFwbe6MKasWNwqNFw1d/XYH0s37z8eYcKPIPIlxb2U4
9A8dMye04UaZH/NDNt53QaxZ2uZ7MDd2DlefcOW5B7NxpK49rdy4FtGt3nJw
3/o+ZHgb8YobP1IskzQ8jwG6fG4VgyluvAyJmQVDsaDRoLj9cp8bw4/EsceR
xEPsx8sRb7R50GI/N+LyRCKoiD/N+dTPg5/3LZIf/0qFAYVOwuwPPKimxTO/
/fAhWGn+52C1xIPcllUNa0fTIPLUjNQXal50W+/753Tw3pzwoGtcMOZFzjyD
98qkWeAWxMlVZs2Lm3R7vmPZWUB2TyTI+RYv8ukOpH1VygaFDE2dlURebP9h
8abIJAd6Co+XVBXw4lfxwhb/8RywqDKhvFnPi71vtz4zW+bC3Q7H179GefHn
joNJoHgecL10U6qf50UDr5PyHdZ5UDMSmOK5yYu3Xrs7FiTnwfHJe1uq5HyY
cVJI7U9PHnxcSLL8w86Hx2fIb6es5cHNn9ltTRJ8eDNLku4Cbz6QbJcJ+h/i
Q8bFuK8cOvmQTtwQftiQDwdEKOOfOeSDHG371x0LPqzqzzQWDsuHF2wvDduu
82GO1aCfRmY+XBR4V3U7kA9NLthWfX2cD98lpxm04vhQW2mXSqgjH8KUlz2I
cviwYGX55uRgPrAf3Rx7Uc2HXB9bS1hG8qFSj1DzbjsfSm0yP+h7lw9aJjTZ
em/4UOi4zoV/B/4xc3YCii982P4WPFpe5cN1eyH7gV8H6+kfTLC8yAeCG7K9
0UT8+K16k06gIR9SvDUkjZj5sYTjAuufvHyQCtGJpRXhxyOO5DEtUfnQHmX8
Y0iFHx9OEKQkuObDuQfmpgnH+ZGQin2k6HQ+fMtyeHLGjB/1hjlOSMjmQ3DJ
TQ7mq/xIFjQPZ8jzgbnGP2DUhx/rpGP4LKfyoKz57lRKJD/e+i/xcERdHgz/
l1nEUc6Pz9z7li6ezQPxtT4Fvu/8eE/wXj/Dfg5E/nllnrjLj1w1J1klk3Jg
Y9dZi4hcAG+0B/DUiOSAGdGta17sAkgcUD4ya5gN90jW9qr5BbCl8ugJkuks
aCLzfrAoLoBFAx8d/XyygJM6sNVSQwCXQ3RdzGoywZB23yQFBdBeZ81V/Wwm
+NOHzQ8ZCCAbm2DS5X8ZUMFI6k9xRgDN3lVJhDzKgAnmSDptcwGMcdj7YGqV
ATRs1IUBtgKYUZXSFc6VAUc57qs/cRbA6KTF1PapdHDlYvxv1U0AN60jBkoq
0iGHJ9lGwl8AxY/UPRkLTYchPvYN2zAB9FqOeT1rmw77AhlRmdECuN218NHc
KB0UhHn53iUJoETYiuQzrXSwEc2ro8sUQPpXJXO3tdMhUVxY36BQAElfhVuw
nk6HLsmST6EVAti+vGQ1eTUdfktL3npWL4CqNm9qZePSQViukmTjmQBO69l6
nW5Ph3MK8uly3QLYxhRbG7yXDuFKdbJO/wlgnpHxwjfDDHiiotqVPyqAR14F
V9UWZcCCWpPZpwkB1KN+5rJInQlshw4vs8wL4J15Qo6kkEzQP9x22/i7AJK/
cCItIsoC36NaLJEbAnjfSmOYJCkLyqC7rHNXACv9ss1j5bJhXEv/6D9SQfwZ
/6eVeDwbKHVfvlWhE0Tizcog0fs5cM3gzXYpnyBueuhS3KXPg0zDs/FfxARR
yW7JOCgwD/4zGhPmlhfEyqj+ka3VPJA9M2F0HwRRQs2k7PJsPlidtf7Spy+I
i1+2bzxyKID752e8CE0E0UFVcfnoUgH8NF/M8bQRxI8s56r6CIqgzm79p0Wo
ILaMZL8hMCmBWQefu8lRgvh0IJLLarEEWK5ucw4lCuKhcTLdvNBS8LpOoKNV
IIgBfa+zZxrKQMOTJkX8hSCa1HpzezBUgJN3vKTtoCD6sjPL8BdUQLovU1vG
iCCesAOCeoVK2A7k+Eo7J4jHizNPpmhXgfTtzAD9FUHskJDN/NZdBZdC+RhC
1wVR0fiEjpJ2NTy/K3JonUQI6b+qn+6XfgyrOccM82iEUOLtxWL5hMfA13TR
0ohFCGtTKoWqVx+D8Vt3ly1uIXx4r2TCR7gGgpdig4qEhfB0TRKLqVENVBOX
3jeRFsJKtYdl7W418JmnM3dHSQivAl1H1oMaYFD7VFOmKYRMRhwzfbU1gKc3
Os9pC2Gy4SKP0H81cMuJfoTAUAgnmo7IxM/UQF6o5FzlGSHcftiXs7FeA28y
dDYumgvhrjhsHyOuBcKGy2SktkI4TPRy8gJtLSi98mGvdRJCcHYXUmCuBbuF
RInLt4RQpULvbwtLLSTtVxyi9BXCxp4+sh+MtdDF0Wv45LYQerzVCeilqoXf
itOWtveEkGu5URz2a0D45LYLbbwQUtK8u2/xowbOObAEN6cK4fP97l+8n2og
PEgu/kqOEDpeN7mY1FUDDakGeYwlQmjQS5PcXVwDc4/tap9XCWG1ntaxnvAa
YBkI7HJ+IoRD3Edqyqxr4PhM6gjrcyFs65rciFCrAe9/NXOd3Qf19sq1BFDW
QAnL4MaN/4RQU2DA0qj2MZDp77P3fjroR6Zu8NnxalCz4ZR0nxVCIbcdKLSt
hqt+ypp8y0JY8HapPm2uCvorrl7y3hbC2x3M3t/HK2GrO/SGEJEwjm40jbOc
rATJqczgIUphvM5ZR+3WVAHRDG/yxDiFMVdW5sftiHI46aUxP6Z+sJ6UWdZz
pxSGjlG6qnsdrK8uvbNZXwB7F4RvzwYKY7g5xxU1ugKQdzuaEB8ujE91pWPc
r+VDQqFb3dcHwlg3tZwqJpUHZyg+bj6sE0Yjd0MW56xMCBNcJ9dtEcaPFR8y
7UMyoE6TjvNnpzBaK/AxG7ikA9MN7cMGb4VxJJ04+OulhzD6tvz21g9hJM0Y
/15T8gDUVePRcEsYfQX3HbufJ0FGmgdhFoEISltVuV77nAi21kfuAKMIUqzn
nJDUToDuLgHdRE4R7P5v7y05WTxIiJGSzgqKIPWDtaKVzDhYXXkVEaEkglRe
Ie4BRDFwxqROf1xTBAtq6nI5h6MO5v1UCikdEVT795FypD4SONgDBgJOiuCt
rlhGotJ7EOBvHf3qrAgWFZ3W+FMeAVOTOif5L4ngJ4ak3O22u6CtJUHj5iCC
i36J/qdmwoGC4lcci9dBvqtDO4Nn78D16++MHYNE8Nu11AL7vDAYGmqmb7or
gqmJxZqif0NBSSnnDeV9ERT7/JVF53IopKSEJVqmiiB/6WWOn4MhsLXlaFqV
I4KJ3ytHbHRD4NKlk8z7JSJ4/e8NwvSY2yAkzJJS0CiC/vbz5pSdQRARsXV+
vV0EnVLevi3/GQjfvk2w6fWL4CnjqlAzmUCoqSlO+zYugozpsxUuXf7AzBJt
fviLCGZyHtY9zeUP3j6uXHHfRNAFF77J+fnB0WPqWQrbInhjdqE6T98X8vK5
L4cRiWIe7eIfnSc+QEJKwDdKJYp92TWnKMR84OVgf64PtyjKb5NmUNJ5w0Vz
i8K2I6K4QCQ4k7XoAc9ajzkwHBfFnKI74eetPYBPQFjU7pQo3soZWm985w7z
C8slpFaiaE6WLuXa6QbunkHlRrdFsZXTdBsUb8K797bXc+6J4hRV4wixgCto
HNaT+RkvirmfN1nzGW/APiF99YM8UaQPOaJ+gvA62F1Zc50vE8XgjE8NNwiv
QW//e3n1WlHs5uW5+JDCGWLj82o/doriNP+cZ4LCVfjxO9xd5uUB3lvb1eqz
jmBq5qwcPCyKqRPxCc5hV+Bp86n11x9F0X5+UnPiuQNw8io9EZwVRbrG17c5
yB0gMITN22NZFPPLQiaErO1henZbrWdNFAc7viv97LUDHf3Pf9h2RNE5ejna
HuygpPxFkxOJGDovH+MxGrAFSlHYlKERQ26honMe123BJbdF+RezGBKsh4xu
8drCa041tyfcYigYX5Z1+osNKCXXVvsJi+HLH3NL75/YQAqd7MpRaTG8aBQ+
OJVpA1uRZZJEymJIzBczmv3ABiyJRa72aorhjzdx5IezbaAtKLcoWlsM6dW/
j/U32YDgFteMsaEYbu8RnNRbsIFw91R+ZlMxfMReqJMragtfVxgvvzcXQ4mM
2OFKb1swvBqXkWkrhulk5BWqH2yh6gvFuLWzGHYSpReuGtkBw6VwVhE3MTSH
aL2At3bgMbZvuugrhplrlq6ujvYwZhKQUBkihsdp8pYNqR3g0ODmq1uRYnie
dlUxvN0Bso67U6smiCETMz3V7QP97TSdI57niqHwy3th5EpXoadh7kVoqRhm
MH4a4uZ1Agl5G0K9x2L4r9Den4DFGVaFLwQOtYnhdHd91YDgdTiTM9yc1CuG
0S+EkifUXKCBw/iP2dABXkU9B9+5G+BPe9z986QYsrUo8ckU3gSyP0pOP3fE
0J59OIz4sDs4u1UXN5CIo9CWvVHNe3f4b1ly1pdGHD1F7FRlPT0gaVrAipBH
HN06OuculHvChkVWZo+wOE6n3ulZ0PaCi+/YP0RJi6NtM5cw5Qcv4HtJd47p
sDi+VZxj+/TPG0J1oxPHtMVRxzCfKuCeD8y1kb7OMBTHBAGDuAQ6Xyiv3zkh
bCGOlAOjl6Ro/YBWzvfeV1txzHypm/7ijh/cKlvrrnAWx+f2cdW7a36glr0E
Kn7iqPAuMOlluz+kszsGbYWIo/fz0TNVXAGwk/ilpTVSHCO6sjmGbwSANc3l
rZAEcTxKtJe61RQAXRHjqsfTxFGMiYJk+V8AiBKe86DME8fIjtbsYLVAiAx4
XfOqVByZVW5wJjsFwvKG4WriY3FsOZ9PxJEUCMa3eqXNGsUxrec/MuL6QKhd
0nLmahfHEJNTMhaDgcBy5XnJVK84+oo4rcl9CgSfzxpzBUPiaMF0zCZ3JhA+
mjcIXh0TP7jv/668+xIIR0flraWnDvTIf2lP+SEQ8owrsn7Mi6P8SGpeYH8g
EA+Ifaz/flDvYp5mcE0gOOoUsPtuiKNVfiubU2IgyB/m1mDdFcc4aS/yGy6B
sKWUfLGORAJd/lXTXtMKhM4DUU/TSOCep5LpG4ZAiBaKSF9hlkBdWSZezk8B
cJZrvzmKWwI7nIi5e/ICgIfJ96OYsASOzxekWtoFwGPCa9y2ShKocI/DMvST
P/j+nTm8d0gCI/9pjWok+4P2L8tLmVoSOL+34yJ50h9Gp09lvzORwIbUo5Ji
T/1gq12R3/CmBO4SibZ1JPpCZ2M5fPWWQCIZKLE65QvRj4VtwoMlcDGK+Bot
jS+cLc0KEYyQQOuwounLQz7Ak8ua3xZ3wOee55WJZB+YT73faZkigVMBwSYM
Nj5QfZ98ZitLAmes2oICFHzANyKEKLVIAlXK+GbTyXxAK/ivkHKlBPoqSat+
mfEGKm93nTf1EvifyuGMjh5vGL2xbH/jmQQy8D66nvfYG7KvOIRTvZDAtJoo
kpk8b3C8PFlU+lIC05eVsz+ne4P8ebMe3WEJNCJ4q7SS4Q1bRq/nv3yQwDI3
dv+zRd7QqWtAdvuLBLpWHp8wf+oN0Uc6xXi+SaCg3dWgI2+94ayKpn7zTwmc
IP9uqLjhDTwy9VfNtiTwwkI241Whg/qEZSLX9iXwTfTvdFLzg/q4i8sSyCXx
x8TqgGy6D/gw8w3I0kti0Lfcwb8zPoDUD7+9ZJPEcmU39SA1X6AiZqBy4pPE
UKdcrZ4HvjCyHSlFKiaJoyC0NL7tC1m/CU8WyEriu8uBcs3X/cBxyf86qEpi
yb+NI7YLfiA/sxYzcUQSb7JPlvVe84etDy6VfrqSWDsSkPthyx86387/x2Yk
iXKt0bx3EwIgesDqe/1ZSfyvfkvksWIg8DSbyK3aSeJciLrafnwQzNcMGMdc
k8S2+JTjH42CobpM+6aEuyRuDWya5TDdBkxTqbELlUSVS6Ih9JdCwMGHQ+l9
riRqk7ta+yiFgezNRFPPUkkkEistjKsNg01HKg/Gx5K4Qn3plIzKHYg026k/
2SaJmpvtnp464VClOq3aMSGJBYWJuYIREVDuI0xGPC+Jd2fJFVyl7kFJs+PY
8e+SaPQp3jz47T3IOfrde3BXEukjR0ZFxKPg/vHtxjE+KfRZ2i02WI4B1/Ms
mt9tpNAoOmdOczwBrj28QKXgLIWPdXaFfqsmguOHjI/ublJ4/WSnTteDRLC6
LBiwFSqFDJOnLL1OJ4HxFblW4kIpHOt5ztLR8wDkvAyOcc1L4UicS5tRYSpI
NcbQXf4uhcv9TpC8kwpif4emcjek0F20m4r3/EPgCzp/W5RMGof/u5peQJwG
dHftOhTEpZFBpm5n6Ww6UPUVJ3jIS+NRakvnhqJ0IKP8ZvNUXRoFHpcfX11L
h73Ym4RHDKRRt0LsuHBcBqwmB2rrO0sjwalXy5IlmbA01s4U7SaNnpTFn/gW
MmGBg3j2Pz9pdLS60yonnAUzFnr19GHSeObMxJzY5SyYyoq6YxotjXyy//mM
PMiCj1P/nU1JksbNvCtF+71ZMCbAIDKeIY1UNYPLXptZMGx3dp2rUBp9XN/f
IBDKhqGi1O7LFdLYJfDnsPOJbHi58CE5r14a3ay+1Pq7ZEOvBO+V2WcH9SYW
juxHZ0PXNRtVsW5pZH5yu6a7KBvaKgtJnf+TxpLhvwOpzdnQsrrwrmJUGi0/
2gUfH8iGpwpSJasT0khOwuNdMJINde43vBXnpVH5WStT2MF7+3FDjZ7nd2ns
5VP9/Ox9NpTTxjyQ3JBGil0995dvs6HE8cr01I40Jj41MqnvzYaCdpBNJpHB
sBohGuun2ZDDweV/gkYGH90Sm27Oy4YMt/XePeYD2/zrZv3dbEh9OcTcwC2D
4eyRNVpXsiFJ+JGNs7AMUhaKz1lCNsQF3qnik5ZBXajkIWDJhsh3l7dHlGRQ
5bLJG4XZLAiX09CP0pRBXL2YtFGZBSH3mJKPacsgx1XHY5ZuWRA4vTK9dkIG
K+0meTwVssD3UJ/sozMy+MT/1/6FpUzwTMr3tzKXweDzKxdFcjPhuq4Zy4CT
DI4GzT+g2M4Ax2wF2+BbMsijcL/DJy8D7DapqpV9ZVDhu9VikHYGWJS16+fc
k0Ed9dXDh/3T4QSNZIBHiQzqfQizZu14COKj/77wzsmgBwXLWdJfD0BIdkxu
ZFkG8y5M6hzzfgB8ETUBkWsyyFJd+rtqJwnYNK6wrhHJ4r38huJfdEnAlAh2
ZVSyWEemR1KSmQh0S5yPLzPJouSLEPIz0olAmjVk0C8oiyOP+a7qnk8Ago2y
lCBJWdToFn8+OB0PO6fuzCgpymL02LsfVgLxsFVyWX5R48A/H8jJeO0+rO+r
B2ajLIq9KkqqaIuDnxeZBkwNZDE81P35L744WKldYaUwkUU95mCPvJhYWKTq
s3t+QRa7ve8F3SCNhVn7/Mfu1rJY8kGHlTwuBqZaA3bEr8oie+IVN2bhGPjI
anZi0lUW1/OWLBX6o2HMVSE1yVsWz60/Gv4dGA3DfVSz+sGy6BFNWregFQ1D
AvPyu3dlseVkmvN99mh46dceWBcni7v/ylrs9qKgdzh94GqKLPrkCIQMb0ZB
p7QnG2+2LB5623xbmzAaWsON7YeLZFF6kF2Xli8amiYlau5VyiLDoOt+2Klo
aFAj3j3SIIs7eQ7e3+KjoSZ+8sTvZ7I4Yzf0O2A+GioXG1NLX8hintTPo9eN
Y6BMK2n20qAsziXO5U++jIGiDBcFphFZ/Hhz5NeqRSzkrukF9X2URbpX+Wk1
e7EwlLrsJzQri5coTjD59MbBzqEE76BlWWyVmfKxL74P0pMqHuNrsrjnMGhm
nxkPFiEfbirvyGL7uf90pc8lQKRwsMt9Ejk0avJoJV9IgMZeIedvNHKoHf23
VvJOIrDQutjl8sqhqWZqbtlUEujUMFhvi8rhI432KxVZD8D97BPL83JyOBvO
UwxXkuF1+t45apDDvZ13uhKsqRAtlqjvYyOHkkLRZGKL6dA0oKo77CSH4H1N
lGotA766fERZNznsKQvPZSXLAt16Yc3ZUDnEAH1mbp0c2IenMqcL5VCKJsSh
KSIfPM0/MYovyCFjJ+tSTXsJFOzcpgtblUNRr8mJRJdSeJsrQj25ecC/Ll7w
G2cZyC3cIHlALo8RLSeO/PN8BN/cCf7sScjjQDof9yPRSuBgK14zV5TH81W5
kpqvK0Gv+cTPhkPymDfkxYE+VVC0n/TtmqE8RpuxKpR3VoNVrOjE2HV5LKXL
1rqdVQNx8i/HFT3l0VDdvi7naw20Dru+iw2Ux/ySJb5/CrXAydk0pB0nj6xe
VHd+PK8Fg9ZLg9kp8hjy/b63IWEdeFsT9m9ly+OQbt8tJ+06GC027KyulkcC
Xo0zPs/rgOjEj+eUjfJIpn5MS+5PHSiuPGhxaJdHX2/Oqypy9WATr9HY3ieP
4TYOoq529XBfabKe6408HiOXvdfxoB6evwut8Ro/sL/ePMPYVQ8rvmJVb6bl
MXAunFX/ez1w8Qw+kv4mjwmbV3VPsDbAifabJRG/5PG4epc2gWYDTH1mjGj5
K4+F22jRadEAhwg+Kv0hUECq+xmt0r4NEM5QIcRIqoDdy8fVZJIaDv6nQCZp
SgWcEVHurilrAA7FU0THaRXwmnZIadmzBrDX4vttxaiAj6/v+ZIMNkD1mR9f
fFkVcNDH4sjTsQbYsu14m8SpgE6kz9xrpxpA2z2xs5JXAd07i2WWZxogLsyu
tldQAX8073JZzDbAeJJy/rSoAn6++j1n83MDCBWSJG5LHuCnJoy3jDeAS/27
EBY5BVx1VGkoeNUAT1+U3JJTUsBia7LNirYGIBj1sTFQU8BPw3S6YxUNcHLO
wMROUwFdq83khFMaIHWdEwOPKWCLIq9qqn8DTJMsy6dqK6BuH9krlUsNIMXa
yl+jp4Cnbynbkh3o5SkaR//SUAFPPFI4y8LSAG2qVvuzxgqYaNux5bxUD5R6
8j92TRXQ1s/zIcvzeshxfDukaKmAhwz0LpVeqIdF74K2k9YK+FZF26eevx6U
73lUX7FXwK6H/12+NFcH/aWs99OvK2Ae+ampz/Z1wNS0EFR/UwHFxD0PrfDV
waX+xhuvPBRQVC77+dZYLfxaND9FGKiAH33nZCKO1cKRv1JHuUMUUGLv+GXd
1RqIoNyRUQ0/yD+wxByUWQNcUjk0zrEKWFhDEPJy8jHoXp8ZfJOlgD8NuUiW
tyvh4fdrhnnPFVCdx5jgwZMSmNk9rNnSeaBHh+/oj4VikKGjlRrtOdDPpZmM
mKMYOuQeU1IMHfTjRHVhjH8hLN1c6785ddAvZh/X0RN5oBLS3RQ1o4AcG9Vn
xIlz4XZCSlnhggIGr5PwEPtkA0uteuT7VQXcNivZR9cMOPo7QB/2FbDd92tV
R0UyUNxP82IiVkQn+b6S044PYFjySeE8mSKKbHizjkgkgaPt6n4MnSL6998K
MImPB4VdKjlrJkW8nTiYPHciDrbTxC8psSmiYrXwrjZHDMS/sWka51VESaOw
YliPAAuXoIUKQUXMqZE3GCK+CyIUGSy3RRUxienxMrn0HVgtfKptKqmIMheq
vOeuhUITjNwSlVXE1eFcusbI2xD26UfOloIiKtGK5/TfCgQjH5pXgyoH/AQY
/1uK9wM2Zsl/ORqKKHSKVYpy0Ru+VB+XdD+iiE0mx2RpAzyh0tDuwnE8iJ92
ypo0dAfvheC7HLqK2NzCsnzZ/BZgWGb9sr4iNpS6EnwyuQFUfE1f2k4qImvc
s7evPK7BaPMofdJpRaSrZv1+lN8Jcs7/OnrlrCK2/mtJ6jNzBKdftC4aFxTx
JJjH/uG9AspxUhnUlorY5fLyl4GvA+xJ6PdPWSni3j2lPiFnB+jvtt+stVNE
oMn1erfmAEk2ISJ3HRUxbSiGP43bES7tZJlevKaIr+w3h+/OXgWxtOYQaVdF
HOf+kZFhfA1+Ko9V77kpolb+pHuN9Q1oef174q2XIvYE/KNri70Fd6/TUxf7
KWJV9bvfuu3uYEIuc8g3SBHNBmgFsw28gKvQ4OrJUEWMv/VH/bOkL8wdu5LC
d1cRV5xSA6gcAqD6Y+iLX5EH/FPvMBNvBYOvd86v7lhF5LpZJ2TgEQraTM/4
0xIU8Q9wX5BNuwPvT6wHHEs7qM9k8/3w9UgomGcoZ8xSRO/TEbJfuWLAJVR2
fC5XEa/wzfnhVhwQNDuqxJQqYocXx+YgXxK8PHfHzqpCEbfKWjJLhh9A8s/c
BMXHipggkitikZ0CkhIfVt4/VcR3F/gwyjsd1l9scFW0KOK6PtXhiPBMaLNm
OhHcpoj958XsrcqywfThyWKRXkU0/azmTceRDwFkbZfd3h3075xN1hHOEtAr
+Bij+0ERSU57BYm5lQLDsT/N7JMH8V/8iMfelkGRlwJb25wiunyOtt6uqIBX
cwVDVOuK+LHuo172pxqoKS4aVdhSxMajJKnDT2oh2bHko9mOIp6Q3qQjfHBw
fiw+WiggUUKe0SM+U+caYGm5Zk+TVQlpBgt9eFcaYaiyjsSWUwnXFLaKno40
Qd2NBqp7vEoY3O0yqvGsGfx+NLKNiCqhygDv6PnIZ0Cx1iZ3XU0Jn3a38d6h
b4eV+g6VRE0lDIyxO76z1A5vPLs0G48pocmbWbsk2w54uNmjR6yvhOdeCSgS
qHSCf2OfkeRJJWSpVdn8l94JVr4DpqdPK2GvUiF38m4niG3/Z5V5QQm5FoxM
V1u7gOrZkEOnpRL+sPdnteZ4AasBb659tVbC/FXXVwO3XsCT3RFvZSclZKD9
c26fvRvS2t4Fmrso4bhYtlmkYzcE3n4fdvuWEt5Sfj5wr7YbdAk/3R/0VcLh
s8ceBx3pAYmuieRfgUr46daolU5gD9DcmcpgD1VCl//u7/A29cBPnem8o3eV
8PnFkvjtHz0wQjJTYh+lhJ6BZDr9wr3wtGe2MipOCY9kPLPyPdsLGRHzdY8T
ldCMoxL2gnshWP9r07sUJZwTHj91uqQX7Ci+tf1LV0K555d/2Q30gt7AUrdg
zkE/1oIjlBZ7QTJ65aV+gRLW5n41aSbqA5qTq29ulCjhW29X13WOPvhJ/XPs
QbkSco5FD8xI9cHof78mmquVcC/lCfVdjT5oilub+VynhEaSX+Mntfogy3hj
kbRRCbXrbc7/1OuD2/R/VqWfKeHjsMXfXfp9YPdma/1MuxIa5mdFX9LtA73E
7W2fF0o488enredIH0iZ7hDk9CnhFfq8YgrFPqBj3iPrHjzYT63RXQqCffB7
ZJ9m6bUSZqmRbBvS9sG7ZEJmhlElvHOKPebKRi80nSfmVBs/4FMxTJ7woRey
2Ej5L00ooUf5Z+NPzb0Q8p5MNGxaCTUpP9w1T+0FhzQK6bK5g/4xGLLw3ewF
A3MqxaFFJVRMOJR7VLcXpLlo1NdXlFDIg590iLUX6D7RHuX6pYR2X/gtFmZ7
4HcmvQ5uHOzHJvu5nOoeaOFlPh27q4RsZ3aSL2j2AN81mwfXCZVxqvnt0Oh+
N4Q+rXpvSKqMRrKeEW1d3WBw2sCGklYZZdsDQg5pdcNYSJBbBI8yjnvYUDwS
fgGar14+uSKgjB3f3bys33dBNifHtq6IMvJdYku1iOoCh7q6MGIZZVznOi6S
ttgJa7NfH4QcVsYL9Q2z2Q87wExBddwalDGaGLJnsANaAsN4QEcZa/ZyH44O
t0MYK2/xrqEy7j+1abrv1gYM+qZP/S2U8Wlt/dfGsmcgU9467umnjCmaSqRf
1Z5CwiYl77kgZaS4ISLrlPAE1rQv2CqHKuM/qVO+9isN0PLp17dfkcrIvvRE
Ma+yHgxoxf+5pinj/Wd58c1na6HS3BOMs5TxhinhZHZvDdCXdN6RzVPGrwYF
isFHa2Ds2CWaldIDPXwehOfdrAbNmEcmgxUH/K6cNGY/mKdz3m8mlz9Wxjnp
m48r71XClVuJvM6Nylh4a6pbpqcc+lunbA2eKSMzT09n1O9HIEMpUyLerozl
cQRD3yQfQcJ5vyWyF8rI1Tt1PuB6Gazn98ot9B7oddvdzqmxFC6uMnv0vFRG
u4DIqDHaUnimadtYNKSM6lwwseBaAmEj/8B+TBlX8+TA8kwxLPCfCNf+qIz8
reWSS8NFcMIltV9wShkDM+f6blkXQWXTLA3hjDIKqolabW0WAgOp4pnp+QN9
vE9K3E0vBM8zwSnt35RRe5FGi02/EN5nD37I+a6MMuyXoor3C0BziYMv+Jcy
Luz5JIi/KIAcNUe7yxvK6EumERSTWADcZWnB8X+VccJJ+/3W1QJI4xzM6NxV
xobVLdYfhgXAGrP7dI1QBYc/blZpaxZA0o78iCiZChLq9Ol0qBYAvavdjwtU
KnjjsFaRzNECiP2cTB1Np4LqcpK9uiYFQHmmT7yVSQUtjRzHnrsWQETXX51V
NhV0nqA2OZ5WAMQqMjYC3Cqo/M5KMPS/Aggptgo05VdBi57pKXrqQthlS0wL
F1ZBKW8t0qizheAf+aLhqbgKqnl8MwwqLoQ/fzfeLEqrYL1EOqEPQRF4Xpf4
zqWgghcuWEZu2xeBq3Gc6G0NFaThNphJ0S6G5fZ2rdojKnhVZiw9u7UYnBR/
X55FFZSj1T7CcLQE7FgupOqfUMEOMyuh38alYPZRgJzBQgUPPTV5HlXyCI45
NizmBahgyzeeU06PquHZ+wWSkdsqWPx04ziXwWPQOMEpSBqugucE35bzzj8G
JZlgc+fYA74Bfo0+sTUg9lv/pWK2CuoG04zN1dQCXfCniq42Ffx9/FBdcEM9
xPyg7V/vUsHPV3RPMvyoBwpbnBPrO8D7M0mYLtEARLrFPDGvVbBsLS+OKL0B
Nilvxp2dVkHub+crCtyfwOcUoptzhKrI8PDYzhWRRmDord8hIlNF9TvHtHws
GwE3HaIFqVRx8cdfN8kHjZBn1ldsxaSKMbKTsokkTWDDHjsxLqSKU8V6Kgk/
mmA6jdXwlY4qsl9MM/z7qQUYBnrfL+ur4qnUmNUxzmeAf32uUBmpYiHJnfJL
F55BnvnHEP1zqkizXfNx+M0zsOXKbex0UMWb+8ux2c2tkGRocnzaSRUVexRW
tn62Qpc/4ciey0G+Jy8Wt8Weg9An+9XDXqq47UXYVnD/OcxkSog+vauKaiVe
zddPtgHTfx/qRqMO8DkHqYa820B7JxrX4lTxiF5J0UBeGxRc+m6pkKp6MG/L
n6P81QZ2vHVJ5SWqaE9sKjF7rx2STtkLDJSr4sz+rTyGqnboCmKp/lqtij3T
8kXlB+eZ0JT3gEijKlZrmhuYMXSAKZ3EBZ1nqvi7vOPnhkgHhB37MGfbrorX
PqTNF2h2wGzOYYLcPlVsNPJkEbrWASyvV+KeD6ri6zDrc/7hHaC7n8098VoV
haP1zy/ndYCn/OlH2yOqqJWsw9zW3gFF1gTqnOOqaNyqYHb0SweMxtd2q08c
6LWiePEJaSeQdNiZmk2r4kXFf84esp3gINBz48GiKs69iMPte52QbOL9r3ZF
FVsOn31l/awTukPEo978VEUx36ajumudsF4zzvZjXRXfhZW9W5fvApEvUUW0
fw/yqZxuf+7WBecYDyvJ7Koi18nOmm9NXRCutdJuSKiGpJJuDzpJX8BcvvGn
e5Rq6Mr+71Vc7QtIvnyy1JpWDV9ev/n5GtXBfMJp4KHOqIYzfLTuPM7dUJSg
Rf2V48D/n7jkM40eOGd07H0bjxoeWb+kRFDeAyQUhwtTBdRw7rc3/4Dgwf15
W+WwnoQaaox3d7uL9gHLYUVyPhk1NDysHJhQ2wfdm7IjG/Jq+OKaTUuFbj+I
uIpfL1Y/iG8Z5ZQMGYDZS1yZJPpqOP5Un+7Gqf8giYP96oShGg65H7/YwfQK
tEeZlRuM1VCm2Pef2udXUHCSdtDeTA0lEu6m6MS9BjtNgn9dV9TwmLHrxTPZ
b4Fpc6c3w1kNJZ8eHdvjGoau2r9J7jfUMIvSv7cycxiEJNekhLzU8EJivmRc
8QjMsC9YhIaroe8h2yXr9+8gaWRGzDxSDZn0Ty6JOI+Bdvzn3wqxahjs8fh9
5c4YFJB9iJ5+oIaxS7HnDkmMg93GYAsUqqFC+C9rvZiPwFTbH8FeeoD/cZdV
VfQTdLn0mP4oV0M/jtttQu2fQGiubSmnTg3Pa0n3Ev2egC/DtVx7nWpITpVW
u2f0GRLuVy+861HDBN/7n1imPwMaVtRVDahh37/zx7I1piGvs8jw8ls19MhQ
b3XonQaToHw21XdquDeLlTbUX4DgUM4MzQc1jOyzYVsz/gI2NQ/9W6fVUM3S
v97z7RdgcEnWS55TQ081ymhlhhnoEE9kcllUQ22GzFMSp2ZAIDe6nPunGp41
Lqmw7ZyBNxb3vNfW1HDK6t1+yNYMhLCFaw/+OYi3vPUqRnYWpuOCPvrvH+jD
ZuYvlTgL5a7WwcXE6ohFcSe8XsyCx2ktoTfk6pjtfMuMeW0WjigI925Tq2Pq
rpjFNv8ckDGSXhNlUMcnXX1aQoZz8PrXAq0Jizqu908I3XWbg7Th/lp/DnU8
PMMjw586B3b15eeLedSxRz4labVxDqSTY/++FlBHv8XIgLWxOVj3dM3eFlFH
e4dzs/Jrc9B23kRLVFIdA0JLQktp5uGemtL8adkDfHWnCmvheTBhZ4nyV1TH
0xVVStbq88C1tSFTrKqOKkfojlcbzMPs+Ps3rw+pox1Ll4HZhXmobG723D6q
jvGBs0229vPgnZHJIaqtjmcIFQknXOYBA4JaT+up42vJCvO3HvNAecnaxt9Q
HakvXCkw9p2H4SNaJMXG6sjjMgm2/vOQxStc9tpUHR8fltxiO7Cv7JEYbZup
Y2mQztsgn3mQ+7zwQ8RSHZdsWn8Wus/DVnv/g9PW6ggd1EEPr89DZ165ur/9
gb41rSGOdvMQHRr7qeiqOh7LL3zNd8D3nJ3r7dfX1dG49sTqqxPzwKtjIrx9
Ux23dWr/hWjOw4KwUp+IpzrWnErM1pWchxoSluunfdVx0JrvhwjbPPjNb9D5
B6rjXwl3d1nCeaApbTZ7Ha6OT8WtR7+8nYOxe5nbfyPV8VN/tmX+QT9ynYJy
ROLU0fLYNcuazDlQktJa8Es5qDfbT3zCag7+UQlHF6Wro4t00EeyY3PQvUwi
9zpbHZkkdCazuOfgQlW/l0iJOl7r/g/4h2dB4H455+lydXz/xMaSpWIWllxj
n/tVq6M00+zFiLBZCFQwIX39VB2vhxzj/y4zCwX175P9+tRx2GNjkvLWDLgk
N2sUDarjVsjPYdmjM6DqlTkx9FodO95HuH2hmIF+NWsRkXF1dGaUOEaY9QVW
mxfqhxYP7NvvLf1rp+FQx8awMJUG9vK9CmM4MglhMsJPyOk0kHJvYcD86QT8
l2bycJlRA1cX4uKm5SbAyq3Csp5TAznO0oeScn+CO0K2c9qSGrj279J4+sw4
vAr/b8P2fxRZdzzV7xf3NSuijEiRCInISMZ1z7lbCqFhZCbJyMjOSlYl2Ssr
ISOSkL2VllBJisw0pawS+t3fn+f1eZ7zvM/7vM95znOvrgamxf/3p0TvFWz5
+ecN7bAGTuj35dfXvAQbS9l6uSMamNCwq05A6iX82h8W/POEBpbYP88mrvaB
8PQBrotnNPBldl+nm+8LsD14SyQ3UgOXppcEHjPfbyXVvcuXrmhg1ZryrknO
hzC/c+39mVgN/CfDkj/J1wWRy6Y3lVI0sKl7vchR5Q4oLeXd01KggUcVXrZU
uLTAvDCB51axBrrMScpRnzUBMfzsTGSZBj55ud9j5EAj9J7srDSo1kCbl6Qb
tap1sLAxQHukUwN5n7q/sWu9D8SA22Lt3Rr40enQ3fawSoj++OpfwTMN1Cnk
/JBgdA9EW5Q6XV8xvz/Ylem7uxxOyVsWGg0y47ls9qOD7w7cSb0Svf+9Bhrl
3eqQ5SsBcJ86vDqhgYVbj/MuHy2E6Pf8SmPTGlg5cfTX/Yx86NfFzV1fNVCe
vTNQbIk5D1e7zhX90MB1+nvvdJ+9CfY7b7yOmdPA+j9J8Rcnc6DsWvcD9yUN
9JM/s2WLRBYs/llIP/pXAxfX/QkziMiAy/1HrLazaaKq6H+LAd3JELm6cu8b
pyY2qK0PKClPhLDdxRxNGzRRY5axvaE2HoJNjpld49VEGAq7qfr0OgQE/1dm
ya+JgzdYyDaOMeBTXMaiuEUTz2ySoz2hX4bzr8yOrm3VxDjFK10E+0hw/8dR
1COmie2uL65dbL4ELnsq/2bv1ETXPS/a7EwuguMxK0M3aU2M33BqxJQUDPah
G26BnCaW8sluOKkbADalNYt8ezVxsvakve8DH7AcsNMb3aeJ5W/Nja2vnAfz
//iyK9Q0sVpkLXmg0R2OKzT8DNXQxCQzufc2yS5gfOIMzYigiXavdTkKrB3B
IEwgfSdq4tRIvpZrrz3olbV8+0nRxD2TvScHP9gCfdAZ2xmayJ2YFujAYw1k
NpGkhEOamB610L3gawGg2DltZ6iJJdyiPY1zpkAwc9dWNdFEG4+s0VCPE6AR
vv062wlNNK4+3O4+cRzU7naPvzTXRNJc3wEZwgnYN+Slnm/FxP/x26/Cc6ag
wLHzipedJtb2PRy0P2cOcvueD1MdNJF/fdQdHSVLkLHwVxZy0sTMz+4CTcY2
IBkpHTHlqolHf86RPtrZgfi9vsFqD03kfe+me7vdHkTfBylEemviff79eS0u
Z2AL157Q4/5MfAs9CztOOoGAysBLmSAm30rxFz5ddYVNlmGyS6GaGPn6Y+b9
C+7AE6144VG4Jq4QCLzc+p7APhIp6RijiVt6Xt0Y1vSBxcsHPIpvaOIG3g8q
d9hC4FfVRKd/DjPfz078SS4PhZkP10X0bmni0Ft5PZuxizC9/1PLlxJNXEcK
CG08Fg6DY2m8CvWamBLqXU45dRle8dDsVpqYNo/Uq6HiK9B74Gf1szZNzPAY
TsDZq/D42kFL18eaKDgSrpvuHwv1msul5YOaOPc12c61Oh5q7Av/Bb/XxH1H
jJaEDRLg/nVjE8NRpr/tNwUmJhLgzlTJ8o9pTTymISUQyZEERZtOGLR+1cQr
DnP21XFJkK/Nlhf3QxNrDnuoVQknQ1a8xUHlJU10U+YMGxROgcqxb15H/2qi
2PvDXicyUqBbOTjX958myikXLNpvSYWRi3zPMti00Glk3CT7airM9+UuNXFp
4VLdJrZbf1Jhg6SK1Bi3Fvboh30XtEkDCc8OA/ZNWshubNaQ1pwG6u1HA2QF
tfAxRU9mQDAdDvN/LNAT0ULCooOxn1062Nn59rlu18I75XcVFG+ng1/lutU4
CS30HJN8UTKeDrGsGburdmkh373fnwsEM+CWsfzRN7u1kPtxsfJ7QgbU5jWG
LCtoYRK3UR+fRQb0/NIvFVPWQkbe5Og6twyYJH8YwP1aqJBeNpLslwHLCe6s
9ppaeO6QvnyMbwZsmvhPMUqHuf9VRFS3cwbIqCaalZC0cPXhSILSsQwgXNoV
8ZzGtDkl9cpVM8DoZXXF7EEtXH8qNlyLKwMcpBjvBQy08ER/8LmXL9Ih8Pwg
1wFjLfRdk2EJu5YOCR1nVc2Pa6HE7U/nzDAdigT+WgWZa2H+vpJU309p0Hwq
5kqulRaS/IJtOCLT4NV9sZoOOy2kX3vLd2BrGnxhuzv20UEL4Vhw6uG8VPhn
ghs3OGvhGRNGX/zOVBDM79PY68bcX/u51Co1BfbM29kfOa+FW24P0ITZU+B4
UkRDygUtTH5ev39rZxK4TG6ZrgvRwmr9I1fPiCRBmFoR//AlLRyNjSGUnk6E
sldPzkrFaKENv1pk5vd4YBfaJFKRqYWinMt1trHXQPT0TcrLXKb/58a76r5f
hX3VKm6L+Vrof0BPZPOhK2Bx7NhDQpkW9sdqXn/HGQWVyRlej5u0cId+1q+r
1aHQPSWf+61NC585SEpeOBcMI/ubnvI91MKtI5SNl69cgPUDHySP92jhjPX9
d2yiPiAu42Hg36+FUV83DT1NPA9qPqwBmQNa6P7NreOzigfoPUwsaBnSwr2c
qwd05l3BZot03/iIFnLG81+YeXMWfBxqVjgmmPH995oYJ+QAMTWM3XLTWtjw
x0bd5J7d/98DJoe/MvP7vGOi39IaHhx3CnH7wYxPlEOZVcocnhX+LUmY00KV
7/F5oQ+OwfhizED1khYKUWcehe8wht90cda3f7VwgCPKzLTRAHhT7+5d+cfM
139cIgtf9CDfMyZ1kE0bv5i6ZVlN6IKmwdn/qrm08dVSwM2Y47rQI0d3jufW
xudhKlH3yAfBnkPqtSufNgYFrrB55B+C5dF/RD0BbSRprBrO+BhCXOP7Ihlh
bcxd6LGaMTP+//8r/GzbtHEkabPO4+Jj0HA+JfCDuDaafrLPiC00gyOG5z82
SGqj3VZjVYVDVvBxz5EjaTLaeDJoiPDfY1sI5Nxb77VHG/cV5vv41dsD//j6
XUaK2vhkbovLvcUzUNT08dpeFW0c//5NWjHAGXTSO5bWq2vjmqhgNoXkBo5H
gp6262hjU1Gl4dmu87Amb74/h6SNqQu8d2+z+kAi14GcCzRt5JXP+Nxg5gfN
zbOeavraWC7Tkb1ePwiE9tqLFp7URgUJqdAaznBoX3/o7OUL2ni4waZdLf06
mE7Jvjwdoo2avgcZWZFx8L2VXYd8SRu9FcWlvCAeRPyaN/29oo1iJlwy++4k
gNtH5VqXDG3kmmavGXdMBvZ2XsmD2droo32b02FTCmRkfb0qnaeNWfJmEqZV
KfDwaIH1SLE2XglvEiueTYXtHSJcR+q0cX3y2z1N+zOgMnvBXaFJG2/8oWid
aMgARkD/0Lo2bYz6a9fESrgBnsox5W3d2ngs2cZph2ImrNt4ViT7mTb2ufEc
scnJhOxPtLCAXm181xU+YMSdBY9z/h1THdRG305FI9aXWWB14X0L33ttPP9j
uT5fMRvmj9fJffvAzLecp1tzeDZcUUlJ7J7Qxuvznbr019kgwXt+NX9aG0uT
xpfUJHKg5rPhmYtftfFB1/in8NM5cKhLoc/yhzb6B/zYrVKQA6O567W15rSR
XnJHX+tDDvgEfszfsqSNOg94lHrW54J0UNFH2l9tvPvw+xyLVC68CnLa7f1P
G933ttVPaOTCpWAFp3w2Aoo97DnndygXVEJmSl9yEXDCT729zTwXxkIqvrPy
EDDKfHVnh0MuxIV6KqlsImBvsXhpqFsu4EU1D1tBAq6JpUv888qFHxcXK+NE
CAizHuMU31zIDqudb9lOwPu6RVNHfXLB4FKA+g8JAl78LVim4ZkLq5cIfuLS
BIxvU6UsOuXCnfC1On05Ar6sfKWWbJMLFhGtfwP3EtD4cHWMmEkubIgM07mj
TEALAdbeVHIu1EVSQ97tJ2AyZ/tfHqVccIzibNugRcDh3r2XIkVyQTi6m1WL
SMCiwM9Z29dy4GH0FepZMgEjg8cDLLtywPvy4cg0OgEL9TMZU5E5sOsKb/cj
PQIu1mjmPiHnwMsrveuXDAiom1IjIv0nG8KuJhySMSGgjddz6saSbBiN2fIi
3IKAvyZdSDN/s+D6tcFNVdYEbDijkiaWlQXE2AzjiVMEVPYff8LQzILM6+ID
JBcClm6M3Mt1KhPMEmSG1wIJSLm/dW4wJAPWJX4SV7zI5E9KkCd4JR1qE0ts
LCMIGBfh5a7pnQ5bkhUnG64x8ap1b7xpkQb9qepf/bIJeNL9ffHp/1JAL4v+
51cLAftF5b6eGYuDP1nrtCU7CcigHfimpBEHRdlPAo26CcgvPCLqJ3YdOHMN
WCp6CXgnW/lKgV8MdOQd53IdI+DT44a+SI0Cz1siBzOnCNhoOOdP+RcBkvlD
V55+JuCHczdCnjaH///3ZN49vwjYfei637x+GBCKHISmWXVQ0l1pbe3CBcg+
c7ublUsHjZz5Apsc/IFF9tMFcW4drDNQX3Y85QudBWfHjwnoIMvIm7unUs6D
zOmSZA9hHUxzbh0N7vGA6F1fda9t08HEpA/+27e7g/4tl7udUjrIX3rz3OWF
s1BhV2Y3KquD2pda+XaLngF+yRmhFXkdTFrkwqFz9uA1pvhYeJ8OvtSRLw6Z
t4WBXLdAVTUdfM8z7JF+who0bCqUDDV0MIa7fiBhjwVk7Pg57kTQwTsKtaW5
didgZUQ5JRJ1UE3k+9dtLEfBKtvzYB5VB4PsJWJY2Iyg1fL+SpOuDg7R/5we
en0YJMXm7749rIOp/3axMc7pQvh7tVMLR3SwbDxocPNzKny84b1l8zEdHHgo
RjvygwS6FjWPFcx0MDhIduOzPIAS0aVAXUsmnps3bQVHCMAzdGCfva0Oup1O
P5YRqQ1u6X4TIad10Lcglgrx2tBvWpdy46wOXiRHP6/6SQA1keWDD1x1MGMh
TzU2AyDljdZqv4cOmjhN5xY3k+B3yoWKGW8dlKOVUPRoVDA/3nhqQ4AOXpmQ
t2ExY0Cj0OoWmWAm3xsnsnR+6oH4a50npDAdbI0KitrKYQihScFBlpFM/5k1
deVdRjBu0rLP/4oORnBfM9LVOQpUAZbJpFgdJP0NwLDJ47Au4aLesxQm/4n7
5ETKT0L89XBh7ds6WDrdKz7AfL/MG3Q9OV6qg9ZTDwTcIxzgOC9nsOddHVw0
ufaAhegIoteiJosf6OCaQ1hZwj1nyLty5Z5Itw6KG00cW1T2AHa9p/Zqz3QQ
Ul7YVq54gMN6HpEjvTrodNSo61OrJ8hHXwuOGtTB3Nq5bGsVL4hl9Cjfeq+D
W/c6kDeNeMEsJ99U86gOunui+/ZQb6iKiDu0+EkHs/ldE7rzfWALrW9t83cd
jC4XZTGU8QU/dv7KvT91kPV4jubaDV8Y6jA+fXBBBzObfX67cfgx58lEkdN/
mOelxbjp2/lBNvnV09BVHVR85Uo2rPQDFlahkMz/iBgstuyus+AHdm3HVGo5
iEhevK7xY48/dIWmTL1cT0T6uqKveib+cPup5JuijUQM3cUSPeriD5e33O0O
2kzEO0drtF4H+IOzrXa9sRAR3RqfVKoH+YP+nUelsluJGHi0y0LMyx+Ulkyy
VrYT0fi3otwda3/YTB6N7ZMg4jqHQatN6A9zMS6hhbuIeMTO+PhFIX94/ea3
x4XdRCR6/SThqB88kIw4dUSBiF2T5d9Tc/0g3XXzMel9RHSpUgp+f9wPLtRm
0ZdViaiRr6zozOYHlmx7NF4cIOLfkeQNJYW+AAY1cvnaRNwdoFHGRfKFnenk
bf5AxI2SjYvL/T4wpWixJskg4sKq1oOCD97wyH/6x5IeEUW/SD/3sPCG4s7z
Y88MiKi+cGf/Sq8XuJrHdPocJ6JRxLfy9tLzsBDRdOXJaSYfyorbqpjz4pve
g4E5Z4n4MeWt50isO9RtG3D1ciVif3neSOYrNwi6N3NE3JuI9hxcDQyqK3AM
7xD2DCdiroKm4w9TR5iWvbOOEU1ExUG8+5/qGXjsqbG8LYaIrS3NFmMiDlDa
1Pl19joR+X8U6OnznIZr64yGuxKJyJkY9ZOTzx7cTIZ7MlKJuL/NMq1P8hQY
ZZ9tdbtBRNnTwbEeB+1A9fPCPWoOEbtfRZqXhtuCkFrYra23iHjAT2iKPGAD
S8G8yTOFRCxyVcheBht4+zgjsqOEiJWvCVrSUdbQICjrl1ZORPn1772vd1lB
lvX9s66VRJwWEjcoIFpBSAlYkGuI+IzC/v35giXYLjw9LFxPxAtcqeb2M5ZA
QVPityYi8kbnhFfLW4H01UmltjYiBm06ob1WYQVcA+47U7qI6LV8WOrsRWv4
LLHK7/yYqQddVwPOIzbw1PkyOz4nou3YkyPzXLZQViO0KNhHRIlsmcO/PtvC
9f/ypj+/ImI1l2icw5IdeBxWfNs8SMSTE/8+Fynbg0lq/ZPE90S8VPst7L+M
07B/nN7oOMrkLzKu/rbyGRDe+7JMZ5KIAkbx/1r/OMIfX+sc/k9M/SWsFVjP
OcG79q9x01+JGKAU23hxhys0bfQLa/xBxLb79mN8IW6QY8ruFT/HzNd4Fve5
9R5w8VbcaYclIkr5T+n3unoCTbNYd9M/IvaqzI8To7wBi0X5NdgAt8ieVPlj
5wuErTHvrLkAW3+7rP628geVP+fO3eUDjDU5WrWnNggUz44eeCMAGChu8LV0
QyjIvTX6758wIN1Qqdr64EWQqFNLMpAAdH6lFpS5eAm2yxVa+uwCrLsxxPfQ
PgKE04Vls3cDKnqp+uqPRwKv/3Ld932A3juH/RU2XIEVjdYPMSTAj7/0PxSG
xsHvIuXiKhqgsrvwd3e3eJgTueX5/iDgrF6k/sKpBPjyO4JDwRhQ/hfxT9XJ
JBisPST/1A5QQPL2QbuLaVCl8cZnfTjgi8G/gZcSc6GiSBeVowGnuVz/pW6/
CaUi9evNYgDv5g30mebfhLzfmZlFSYDsqW0L18vzINuR16E3DfAIZW6b5b5b
kD4YovQ7E7Cz/U9X+N1bEFdr184oAMxp3f4uLj8fYna/uupWzMRXaKj1fGsB
RKXRjqWWAfqdOHJD8GoBBPvt/vSxGrDZhBIfalMI/p/S7/HWAz54KhLN1VkI
XqbcF9SbAV2T1YesJG+Ds8bMxsiHTD5JihdO9twGhyLrN2VPAJ94DU75bSsC
O5G+3Nc9gBYa7K7GdkVgGU12Wu0HlNYx9LmTVwSmv++rSr8BHLvnts/gfREc
dZRePfwOMKJEq4eVrxgMB1Meen0A7BPc35yuVQx6uuviMicAt352H/loVQz0
Wn+zzmlAw8WQO+0XioG8+6vkt6+Ak6/1PTbEF4NO2slvArOAlbsbHHOzi0Fj
XU+19jxgy+7hSef8YlDzg5BTvwGPdz93Mcsrhn2fKnSvrgBWP/vvjXlaMWxR
2HzZjAXRqFDK+kxkMQhOPnZ1ZUX0/Rbw4IJLMWzODDO+yI7Ia/ZTKEOvGHq2
2g54cCK2Srz62ytVDDGpYG63DtFww3+n5RaLQE9IfMR4A+KmvQcJlW1FzHly
xZbCg/hpN29BcGQRPNz0bkqVFzEg6u1iAbUILsXWnd21CbFivKqGsnIb1i77
eHAIIs4qvyedNr0NjVzHFhaEEB9VJ+aprRZCQISq/0dhxB+5Ty5uziyEhdDZ
0EfbEE3ZU2/WdBdA5VoPe60Y4qvbU78+Hy8A98Cy6KIdiE/l97ayjObDN1+n
uMtSiJEVFfffTNyCkgVdwQBpxJqpur0S1rfgzHnZNCdZxGxq5q2TA3kwfm4y
55A8YkJJxvXpupvw9rTV3Y2qiOYNoblTjdnw0MS4J56MGD99U1ZgLAnC+/YZ
h1ERd979rmhamggkQ74BTzqTn4qP+z/4J0Cj3rNhEz3Ekkr8ESobBwHdJbbU
w4gOV66+27Y5FjTol6fUDJjnnWy5FTZxFe6T6N+FjBFdvAv1bNqiwL1llwfn
UUS5Qs03LH0RoKjDtrB4DDEq/uBG0p9L8K1+zG/6BJNv4XPnDxLCoESjdeWN
GeKzMzlfDmaGgmNNdmi3BaLFi18Vv9SDQVotiL3OEnHl6q74PX4XYPyeRXSx
NSL3hTKuDhZ/yFXS4smwRby/0Khp+NoHrMpE4q6cQnzLZj7qsuwF2+WXBC6c
Rix2uavY4XUehopepzqfQRSJkcj876AnpMpUbTt5FvFF4IG4kQsecDQ/Ieew
M2KDYdKMEL8Hc172kNJxRdzhvPPimU0e0JtjeHuvG6In+xwxmbk+VkxRXtwD
cf6T1TlbU084fIPnLu95xLU3nDdjmPfv+q1fVf55IcZ4t0e/9PeGhymPa374
IC64x+Z/e+QL4YJFWqN+iGF/JjsjMgKAnBDZ3BuAeO6v7BnSYhCwbDpNbgtE
VPnBNf/2Ryg0X6M8vBeMyF5eQa/YewkucEvq5YUibjjYpvquJgISPrVwXg5D
pPbEfzkfHA0lXZYdbuGIH0X/WUQmXIW2vL8hxyMRw1/8jWNbiIXBkHSCTjQz
f/L6bh9N4uHHyQN/pK4g0lLVt5gdTwROrdfVG2IQewWFhWvDkkFtfpPS4HVE
yzVWgZCTGXCor/xrczyiGW3N35n5vrcrP1xUkIhYbrR176HpHIh3jN55PhXx
iXOLjbzgLSiiyYyYpTP1VDB5TO9RPrRKdmbgDcRfLhc55uMLYeb9PwHeHETO
0TMm6edKgKM+q3c+F/HhSFLq69A7sD1V+9q7PMTvOQxWsdJyOGTky1lciHiU
Gmz3/dY9sFMU6rhehGgy/LtTbLgSArjvh/iUILrmu7/QkayCoq6Z35RyRK+7
Ot4LL2qgJS+mek8FE/9f5VojjVoYCNnjubkS8aSec4vMnTpg13L4OlLN7AfZ
vuVB1Y1gWz487N/E5H/91Ymd+W3gd/VChk0L4oM3m6NXwtohznHrCUYbYt6g
27uLDh3QLHmsV7ALsa7jv3+PtLpANPVZ+91niMKVy/up/I/hVUjD7al3iJ9V
Um/m5fXC15Nm9s+Gmf3BVF/0qFwfsGotSdz/wOwHl5sfHanoA+V5lYzQCcS5
P5v/JDb3Q6xjScy2r0z+zIu3Sw2+AoZRuofRMlPvy+FjXKOD8KVVLsN2BbHt
+cz+Z/ZvIXZffbvHGmKl6w8D++m3MMD3TiCBlYTlH4Pexk4NgUPP9pr+DST8
epwQUdH+HjYQy0bGeUg4LbHI+KwyDOVlOlxzvCSc3S1rI507DIsxVqYCAiQ8
8dNQ5ZTHCEQeyl022UbCK9diqn2/f4A9Dfuk7MVI6Gj/aXaH5Cj07Gk75LWD
hCzRwnUDh0Zhy4bxzCQpEm78JOyqkjEK9f6eXfnSJBRhb2582TwKVp9ZZ6pk
Sfh+8bFz69goFHRLwWt5Ev5+tyXRX3IMdDWqzkztJeHT9Ov1NByDb7epcQtK
JFQMCY08eXIM4oRf13KoMNdbfnRr9hkDtajTY0JqJJx33L7N5foYDC4urJdR
J2FuxWZ9h8IxCHSIVFHXICEHksbKGsZAYmCLBV2L6b/hYivlxRh00m5fOk4g
4d2dLYO7x8bAsfrAHQciCTnflgtZ/RwDHunuVz5IwoTaq+aT/8agIsl0NZLM
jHdpMrCRZxyOsn+WTqWSsEQpGqeFx+H3eX+D23QSsnddPXp65zhkTqz3faBL
Qsm5C0YH5MYBTTJyHumRMGisuNZSaRwm2/d0vzlMQom/afODquMQrdIwO21A
wo+PLpkXq4+DQt6hrb+PkLD14ozCiwPj0Lv5PWmdCQlLK7Ry9Ji210UXJ5Fj
JAwGhaFt+8dB5OdKwu4TJKzt0f+PojwOjTbXGjTMmHxd2qHZKj8ONr1ik7oW
JFQ3/FOWuGsc2LCcx8yShH5pUTeato1D4V3i/rPWJOxOenSUuHkc9Ha8sPS3
JWG2xJnDWzjGYSbWOvLyKeb6/5zF6EtjkLD2ozz9NBP/0Gpiz/QYqJ8LfVN8
hoQtPw/WVAyMwdDwJpb6s0x+NfD5944xkGxSNhpyJaG7x+bgkPQxeKjQ7v/F
jYR//dwogxfHwCnTOG/Zg4RhXc9PJTmOQeWF83OiPiS8uOG9A0V5DI5/Zdsu
70fC9SJ3W3QExmDZPImqHUDC3ZTlsyVzo0DWqk62CCahtUPJt5m7o1Do5myp
G8rUv0KWysHYUdhQsFN6fxgJv/tmPjjpPAr9fLFVvJHMetF45vpw5yjYTjm8
bLtGQp+guR01LB+gU1TsRvl1Zn2sNiydLhmB3Ude2t2IJ+Hm6wvSv41GYLYe
fnklk5Cv0cRj/Y1hCI0T2bw7i4Q5Il7/vm95D5NdPYOCOSRMW3a/X3fvHej+
Dc/97yYJCadDV9gOvQM+h59K7/KZ+noke9DVfwiytZ8YxN5h6t2vkV+sexCa
Pl6ImW8godWRS0t15NcgsV3l6FgTCeOur6z29L6CcKNP23paSHif+8WHP1av
4HDj0dLbHSRMUvtXyh74Et7H731i/pSpz8v9X2Ub+wAfTcQznpPw8WrybUmD
PshfSTdTe8HUY6+6086xXnA+w/l540sS1jk0NxRs6IVlwgeutiESGnt37dcd
eQZWnskvyt6TULP7oPW+rc+g/fah1IwREnpatxZymj6FK/y1Ml7jJBzhu9po
P/4YZhjnZmwmSTgZVzp0UvExGAftqtH/SMKYfY5kqZBu2Popjib7hYTrorh3
f1J6BIFijI2C30hocP2/LEbcQxg1Xn3FMkPCb9usHqsvdkFR01n7IeZTvXx2
z68zLzuBZ26HwqM5pt7vz2XN6XWC++6BufsLJPR/8HjyZncHaCSSL137w9Qz
n2VV70A77Lb4WnPrLwmlHP8WOFu1w1appC91qyRsT3Iqu/m9DTZ8JYj3/iOh
6ew3zpDwNliunDL6+B8Z7ZSyTNdLtcGXgNiIFTYynt/bcQUet8I78oE6fk4y
VgZ1lG71bYVnG0a/7V5HRnk5h9FohVZo7I+WgA1k3CC/pX2mvwXuZCgfPcZD
xkfsnuviLVogy24oypmXjD+5rpfd+9UMsXsuNVzcRMZjd5wvraQ2Q/Av+R+p
/GQcOrXzwqZDzeBW/0qyXJCMFn9VZEK5m8EmLOh45xYyBlrZG/UPNsERPZkr
QyJkdBPtfhBW2QQk/hdNs6JkdBA3f8aa1gQqQ74/OcXI6FeqnFYf3QSSeRLS
YjvIOJ/FV7o+vAkEnB6bqu4kY+P1l9t0LzcBu4pnzEEpMh74oJLyKLUJ5v+I
tlpLk7FA7LPnq/ImmGrrmPOWJWOvatibmudNMHDZRTZGjoyiiy+H7s81wUMj
IYs8eTJyBRNLeSWaoWZrc2ztXjJmKA7eX2/cDLfHHNp7lMj4aaq9aTq6GaI9
auX+qpKxC9MdbVhbwE/T1nKzOhlLqf/UYigtcPa/DfGyGmTMfLXOvCWyBfTi
LX6bEMj4VFqz+eC6VtAyY1dwIpLxzs6rfr/3tIL8zjLrUCRjH/8xIUf9VuC5
t/bwDpWMjPQNIZ5xrbDqd3u5nU5Gm42T669VtMIMHlF8q0vG4+I2do4vWuFF
781kDn0ykoK/Vqeua4PWNL3H2wzJaJ/18GOiZBtU2MytKBsx+Ut75X5Tqw1u
7s7cp2vCzL9QdcvNI22QMEu1tzpGxg9zsdcv2LdBWO33VK8TZOwJoI+I+rTB
+dCUp1fMyOgbOfbKPaIN7HXhX64FGclcccXnE9rg6KZPKg8sydh2rTdAPKsN
qINxDs+tmflN3b3Lo6AN9udqZkzYkrFk9SOPe2kbyDiOP/9zihlfpf1Pqbtt
sGXf1f82OZDRUX7/7fSKNuD8rbpfxpEZ32jV+zHm96WW944EJzKOk21fbSpr
g09REZnGLmSkbDy1nVjUBoOGir2O58goUX6PHH6zDbqF37CFuJNx2n5/JEt6
G9R9CDmQ7EnGt3T9iP7YNii5vdu51IuMR7bu+LLtUhtkuPVlt/mQUbNMRIiF
Ge/VAwH9b/zIeE9t48NbZ9og8J8k50wAGcXfnexUMG0Dy+terqIhZLTdtHMo
Wr0NeMUouPEiGb+L/515L90GzSWbBVgukfEsaZinRbANdjwsr52KZPK52LV0
+2crjK18YrsXS8aI1nqacmkrJFx5MHArjoymFhYp2zNagSwSWZySQEYvZz9x
l8utcEtVyjAwhYwXfn0OCzvbCkfbfu50SyPjYsE6rrPmrcBu2Dpvm0HGARbv
t78OtcJpJ8sMRjYZrdb/uCyo3Apbfsu7auWSUZcatPBgVys8jFiGvXlkDOIR
aRTa2go+Ao/5JfLJuOPYJe69vK0gezN1ir+QWS+2vN7LbK0wqOhQy1FERqnA
d/M/5lsgulHt6u9iMm7ltEatiRb4/KZv30gZGRv+zrDZdrRAxulctr67zH4w
3RTDXs3U/9y5gY57THxHr66PvN0Cpbw8gcXVZAzv5AiLjG0BVxr9kVcTGXO+
/VJItm4B8ZeCGWdayJh3kHWfpUkL9NhMuJi3MevpnaRODL0FgmfugX4HGQ2y
3Ju+a7SAUmAoP3aRUUeJaK2/pwVG1xtOqTxi6vPSwxhf0RaISxWrlX5Mxk7J
1FHN9S2A0t+uiDwloxZHf8qpxWb4WVlvyf2c2T/4fJe7xpohDy/vW+shIwvx
93O1p81g3HOC7Wcvs5/EuJVHVjYD60mZgYl+MvJFjrsnM/vf/c/zRQOvyLiQ
KOhPDGgGe9+OC48HyJgmE7z+lHkzCHIkGDQOkvGbnkDMpwPN4C2hNH/zPTO/
O4yPtX9pApny1YdJI0z+XqyY/25h9iftZ+lRo2QccfyiYJLQBAdOnAXXSTIK
p8wLeSo2wafJA/w2H5l6TW3rxN+NkObJOWX8ian/pkPXDrY0wp9rt65ofCOj
fxy3qxmtEUq2eVrKz5DxYev0UDJ7I5gX4z7xWSY+o6A5n7YGaOgcfs02T0a2
v9UsT9UaIOiv8M4Xf8nIIeL1k8ZVD9GfChRqV8kox2von1pfBwmvVTVu/iPj
s/rV+8audcx5zNDwPBsF94DquZ39tdBzKipImJuCwRNCRZ43H8DgEaHLLBsp
eGk4RPKQ6QMY17mV9JmXgpvq9tWubXoAi8ItpQ38FPTuqlc4eLkGWDj0H+QL
UrDo5+3Z6IM1sOHXUPu1LRQ8I9/cMc9TA+LPFt9ai1KwRnF2OC27GnbXhU/p
bqegbvKjz+6u1aBSyP9TWZyCERGpZfexGgiJuSuiEhT8siRUVSJSDfRQxXXs
khQsuyamnrlQBUdcGwW+S1Gwuu9l2ZM3VWBurrdjQJqCcbH+Ll4tVWDPGNzT
IkvBYwLlqi/vVME5NQf1IjkKul/61b8ttwr8ds6T4uUpOKRKeBKUXgVhvGH6
AXuZ+JPtf0ky7Zi/fGanlChosUZSUMqpgpRPWfaHlSlIuK0o3FpaBbmv5d33
q1KQ6lz/4ltzFZS0110Q38/0t0XjQddgFVTdZURxHaBgRUw39eifKmjOfJ0w
q0HB4gav0QyJaui+fCr7rRYF6d4vu5MMqqHf52dxO4GCit9usqlfqob3p0Kq
S4kU7KBmmTk3V8PHIxvbkpCC+9z6LEVZamBW58azIDIznlnv0J26NbC8R27Q
gUrBgOKje01TaoCXg/ZDQ5eCXr3POq9TH4DIr/7lnXrM9Y8yJcTzH4DkBxtO
7sMUZEv+57m0rhbU6wLFhg0pqL56cKv9WC1YuVYduniCgs39+m9WOurB0Zx8
wsmMgqVD5Zc/UhvAk9FrZ2JBQYZM0w3T7gaI3PnNX9qagmsPlAwOvG6E8tdS
RY8dKHjSJ91d728z1Lbfu1/pSMHzSs2HFsJboP0utNxwomC5x+mRGc5W5v1u
MeB6joKeYW8qPl1rhX86iez8PhSc2qn/4wOz/6c0CQTu8qNgU6d4vVtvGyjo
JM2pB1AwXuYZ1zu+djAnJI9bBFOQP07YJSaqHX42CJmfC6Xg7foh7pCWdojW
TukLDaOgvEuLf+F8O9RopbYWRFLw867geYHjHaBfL6xRG83Uk+CqnlRYB0xq
pt19coWCMhtWuZdLOiCgTkR2OIaCUXd6tkT2dsBmzfTsH7EUXHjd97P2VwcU
1W7dwhpPwQtOJU1RmzuBqJFxTTCRyacjdddXhU54/UCUQzaZgtnH/1E+UDvB
5cCNQM1UCkrdM009ZdYJbA+2zR9KpyC7u/PbAKdOyFDPdLa6QUGHqLTpPX6d
sK9m+4R7FgWXjYtzA8M64dH+LPNLOUx8YXVtFy53glW1WH/yTQp2eqi0qV/r
hHm17INFtyjIwyZe1My0r1aJt9UXUDBPTOCLzNVOkFTL0Xh+m4KGasvaERGd
UHd/R8WHYmZ+fCfP/gzshCOqubK/Spl6mlVQiPDohI+VEjns5RQUvSG8YnGq
E4JUbm4RrqBgdMuOTwnGnSBYuTNWrpKC3yx2OepCJ5Qo53EQqihYYpijnCnX
CaR7kkEGNRTcQuTnucvkZ3DfrXmbWgqmVvQX5C11gFuFlMv5egp+/WB5Nv1d
B3Duy5+IaKTg6RILk5qmDlBVKugvaaWgxNP9nrOBHRC793bFfDcFr3wPu3L4
aztIl8nu5nrK7A9zv8+d6GyHRoWinK3PmfXb75SSl9kOn+WLY4l9FHzh9r4r
+FA7UPeUukS/pWAYx2ffVua8865YfjLjHZMPx30NlMA28JS7Y1E2zMSflDq5
ZNwGObvL9PrHKLgSekTs2H/M+V3m7u7tXyjo2My3yrBvhfhCpVzFbxS0nDfy
bSW2wm6ZCmHSDAVvBD+/zC3aCsek73E6/KLgz/MCA3mFLVAhdX/y7jIF0y9t
ON9xqxm4zpr9zV5h9uPL4eOWLs1gVf5vc+waBXedE5teVG8Gbs3D4MJKxa7p
ADjU3wR2wb+OWbBTcf2JHFHhW01Q25HmosdJxcVknmesPk3gYDCVvnsDFT3z
HrYekWyCxsSrFcI8VLzvYdHa+LcRBN4qP+LkpWLMbJv2yTeN4CQ+OLzAR8UM
zW9FKtWN0HoqeH5yMxUleTM2U5IbQbh4F/crASqmVAzsivNthHMzT3Z2CFEx
Tq6Svv1kI3SqemhUClPx/dzW7M/kRtjmL2x4cysVbT7USyzLN4Jnc9PpuG1U
1Ot+l2ko3AjdbPaBIWJU/FUk0/aVeb/tOLgh8dwOKuY7WEj2zjeAT2xFseVO
KiaEfSeufWyAZy+Ptx6WouKNwMRQ33cNILV1dUBbmoq/97zS1ulvgACrW9/3
yFLRLOZW2ZGnDdB76yC7qBwVaVellyofNoDs5x+i6+WpWPzqnvDpzgYIVkxR
/q1AxdNqGlNnmPar8wTdaUUq5rzZzdbIXC9fN241sI+KqzZcg7ZMf2Fr0d5d
KlR80dt/0Yx53iBFKaZKjYqzP849zmPiUbr8Ou+WOhXpwkQhnWlmP+y5UJeg
QcUHn7ZZyC40wLCAZO9FLSqOtH/ZbMPRCGpm3R/dCVSM8v4oOcXk40r2uVVr
IhWf/ZkZuq/QCGMTgoKGSMVrt1ffdVMaQUOuYQ+RTMWhskVeCctGiD1nS9pL
pWK6HldKlV8jEP6UnePWpWLIiODfoJpGSCAejVg+SMXsx97P8gcb4fOl5Ruf
D1GRlWdr57eVRkjhZTx+ZEjFb1quHnWHmuC7yfcPNUZU7HTjhd1M/VDTExcL
TKjYgjzmMXlN8FNqVCr8BBV7N8RIrLI0g+7ZSK3zZlQse3495KtKM2SXKxjZ
WVCx5nh9WoJDMxzW9A9GayoOoPaujv5mKDTgf7viQMV9Xw3Uwxpb4KQ/Ndbb
h4rV137ufT7aCmg0vCnWj4rux9D+KEcbSMn5JBYGUPGcwDtn9j3M9/Hg7bQ3
wVQM/VZQmHW+Dfw0uG9pRlGx8VEJ/TdHO5zclC9tfJmK5Ijj+uv3tAN8IhQ5
XWX6o+WSuvXbgTPtXNmN60x92Xdv35bUDolLfQ9WU6n4JP7FgUeiHeDzwklr
SwYVjcS6zRe1OsD8NluTYiYVj37KDL9g3gESJ/a3W+cy+SzVWT2b2gHsSj1U
vzxmfsunNR9WdcA055lHcflUPPLnrbFVXweU16Q9ayti6lU+97fSuk5IiFU2
HCqhYrORj7SdZCd4Ozzp+3WHip88KSfbtDuBsGVlQOoeFZOM29rWnDvhibf1
WEQdFT/sFas/3t4J5fq/T2U3UHFDC/x7/roT4qXjP9Y0UVF6c7+ny6dOMH3d
/nW6jVlfycPmEtxdoF1mcY6lk4oHbDLD1Ld1gXjE/KzIQ2a9HuPY5r2nC6bU
ZBYPPmHyETN90pneBd08LX52z6hoOsSuIGnSBXcmT/wN6KFiK9fN5H9WXXC9
cTYosZeK7d0Vu1mdusAz6TLLnX4qquR/nZX16oLjLpKXOl8x6y1Z/ey5oC7Q
pDZwDA9QcdmZ5NYf0QXbtx+NXhhk1usHL40j17qAZf7bBt53VPSdOKw7kdgF
k08jrskMU3FcQMMxMr0LHt0S3wQfqPhZl/+manYXlFx4kHBijIqH1fXVJ292
QazJESH3CSrWDg3kxeUz8ch/To2eouI/pSep+wq74BhbmOjNaSru3Tu3Us+0
Nd6JZtV9puLzVvk5aaa9/f79Hf1fmfrblDTowNzPcvVw3pfvVOSezjfwZPqf
sJvaxTZLRQlWETIhqwseagXf3vaLinf7sucfpDLx8AvvUZtn6lndct1gXBdc
+3L3zuFFKrKv33YtNroL3Nt1lU7/ZtZzyna+58FdcDRj7F7QMrNe31y/HX6+
Cw54BqilrFBxbM2ft9ChC7yK+3/krzHxvB1gnDXtgorRPaX3WWi4fqmEJUq3
C74LX3JoZ6VhoPg5yVn1Lthj+G5nHzsN88pOXUmW6oIzkarDHzhpKDPqvcOR
twvym66mzayjoavph0+mS50grkDg49lIQxtLFnvzjk6wOJX0RJSPhh6lMxkG
hZ2QlvEtQm4zDa2Ef5B2RzHnlT4qSUOAhiv9ZU5DpzuBf33WCl2Ihh0vlIZM
yZ1giAsPjgnT0FROVjJteyfE+Oqft99KwwxP9fpr88z7++Pq54tiNOzey/bc
J6sDKGLHC+J20PBdXVeS+bkOCD1abpOzk4ZJG5/7vCZ0wHK71ZtGaRpWvZVM
DulvhwPLNQlPZZn4fgxsLklvBy9lPoMhORr+KVUzsbNqh5mcls6lvTS8uaTS
Fj7aBvJvhEM599GQNze3eimrDRx53bWFVGj4fXRm+wazNhgPlKhUUWfyQzhc
p9rNnDfNLua4EmkY/XSXkpJICwjEvzUPRBpG/k358tWtGY50K2+5Smby3cRy
7UtHEzxRH48potOQ/RVxV6BtIzQLUAImDGjosyLh4upfBwXP2Y+ZWdOw4AT1
vL7FfRhnt9zkaEvDfpvXtq4plSBOqH7qc4qGO7WVwKP/HqSVnCYnnaHh8qnr
JpcNKiAm6qHSCzcaXuJZY9nfVgKPm8W/DnvQMG3ITvOraTFwLvoUfjvPzDcp
mOPR0m0ItZcV2+BHQ4Gj9abG+gXgRYreQAul4YbqLYY/HXLBg8h5el8YDU0k
PziaVWXDOe3wlm3hNNRIV/2xvzwTHPeHev2KomG5VLCS3UganFZZ6xm+TMOH
RsIby4VSwU4pUO7xVRr+2gx+J+ySwULObyTnOg1nzt9gFdJJAFOZRY2r8TRM
vr5N8s7TODgq5ZXok0hDcs7kX/2xWDCS+PXdNpmpH9ZSNYppDBiIuevqp9Kw
gdTba7xyGQ6JzuRppNNwjr9B88LzKNAVdlmVusFcL/1BIedpBNAEv5zgy6Ih
xfB9QeTiJSBvdqxczqbh3teqEx/0wwB4P/J8zKWhwdLrMOwLBQK3/Zm+PBr2
/rQ7o88SAprrxtsa82momtf8a/5+IKhz2GwvKqRhNf3vqlhjAKiyjvgkFtGw
TiPzG0PYH/b9s+gLLqGhtuJZlp4OX1BYeSvvdIeGtvURB760+IDcnxORx8pp
eDJNTqV2vQ/ILL4exQoaZq3VimrkeIPknIm2QiUN9x+Gq0bB3rBjti9ZuIqG
wZQM54F8b9j+3XCWtYaGoQeWOiI2+cDWL8/1Zh4w4+/NDOFl+t8yfajgbR0N
rxmabecv9wWBycf/OhuY+f+kT5F95webxhjmFU00FG1X1n1PCYCNI11VN1po
2FR2OaZu6gJseEfhi2qj4diJ+52U5iDgGmw769lBw425rGJrT0KA/TV0WnYx
9Wv3ULyG/SL8198kfvARDfXsngpd0Q6DtR5tf7XHzHrr/83WGn0JlroPKHI/
p+HpcDVub9tImO+qjl7sYdbPOhmn61+iYLZddWKsl4a7TgXEUiIuw5dGpbTa
V8x6r+aa//glBkYqZFkd3jPrfeylnrZCArwrKzhpNELD/Gkf3aeyiTBYIvWA
MEpD64sbOb/KJkF//g4Xgcn/8zU/vKaaAl1pwgOtX2koWL++9bBbBtwJ5SrZ
9pdZ7z96/3nH3gT1TX7u+1ZpOMgt4UnZlQctOZ/Uaf+Y/FeFCBvU5UF/8+OO
c2x0tN5chR6jt+DPytXhNm466v74Hp8rXghhMSu3BjbSUcCrJGuluBB4trs6
feWjo9Df8xlnVG+DhLbBkqAgHRsHlE58gSKg+2/a7Lidjs+t7HSOE0qgd93F
N4HidLxPPnfjdVUJmKX9zIqXoOPNNT+TgD2l4PKgf0/DLjoOix1iPOe5A4t0
ys8XMnScTxsYPOh/B0IH7j+Y3E3HI+bvHaPH70DiQhKVdy8dXdnesv0oKYPt
ERzcUkp0tFG2Nv+yvhwKBX36DijT8e6pIT2D0+VQr3rCynY/Hf/mtWeubroL
1I5Hu3wO0PFnn174Ttu78NxY4+sVTTpq189JWJfdhVGPrX5VOkz/FxbNZ7dX
gNN/V4iPgYmfa3/5fzoVMBe3zD5ComOcPiFlzbwCAiWcn/6i0HEoPW78g08F
cFa8i+ei0/FV8fJEdlwFxMFh0+26dFR4IeS1v6gCRF80iivr0XHZVGU1q6kC
8q32TtEO03F3T1DYy94K2DuTVWpuwPRnYlvUN1YBNUG8nm5H6LjhEEdT0mwF
4MYQjXBjOq5xfWrduloBTzJ/rKUdZZ5H9XKz4roHRxVsusqO09FuJIxhy3cP
Rhp6r7abMtdbVybuFLoHZw6RjN+Y03FlMcgzR+QezA7dE/l2ko4O5SvD77be
gwAnyQ8s1nR8q6N8f5D5nX05oUDIlo5XjPtr05j7r11mc9lzinme1PmCHZvu
wZatXipwmo7S6vO7PNfdg9yiyd8mZ+jolbdrOHmtAvZoHGtxPEtHxw+BHvG/
KuD+o66IIGc6JggNR7hMVgDhhPrhBFc6/jLUalV6VQEPPxby33ajo2m07OPJ
tgo44iP8tsGDjpahcodSyirgLUd0Tu95Ol688XDWMLUC7JJ/n57ypmPAZbqt
eEgFfNt1VmHZl45G1iIEvtMV4FP19hdvADPfA4P8ygcrgIWqVycVSMdLLQu2
ifIVIHBKnq4fyuR77bzPg4G7cLK2rZQYRkfGiYII75S7ULjRdPO+cKY9vG84
x+QuaNWGv+ePZuK7fzyt9mE52Gwc8Ry8TsePvywZhYllcOdBXM6pHDrOZhWs
K58ugUUeWY5jN+lYzLFGdY4tAbBrcqLfoqOSt1vgE7US6Of5sl/uNh1prGs6
f0KL4bct5dlMOR1LG2Y3VokWAZVn8bd/Mx0j/hQLbXYtgFjbGCvnVjqSNpQe
2rG9AN7USHaebKdj13Pz30HP8sHJ1vA6PKQjzwvpMCflfIirKZLm6KHjhdlb
6nYbb8EQN1xdfEHHo9NqJJvuPJCyfT073UfHKs/g85wReVDDzdr45DUd20zB
0IotD97bWBjHDdOR4iRwIlTwJsjU/Hxw8QMdK2YLt20czgU37mix82NMPbxI
8zp0OxdYa6o+HZuiY9bLr7IvMBcOcx8yYEwz9WMoXci9KReSbcbua3ymY17V
epXethzYzc0bsu07HSNzTj7t4c0BT5v8SZ4fTL5W9P4s1WVDQ7WW3tosHb1Z
DyjvdswGA5szQmPzdFRUdN9s9jwLvKtbSwtX6Ljtn/PA19pMEHHaohe7Rsf/
nnsb+F/IhEZxl0/eLAz0PqgdbYqZwBotLE1jZ+CdVt65mt4bUEBw7VDgZOC7
2EL/DZk3QPdnu63gOgbu+zEdYnr2BsSan8ue4GYgwZuX/fL6G6DM10l4upGB
HkV8hjrvM+BVx9Z3lXwM5LQ533a9IgNE93YJhwkwMJtYBBWWGVD4b1u8xDYG
Vgce2k98lA4HqzyU1okx0LkpcISSnw7fHB89/yHOQIP9S7tkwtJBpd9zQ4sk
A7uuigyLYTo05z++ZLmHgZvMWKKl29PgzUFfnwxNBkZfnD/K8zgVAtaeCYZp
M9CJS3vHsaJUEL8vef+sDgPviaeXLUSmgv32nh8aJAb6k97cmiClAlefVKwE
hYHXTz9+xy6eCiUR/grraAzETWpx0n9SYHZm19k3ugyUJkSU8t9JgcRbAVwt
egxc3OxLeHApBdRNewsKDzOQW2xXA7d5CgS2XRj3PsLA8oWdE4GsKbAuqd9C
0JSBMw2stY2YDKW6u5f/mjFQcLGmVIQnGQxWg9ImLBjIq5qdWv46CZIc5F5X
WjNQXGqceOpUEkhohhoYnWHgjxkSL8ExETq+v/6mcZaBXk6Wx0p3JYJDnvxV
CWcG8mXzH1X+kAB3uN88+nGOgdu4mxWvGySA5sheUqwPA1fG/mM1E44HR2mf
Qzl+DIwwZxOQb46DNJfmYxUBTH9ZXvwip+Lg97KBU38wAwUsN1dSmaVTK+ye
uCWKgSfn9KXJOjGgblQ5lZ3KwF/1P4XiH0eAQ9ryj7vpDNQYnurRWw6HlA/k
5dYbDJRxYcQLKoTDgutL3okcBuZr0dVsk8Kg6sr8AdkiBtZb7rNaYg+ByT4C
WaOEgRdVmwXSY4JAcGvE4YN3GKiHRHHy9kA4f1vI1rmCgRXTvxpJx/1BpVP9
yt1aph4f2vw6SPMCO+6QpNZ6Bp59uyehQOw8JBg/yu5rZKDcxnzTw6ye8HP0
xP25VgbOskS0l064gcTu3Cb2DgbG/hffErfsCkfcPj0S6mJgre1jWz0FF6hY
9Xt/4DEDxZD41mPMEUapbR91nzJw6sHUc+LpM7ApZv1Ps+cMtBmK2JfD7gD4
0uiv0wsGntk3txrVYg/uohkcgX0M5vy9o+JN8inItR3nu/aSgTf/rH07HmUH
vUV7RLNfM/f3FRrUJdoCy6znrrtvmPiXTMjZ9TagdKBBsfUtA7X5e5eklqzB
KphNs+8dA0eerS1uv2MFsV2HKOPDzPoKvET7k2AJzTxJ+nMfGGhnSLrrVHIS
Zkzen2AfZ6DpvTR7jp8WIH5jl53QJAPX+YY6kk9bgMG4i4vMRwau3XvGE8Zh
AcFy1T4HPjFwx8FRP95ecyh3Xw3V/cLA/zVY5dFQIHA4JdsKGx3I1VNpN1Lq
bbp/P8L8Ktdm6ZgwJlHaWDfDMmNkVo51pJiVK9EMpYMumk4lYbUoS46ica4V
akpi5//ve+973/HeF9JD5vqPDkLnTeuEA8Pyfrz55unL1wdBbSYpw2dE3h/X
pDUOOkzYYfMyN2KUgY4ccVxaJBNOJOmLE8cYuExx6o+CaSZkN3uVn5tgoGHp
yTWc3ENQp1MmufyRgetTvN995+oKU2xZzb1PDFTReOi4/0c3MBFDU+MkA232
zOKSkTvo3rwUKZli4L+a0q9PVFmg8ljHqHSagUNhrBb/VBYMdcjCBLMJbV5n
SC5e8YC2wSOGwYqEPVZ3xAW72VAra3rOViIcjhE08wbZIFa/or9DmXDuAKor
bvYEob5+jbEK4XtTvoeF1BNOGSf6a6sR+km2ZGWdOQLHrI8+nlAnNAqpuWA4
7QXfhy/zKdEmbOg6cQj+OQbLSUEhbhMhBxPMms0DQMPZTxy4hXC++6oZZmwA
zGZ3OHlsI/nfzdnp0BgAbyNuF21DwuDFvCBl70DIK/O3HWcQxtWafPn1dBCk
VHV96N5FaDFXf+hVdxBwn9nlNuwhfNHuLVUzDQb3nh/GRA6E1g6q0ZLnwaCv
+fYsa59cb5Wqy0ftUFBb4Whhf4BwetUAqzggFKbXSQa3Mgnrzvn2NdSHQsdu
4XZNd0LBLbPsPYlhULdvXp+iB6GL5V3DOaNhUOUZkjLGJmwVvs/9IN9bdtTe
nnovub+6a7Qt13IgMeF+YuVRwkCR8PN4HgciM003inwI3wnqc1KWRADzmnJ8
rK8cX7g82VgtEpZKH5puDSFMS+vcv3hDFKTZSi3YYYRKJ7lKc9uiYP71b53j
OYS+ujsMfxJEw1S0Y8SrKMLGyf/SezhcCJIGJk9zCbU6quaUtnNh2PZs/ko+
4cY0nw3KyIMO7c6ngQLCeSfFWl8WxoALV6FdGE/Yb1Dd9pwfAw3SFSMPEggT
dm02KJPFgOT68UULUgg9+FqdO4f5kGf3mVWaSRheL+2NVI0DrXLdoCYhYXx5
zGBxQRykLEXBZDbhUZMMK//tAuD1xV2ifMIF5gWzPsX+DpN24vt+5wlLIqPr
7NfHQ0B5fdOZC4QOxeYKodJ4YPMWTfaKCD+e/iVc5JkAbX3mqiqlhIf0QzeH
rU0EJ3vmsg2XCXvHhJb5s5PASqfAhneNsMnwb0b1o2RYWbE2Xa+SEBlat5ju
qZCj41RkdZfQrVgz6NlwKiyJCbl9/J48b4boK4ubBkoOd7tuPyJMLjk+Y1yZ
DlEV3WPd1YQhCvcejLJPg0xHUWleDSFLZcJaQSMD+vt3m7jUyfm15w1WC84A
y8EXfmsg/MtM6NFkdxZaK1L3FjYS6q6aiBjQzYRnMa1hY82EP5tp1fq1ZIFY
16s6uYMwKbXIsv/GOTDkx7dWdBGubrH1mFOTA38OlA69fkNYzWPwvHtyIfHG
uLqxlFDWEtnYopsPinqaK/f2ExZlcWRed/Ihkr9lU/ggobNRZoSbawGccOS5
PR0hVEu/uCD3+nmQ3ij0HxkltNfYrjfiVQhuejWxi8fleXtfXVhmcAHsB9VK
DssIt7XkCY/kF8ETx/WSU58J+YPq7uBTDHDT+cXVL4RBHtU6Tpsuwi298N7W
r4SHY8OH4+aLYF1stmxmRr6PSz3tlT0i+B/E2aNx
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{382.62890625, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[44]=",
 CellID->1819824977,ExpressionUUID->"7053606a-39e1-4514-ad78-c7bab8234e20"]
}, Open  ]],

Cell["This graph reveals peaks at a number of frequencies. ", "Text",
 CellID->628757506,ExpressionUUID->"69a1aa88-9ccf-44d3-a952-8dd553acc4b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Principal Frequencies", "Subsection",
 CellID->1907860102,ExpressionUUID->"5a07e955-bebf-4d16-b57e-50b24447c50b"],

Cell[TextData[{
 "Determine the t",
 StyleBox["wo principal frequencies",
  FontSlant->"Italic"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"20", "<=", "\[Omega]", "<=", "40"}], TraditionalForm]],
  ExpressionUUID->"d52a567e-31cc-4a97-ae9b-b04d81e610ca"],
 " finding those peaks with values greater than ",
 Cell[BoxData["0.5"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f2a2f88c-099c-4222-be5a-bf551d8c7013"],
 ":"
}], "CodeText",
 CellID->1326400957,ExpressionUUID->"0f57c5fd-75a8-44ba-a817-9102f744371f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tsmax", "=", 
  RowBox[{"TimeSeries", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"\[ScriptCapitalE]", "[", "\[Omega]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", "20", ",", "40", ",", "0.01"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellLabel->"In[45]:=",
 CellID->1940628439,ExpressionUUID->"ce59a062-c11c-47c8-a0fa-36704873b784"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAzuuvBQAANEDBBYHCfUCiP9AFJw53
UzRAqHQAQFy0qD+Fwhpe8600QCeTK9+QvbI/EIrDnnACNUDe/g5psCu3P7s5
uZdFVTVA54QPkD3fuz8ZjCvYH681QOLRgRy61L8/TelSCfsCNkAfpW8HHyfD
PzTp9oHbXTZAnVroh9+k0D870eeyE7c2QJ6hqQaoot0/GMSN1EwKN0D+TFIP
Mg7kP6hZsD2LZDdAtbtbyKFf5T8O+oeXyrg3QNAAHsCkF+M/k4KsqWELOECv
/58cfRHdP8utTQP+ZDhAU/Io2c0X0D/Z46NNm7g4QDMk7eN6+7c/m7x23z0T
OUCOR6ryQa6LP3x9lik4bDlAiaS7YyZ0YT8zSWtkM785QJRGVM3dEYs/nbe8
5jMZOkAtilhoJ3KZP90ww1k1bTpAj81aRN/Zlj/QTEYUPMg6QDFvT4TpEXo/
41AWh5ohO0ALeNgAF+JcP8xfm+r5dDtA2Xja9dkdjT9oEZ2VXs87QNcCzifb
7Jw/2s1TMcQjPEDFoTSEom2gP2tyV4WBdjxAGz8WLUdDmz+wudcgRNA8QFZL
i1Wxmow/ygsNrQckPUAesWuWKsZpP5gAv4DQfj1AhtRMRSKYSz+F3b0M8dc9
QL2m89erGHQ/SMVxiRIrPkBNjIW2ArZ4P75Pok05hT5AZkzKS3ccaD8K5YcC
Ydk+QPofY8zTamQ/dmK6b+ArP0CLWglSaBiIP5WCaSRlhT9Ang4Up2vAoD+K
rc3J6tg/QGOyEEuG8qg/mT1X27oZQEBd+jiDCjumP9gpIsoAREBAGzp1JuD7
kz8nihOVcm1AQIyySdWUHHE/0DvDA2eaQEAid4WGPsOlP+RyzepbxEBAGNIt
SsPgxD9R+5V10/FAQEPDzOCmqdY/zveE3HYeQUD3bJER+zfgP7Z5zrsaSEFA
yNz0nv8m4j/4TNY+QXVBQBnnyQccPeE/paU4OmifQUA/hCAtXqDbP2FywRG7
yEFAk7BhTJJT0j93kAiNkPVBQO8nwyz30cM/+DOqgGYfQkBfXDRipYS9P9Mo
Chi/TEJAI1ThdAMFwT+9kZCLQ3lCQN/ShMyQZME/EoBxd8iiQkBTwiSzohXA
P8G/EAfQz0JAT5T1jvvAvj/bhAoP2PlCQNFYIrg6Vbo/TpvCumInQ0CUdE27
IbC0P9EloUIZVENADWc7dM3luT+/NdpC0H1DQEZHDqpFeMI/B5fR5gmrQ0CA
ckJqvXbEP7p9IwNE1UNABWfeqFf7wT8ZCij9//9DQKL5gYNjEL4/0x+3Qw==

                   "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {20.000000000000043`, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {20., 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{20., 40.}, {0., 0.6679238236664476}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20.`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["40.`", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2001", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAzuuvBQAANEDBBYHCfUCiP9AFJw53
UzRAqHQAQFy0qD+Fwhpe8600QCeTK9+QvbI/EIrDnnACNUDe/g5psCu3P7s5
uZdFVTVA54QPkD3fuz8ZjCvYH681QOLRgRy61L8/TelSCfsCNkAfpW8HHyfD
PzTp9oHbXTZAnVroh9+k0D870eeyE7c2QJ6hqQaoot0/GMSN1EwKN0D+TFIP
Mg7kP6hZsD2LZDdAtbtbyKFf5T8O+oeXyrg3QNAAHsCkF+M/k4KsqWELOECv
/58cfRHdP8utTQP+ZDhAU/Io2c0X0D/Z46NNm7g4QDMk7eN6+7c/m7x23z0T
OUCOR6ryQa6LP3x9lik4bDlAiaS7YyZ0YT8zSWtkM785QJRGVM3dEYs/nbe8
5jMZOkAtilhoJ3KZP90ww1k1bTpAj81aRN/Zlj/QTEYUPMg6QDFvT4TpEXo/
41AWh5ohO0ALeNgAF+JcP8xfm+r5dDtA2Xja9dkdjT9oEZ2VXs87QNcCzifb
7Jw/2s1TMcQjPEDFoTSEom2gP2tyV4WBdjxAGz8WLUdDmz+wudcgRNA8QFZL
i1Wxmow/ygsNrQckPUAesWuWKsZpP5gAv4DQfj1AhtRMRSKYSz+F3b0M8dc9
QL2m89erGHQ/SMVxiRIrPkBNjIW2ArZ4P75Pok05hT5AZkzKS3ccaD8K5YcC
Ydk+QPofY8zTamQ/dmK6b+ArP0CLWglSaBiIP5WCaSRlhT9Ang4Up2vAoD+K
rc3J6tg/QGOyEEuG8qg/mT1X27oZQEBd+jiDCjumP9gpIsoAREBAGzp1JuD7
kz8nihOVcm1AQIyySdWUHHE/0DvDA2eaQEAid4WGPsOlP+RyzepbxEBAGNIt
SsPgxD9R+5V10/FAQEPDzOCmqdY/zveE3HYeQUD3bJER+zfgP7Z5zrsaSEFA
yNz0nv8m4j/4TNY+QXVBQBnnyQccPeE/paU4OmifQUA/hCAtXqDbP2FywRG7
yEFAk7BhTJJT0j93kAiNkPVBQO8nwyz30cM/+DOqgGYfQkBfXDRipYS9P9Mo
Chi/TEJAI1ThdAMFwT+9kZCLQ3lCQN/ShMyQZME/EoBxd8iiQkBTwiSzohXA
P8G/EAfQz0JAT5T1jvvAvj/bhAoP2PlCQNFYIrg6Vbo/TpvCumInQ0CUdE27
IbC0P9EloUIZVENADWc7dM3luT+/NdpC0H1DQEZHDqpFeMI/B5fR5gmrQ0CA
ckJqvXbEP7p9IwNE1UNABWfeqFf7wT8ZCij9//9DQKL5gYNjEL4/0x+3Qw==

                   "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {20.000000000000043`, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {20., 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{20., 40.}, {0., 0.6679238236664476}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["20.`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["40.`", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2001", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.01`", "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1: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
+5L3hXpsM1VdNNpXj/8BhClbOQ==
    "], {{20., 40., 0.01}}, 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, False, 14.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[45]=",
 CellID->181792935,ExpressionUUID->"d5de4c1a-e2c5-4d3a-8fe0-614a1f14e43b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"peaks", "=", 
  RowBox[{"FindPeaks", "[", 
   RowBox[{"tsmax", ",", "Automatic", ",", "Automatic", ",", "0.5"}], 
   "]"}]}]], "Input",
 CellLabel->"In[46]:=",
 CellID->1017446427,ExpressionUUID->"95badd3e-9e78-4550-985b-637ca2b82780"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  LineBox[CompressedData["
1:eJwVjn1Q03UcgBGNF6EiLgZogpBOOHlpNdj7Pp+B40QlSDgvD4KAI3eIzQHh
Ha+ilAwhwF54T67xEswGDQelQF0TefOQNxWFHP6+v1+SE7W8cQQ7jf547vnv
uccnRXk4zdbGxka8wf92KQsKSIjm4VWlyqsolwHaebS2pZCHDsGWZpLBQI9m
c9DDn3iYkBe98+1EBjI/GmBfe8DDQbc5KiGGgZsm7bVuFz6eVrw1NR/GADtH
eL4mnI8H9vP6Q7gMnAjeb/DI4qNvzulHajYDXVaL/ddtfNzEaXb7xZ2Bygtz
L73u8lHWkpcR6MhA0kFh/D4HAX6Z9rld4zoN/h5iU6pIgKQnrYl5TANtP3B9
x3EBymOyT/mbaJD8lhn7sE6A9q3SAv0UDVXlIw7aGwKc/sJUxDLSMJPX5ONo
FWBHr24o20CDS5FranKwENVZcQ66NhoeH+iPHE0W4tiSISegloafBcxX41VC
dL8k92sto6FQrLMbMQoxw6q9vZpHAzdlZSHxuRAn6nEk4tONn4b780/ZIhRc
1/Yqk2h477v1oqqjItzSOT35RwwNmcaac+OlIlyY3xMUEU6D1jrTZ9Mvwv76
2FI1l4bZDysPTppF2NH+4+5hNg2NBUUlXdvEuJJhfBLpSUNi7+t/lkaJ8dCv
XZfbt278u3prrfli1CWNDby0EugvnqhN7xajZ8VV47tPCNhd0e9dosRIZyos
nSYCMjeWr42rBAfawtN3TBPIKfGUucol2HTMMp9uJNDAajQOZkuwLOdWld5A
IFEVa87VSHBOolLBDwS2L3aKOLclGHSBvN9eR2BUVfy0+BUpVnNLlI7lBFTu
q+M3+FK0pq6XRxQQcFxcdtIrpJj9oHm5QEkAVB5/t9VIMcrdNnctmcBJFnnx
zZgUA+8JNh+OJVB9P+Ck95oUt5sv3tTICVy6wtqqCQR0US/UToYSSEsKiQz9
GPCYabYizI/Aa3tmzKmVgGNn14d02wjobd/oO/87YKhhdc3iRCBi0wQT9Q+g
jrsri/eCAjFtWqh0QTyX4eQ++IyC6Sm/eYs/ooIz2udNUbAYw3HqkCEe2Wdo
yJulwHxXHX00HvEQfSpfP0SBfDj/k+psRI14pTSojwKPiOAuVjmiHfl+rqWD
gqUJjnNdK2Imi717pZ6Cd/56Xq8YQHxUc+eyrIKCz161k4bcQTzeliRTFFLg
+K2+R/1so39C8++MkgK3bq/4vQ4yFJ5xswhSKPCavcca85EhZ1ficm4sBRfV
R7b0CmTIffOWX6+cguq4M2fNH8gwLszXeZhHwX823sx7
                   "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {23.310000000000052`, 0.5693087803829932}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {23.31, 0.5693087803829919}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{23.31, 34.64}, {0.5693087803829919, 
               0.671203193148805}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23.31`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["34.64`", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  LineBox[CompressedData["
1:eJwVjn1Q03UcgBGNF6EiLgZogpBOOHlpNdj7Pp+B40QlSDgvD4KAI3eIzQHh
Ha+ilAwhwF54T67xEswGDQelQF0TefOQNxWFHP6+v1+SE7W8cQQ7jf547vnv
uccnRXk4zdbGxka8wf92KQsKSIjm4VWlyqsolwHaebS2pZCHDsGWZpLBQI9m
c9DDn3iYkBe98+1EBjI/GmBfe8DDQbc5KiGGgZsm7bVuFz6eVrw1NR/GADtH
eL4mnI8H9vP6Q7gMnAjeb/DI4qNvzulHajYDXVaL/ddtfNzEaXb7xZ2Bygtz
L73u8lHWkpcR6MhA0kFh/D4HAX6Z9rld4zoN/h5iU6pIgKQnrYl5TANtP3B9
x3EBymOyT/mbaJD8lhn7sE6A9q3SAv0UDVXlIw7aGwKc/sJUxDLSMJPX5ONo
FWBHr24o20CDS5FranKwENVZcQ66NhoeH+iPHE0W4tiSISegloafBcxX41VC
dL8k92sto6FQrLMbMQoxw6q9vZpHAzdlZSHxuRAn6nEk4tONn4b780/ZIhRc
1/Yqk2h477v1oqqjItzSOT35RwwNmcaac+OlIlyY3xMUEU6D1jrTZ9Mvwv76
2FI1l4bZDysPTppF2NH+4+5hNg2NBUUlXdvEuJJhfBLpSUNi7+t/lkaJ8dCv
XZfbt278u3prrfli1CWNDby0EugvnqhN7xajZ8VV47tPCNhd0e9dosRIZyos
nSYCMjeWr42rBAfawtN3TBPIKfGUucol2HTMMp9uJNDAajQOZkuwLOdWld5A
IFEVa87VSHBOolLBDwS2L3aKOLclGHSBvN9eR2BUVfy0+BUpVnNLlI7lBFTu
q+M3+FK0pq6XRxQQcFxcdtIrpJj9oHm5QEkAVB5/t9VIMcrdNnctmcBJFnnx
zZgUA+8JNh+OJVB9P+Ck95oUt5sv3tTICVy6wtqqCQR0US/UToYSSEsKiQz9
GPCYabYizI/Aa3tmzKmVgGNn14d02wjobd/oO/87YKhhdc3iRCBi0wQT9Q+g
jrsri/eCAjFtWqh0QTyX4eQ++IyC6Sm/eYs/ooIz2udNUbAYw3HqkCEe2Wdo
yJulwHxXHX00HvEQfSpfP0SBfDj/k+psRI14pTSojwKPiOAuVjmiHfl+rqWD
gqUJjnNdK2Imi717pZ6Cd/56Xq8YQHxUc+eyrIKCz161k4bcQTzeliRTFFLg
+K2+R/1so39C8++MkgK3bq/4vQ4yFJ5xswhSKPCavcca85EhZ1ficm4sBRfV
R7b0CmTIffOWX6+cguq4M2fNH8gwLszXeZhHwX823sx7
                   "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {23.310000000000052`, 0.5693087803829932}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {23.31, 0.5693087803829919}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{23.31, 34.64}, {0.5693087803829919, 
               0.671203193148805}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["23.31`", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["34.64`", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["11.330000000000002`", "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[
  TimeSeries, {{{0.671203194875829, 0.5693087786559679}}, {{{23.31, 34.64}}}, 
    1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, False, 14.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[46]=",
 CellID->479867532,ExpressionUUID->"ebb4402d-8df7-4a3f-bc3c-d5d90d271686"]
}, Open  ]],

Cell[TextData[{
 "Highlight the t",
 StyleBox["wo principal frequencies",
  FontSlant->"Italic"],
 ":"
}], "CodeText",
 CellID->1206343479,ExpressionUUID->"8340c5e0-7ef3-4d17-b005-5ebc07806c42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[ScriptCapitalE]", "[", "\[Omega]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", "20", ",", "40"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"AbsolutePointSize", "[", "5", "]"}], ",", 
      RowBox[{"Point", "@", 
       RowBox[{"Normal", "@", "peaks"}]}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[47]:=",
 CellID->621740226,ExpressionUUID->"30f1687b-3d39-428c-bb18-754448646490"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
e6tkSPyP18ys2ULhusUTqg4NS8BTbmXRBT9yIV468/rXQQn0Jhu/N9hG+v/F
hMJ5nySw9JXO0V+EW9pN/7W9k0DkHLXZou3EH+4rnnd9Q/Rwc+LaTTsptAiO
ajjXIAGDYin71G4Sr1LJDNUiCYQOvXJ02UNhg2pJj+S2BCqtn32YF0Bh+vle
/q7rEnB4XKFWGkjhKF7VZGGiBPa8Sjn+PpjCvEx/0/P+EmDNSVAvCqHQ/rON
S8BmCQz7RJcd3kfhxNc5VXIuEjj9IeDztP0U+nV1uCaDBO4N2bowhyg0E63P
e64kgX5rq6/yYRSm/GcU9GycBFbEmJxqIxxft2FH0m8x1MrN4wRHUFjnpjLb
TyyGz3N+a2dGET/b7mi34a4YzHy/cncfIf3dmb722FUxRN3scjc/SuGW3Cjt
Q4likDdsOl0fTeFB8xJ+ZYgYDOFu/3AshTcWbZZhm4kh0NdLtDGBQgMzo/54
/06wdrzko3GaQtHHL0P9dp0gb9U43ENY7re3kYwO8d+ZNqaHzlIYLiNwHyt5
A5+fGdy6eI74ue2sVc1Ob2CP9fDJ55eIvzFm86/pdIC/atrqNdkUxl3xz+y9
1AZbX7xqQg6FA4q9VT0DzfBpqrnbLC6FB8p4EzqEzRDidOH1d8KDow/rtJxr
hiPP1r/L4lPoYmpzT7yoGVKf1AyMFZF+8edI07Y/h2ecyplPaihkJyjsb29v
BNfh2VevP6Uwu33HdPt7jdBuEaYRXkth+86bbdKIRvhYYrpQv57CPg+FJbmq
jTC2KN/yTCOF4olXJFVeDWBxK9N7/Svin1OOTP3XXgf8dyNSvVYKLUM2NfTG
1IGdlteO0W0U6nyvfnFSvw42ZM4KevCawrXLlim2RdbC3tTz0dM7ST6U3nVF
LHgK2Wdjs1u7KNz/Un3Pz5xq0K+TLih6T2HUuCbd8Z7VUCRH5cV3UzhufVGA
olI18OL+si0/UPiM+hQ4L+oxtB078PhqL4XPl4mn52x9BAoHd3707aPw0KlH
DlHbRXBCbvaIfj+F9e+ly58YiWD42lOlQcIZc4+vVxsSwsdqw+XxgxSu/rTp
as85ITyaPXCy6Df5fiExzKK+Cqzu30qLHCL+N++Z48i1KmAx7vdt/5D5u/3b
wZchVZC1p6KlbZjw0bMH6lSrIIobPX/MKBo/RIxpbQsXwICTyfI6whqHDOs9
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
eg==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
e6tkSPyP18ys2ULhusUTqg4NS8BTbmXRBT9yIV468/rXQQn0Jhu/N9hG+v/F
hMJ5nySw9JXO0V+EW9pN/7W9k0DkHLXZou3EH+4rnnd9Q/Rwc+LaTTsptAiO
ajjXIAGDYin71G4Sr1LJDNUiCYQOvXJ02UNhg2pJj+S2BCqtn32YF0Bh+vle
/q7rEnB4XKFWGkjhKF7VZGGiBPa8Sjn+PpjCvEx/0/P+EmDNSVAvCqHQ/rON
S8BmCQz7RJcd3kfhxNc5VXIuEjj9IeDztP0U+nV1uCaDBO4N2bowhyg0E63P
e64kgX5rq6/yYRSm/GcU9GycBFbEmJxqIxxft2FH0m8x1MrN4wRHUFjnpjLb
TyyGz3N+a2dGET/b7mi34a4YzHy/cncfIf3dmb722FUxRN3scjc/SuGW3Cjt
Q4likDdsOl0fTeFB8xJ+ZYgYDOFu/3AshTcWbZZhm4kh0NdLtDGBQgMzo/54
/06wdrzko3GaQtHHL0P9dp0gb9U43ENY7re3kYwO8d+ZNqaHzlIYLiNwHyt5
A5+fGdy6eI74ue2sVc1Ob2CP9fDJ55eIvzFm86/pdIC/atrqNdkUxl3xz+y9
1AZbX7xqQg6FA4q9VT0DzfBpqrnbLC6FB8p4EzqEzRDidOH1d8KDow/rtJxr
hiPP1r/L4lPoYmpzT7yoGVKf1AyMFZF+8edI07Y/h2ecyplPaihkJyjsb29v
BNfh2VevP6Uwu33HdPt7jdBuEaYRXkth+86bbdKIRvhYYrpQv57CPg+FJbmq
jTC2KN/yTCOF4olXJFVeDWBxK9N7/Svin1OOTP3XXgf8dyNSvVYKLUM2NfTG
1IGdlteO0W0U6nyvfnFSvw42ZM4KevCawrXLlim2RdbC3tTz0dM7ST6U3nVF
LHgK2Wdjs1u7KNz/Un3Pz5xq0K+TLih6T2HUuCbd8Z7VUCRH5cV3UzhufVGA
olI18OL+si0/UPiM+hQ4L+oxtB078PhqL4XPl4mn52x9BAoHd3707aPw0KlH
DlHbRXBCbvaIfj+F9e+ly58YiWD42lOlQcIZc4+vVxsSwsdqw+XxgxSu/rTp
as85ITyaPXCy6Df5fiExzKK+Cqzu30qLHCL+N++Z48i1KmAx7vdt/5D5u/3b
wZchVZC1p6KlbZjw0bMH6lSrIIobPX/MKBo/RIxpbQsXwICTyfI6whqHDOs9
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
eg==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {20.000000408163313`, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {20.000000408163313`, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
e6tkSPyP18ys2ULhusUTqg4NS8BTbmXRBT9yIV468/rXQQn0Jhu/N9hG+v/F
hMJ5nySw9JXO0V+EW9pN/7W9k0DkHLXZou3EH+4rnnd9Q/Rwc+LaTTsptAiO
ajjXIAGDYin71G4Sr1LJDNUiCYQOvXJ02UNhg2pJj+S2BCqtn32YF0Bh+vle
/q7rEnB4XKFWGkjhKF7VZGGiBPa8Sjn+PpjCvEx/0/P+EmDNSVAvCqHQ/rON
S8BmCQz7RJcd3kfhxNc5VXIuEjj9IeDztP0U+nV1uCaDBO4N2bowhyg0E63P
e64kgX5rq6/yYRSm/GcU9GycBFbEmJxqIxxft2FH0m8x1MrN4wRHUFjnpjLb
TyyGz3N+a2dGET/b7mi34a4YzHy/cncfIf3dmb722FUxRN3scjc/SuGW3Cjt
Q4likDdsOl0fTeFB8xJ+ZYgYDOFu/3AshTcWbZZhm4kh0NdLtDGBQgMzo/54
/06wdrzko3GaQtHHL0P9dp0gb9U43ENY7re3kYwO8d+ZNqaHzlIYLiNwHyt5
A5+fGdy6eI74ue2sVc1Ob2CP9fDJ55eIvzFm86/pdIC/atrqNdkUxl3xz+y9
1AZbX7xqQg6FA4q9VT0DzfBpqrnbLC6FB8p4EzqEzRDidOH1d8KDow/rtJxr
hiPP1r/L4lPoYmpzT7yoGVKf1AyMFZF+8edI07Y/h2ecyplPaihkJyjsb29v
BNfh2VevP6Uwu33HdPt7jdBuEaYRXkth+86bbdKIRvhYYrpQv57CPg+FJbmq
jTC2KN/yTCOF4olXJFVeDWBxK9N7/Svin1OOTP3XXgf8dyNSvVYKLUM2NfTG
1IGdlteO0W0U6nyvfnFSvw42ZM4KevCawrXLlim2RdbC3tTz0dM7ST6U3nVF
LHgK2Wdjs1u7KNz/Un3Pz5xq0K+TLih6T2HUuCbd8Z7VUCRH5cV3UzhufVGA
olI18OL+si0/UPiM+hQ4L+oxtB078PhqL4XPl4mn52x9BAoHd3707aPw0KlH
DlHbRXBCbvaIfj+F9e+ly58YiWD42lOlQcIZc4+vVxsSwsdqw+XxgxSu/rTp
as85ITyaPXCy6Df5fiExzKK+Cqzu30qLHCL+N++Z48i1KmAx7vdt/5D5u/3b
wZchVZC1p6KlbZjw0bMH6lSrIIobPX/MKBo/RIxpbQsXwICTyfI6whqHDOs9
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
eg==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
       "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {20.000000408163313`, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{20.000000408163313`, 0},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[1, 0, 0], 
    AbsolutePointSize[5], 
    PointBox[{{23.31, 0.671203194875829}, {34.64, 0.5693087786559679}}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->300,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[47]=",
 CellID->274438569,ExpressionUUID->"75e84ae3-d06e-4b41-a531-9214e0a83c06"]
}, Open  ]],

Cell[TextData[{
 "Extract the values of the ",
 StyleBox[" principal frequencies",
  FontSlant->"Italic"],
 " for further analysis:"
}], "CodeText",
 CellID->274174176,ExpressionUUID->"981431ec-5a78-458d-bd21-9b8ffcabfed7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["\[Omega]", "1"], ",", 
    SubscriptBox["\[Omega]", "2"]}], "}"}], "=", 
  RowBox[{"peaks", "[", "\"\<Times\>\"", "]"}]}]], "Input",
 CellLabel->"In[58]:=",
 CellID->1692953217,ExpressionUUID->"6febb00c-c23d-490a-86d5-f2edf8161a5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"23.31`", ",", "34.64`"}], "}"}]], "Output",
 CellLabel->"Out[58]=",
 CellID->1260485455,ExpressionUUID->"fbb1cd62-3564-4905-847b-c501daf254d6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Periods", "Subsection",
 CellID->1275686346,ExpressionUUID->"9aa7f9d3-5f43-4573-87bb-dc24b0e21af4"],

Cell[TextData[{
 "These two frequencies correspond to \[OpenCurlyDoubleQuote]planets\
\[CloseCurlyDoubleQuote] orbiting the pulsar with ",
 StyleBox["approximate",
  FontSlant->"Italic"],
 " orbital period determined by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalT]", "\[LongEqual]", 
    RowBox[{"2", 
     RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "eb585f9e-bcbb-4e31-bb7c-a87d936d7331"],
 ":"
}], "Text",
 CellID->2131169221,ExpressionUUID->"61bc4213-15bf-4f70-8767-43e491fbee13"],

Cell[TextData[{
 "Compute the ",
 StyleBox["approximate",
  FontSlant->"Italic"],
 " orbital periods ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalT]", "1"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c2bd83b4-41f0-4b1f-9ad1-877a49f01f0f"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalT]", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ae9d3be2-544d-4250-b023-e11399b88c2c"],
 ":"
}], "CodeText",
 CellID->52864530,ExpressionUUID->"a0e3d140-a96d-4907-aacb-d8b1dc60e1cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[ScriptCapitalT]", "1"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"2", "\[Pi]"}], 
    SubscriptBox["\[Omega]", "1"]], "365.24", " ", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"days\"", "days", 
     "\"Days\""},
    "Quantity"]}]}]], "Input",
 CellLabel->"In[62]:=",
 CellID->681349034,ExpressionUUID->"d8591536-d686-425c-bec0-78d614e12e1f"],

Cell[BoxData[
 TemplateBox[{"98.45004725844153`", "\"days\"", "days", "\"Days\""},
  "Quantity"]], "Output",
 CellLabel->"Out[62]=",
 CellID->323323476,ExpressionUUID->"d0d8c1ec-b3f6-4ae4-aef0-68064aa8a7bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[ScriptCapitalT]", "2"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"2", "\[Pi]"}], 
    SubscriptBox["\[Omega]", "2"]], "365.24", " ", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"days\"", "days", 
     "\"Days\""},
    "Quantity"]}]}]], "Input",
 CellLabel->"In[63]:=",
 CellID->779202950,ExpressionUUID->"087f6132-7ea3-4e8d-ba71-82adf17ab301"],

Cell[BoxData[
 TemplateBox[{"66.24915131623187`", "\"days\"", "days", "\"Days\""},
  "Quantity"]], "Output",
 CellLabel->"Out[63]=",
 CellID->301921404,ExpressionUUID->"d04d4165-9f11-4635-95e8-383492100c3f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonlinear Fit", "Subsection",
 CellID->1197501646,ExpressionUUID->"4e895a6b-89d1-4689-b58e-7f6d18d33228"],

Cell[TextData[{
 "Since we now have ",
 StyleBox["good estimates",
  FontSlant->"Italic"],
 " for the orbital periods, it is easy to do a nonlinear fit of a double \
planet model of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"\[Theta]", " ", "t"}]}], ")"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"\[Delta]", "+", 
       RowBox[{"t", " ", "\[Phi]"}]}], ")"}]}], "+", "\[Epsilon]"}], 
   TraditionalForm]],ExpressionUUID->"5d4b5811-4a09-4944-a492-9e1ea9300633"],
 "."
}], "Text",
 CellID->193424638,ExpressionUUID->"847af846-83f2-4f64-8794-78bb113e6c5f"],

Cell[TextData[{
 StyleBox["Use ",
  FontSlant->"Plain"],
 StyleBox[ButtonBox["NonlinearModelFit",
  BaseStyle->"Link"],
  FontSlant->"Plain"],
 StyleBox[" to fi",
  FontSlant->"Plain"],
 StyleBox["nd ",
  FontSlant->"Plain"],
 StyleBox["the ",
  FontSlant->"Plain"],
 "principal frequencies",
 StyleBox[" determined in the previous section to determine the optimal \
values of ",
  FontSlant->"Plain"],
 Cell[BoxData[
  FormBox[
   StyleBox["a", "Input"], TraditionalForm]],ExpressionUUID->
  "46f5fb52-7ce6-488a-a420-d0d98a9bde3f"],
 StyleBox[",  ",
  FontSlant->"Plain"],
 Cell[BoxData[
  FormBox[
   StyleBox["b", "Input"], TraditionalForm]],ExpressionUUID->
  "93b71dc2-8f77-478d-bafb-abf1ad8253a0"],
 StyleBox[",  ",
  FontSlant->"Plain"],
 Cell[BoxData[
  FormBox[
   StyleBox["\[Theta]", "Input"], TraditionalForm]],ExpressionUUID->
  "9602c423-d5a6-450f-bf47-b50d6640d7b8"],
 StyleBox[",  ",
  FontSlant->"Plain"],
 Cell[BoxData[
  FormBox[
   StyleBox["\[Gamma]", "Input"], TraditionalForm]],ExpressionUUID->
  "a37947a2-4655-4f87-8979-9983783f8093"],
 StyleBox[",  ",
  FontSlant->"Plain"],
 Cell[BoxData[
  FormBox[
   StyleBox["\[Phi]", "Input"], TraditionalForm]],ExpressionUUID->
  "74aeb142-ff6a-458f-a9eb-eeceb3171aa8"],
 StyleBox[",  ",
  FontSlant->"Plain"],
 Cell[BoxData[
  FormBox[
   StyleBox["\[Delta]", "Input"], TraditionalForm]],ExpressionUUID->
  "7a999107-8f3c-4b9d-b5a8-6c0c2d67a043"],
 StyleBox[",  and ",
  FontSlant->"Plain"],
 Cell[BoxData[
  FormBox[
   StyleBox["\[Epsilon]", "Input"], TraditionalForm]],ExpressionUUID->
  "101ef573-07c0-4dc1-8fa4-6d7ee0040040"],
 ". The principal frequencies provide good starting values for ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[Theta]", "Input"], TraditionalForm]],ExpressionUUID->
  "9d538b27-921d-4ccc-8fb7-b6c704c0da53"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[Phi]", "Input"], TraditionalForm]],ExpressionUUID->
  "53d4ff16-8a95-4b51-8df4-7bec5c43d27b"],
 " in the nonlinear fitting routine:"
}], "CodeText",
 CellID->1745132955,ExpressionUUID->"14580d8c-b285-4480-be71-00bf461b2b56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nlmf", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"ts", ",", 
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"\[Theta]", " ", "t"}], "+", "\[Gamma]"}], "]"}]}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"\[Phi]", " ", "t"}], "+", "\[Delta]"}], "]"}]}], "+", 
     "\[Epsilon]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", 
        SubscriptBox["\[Omega]", "1"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]", ",", 
        SubscriptBox["\[Omega]", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Delta]", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0"}], "}"}]}], "}"}], ",", "t"}], 
   "]"}]}]], "Input",
 CellLabel->"In[51]:=",
 CellID->117923959,ExpressionUUID->"b522af8d-a62e-4a34-bf4f-03c7fd645754"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["FittedModel",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox[
                TagBox[
                 RowBox[{"0.0769580727705798`", "\[VeryThinSpace]", "+", 
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "+", 
                   
                   RowBox[{"1.4101481561052571`", " ", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]}], 
                 Short], "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            GridBox[{{
               TagBox[
                TagBox[
                 RowBox[{
                   RowBox[{"0.0769580727705798`", "\[VeryThinSpace]"}], "+", 
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "+", 
                   
                   RowBox[{"1.4101481561052571`", " ", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]}], 
                 Short], "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FittedModel[<|
   "Type" -> "Nonlinear", 
    "Model" -> <|
     "FittedParameterRules" -> {$CellContext`a -> 
        1.4101481561052571`, $CellContext`b -> -1.3148313897132151`, \
$CellContext`\[Theta] -> 23.386938436475614`, $CellContext`\[Phi] -> 
        34.51109499580933, $CellContext`\[Gamma] -> 
        1.2376453443481343`, $CellContext`\[Delta] -> -0.16004338305609256`, \
$CellContext`\[Epsilon] -> 0.0769580727705798}, 
      "IndependentVariables" -> {$CellContext`t}, 
      "FitExpression" -> $CellContext`\[Epsilon] + $CellContext`a 
        Sin[$CellContext`\[Gamma] + $CellContext`t $CellContext`\[Theta]] + \
$CellContext`b 
        Sin[$CellContext`\[Delta] + $CellContext`t $CellContext`\[Phi]], 
      "ParameterConstraints" -> True|>, 
    "Weights" -> <|"ExampleWeights" -> 1|>, "InputData" -> CompressedData["
1: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
HX2YDohrNs9PVQr+qb279WmuCPwHcM7eFg==
     "], "Localizer" -> Function[Null, 
      Internal`LocalizedBlock[{$CellContext`a, $CellContext`b, \
$CellContext`t, $CellContext`\[Gamma], $CellContext`\[Delta], $CellContext`\
\[Epsilon], $CellContext`\[Theta], $CellContext`\[Phi]}, #], {HoldAll}], 
    "Options" -> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[51]=",
 CellID->1858649290,ExpressionUUID->"7692d0be-4448-42bf-9205-818384913f1e"]
}, Open  ]],

Cell["Extract the best fit parameters:", "CodeText",
 CellID->1580430759,ExpressionUUID->"f33a41f3-f329-4e94-98da-26d7806c7dd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nlmf", "[", "\"\<BestFitParameters\>\"", "]"}]], "Input",
 CellLabel->"In[55]:=",
 CellID->74536770,ExpressionUUID->"61967b81-589c-42fa-830b-21ca2596ffb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1.4101481561052571`"}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"-", "1.3148313897132151`"}]}], ",", 
   RowBox[{"\[Theta]", "\[Rule]", "23.386938436475614`"}], ",", 
   RowBox[{"\[Phi]", "\[Rule]", "34.51109499580933`"}], ",", 
   RowBox[{"\[Gamma]", "\[Rule]", "1.2376453443481343`"}], ",", 
   RowBox[{"\[Delta]", "\[Rule]", 
    RowBox[{"-", "0.16004338305609256`"}]}], ",", 
   RowBox[{"\[Epsilon]", "\[Rule]", "0.0769580727705798`"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[55]=",
 CellID->45644662,ExpressionUUID->"c0240513-fd3f-491b-bce0-ea26c21ca2c6"]
}, Open  ]],

Cell[TextData[{
 "We use estimated values of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[TildeTilde]", "1"}], TraditionalForm]],ExpressionUUID->
  "f7463b5a-1caf-4d98-8cd0-91a18abb03a8"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[TildeTilde]", "1"}], TraditionalForm]],ExpressionUUID->
  "c464989f-9d8e-43a7-9b7b-ed6f49f1eaa7"],
 " from the plot of the residuals above and set the remaining parameters to \
0. "
}], "Text",
 CellID->1849275283,ExpressionUUID->"8db8deab-bcd8-47c8-896f-62e5b39bfcb4"],

Cell["\<\
Note the slight shift in the values of the two principal frequencies:\
\>", "CodeText",
 CellID->238858350,ExpressionUUID->"1d18c32a-01d5-431b-98db-8eeda70297cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      SubscriptBox["\[Omega]", "1"], "-", "\[Theta]"}], "]"}], ",", 
    RowBox[{"Abs", "[", 
     RowBox[{
      SubscriptBox["\[Omega]", "2"], "-", "\[Phi]"}], "]"}]}], "}"}], "/.", 
  "%"}]], "Input",
 CellLabel->"In[56]:=",
 CellID->845352207,ExpressionUUID->"03c4ad79-d8d0-4093-9c5b-b901c7af7624"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.07693843647561494`", ",", "0.12890500419067052`"}], 
  "}"}]], "Output",
 CellLabel->"Out[56]=",
 CellID->1153184523,ExpressionUUID->"e9de03ce-aa35-4524-9885-98a5c7f67c24"]
}, Open  ]],

Cell["Compare the resulting best-fit with the timing residuals:", "CodeText",
 CellID->1096771470,ExpressionUUID->"f594766f-713e-4bbb-90cc-40d67c5ac56b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"nlmf", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"ts", "[", "\"\<FirstTime\>\"", "]"}], ",", 
     RowBox[{"ts", "[", "\"\<LastTime\>\"", "]"}]}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{
    "residuals", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[57]:=",
 CellID->1585954089,ExpressionUUID->"fd72f8ae-e458-4207-a946-f2188d36ce15"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
ycyaXYs5Q8R8xizTR88SsSt+0u/CzhGxq9FDz0PxcyrxOF3kxnkituL0980K
5gTMIevHL71rRMzD/8z1qqs8yNaIFdt/nYg5iN+qPYDfF0LZOd0dN4iY1+bg
5H14v5jczEqTvEXEVM+TXqfg/djU9Aaff/5EbCNr/x47XRbcVb8o9SCciIXo
EhYP5E5AdG/0resRRGyWdjPMLm8MUsKoXQ5R+PkRT5ytyaVB/YD0a7UYIvYh
pzbmWOYQSDyrlu9+g+9fbJxx4sgvSJrdvF01C79f1iEWn6mFKD/hWJh0DhH7
8ehSVgvnG6o+6jdOzCNiavyLGrfvNaCxd61ZHflETPlk1a48pXa05/hd9UD8
XsZcauz8k9OPDAhZz9zLiJiinNfwUtdBZJvZxTxOxe3mI003Jf6hOxS1L9sr
iZhuroHa7+M0VJnfe7CtAddti+GDsmtTqMNZ5M3XJpwvYUlnW+80oolq8lO/
EzFJex2fxbd0JOr6hHqnDa/nu+PRhfMzSG5V0abz7URsh+GYZU4sA6l9HQqy
7CRi/7o59jr7Z9HxNdr6W3/jenp6htecZSK38vMp4n/+/z/Y+MOYaSbyufJs
KaeXiBXGSPumes+huKqxuu8DROzj1KFzxvj7n31dSqV4iIhFBoxiJTQWosoe
fpw8jN+HpcF9arbz6J/XK/PbY0Qs7oCP9KLiAlrYVJVzboKIsTO+DmkFLSCR
Zrq4+RQReyl6sc/u1wLa4LvBcz8dv8/kNfcsldlo51ajNgUG/p5EOv2Q9WIj
rPXGXjEmEQtb0XSitIiNrPwTns/PEbEM9+PbdyywkYtyA6t/noiRznmOXFFb
RN4drJONbCKWcHkk995ZvL8LUigq4BAxPzVRpevhiyh2p7nMWx4RC42uvHIw
fxFldt/2eyTA4zmtkhttW0RlIe97vIgkzDZe1zRochH9UG855EwmYRe2VfmL
EzlooJcbbyJEwhwvv02PX8FBzDAlgsZSEpatHbbzgBQHLdl3/Iy8MO5PS2ia
lMb9lWOc9iwnYWqW3JeqqzkIyXU5GIqRMDlVO5t3SzkoTuJ/FVx3PJbfG369
e1JWlCKjhJbkG8W501QqlZCQhIzKKGU2EJIoVEKSkESZGannTVZCVsjeZO89
fs/vr/dzf84597iu676fc/55156/wEcE6EyfNp+ax5yohrq2q4lg1HF0d0DT
PKYz/+qspwAR6vrpj5W/zmM7hlu1XwgRYZL7Zqvri3mM3bHx5Ic1RPi8fmHE
2WYe+/fn8nEM/w7ktcGxMyrzWOHP2KPV64jQF3H7gAzPPBb9tfdQ73oiiP2M
shD6MYfdSdlyYEGcCC0zDhmH785hBrE2wCdJhPKIhLCW3XOY8sskNSlpIrwj
zDaSemcxgccjqv9tIsLzzYGPWoJmsdKbN3ZflCOC0pWxtwaNM1i8ZYbiDQUi
2J0gbTnjNIM9MJzZ7rONCJW8P3d/WDWDqR90lfukSIStJ919VZSmsU8CnuIr
qkTw3qG6Z+n4JOZPKxATUCPC/VxGwvafE5jlAnXtZkSERfHAx0cOTGASnX6C
pw4Q4YDNHe2pbeNYUGoQ4/VxItTyLglNV49g1+NqqGkniIBl5q/mix/GjocJ
k4tO4fW8fl6h7DyEkT3ClofP4nMs3gHpCQ5gjqejJ9TxuXb3bS3lkEoPpj+a
0txyFedPcsYCU/iLKXVNNIxfx7+rfIyverW12Or63fVUe7y+8osqJt41WAmW
XbXNkQi+F1PGq2Z/Y/sCvxfdcSeCSdXBuJ9HvmIinqSCoLtEiOJP150mZmBT
tw7lxd0nwr269teGte+xj8Y/c8sfEIFgEHRS7/0DJL6tMmVDAL5fLaLy+QMM
fd61TobvCa4f9qrh5ZY8pKViHrrylAiy83vOxrUXIJeDc3fanhFBu9VI51Do
L7T62IHxihd4fWZXjmkfL0fxpx6bf39JBImSswRX+wpUa7BRK/oVEbr28W/T
aa1C10xssKDXRHBw3cTm8NQgskWGoucbIvSfrrB2EvyDwmxWYm+8JQJz8IqH
m2gt2mmvKWoWi+vLdmcueVUdKr4V7K/zjgjSlyJTeGbrkLFb88pB/Lvh5L64
xaqyHvn72PfIJBEh0n7XY0v9BiT1+Mt54U9EuPpF+TuF2ohygihl1BQi0E/P
za+JbUTaoadgJpUIs1E/H3/c3YR6X71M603H6+XXLW3ObEJ33nZuqv+M23bh
C9/km5Hg+61hxVlEkCzSP2j3tBl9+Hibk51DhMRgzlvBf81II/37vfe5OD+x
PrXVii3obzZr8uU3nB936omG6y3IDjt3xY9LhBI0z3f+VQuiFrxucMkjQkez
2ccH31rQq5J/J2zyiRCv3SUTVtWClCp2fb9QiOv95LWSmr8tqOSPu5JWMRGS
1nxTcKppQZcai97tKyGCz82nKyV5LWi2bfW6raV4P2uFLayJbUGBPRcC1pfj
88JPOy/JtQVtGozl4a0gwnnnUKzlcAvKHRu5uVxJBIGuE0weWgs6O6PSN1xN
BMffuQeu5zaj/kXPC61/iDD2dfUtzyvN6B6xvPx3HRFOVP0ai6I3ozV0EQ3u
X7zfbPfKyUU1oY8c04zkRiKkyos8fbCtCR0SSJR904zzIadiL5beiJpEpsOf
thIh7oxrscHORsSQ9vNw6MTnS8+UpZ9gA4raUjNl2o3PpxzvXxdd/yLl7Rus
zvYSwfxLqndMYz0yU009pTRAhIwBYwsDvzq0gBbzpIeIkNxzd+Tb31oUdOiw
stAInr/I/EFn6VqEaTeITY8TgWVvQ+hOqkFrrxD7M+eJkNVyZdojshJVBp/x
2sskgeyqQ7WvyguRYntq8Dk2CbLSD6d0bC9AIdsE3tryksDw4hGrqdAfSPdn
9fe3/CSI2mlG1fHhokxhpcqvgiRI/irDnFn/DYmYhbTV4ffeei3/fScPf0EN
yzorrHUkCB3XKicNZKC9Whm8m9aToC9gNj3TJg1FvBTaAOL4fiMjkfW8KWip
x3GrwUYSmHQGsh3ik5CxUu2+m1Ik4EY+bF+5+x5h95W1AmRw+7b61/dxsUji
9/ML8ZtJsErd4+BqiWh0X2zGOm8Lvp48YGjW+gp1WOm5NMmTgBDZGfZ9Zyg6
kJn5cHorCe5tjdZ6qhaMYsgiL1ftwNff2Rskrg5AlDNO8XKK+Hr/UVknRR9k
8bo+86ASvs6mEuT77qOiwT1Fxsq4/UqDZu7shmRVX9Y67cFtOb5N9x2ckJ/P
XHeQKm4Xap8NKL2NBmrOTyXuw23/FNK/5y5ISzKHXKSO+xe7dfeT7T300Xat
YDvg9tM1lwXPP0B8X12kFjRwO4RWNMb2R3bMRkWhQ3g9U08nOo4EoUq9vRrb
j+D+DM6tjXR4gRRjw09rauI2n124kO8rFDy+YHL5OL7/i97HmIPRaBIZ2rmf
wG36riCLvXHo3OPcuy9O4fgGRq9cjk9AnxvEAlNO4+8Q7kKP86NPaI2se+Sv
syTYYZOovtkhFTk5Nid1n8PzUch8Jns+A/3NU/u6oofb+9WOGrlkIdVVkaWi
Bvh+WoLW4T9f0FKC8cAJYxKIfFZxrg/7joxnv81fMSFBsVTAhdqIH4h7SJzp
YUoCfeaPLNmcAuTR1ir72QK3TZaPpx4sQVThSxYbbPHznbr2Aweq0JXL3x33
2JNAW6AwLuF9NSpO3vjgzA3cvuU8dG7tH+R3vOOt920SdEme3xq5th7x3r/c
PnyXBN9OOI8t+7agNYPmhtgTEqxQWsvvnexBe4xkX/4OIsGXWMX2tl29SL+8
/09rCP5OO/pt15RoHwpLtj1FeEkCvj82Yi09/9AGR2eN/W9IIOdlGzDmPIRQ
z967p9/ieAvVfVK7MIxM9Ja/XIolwU2vt7HXVUfQGxXP3R7vSZBTWejv7TSK
pJf9ZX+kkCDazMEjYO04OmR7yrw6jQSpko5Ytvs4smhbHd2ZQYIX+KXxSss4
epf3fB05hwTKAx55wS8mUPGu8/qCuSSwrjd2zhmZQH0x655JfyNB7FJKYcrB
SSTnE8V7KI8ElG0fBi26JtHxWdPj5/JJ8FqI3F+xbQpdtZLxNS/E8zPh77ns
OIX8G3rzHYtJwMxbmp3JnEJJxxN4vEtIELa4XsZiegqV515Vf15KAvpCvLnv
jmk0vHW7a1w5CXjUxL+qWEwjvtdjmZ8rcH4w+wO6L6bRjlXpk4VVJIh71rTr
y49pdPr+rZ11NSQYC7afPzwwjRzG91zvrSXB/isn9//lzKCgywsJM/UkuBbr
vHRGfgal1XztpTXieNibuj4/MINqDt2TFmkmQaTVsrWP7gya/KxxSbaVBJKf
7w8wzWaQkCwlck87CYJ2Jj2nXZ1Byi+LGo524npO//jI/PoM0mP6rTnfja9z
A515bWaQk6uWjlUvCQ53bns/dGkGvRzkfer8jwR7gUsdPTODcowqyx4OkGDz
cKUcWX0GNZYHM8OGSKDWVWG6VmoGLSLdIwkjJPhpwsqWJs4gsRQRr5wxEjzv
3Loo3DiN1CQbuSUTuD5G/ivsSZpGxsGvlhqmSDC12O3xyGUa3SGbqA7M4Hra
FuC4DNPotaPk7YU5Elg5XfumyjONuD1daaxFEhxTunxR7csUatd7N7pumQSL
60WBYjuFiD+ttioQyLCT7/nOYLEpdPDDcJwWmQz7ZiTkec0nkblYSqchlQzL
EcOuVMIk8n58Q+IanQw8LxbtG0MmUJHt7MvHbDL83Z+scSRxHPW15dS+4iUD
v2nh5Oy2cUQ/4y7wcRUZqm+IzuV+GEPHlIiPywXJoL9WZrwweBTJZJaiL8Jk
iNstI32ZMYoIqi/G34mQoUPwgbT65DDKRAr698XI8Hm6ofRZ2CCSPq4rpSRN
hqQHUx+kXHrRSplErcQmMkgtPTTzEOtBDdoDvhxZMhylFXG+fO5CT3TvDffI
k2Hg6/6X2dXtaOlSQvbLXWTQGO453Xa9DtV33bzqvZsMOjN8RhuhBqVfQeI3
/iPDzdFbpoGUSmR9rcZLay8Z8h3eRVNa81Gt0/KpFQ0yVOyKyXOweY8lB57p
MTtDBm4SVn/1YSv2iH/9y9M6ZDCu6k6OedKOWTzrPa6uS4aa8gD+N4ad2Ppw
t5Q1BmQg7nW+K/P//7+Ki3MruUSGnPtxzf28w5j5FvvtmZfJEMZv4Nj8ewSD
xL0db83JcEI+4emvwlFsOqXiiLsVztfEiV3Nd8axy1/n+XfYk4Fc7PQnrmoK
U4eCArEbZFA+mDrjETWNrf0R6MRwJEPPOn55KZsZrKJYuqXDiQzPw7xme6Zm
sX01J98/u4fnP6c8tKFpAVujJ2ro4UEGK7tY/S9+i9j4305eWy8yUKlOX8OU
lrD3rU43j/qSQXYP87ad8zLmZXpg824/nM/NR6RXCa5gJt2cho3+ZPi5dkPw
ofcrmPBANFoIJIOAk1PNlUsEbm6GZ8DqIDJceqW4uTGewL10z6x5cwgZbqXr
BXwfJHCpxw8pqD/H8ak4JUTeysNNFNrkqhOK88U+987fiod7po1aYh1Ghpa5
FOHD0TzcmYRekfsRZDit+F1KrI6HG+FYfOVFJBlEqj94LtCIXA14/zkpCq8v
uaunUonI7WP6UfKjcT5ljFceGxG5j/9Y6zTEkCHQyclb3IPIVYw6/nY0jgwn
u+M0bkcTufXWCuPU92QYtv3J9vlG5N7Zzdm//gMZIFvlz/5aIleKMBy4K4kM
JbIP48P/EbnFJeUtmp/I8Lt6OO3hLJF7/dmnrSYpZKiNvqxJJJG4giZP3G6l
4Xo+adO5SCdxs+Xsf/lnkGF9n6+sA5PENZ46vfZtJhnm042GL9BIXDJX0So7
mwyzR+33ZawQuQl+Alm/v+D98vfNSZcJIvfUuUlqz1ccz969L+I7iNxJ8T/n
FjEyXLXL4qqXEblh/Rkx/HlkQMsSn/alEbmQ8XxCNh/vxxmR+29DiNzuu7c1
UCEZZLiPnjjaE7l+x/Sfnismg7vGisNnTSJ3h5BKm00JGfo++M1Zrydya1tF
t3uUkuGNnP2Ol4M8XNeEeffQcjKsTTAxPprJwy1EuesKqshAoq6v00I83KvM
V9aNNbh+iH5FnxcJ3NV/3LPHaslQdWjfdEkGgWtojfQ2NOL5ttj6yq4jcIm7
JeKUmslA0Ty7SyJwBXu3Qpg61kqGbaqPXXNbl7HxkLyg251kmAsQdh62XMJC
L75tf9xNBm3yCFb1ZhFTk/PaEdNLBkvbkH0bqxcwX+xQecUAzh9B4FOK+Dy2
ob+YITdJhuvD04Fki2ksP/29PkyT4R/JVSvwyhRmddfvne4sGQYtJ203Xp7E
0gW1DnkukuF8y57rJzTHsWPo970mMgXWVz7tsk0ZwG6F/JkJEKKA6UGlv3Ur
FVit3bfc+2sosOukwMS3tGJM+cS7+zdFKXD058OL7Oxv2DTFmWWwngJtr5It
3xuHI8fbYuIyMhT48NyaJPS8Bt00uHz4ixIFRFZqaZz+QVSjrMX6qEwBc4Nd
/extI0hJYHdF1B4KNPA7n7T7PIomf1ENvPdRwCjNN89vcBzdUEu4dvogBTQ8
k5+pb59BVaLBigcPU+CzvYLm8O5ZpDjtOqN8lAKGpbEfFPbMofGPJ+6LaVGg
eFDvotO2BeQgMRbSexaPf+W/cLemZVS1+Pd8wzkKxClZaZVmryDFv3kbyvQo
oHuBIupzlADjT0PiUy9QIG9Q5eB5YR44c939WqwRBbwPtX43duKB1GMWiqEX
KcBOix+m1PGAPWlPrvtlCgQm1ir0PyRCRavEfTtzCqwe4Y3lacHfxbmMw5ev
UOD9yGS07TYSjN5s/H3UhgK3dMb5Ofi9Q/t0fsjeaxQolLEIX88gQ/LWpPPb
bCkgmXm7+fAxMtj13OkUuEGBrPbjjp+4+JzOuxJPdaRAedx+ct0UGXa81r42
d4sCqXYJ+b2bKPDEVUVx0IkCA8+zpevxukf1JGdaXCjA83Oz12s3CmgrsXIr
8V/JSVFl5TcUSF41eS//DgW6TH95PPtOgVVDTYcy7+H4fZqPz2ymgN3PAmaC
BwVqdom2vpiiQEXsx98RXjhfCft0FBlU2OHxIiTQmwLKtVU7vESo8MT43nkP
XwpMzAq/eCRFhVFVqw2OfhR4Kqz59ogcFbTXnOm84k+BgyNxNlkKVEieUI03
CKBAQP4mQiu+vqpC6tqJJxSoIkxafZWmgm0iWxGCcH9DSQm6a6kQkKgnvSWE
Aic8YB2JTYWPidHC/M8poEq54PxqDsclcYi+8ALPW7XnmHwnBYYT9yx0vsTj
N52cTi2mAG+S51BpOAXEFAu4exMosDWpvDXjFQVC0o+UlvlQQCtJtCryNQVm
TjgLOVyiwNUks3wfHKfZ7wfsFf+jgH/Sp892bynwpu2wnygD13nSfPz5WAqc
3ynUoliHz82kQ+Ea73A8ytRz/N6QoT/pyWP59xTYoCivss2SDMyPjXcFP1Dg
RXOeujz+Hd/ycZPDUiKOZ+C/m0/6SWD5MVf3dzIFsqsn2yvxd4HvR5pmVioF
1hw/LftbgATvPp7Z+yYd52OkK+NWARF6PvaJ38iigB6lyZtXHH/3fhL8J8yl
AO3c9hm/JAJ4fbrYuILz+u2P1NUVTQLEfEoo6/tBgYSnbg1eRSuo6xOk5hTh
eh1zvicpvoxMk6+6Gv/GeX5qxJ14No88kjOvHamkADrUS+C8n0NvkokmO6op
4Gm3a5t21ixqSw49SKyjgIBd4tCW0ml0MSWfE9dCgStKztFSv8eRYapY1NAQ
Xv+TFJEvPV3ILfVKUO0IBW46bF9UKOxA4ampXtgYPk+ktW4txLShhtSjVk9x
nYWcHv09ml+P9NNuKu5ewvs3qWvd5DEMnUsvzXfDefdalXWjYbQeU1/cejaQ
lwqu1zQ+knc1Y7IHA9vfrKKCMvfkvG5aG7ZYfXq5UJAKdyXKCOd+d2ExE7X/
rV5PhRCQ1GwMH8QC9u4plBKnwiX/7Dz+W8OYk+dLHeWNuI4lUxa5kqOYloCh
/QUZPN7gQRNoH8MmFdsTYrdSIWo8efdjoSmsxUVDJWs7FWYMDzk+xO8rxXlv
i0p2UuFWQjvhl+80FnHGomtkNxW+rXf+96JtBvMOK3Ig7sH9HSi16b4/i9l1
yPIIqVJh2PPN08V1c9gBh4H1qupUkPlvzFRKdR5TyNFK1AIq7LkXvp/6bR4T
Jn5UvahBxd8H33eeV13ACMf4ftofpMJ0TIAG69MC1v/UTs/rMBWGmrDPHLFF
rOZvZffzo1QYMZag6txfxL5t3HXz/TEqeD81bqluWcTirUKIuVpUCN/6n9QD
/D4UlDL1pPwkFfpSZ4YueSxhbnO64u3aVLCM1/e3KF7CLPZnJU2coQL/reQ7
T6nLmPZD0X3Uc1QwLL/r2LlvGVOtdCkR0aNCVZP+yYs2y5i0aJO+/Hn8/DPJ
VcygZYz3klqv2gUqTH7N7ulPXsZm4yMdtY2o4Hd9bD2reBlrH10hXb6I80Oe
Wnerbhkr2XMpyPESFZ7GcS6o4N/L9Ht5Er6XqaCbXmZqhtuRxVKfwsyp0B8e
w6XXL2O+qx6oJV2hgkVp84rKz2XMQb/nF2ZFhdhXnDectGXMMOqIQZUNFVKU
RlaFP1vGDvfF93Vdo4Jq+OfIBbtlbMcO5u0ZWyrQzRrsjx1axtY62VCYDlTY
fUn/bgz/MkbmlgaL3aSClqjzHdm/S9gwbZvk9ltUKCgXap4OXcLqTwUm73ei
wsoq87SdZ5awvBej6jouVFgcPZ25SF7CEltPl1m4UUF4jel295RF7J6tYP+j
e7g+Em6v2Tu7gFlnOjpFelCho6nUpiRoAdNZqaWmeFGB1dTWmrp5AZMNfClV
60uFz74ibvv3z2O/P24wkniKz1kl45Vbe2axm3TfS3zBVGjq0wzxSp/BREzH
zJdDqCArJpQ3rjCDmQjlX28KpULozi3S4QLT2Lir1b3QKCr4x9w0aM2dwAQ1
09+uSqZCb3G021+tISwren38SgoVGtY1ybvND2CGi96Jw2lU+POvHpzj+rHY
T+czSjOpQLq/au3gfC+mLLxS6ItRoV3kyubbrzsw/U7NfsJvvF/ebL9WcrAC
W9yXNjxSQQXf7QyfGOdfWNRzsYmWKioQXD4a8DkVYv80RxZya6lQYXusue9o
NuaSHMJxbqHCvZZk3fqweLSBubzasg2v9/SDkqjjGejH5SvCeh34d2PPmqu5
Yt8Qe42q+O4eXL/DMg0XQovQK/fWHWNDuL5MXdaU51Yjjbqju9tGqHC4lYf6
7/kf1LMjVeX3GBVSr7zx5prWoW1dXhpJU3i+6ksvvcobUJXa8OGIGSrY0Wg/
hq41odsv9I4/mqNCbYbCd/ZyM+Iek9OxWsL7qzzS7/ftNmQWE6yvv0KFmrtT
/oay7Yi+vGh4hIcGvRf8tg5UtKPTKb/NZSg0yDEJ0a5kdKJppoq1II0GxTvc
H6wO60RhZtHXSQwabBRXyJWW7EIdaxxvt7NpQMpmdKWKdiPt7Mk187w0UMZS
BuWCuhFmcDOLfzUNtgz2zRF5etC2xQl9eQEa+PPQ72lY9KCIVzfmDgjRQJU4
eX/yew9ioYmXhmto4Cat7rNZsBe5tDmoOorSYLs//9Mhw17Ud3+84fE6Gjw9
Ms8xjOhFelIOrnHraRBzw7H0UVUvKswfW4eJ0wC+OgyGrvQiJQv73LqNNLjV
+P53tFQfeksbMxyVosE+Uiu9VL0P8b+3W6JvokFYnNAx1dN96N6x0VcbZWnQ
IZV9WvhCHxoZsFVXlaNB3e282keGfcj48UjLGQUatEPHjZ/n+lDpNtu7Ntto
cODL56eEI31ItWJY3GsHDSKzhbTNd/Sh9/bXuRGKNHhT7XB9G38fEhEYNslQ
osEPU+tdzwZ7kXf6NZ5yZRrwibic/YP1oqlzQ2969uDntUdrFfx7kdnMVY0V
VRrIu65baTzdi6pCBzvWqOH4SP6Qk1ndi/arXvXcgWig7zyZrVXSg5IbB6Q0
99Og2kphLNS9B21wt8m/dIAGbJN/jafle9AiZk0JPkKDZB1fWcXb3cj6Un/s
B00apB7g3BwT6kZ/idaH84/TgF+aQD+R3IU+H7LymTpFAx9PQrTw304k3du3
mfcMDS6opYzLWHaiYF/L4k06NBjevtIqMNmB7H5dYejr06D1jqthLakDyZ+2
eJRjQgO9ij1KIuw2FDbeLV9tSoOiqQEjB+FWRA8xLx0ww/k/cUA4QaAF9dSa
cdZb0YD2nBkWzGlCUYaXA+/a06D02x0P5dX1iHe5Y3voDRoYf7/9ZrVoHXJ/
bVqR7EgDJtVcZlC6Fhl0XFrd4UwDBUqXy/yxGlTs2Z4y70oD76EXB3UsqtF/
MpfOCNyhwUn259FZnyokaGkSfNCDBt+sPiYfbatAHoy2XUZeuH73kjsW11Sg
sYSLNY7eNKjpYwStSy5HJlqtNwN8aeD7d+Pz/v1lqHzIWOidHw0k3oqZne75
hdQCWzIwf3y9JnZxR2QJStxhrFsfQAPt7Wk3Tax/ooc3jF4wgnH7l/qPOo0i
lLqpO2k5hAb4m2lu6GIhavp7NX/iOQ3uNaXEaTwtQJTHkw19oTQIZconnK/L
R9vAbaw5DF/XraN+VMxHehMkenUEzmcc5KS8/YHuxT3aUByJx78VGVwm9wO9
Py+w+2sUDUTKzvFeKs5DVezw46nR+H4Fl+15bnloAZM0fRdDgz0z5y3UjuYh
6RsJThFxeD5iEnZC8nnoxCbFwKfxeD81Bat7yuShW3+zY70TaMC9utye8V8e
eu2/P9c1kQaWj9VuVV3KQ8XoZ5XdRxrsoDAEJt/mobFx7X/myTSgC9hh8st5
aG1c/YpBKl4/T7DlPbsf6MB5E2HtdDz+dHjj8PwPdJXdp3DoM35+71ye1at8
9AyzPaCaheev3hD3V68AfXOYOb89B8/Hd2RUTK4Q9crctZPOxeshXpugCRah
VX+pPqLfcHzatCbMhIqRKRJOJ+Xh8fn3rb5qVIIejb8qmf1BgyzzIoLz218o
PVamfagAj7+d++XrSimisnfz1v/E49/xVtec+422Y7nSZb9w/V34U15VUoH0
HQ7uzSujQdMB71eKbytRQv1Zy8RKGujcF5mysq9G1Y8a77ypxuclvbf0nUUN
WlS//Oz5HxpoXUvi6zL7g07GOuTd+0sDMvbVc8qlDo3bPxU71473m9U380Fi
E1Jl/a5YGqWBirU2eXhVJ7r8Tbd3fJwGnPDprYM5ncjfvmWpd5IG2RdjW/+a
d6GWuiG5qlkauGqYLtp+7UYeMewHcQQ6HO1eO1Fm04dK1I6pnFpFh2kdok3B
gyGUJqjkrspPh5OKOXSVtcMoYmD9dxlBOohbaQWpfhhG116OHV1cQ4fR3fG0
uu8jSNeu0b9XlA63Og4FO0qNIvUjBRVV6+jgyHZvxy6PolVTofrvxekg+VnO
gr95FM3+8ogI2UgHw7sa2g1CY6g9+mrbXSk6zJfen2o/PoZKnHWlbWToIGeQ
7ca8O4ZStcFSdzMddP4+jNn9aQyFb5ZL3L+FDroW3mWHmsaQ17LAqII8HWBg
B3kDdRxd/bO0S2QrHVzulTGjFcbRucTe26TtdLAcYVz+fGocqXtWfhneQYeG
W7f0wHYcbTL4svJXkQ4XecvImx6NI76dsQcKlOiQZUq+fPLtOJqlBfokK9Nh
qUn+5JvMcdTW4vQrfA8dSvh5A2nF4+hnhimfjyod/jJfdFrXjKNUf62zDvvo
8PvXAvVz0zgKu6z8wkidDsmlUdk1bePIU1Wi8SjQYc/f3OI03L66mimupEEH
MfHPQvvx/Tp9E6biB+ngJvPfK5vqcaSGNccxD9OBcWfOXaoQz/d5Uf/UETpc
lzi4cj59HPFeS9nWrkkH0uV1L3gix9HMgXCH0uN06H0vMcrxxPNd++Bz5gk6
qA6Lj9y4jOc7dn0++hQdHIw0s7YgPN9iffWA03TgNRFK3ySM5/taw8P5LB3s
blUGX+4bQ563FArNzuH1Wtaca8gYQ1dPCDO19egga6Gv6X1nDOlIE07uPU+H
gLy51WYaY2hTVfWf1UZ0CG2+aPXxyyjie/9VdMmYDlFtsStr7XH+774z6jOh
w4WY23eyN46in1tdu7+Z0aH43mim8r9hlEo235JgQQeLa1ceVG8dRmGNJ689
s8TjlwwfJlgNoasPJadsrtJh1X35Izo/BtA5E7aK3nU6tEye/fGuox+p/zft
pmFHh82GrA+ds/8QX/dPsuhNXI96YZ6PmH0oFewFC11xfL96lTsU4veVNRf0
U9zpoLUxIq4sqgN5Dh+MiLhLhyMXdhsdvNGOdCJEpG940vH7w9S7N8QWNDOD
7ZJ4hOvP7L0n4Uk1ShDmCux+jOdHmcp8+LwCGe/mTmgG0mHQ3NOcu/4Xynfg
pt0IxvW3ZfnxnPFX9GSIu6sonA4Sh/Zf4vX6jMl2ft91PRHvvxjmuJxnG9bI
kyfg+RHn2/GtlLlGBxYgkTfxIpkON675FPMRu7BJo7y07+l4fitSt8vv9WLc
+rxdQl/pENRLVre6Pozpl//YlVtGh62XnTZB+RTGGvohUPmbDl+OiETsD5nG
vrHyJ7or6fBe8+zdl7ozmLRmfhpfLR3Wtl/1NPw9i9VdyQ+WrqfDc9bNi6cf
zGF+3vk3VBro4G0fejBZeR4b/ZG/63IL3h9qP3uK/Rawtx35Ak5tdOhX03IR
2LqI6fIUTPh34P24xqH3389FLFe9IO1zDz5PElJ0LceXMFujguBffXRIb1Xy
THBfxiTdCm609eP6POu8kkhcwXyzC3YxR/D+yBl2VZ5bwfbWFwiIj+H1dm/z
2bmbwB2eLpjYNYHPhz2fXp6wJnDfCBVWH52igwHpa2tDOIGro1SYZjRDh9Sn
L14X/CRwaWcLgx3mcP5SjhAXJgjcHPvCGz4LdIgu2LHWai0P99qTwrMRS3Qw
qb70b3kfD1fiU+GulBU6qNyNuZJ4gYdbXVYoUMjDgFvDR3xNb/FwvQcLJxpI
DBCJjkUCj3m4Kqyi6hEKAybsjX1TXvNwB7cUpZHpDBDrOGG58yMP9/XRomBR
JgPCpBWnfLJ4uGeuFN3YxmaA6nba+Q/feLgU76KzB3gZIGcmUBvE5eFmxRTt
0l/FgG1mMSXK+PqmP78favIzoLnhpoc0fj6YUt+qKsgA9D3V4DTun6DctltB
mAF2dfa/sqN4uNct+h6tF2HA8JNJhQuBPNym56PtvGsZcM1RKXuXCw9Xs2j2
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

          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
ycyaXYs5Q8R8xizTR88SsSt+0u/CzhGxq9FDz0PxcyrxOF3kxnkituL0980K
5gTMIevHL71rRMzD/8z1qqs8yNaIFdt/nYg5iN+qPYDfF0LZOd0dN4iY1+bg
5H14v5jczEqTvEXEVM+TXqfg/djU9Aaff/5EbCNr/x47XRbcVb8o9SCciIXo
EhYP5E5AdG/0resRRGyWdjPMLm8MUsKoXQ5R+PkRT5ytyaVB/YD0a7UYIvYh
pzbmWOYQSDyrlu9+g+9fbJxx4sgvSJrdvF01C79f1iEWn6mFKD/hWJh0DhH7
8ehSVgvnG6o+6jdOzCNiavyLGrfvNaCxd61ZHflETPlk1a48pXa05/hd9UD8
XsZcauz8k9OPDAhZz9zLiJiinNfwUtdBZJvZxTxOxe3mI003Jf6hOxS1L9sr
iZhuroHa7+M0VJnfe7CtAddti+GDsmtTqMNZ5M3XJpwvYUlnW+80oolq8lO/
EzFJex2fxbd0JOr6hHqnDa/nu+PRhfMzSG5V0abz7URsh+GYZU4sA6l9HQqy
7CRi/7o59jr7Z9HxNdr6W3/jenp6htecZSK38vMp4n/+/z/Y+MOYaSbyufJs
KaeXiBXGSPumes+huKqxuu8DROzj1KFzxvj7n31dSqV4iIhFBoxiJTQWosoe
fpw8jN+HpcF9arbz6J/XK/PbY0Qs7oCP9KLiAlrYVJVzboKIsTO+DmkFLSCR
Zrq4+RQReyl6sc/u1wLa4LvBcz8dv8/kNfcsldlo51ajNgUG/p5EOv2Q9WIj
rPXGXjEmEQtb0XSitIiNrPwTns/PEbEM9+PbdyywkYtyA6t/noiRznmOXFFb
RN4drJONbCKWcHkk995ZvL8LUigq4BAxPzVRpevhiyh2p7nMWx4RC42uvHIw
fxFldt/2eyTA4zmtkhttW0RlIe97vIgkzDZe1zRochH9UG855EwmYRe2VfmL
EzlooJcbbyJEwhwvv02PX8FBzDAlgsZSEpatHbbzgBQHLdl3/Iy8MO5PS2ia
lMb9lWOc9iwnYWqW3JeqqzkIyXU5GIqRMDlVO5t3SzkoTuJ/FVx3PJbfG369
e1JWlCKjhJbkG8W501QqlZCQhIzKKGU2EJIoVEKSkESZGannTVZCVsjeZO89
fs/vr/dzf84597iu676fc/55156/wEcE6EyfNp+ax5yohrq2q4lg1HF0d0DT
PKYz/+qspwAR6vrpj5W/zmM7hlu1XwgRYZL7Zqvri3mM3bHx5Ic1RPi8fmHE
2WYe+/fn8nEM/w7ktcGxMyrzWOHP2KPV64jQF3H7gAzPPBb9tfdQ73oiiP2M
shD6MYfdSdlyYEGcCC0zDhmH785hBrE2wCdJhPKIhLCW3XOY8sskNSlpIrwj
zDaSemcxgccjqv9tIsLzzYGPWoJmsdKbN3ZflCOC0pWxtwaNM1i8ZYbiDQUi
2J0gbTnjNIM9MJzZ7rONCJW8P3d/WDWDqR90lfukSIStJ919VZSmsU8CnuIr
qkTw3qG6Z+n4JOZPKxATUCPC/VxGwvafE5jlAnXtZkSERfHAx0cOTGASnX6C
pw4Q4YDNHe2pbeNYUGoQ4/VxItTyLglNV49g1+NqqGkniIBl5q/mix/GjocJ
k4tO4fW8fl6h7DyEkT3ClofP4nMs3gHpCQ5gjqejJ9TxuXb3bS3lkEoPpj+a
0txyFedPcsYCU/iLKXVNNIxfx7+rfIyverW12Or63fVUe7y+8osqJt41WAmW
XbXNkQi+F1PGq2Z/Y/sCvxfdcSeCSdXBuJ9HvmIinqSCoLtEiOJP150mZmBT
tw7lxd0nwr269teGte+xj8Y/c8sfEIFgEHRS7/0DJL6tMmVDAL5fLaLy+QMM
fd61TobvCa4f9qrh5ZY8pKViHrrylAiy83vOxrUXIJeDc3fanhFBu9VI51Do
L7T62IHxihd4fWZXjmkfL0fxpx6bf39JBImSswRX+wpUa7BRK/oVEbr28W/T
aa1C10xssKDXRHBw3cTm8NQgskWGoucbIvSfrrB2EvyDwmxWYm+8JQJz8IqH
m2gt2mmvKWoWi+vLdmcueVUdKr4V7K/zjgjSlyJTeGbrkLFb88pB/Lvh5L64
xaqyHvn72PfIJBEh0n7XY0v9BiT1+Mt54U9EuPpF+TuF2ohygihl1BQi0E/P
za+JbUTaoadgJpUIs1E/H3/c3YR6X71M603H6+XXLW3ObEJ33nZuqv+M23bh
C9/km5Hg+61hxVlEkCzSP2j3tBl9+Hibk51DhMRgzlvBf81II/37vfe5OD+x
PrXVii3obzZr8uU3nB936omG6y3IDjt3xY9LhBI0z3f+VQuiFrxucMkjQkez
2ccH31rQq5J/J2zyiRCv3SUTVtWClCp2fb9QiOv95LWSmr8tqOSPu5JWMRGS
1nxTcKppQZcai97tKyGCz82nKyV5LWi2bfW6raV4P2uFLayJbUGBPRcC1pfj
88JPOy/JtQVtGozl4a0gwnnnUKzlcAvKHRu5uVxJBIGuE0weWgs6O6PSN1xN
BMffuQeu5zaj/kXPC61/iDD2dfUtzyvN6B6xvPx3HRFOVP0ai6I3ozV0EQ3u
X7zfbPfKyUU1oY8c04zkRiKkyos8fbCtCR0SSJR904zzIadiL5beiJpEpsOf
thIh7oxrscHORsSQ9vNw6MTnS8+UpZ9gA4raUjNl2o3PpxzvXxdd/yLl7Rus
zvYSwfxLqndMYz0yU009pTRAhIwBYwsDvzq0gBbzpIeIkNxzd+Tb31oUdOiw
stAInr/I/EFn6VqEaTeITY8TgWVvQ+hOqkFrrxD7M+eJkNVyZdojshJVBp/x
2sskgeyqQ7WvyguRYntq8Dk2CbLSD6d0bC9AIdsE3tryksDw4hGrqdAfSPdn
9fe3/CSI2mlG1fHhokxhpcqvgiRI/irDnFn/DYmYhbTV4ffeei3/fScPf0EN
yzorrHUkCB3XKicNZKC9Whm8m9aToC9gNj3TJg1FvBTaAOL4fiMjkfW8KWip
x3GrwUYSmHQGsh3ik5CxUu2+m1Ik4EY+bF+5+x5h95W1AmRw+7b61/dxsUji
9/ML8ZtJsErd4+BqiWh0X2zGOm8Lvp48YGjW+gp1WOm5NMmTgBDZGfZ9Zyg6
kJn5cHorCe5tjdZ6qhaMYsgiL1ftwNff2Rskrg5AlDNO8XKK+Hr/UVknRR9k
8bo+86ASvs6mEuT77qOiwT1Fxsq4/UqDZu7shmRVX9Y67cFtOb5N9x2ckJ/P
XHeQKm4Xap8NKL2NBmrOTyXuw23/FNK/5y5ISzKHXKSO+xe7dfeT7T300Xat
YDvg9tM1lwXPP0B8X12kFjRwO4RWNMb2R3bMRkWhQ3g9U08nOo4EoUq9vRrb
j+D+DM6tjXR4gRRjw09rauI2n124kO8rFDy+YHL5OL7/i97HmIPRaBIZ2rmf
wG36riCLvXHo3OPcuy9O4fgGRq9cjk9AnxvEAlNO4+8Q7kKP86NPaI2se+Sv
syTYYZOovtkhFTk5Nid1n8PzUch8Jns+A/3NU/u6oofb+9WOGrlkIdVVkaWi
Bvh+WoLW4T9f0FKC8cAJYxKIfFZxrg/7joxnv81fMSFBsVTAhdqIH4h7SJzp
YUoCfeaPLNmcAuTR1ir72QK3TZaPpx4sQVThSxYbbPHznbr2Aweq0JXL3x33
2JNAW6AwLuF9NSpO3vjgzA3cvuU8dG7tH+R3vOOt920SdEme3xq5th7x3r/c
PnyXBN9OOI8t+7agNYPmhtgTEqxQWsvvnexBe4xkX/4OIsGXWMX2tl29SL+8
/09rCP5OO/pt15RoHwpLtj1FeEkCvj82Yi09/9AGR2eN/W9IIOdlGzDmPIRQ
z967p9/ieAvVfVK7MIxM9Ja/XIolwU2vt7HXVUfQGxXP3R7vSZBTWejv7TSK
pJf9ZX+kkCDazMEjYO04OmR7yrw6jQSpko5Ytvs4smhbHd2ZQYIX+KXxSss4
epf3fB05hwTKAx55wS8mUPGu8/qCuSSwrjd2zhmZQH0x655JfyNB7FJKYcrB
SSTnE8V7KI8ElG0fBi26JtHxWdPj5/JJ8FqI3F+xbQpdtZLxNS/E8zPh77ns
OIX8G3rzHYtJwMxbmp3JnEJJxxN4vEtIELa4XsZiegqV515Vf15KAvpCvLnv
jmk0vHW7a1w5CXjUxL+qWEwjvtdjmZ8rcH4w+wO6L6bRjlXpk4VVJIh71rTr
y49pdPr+rZ11NSQYC7afPzwwjRzG91zvrSXB/isn9//lzKCgywsJM/UkuBbr
vHRGfgal1XztpTXieNibuj4/MINqDt2TFmkmQaTVsrWP7gya/KxxSbaVBJKf
7w8wzWaQkCwlck87CYJ2Jj2nXZ1Byi+LGo524npO//jI/PoM0mP6rTnfja9z
A515bWaQk6uWjlUvCQ53bns/dGkGvRzkfer8jwR7gUsdPTODcowqyx4OkGDz
cKUcWX0GNZYHM8OGSKDWVWG6VmoGLSLdIwkjJPhpwsqWJs4gsRQRr5wxEjzv
3Loo3DiN1CQbuSUTuD5G/ivsSZpGxsGvlhqmSDC12O3xyGUa3SGbqA7M4Hra
FuC4DNPotaPk7YU5Elg5XfumyjONuD1daaxFEhxTunxR7csUatd7N7pumQSL
60WBYjuFiD+ttioQyLCT7/nOYLEpdPDDcJwWmQz7ZiTkec0nkblYSqchlQzL
EcOuVMIk8n58Q+IanQw8LxbtG0MmUJHt7MvHbDL83Z+scSRxHPW15dS+4iUD
v2nh5Oy2cUQ/4y7wcRUZqm+IzuV+GEPHlIiPywXJoL9WZrwweBTJZJaiL8Jk
iNstI32ZMYoIqi/G34mQoUPwgbT65DDKRAr698XI8Hm6ofRZ2CCSPq4rpSRN
hqQHUx+kXHrRSplErcQmMkgtPTTzEOtBDdoDvhxZMhylFXG+fO5CT3TvDffI
k2Hg6/6X2dXtaOlSQvbLXWTQGO453Xa9DtV33bzqvZsMOjN8RhuhBqVfQeI3
/iPDzdFbpoGUSmR9rcZLay8Z8h3eRVNa81Gt0/KpFQ0yVOyKyXOweY8lB57p
MTtDBm4SVn/1YSv2iH/9y9M6ZDCu6k6OedKOWTzrPa6uS4aa8gD+N4ad2Ppw
t5Q1BmQg7nW+K/P//7+Ki3MruUSGnPtxzf28w5j5FvvtmZfJEMZv4Nj8ewSD
xL0db83JcEI+4emvwlFsOqXiiLsVztfEiV3Nd8axy1/n+XfYk4Fc7PQnrmoK
U4eCArEbZFA+mDrjETWNrf0R6MRwJEPPOn55KZsZrKJYuqXDiQzPw7xme6Zm
sX01J98/u4fnP6c8tKFpAVujJ2ro4UEGK7tY/S9+i9j4305eWy8yUKlOX8OU
lrD3rU43j/qSQXYP87ad8zLmZXpg824/nM/NR6RXCa5gJt2cho3+ZPi5dkPw
ofcrmPBANFoIJIOAk1PNlUsEbm6GZ8DqIDJceqW4uTGewL10z6x5cwgZbqXr
BXwfJHCpxw8pqD/H8ak4JUTeysNNFNrkqhOK88U+987fiod7po1aYh1Ghpa5
FOHD0TzcmYRekfsRZDit+F1KrI6HG+FYfOVFJBlEqj94LtCIXA14/zkpCq8v
uaunUonI7WP6UfKjcT5ljFceGxG5j/9Y6zTEkCHQyclb3IPIVYw6/nY0jgwn
u+M0bkcTufXWCuPU92QYtv3J9vlG5N7Zzdm//gMZIFvlz/5aIleKMBy4K4kM
JbIP48P/EbnFJeUtmp/I8Lt6OO3hLJF7/dmnrSYpZKiNvqxJJJG4giZP3G6l
4Xo+adO5SCdxs+Xsf/lnkGF9n6+sA5PENZ46vfZtJhnm042GL9BIXDJX0So7
mwyzR+33ZawQuQl+Alm/v+D98vfNSZcJIvfUuUlqz1ccz969L+I7iNxJ8T/n
FjEyXLXL4qqXEblh/Rkx/HlkQMsSn/alEbmQ8XxCNh/vxxmR+29DiNzuu7c1
UCEZZLiPnjjaE7l+x/Sfnismg7vGisNnTSJ3h5BKm00JGfo++M1Zrydya1tF
t3uUkuGNnP2Ol4M8XNeEeffQcjKsTTAxPprJwy1EuesKqshAoq6v00I83KvM
V9aNNbh+iH5FnxcJ3NV/3LPHaslQdWjfdEkGgWtojfQ2NOL5ttj6yq4jcIm7
JeKUmslA0Ty7SyJwBXu3Qpg61kqGbaqPXXNbl7HxkLyg251kmAsQdh62XMJC
L75tf9xNBm3yCFb1ZhFTk/PaEdNLBkvbkH0bqxcwX+xQecUAzh9B4FOK+Dy2
ob+YITdJhuvD04Fki2ksP/29PkyT4R/JVSvwyhRmddfvne4sGQYtJ203Xp7E
0gW1DnkukuF8y57rJzTHsWPo970mMgXWVz7tsk0ZwG6F/JkJEKKA6UGlv3Ur
FVit3bfc+2sosOukwMS3tGJM+cS7+zdFKXD058OL7Oxv2DTFmWWwngJtr5It
3xuHI8fbYuIyMhT48NyaJPS8Bt00uHz4ixIFRFZqaZz+QVSjrMX6qEwBc4Nd
/extI0hJYHdF1B4KNPA7n7T7PIomf1ENvPdRwCjNN89vcBzdUEu4dvogBTQ8
k5+pb59BVaLBigcPU+CzvYLm8O5ZpDjtOqN8lAKGpbEfFPbMofGPJ+6LaVGg
eFDvotO2BeQgMRbSexaPf+W/cLemZVS1+Pd8wzkKxClZaZVmryDFv3kbyvQo
oHuBIupzlADjT0PiUy9QIG9Q5eB5YR44c939WqwRBbwPtX43duKB1GMWiqEX
KcBOix+m1PGAPWlPrvtlCgQm1ir0PyRCRavEfTtzCqwe4Y3lacHfxbmMw5ev
UOD9yGS07TYSjN5s/H3UhgK3dMb5Ofi9Q/t0fsjeaxQolLEIX88gQ/LWpPPb
bCkgmXm7+fAxMtj13OkUuEGBrPbjjp+4+JzOuxJPdaRAedx+ct0UGXa81r42
d4sCqXYJ+b2bKPDEVUVx0IkCA8+zpevxukf1JGdaXCjA83Oz12s3CmgrsXIr
8V/JSVFl5TcUSF41eS//DgW6TH95PPtOgVVDTYcy7+H4fZqPz2ymgN3PAmaC
BwVqdom2vpiiQEXsx98RXjhfCft0FBlU2OHxIiTQmwLKtVU7vESo8MT43nkP
XwpMzAq/eCRFhVFVqw2OfhR4Kqz59ogcFbTXnOm84k+BgyNxNlkKVEieUI03
CKBAQP4mQiu+vqpC6tqJJxSoIkxafZWmgm0iWxGCcH9DSQm6a6kQkKgnvSWE
Aic8YB2JTYWPidHC/M8poEq54PxqDsclcYi+8ALPW7XnmHwnBYYT9yx0vsTj
N52cTi2mAG+S51BpOAXEFAu4exMosDWpvDXjFQVC0o+UlvlQQCtJtCryNQVm
TjgLOVyiwNUks3wfHKfZ7wfsFf+jgH/Sp892bynwpu2wnygD13nSfPz5WAqc
3ynUoliHz82kQ+Ea73A8ytRz/N6QoT/pyWP59xTYoCivss2SDMyPjXcFP1Dg
RXOeujz+Hd/ycZPDUiKOZ+C/m0/6SWD5MVf3dzIFsqsn2yvxd4HvR5pmVioF
1hw/LftbgATvPp7Z+yYd52OkK+NWARF6PvaJ38iigB6lyZtXHH/3fhL8J8yl
AO3c9hm/JAJ4fbrYuILz+u2P1NUVTQLEfEoo6/tBgYSnbg1eRSuo6xOk5hTh
eh1zvicpvoxMk6+6Gv/GeX5qxJ14No88kjOvHamkADrUS+C8n0NvkokmO6op
4Gm3a5t21ixqSw49SKyjgIBd4tCW0ml0MSWfE9dCgStKztFSv8eRYapY1NAQ
Xv+TFJEvPV3ILfVKUO0IBW46bF9UKOxA4ampXtgYPk+ktW4txLShhtSjVk9x
nYWcHv09ml+P9NNuKu5ewvs3qWvd5DEMnUsvzXfDefdalXWjYbQeU1/cejaQ
lwqu1zQ+knc1Y7IHA9vfrKKCMvfkvG5aG7ZYfXq5UJAKdyXKCOd+d2ExE7X/
rV5PhRCQ1GwMH8QC9u4plBKnwiX/7Dz+W8OYk+dLHeWNuI4lUxa5kqOYloCh
/QUZPN7gQRNoH8MmFdsTYrdSIWo8efdjoSmsxUVDJWs7FWYMDzk+xO8rxXlv
i0p2UuFWQjvhl+80FnHGomtkNxW+rXf+96JtBvMOK3Ig7sH9HSi16b4/i9l1
yPIIqVJh2PPN08V1c9gBh4H1qupUkPlvzFRKdR5TyNFK1AIq7LkXvp/6bR4T
Jn5UvahBxd8H33eeV13ACMf4ftofpMJ0TIAG69MC1v/UTs/rMBWGmrDPHLFF
rOZvZffzo1QYMZag6txfxL5t3HXz/TEqeD81bqluWcTirUKIuVpUCN/6n9QD
/D4UlDL1pPwkFfpSZ4YueSxhbnO64u3aVLCM1/e3KF7CLPZnJU2coQL/reQ7
T6nLmPZD0X3Uc1QwLL/r2LlvGVOtdCkR0aNCVZP+yYs2y5i0aJO+/Hn8/DPJ
VcygZYz3klqv2gUqTH7N7ulPXsZm4yMdtY2o4Hd9bD2reBlrH10hXb6I80Oe
Wnerbhkr2XMpyPESFZ7GcS6o4N/L9Ht5Er6XqaCbXmZqhtuRxVKfwsyp0B8e
w6XXL2O+qx6oJV2hgkVp84rKz2XMQb/nF2ZFhdhXnDectGXMMOqIQZUNFVKU
RlaFP1vGDvfF93Vdo4Jq+OfIBbtlbMcO5u0ZWyrQzRrsjx1axtY62VCYDlTY
fUn/bgz/MkbmlgaL3aSClqjzHdm/S9gwbZvk9ltUKCgXap4OXcLqTwUm73ei
wsoq87SdZ5awvBej6jouVFgcPZ25SF7CEltPl1m4UUF4jel295RF7J6tYP+j
e7g+Em6v2Tu7gFlnOjpFelCho6nUpiRoAdNZqaWmeFGB1dTWmrp5AZMNfClV
60uFz74ibvv3z2O/P24wkniKz1kl45Vbe2axm3TfS3zBVGjq0wzxSp/BREzH
zJdDqCArJpQ3rjCDmQjlX28KpULozi3S4QLT2Lir1b3QKCr4x9w0aM2dwAQ1
09+uSqZCb3G021+tISwren38SgoVGtY1ybvND2CGi96Jw2lU+POvHpzj+rHY
T+czSjOpQLq/au3gfC+mLLxS6ItRoV3kyubbrzsw/U7NfsJvvF/ebL9WcrAC
W9yXNjxSQQXf7QyfGOdfWNRzsYmWKioQXD4a8DkVYv80RxZya6lQYXusue9o
NuaSHMJxbqHCvZZk3fqweLSBubzasg2v9/SDkqjjGejH5SvCeh34d2PPmqu5
Yt8Qe42q+O4eXL/DMg0XQovQK/fWHWNDuL5MXdaU51Yjjbqju9tGqHC4lYf6
7/kf1LMjVeX3GBVSr7zx5prWoW1dXhpJU3i+6ksvvcobUJXa8OGIGSrY0Wg/
hq41odsv9I4/mqNCbYbCd/ZyM+Iek9OxWsL7qzzS7/ftNmQWE6yvv0KFmrtT
/oay7Yi+vGh4hIcGvRf8tg5UtKPTKb/NZSg0yDEJ0a5kdKJppoq1II0GxTvc
H6wO60RhZtHXSQwabBRXyJWW7EIdaxxvt7NpQMpmdKWKdiPt7Mk187w0UMZS
BuWCuhFmcDOLfzUNtgz2zRF5etC2xQl9eQEa+PPQ72lY9KCIVzfmDgjRQJU4
eX/yew9ioYmXhmto4Cat7rNZsBe5tDmoOorSYLs//9Mhw17Ud3+84fE6Gjw9
Ms8xjOhFelIOrnHraRBzw7H0UVUvKswfW4eJ0wC+OgyGrvQiJQv73LqNNLjV
+P53tFQfeksbMxyVosE+Uiu9VL0P8b+3W6JvokFYnNAx1dN96N6x0VcbZWnQ
IZV9WvhCHxoZsFVXlaNB3e282keGfcj48UjLGQUatEPHjZ/n+lDpNtu7Ntto
cODL56eEI31ItWJY3GsHDSKzhbTNd/Sh9/bXuRGKNHhT7XB9G38fEhEYNslQ
osEPU+tdzwZ7kXf6NZ5yZRrwibic/YP1oqlzQ2969uDntUdrFfx7kdnMVY0V
VRrIu65baTzdi6pCBzvWqOH4SP6Qk1ndi/arXvXcgWig7zyZrVXSg5IbB6Q0
99Og2kphLNS9B21wt8m/dIAGbJN/jafle9AiZk0JPkKDZB1fWcXb3cj6Un/s
B00apB7g3BwT6kZ/idaH84/TgF+aQD+R3IU+H7LymTpFAx9PQrTw304k3du3
mfcMDS6opYzLWHaiYF/L4k06NBjevtIqMNmB7H5dYejr06D1jqthLakDyZ+2
eJRjQgO9ij1KIuw2FDbeLV9tSoOiqQEjB+FWRA8xLx0ww/k/cUA4QaAF9dSa
cdZb0YD2nBkWzGlCUYaXA+/a06D02x0P5dX1iHe5Y3voDRoYf7/9ZrVoHXJ/
bVqR7EgDJtVcZlC6Fhl0XFrd4UwDBUqXy/yxGlTs2Z4y70oD76EXB3UsqtF/
MpfOCNyhwUn259FZnyokaGkSfNCDBt+sPiYfbatAHoy2XUZeuH73kjsW11Sg
sYSLNY7eNKjpYwStSy5HJlqtNwN8aeD7d+Pz/v1lqHzIWOidHw0k3oqZne75
hdQCWzIwf3y9JnZxR2QJStxhrFsfQAPt7Wk3Tax/ooc3jF4wgnH7l/qPOo0i
lLqpO2k5hAb4m2lu6GIhavp7NX/iOQ3uNaXEaTwtQJTHkw19oTQIZconnK/L
R9vAbaw5DF/XraN+VMxHehMkenUEzmcc5KS8/YHuxT3aUByJx78VGVwm9wO9
Py+w+2sUDUTKzvFeKs5DVezw46nR+H4Fl+15bnloAZM0fRdDgz0z5y3UjuYh
6RsJThFxeD5iEnZC8nnoxCbFwKfxeD81Bat7yuShW3+zY70TaMC9utye8V8e
eu2/P9c1kQaWj9VuVV3KQ8XoZ5XdRxrsoDAEJt/mobFx7X/myTSgC9hh8st5
aG1c/YpBKl4/T7DlPbsf6MB5E2HtdDz+dHjj8PwPdJXdp3DoM35+71ye1at8
9AyzPaCaheev3hD3V68AfXOYOb89B8/Hd2RUTK4Q9crctZPOxeshXpugCRah
VX+pPqLfcHzatCbMhIqRKRJOJ+Xh8fn3rb5qVIIejb8qmf1BgyzzIoLz218o
PVamfagAj7+d++XrSimisnfz1v/E49/xVtec+422Y7nSZb9w/V34U15VUoH0
HQ7uzSujQdMB71eKbytRQv1Zy8RKGujcF5mysq9G1Y8a77ypxuclvbf0nUUN
WlS//Oz5HxpoXUvi6zL7g07GOuTd+0sDMvbVc8qlDo3bPxU71473m9U380Fi
E1Jl/a5YGqWBirU2eXhVJ7r8Tbd3fJwGnPDprYM5ncjfvmWpd5IG2RdjW/+a
d6GWuiG5qlkauGqYLtp+7UYeMewHcQQ6HO1eO1Fm04dK1I6pnFpFh2kdok3B
gyGUJqjkrspPh5OKOXSVtcMoYmD9dxlBOohbaQWpfhhG116OHV1cQ4fR3fG0
uu8jSNeu0b9XlA63Og4FO0qNIvUjBRVV6+jgyHZvxy6PolVTofrvxekg+VnO
gr95FM3+8ogI2UgHw7sa2g1CY6g9+mrbXSk6zJfen2o/PoZKnHWlbWToIGeQ
7ca8O4ZStcFSdzMddP4+jNn9aQyFb5ZL3L+FDroW3mWHmsaQ17LAqII8HWBg
B3kDdRxd/bO0S2QrHVzulTGjFcbRucTe26TtdLAcYVz+fGocqXtWfhneQYeG
W7f0wHYcbTL4svJXkQ4XecvImx6NI76dsQcKlOiQZUq+fPLtOJqlBfokK9Nh
qUn+5JvMcdTW4vQrfA8dSvh5A2nF4+hnhimfjyod/jJfdFrXjKNUf62zDvvo
8PvXAvVz0zgKu6z8wkidDsmlUdk1bePIU1Wi8SjQYc/f3OI03L66mimupEEH
MfHPQvvx/Tp9E6biB+ngJvPfK5vqcaSGNccxD9OBcWfOXaoQz/d5Uf/UETpc
lzi4cj59HPFeS9nWrkkH0uV1L3gix9HMgXCH0uN06H0vMcrxxPNd++Bz5gk6
qA6Lj9y4jOc7dn0++hQdHIw0s7YgPN9iffWA03TgNRFK3ySM5/taw8P5LB3s
blUGX+4bQ563FArNzuH1Wtaca8gYQ1dPCDO19egga6Gv6X1nDOlIE07uPU+H
gLy51WYaY2hTVfWf1UZ0CG2+aPXxyyjie/9VdMmYDlFtsStr7XH+774z6jOh
w4WY23eyN46in1tdu7+Z0aH43mim8r9hlEo235JgQQeLa1ceVG8dRmGNJ689
s8TjlwwfJlgNoasPJadsrtJh1X35Izo/BtA5E7aK3nU6tEye/fGuox+p/zft
pmFHh82GrA+ds/8QX/dPsuhNXI96YZ6PmH0oFewFC11xfL96lTsU4veVNRf0
U9zpoLUxIq4sqgN5Dh+MiLhLhyMXdhsdvNGOdCJEpG940vH7w9S7N8QWNDOD
7ZJ4hOvP7L0n4Uk1ShDmCux+jOdHmcp8+LwCGe/mTmgG0mHQ3NOcu/4Xynfg
pt0IxvW3ZfnxnPFX9GSIu6sonA4Sh/Zf4vX6jMl2ft91PRHvvxjmuJxnG9bI
kyfg+RHn2/GtlLlGBxYgkTfxIpkON675FPMRu7BJo7y07+l4fitSt8vv9WLc
+rxdQl/pENRLVre6Pozpl//YlVtGh62XnTZB+RTGGvohUPmbDl+OiETsD5nG
vrHyJ7or6fBe8+zdl7ozmLRmfhpfLR3Wtl/1NPw9i9VdyQ+WrqfDc9bNi6cf
zGF+3vk3VBro4G0fejBZeR4b/ZG/63IL3h9qP3uK/Rawtx35Ak5tdOhX03IR
2LqI6fIUTPh34P24xqH3389FLFe9IO1zDz5PElJ0LceXMFujguBffXRIb1Xy
THBfxiTdCm609eP6POu8kkhcwXyzC3YxR/D+yBl2VZ5bwfbWFwiIj+H1dm/z
2bmbwB2eLpjYNYHPhz2fXp6wJnDfCBVWH52igwHpa2tDOIGro1SYZjRDh9Sn
L14X/CRwaWcLgx3mcP5SjhAXJgjcHPvCGz4LdIgu2LHWai0P99qTwrMRS3Qw
qb70b3kfD1fiU+GulBU6qNyNuZJ4gYdbXVYoUMjDgFvDR3xNb/FwvQcLJxpI
DBCJjkUCj3m4Kqyi6hEKAybsjX1TXvNwB7cUpZHpDBDrOGG58yMP9/XRomBR
JgPCpBWnfLJ4uGeuFN3YxmaA6nba+Q/feLgU76KzB3gZIGcmUBvE5eFmxRTt
0l/FgG1mMSXK+PqmP78favIzoLnhpoc0fj6YUt+qKsgA9D3V4DTun6DctltB
mAF2dfa/sqN4uNct+h6tF2HA8JNJhQuBPNym56PtvGsZcM1RKXuXCw9Xs2j2
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

              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0.6870210173999567, 
            3.7634240633999525`}, {-2.6389653702907774`, 
            2.8009648551982753`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0.6870210173999582, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0.6870210173999567, 
           3.7634240633999525`}, {-2.6389653702907774`, 2.8009648551982753`}},
           "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0.6870210173999582, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwUWXk8lN8Xnk1FlCRKoaQSKSkqyXkla8hSsiUVKm1SJPoiSVIJSSUhCdmV
ZMsdsm+FLEmyxdjHGMOY7ff+/prP+TznPufc59x733M+s+nsNStXEoFAWL6M
QPj/r2VK/9vV3H9AEHVtlj4fhRZc19o1k4eBqi77bMQ1EsVvOSb+cPkwBHLu
7TGWi0RH/t2v0Vs9DFiDu4pwRCQaSy7158vg/kUnzVKLo1CEy6xGkQLu7+Ix
Y/MmGmkqKk/eUMb9f13RFmi+QD2Dzsk71XHcOdj/YEgsCnr3wmH0wDAQNm5O
d3gYj5TONUsk6+J8Jnuvqye8Rc0KQvVOxrgtHCn+0DIZ3Rw4eHedJc7XJ+Hr
bp+KZJI89/+0xfk6RpQuFaYj6pkP0+HOw5C4uLuCczEbuW3qSzG+MAx9jpSG
fM089DHRbA26hccTN7ysnvcZ2ToHN94OGAaPtGN59G2FiC9fcm/vg2HIlbG1
efKtGJkkKDE+xAxDaHZIqbk6FdGdTn9wiR+GWlYD+9unchQjF+MsnzIMhUGS
jfL639DgG/L36M/DkC8luS0vuhqFndIKOfZ1GH48anS9YFmL1GSvHxKpGgba
RsONIuvr0Z243oyAn8OwzPl5cV1LE5J8XRTqPjsMP41k/ovobkXF9nTYwhkG
bRvF+sS+NuQss23+L2kEwltXvosb/YkyX0W7npAYgYr2JevcSJ3oyMtrh7Hd
I2AwvYtxVPc3GjuZwl7cPwJSRxyT2yx6UIT0n9zP2Aj8rrJy1jn9B/XEmMir
WIyA8t47Hcnef5HX8y3cNddGoCbt6/Qdaj/acMLx0w/vEbhccpDiqT2AKiSf
uT/yH4Gnu0Jzyj4PoBXRhF+E8BE4e2uGcTxhEOVb74soeT4CLvHJzTIrh5D9
6quG3m9G4EHES6aa3xBKifr9eTxzBIYjlYrNDP8hUyuJKyn5IxC0Y6t6R8o/
xFhlrHimdARON2v++EgcRi9bAn6vrxwBJSnOeMrJYaQTWRDV0TACd3qbF73T
htGQxaRxZNsIcKu8kmmzwyhMXJFo+nsE/vX7dlYcGEFqP+wLlwyOQFrwoT9N
t0dQx9PIa+VjI5Ar+f5K26cR9P7qphcKsyPQ/yTma874CLpplld2jzMCC0+O
HGSvp6EjO3SHh8g0QJJNYteP0NDq5S1iBqI08EtVruh2oaGBUWeNVEka6Afd
cOXeoaGPtXTHZbI0eLPnWHz8Yxq6mxoYfHELDTR9XlU9fkZDFiHimfWqNDDy
286PjqShja6JbSqaON6dfzQ0hIam9dQ4j3VosHdDdZqWJw2VKVAVpgxo4BZT
tv7ecRoKJ1qYHDtGA3NST/1BVRo61ff3eu5JGvxw1lp5mDuCdqBrr1Y500BN
siHEu3wEcd8IqJ4XaBB3Q2vL1zsjqOHOU1qbBw2Crn/V46mOoFgHeXGN2zRo
NC7P2dQ+jNy1cvbF3KWBQuitwrWew+jAOjg9/5AGllIHDv6kDKNlC80htlE0
+HWmJNv4yT/U1eGUXRRLg0zh1aqey/+h1M9T7TLvaHBqPOCOScAQMrixYsuf
TzToknmjJm40iNZYxZvqlNLgvMHjUuE3A2hIbefNhEoaPLKZ8WgY6Uf3psy+
nWmngVet+7JRpz5k1fRnrOIPDc6GLb3aK/UXKWRekVAcpoF/yVNDRcc/iHrx
yZlhFo7LvPKxzfyFIoxkHxoKaFA7txDc+aUTnd6WlZu2dBSUNFWc83LbEX+o
UeC+dhS6MnTEaZda0EFn0fjpA6OwUATyKkpUJAJxVRaHR8GZob8k82QB6pbd
MZlnMgqBfodzyvXTkM/vo9o3HUbx98Wm4cvgWyiwedS9cGcUaLm/TCap9XBf
Yz3J/v4omAZ2cB/r/4DjkhnbS57g/PdtDK/vbYPZlnqf/+JHoaLToP/Njl+g
ZiYiTaKOAr+K/3VH4QBk6D20Xk4eA2XXuVcRetPgcvGAda/IGPjtfWhn7EiH
DU9HrfIkxsCKfEmZvmYGwruNrU4qjIFESca28fsM8LwuYvlOdwy+RI1KaFrP
gcqLYgtv4zFwlFt1J4TIgqFSdwtjyzFQ+RwudTOLBTbLGo5NO4+BwjbbOhfe
PGglPDI/GDgGw9nXzjn7LMJs5UHzFaFjUCpmf+LUCg5kjo2b9T8dg5JOduJ/
iRyQ0zQ1e5AwBpd2rIryKuRCpwPX1D51DPYd1M+YO8SDiLuZpqo5Y6Abdkh+
rIwHxCZR07ayMVjb6Sd4+JEPxYzSoynVYxA7+iF9SFEAnmuvHL3dPAbSfWEG
ElECUNGRPWraMQbNkqdmJ9gCGDrXZCLfOwb0FrPZbTsJ2JuH/5kw/uHx1OVK
HjkSMJscVZOqyTHA9NojxUMJWO3iE+NLvDEYe+nud7CDgN3dqGOsIzQOWhL1
KhULBEzLYMpoldg4+N1bpqaylojNXoo3GpIch3MaP4Iu7CVimZHmRl82jEMQ
0bH1shkRc/3CNwxTHIfu473BKueImNyfbMNTO8bBqLO49KUXEesgnTZU2zsO
629GOn4IJmJPlVYakrXHgRO2brl1BBEzMkcGHXrjoCjXqPn4JREj3Lxm8OHo
OLT2OqwzfUPEil7JG9yxHoe1SxeLw+KJmCf6rn/MYRwucN3msDgipvIvQF/h
3DhMVDV5X4ghYkMiavpz7uNQcOViJecxEXuj1nek1nMcAm7OarMCiJiNTcSR
177jMPioW+b4NSK28g525GrQOLzswbwlHIhY7Vu6nm7YONxTLjfYpUfE7tYk
6klGjYOL1qLLh21ETGvSQm/k1TiIjP19FLgM10eCqFf8Fvf/r8Xu8z8Clrk/
7/CTD+OQ9vGmpTEiYK5OZw47543DwMET3TrPCZhc8KrDe4rGofm4ke6r8wSs
80O57pLycVDfHV3oqEnAIr5f1/1Vi+e77vfJcCIBI61vxQK6xkHtgFTDBxkB
lGBBmFXfOCwJmZulv+bDTTd1bAttHPwl9YjHpPjwLy8KGubH4eql0B9vWFyI
c2tgegvG4TasFDSf5sLx9ZR0haUT4FLckZ5dwYHKYC9JX6kJKNy8rLLHaxGS
TtqOKmlMwHPH7TLE5/NgLxoZ/1N7Ag5VrNuQ1swCifI668AjE0A6vi5onMSC
u8oHyzqtJ6Bf/crcLwcmOPNkn4V4TkCPuN6Dt210WPvRxkjddwKaqAEuvxun
4YfbU96fuxMQuM2w8cDYJMAPwgWNyAnY8vmX/FexMZB7N6g9lDMBISTZwkDS
APQYfRjWnZwAtTHNP2yUANG8/teTzAlwjhwguix7h0w/yli+4k7A/sPLTU8K
laCS9Y9L6MsnYeFvg/DCyu8odupqRILyJCxbfujX1MM+dDJ6rxbv/CTMKUWt
LW6noxXGV6bTrk3Cnw2PNtn3zqBq3vvk47cmQflgzEa5IQbSPC+9MjNkEly5
+zfuGmYiSa3FQfv3k/DxvZPB2bIF1Dil/mpJ1iScraxZIZrORsHvLpl/zJ+E
h4sCkS2Ri2hW9E+hcOUk1Md/0/1lwUWtf9GTwoFJkLSWQowIAfr0yfKTyPgk
ZIzmil3bTaBGPxjscpydBPoOhdS2GALVZtdSRSJlCiwls+UCbIjUfeRXxtai
U+DoNbj0WS6RurZT+dp7ySkoHjAk5i4hUbv9zYuNt0zBYNWzkQ8pJGqJVd/f
16pTcOitXZUDnUSN2+opNKUxBdriYW+pGmTqf4tkFUxnCpZkRCZUeZOpTs3P
LaIMpuBx5RG+7ScyFZK2eQ+ZT0G49SpZ93EydaN30WvNk1MgvKYvcFSOQiWY
HC0PPT0FzZfeddWaUaj9sn+Gu89PQXxsFJFzi0KtmLkqquoxBRmi4stvvqFQ
k6oI6gE+U1Bz54DW9jIK9d6rqJMtgVOgObBRbFU3hepyRfG/zQ+nIHFL1qHN
MxSqvm5BklfkFIiWbKq0JQtRt64xqq15NQWmJ01/ZYgLUZeO/ppclzQFQxK2
C9LrhKi00kurL6dPweHz+n2vNghR6yJ4+8s+ToFy+JLnu9YLUdNdnjqJl0xB
5TA4d0kKUR/t3xR89tsUTMhltkQLC1Evi376kN+A68PZjNzYFKpZ35HvS35O
Qdwn4yOWQxTqzvwOpm3PFNDnOstt6ynUlaEXZDKGpqCpJLonKINCpTssAm9i
CiS0aX4dDyjUll2PXY/NTYGO49pah9MU6key3KO3PHy/m7YrbVCnUJ915uTO
Ck1DYtFZUCBQqDczdDv0V0zDTOd/Y7fryNQTAW2cF1LT4LbjlrZaOJmqae26
aUxuGt6MivhZm5OpC4uhl8N3TUP3W40S+XIS9VezTFTfvmkInU7YNH6DRC1O
yvyijk2DgtPE3gsKJOodkx+kTotpYL5tCq71JFJPyZ1V2m43DWnJr4U6JYlU
Hcasmd8ZPL7wn5zJjwQqIVb6lbznNCzsW9+gXCNA/Vc+lF33nQatgYSsTxN8
VKF7cOhb0DQ8+UFwklnOR8GjTrsuPJsG+ze/1p7bw0XLDqRU5eZPw0fZxa1X
9y+glV17Gbrz0zDpHfHe4PUU6mYMTwsJpmFHoKXDvOsEag1pZLmQ6XBUMeK+
j8oYevPWn6m0HP/O39NZ+yvtH1LvHJjOlaGDqSOv7fpcF3I8nDFMPUCH7ILW
iT32tVB+LPhf0iE6nNrm/HZ97Q/YeurUULAuHcqJ5L11p9ph5tbKASNjOryy
k1Kx8OqFkKwbf37Y0uG9gu+fY3ifmrtW+2ffLTq4K+dsFz/BhDVb17RV+NEh
t3bnUYmjc+C7Z6olOYAOsT0hG3W0WaBvnvj9wgM6TAxoytmsXIB0h9vNJo/o
YJtxRmGEvgDiF62adjylg0W8c8p4Ixu671Ea6DF0cJE7KZJ2gwMQ+aeuNRbH
lfXZK3W4kBxfUJsfT4efL06+OEriwbWiC9U+KXS46fM6M/sWH35W61bZp9Oh
4me1X5SSALR+ylRqZ9MhtXpfYUWrACjTjeWEAjpYYxOPjR8SsIvc99SBIjqs
+M/0DL+NgDULB6DKr3QwsNKdU1hPxPZK25allNOh/clsc4YTEXuluPtraBUd
fNSsjofj31v+bpFS9zo65IdwGqndRMwFBotNm+jwQHvinNZqErbT/nmheDsd
6BT6qiEfEhZ9/uoXRhcdlpyv4yxJIWHsm4YFP3vweDpaGTbfSZhT0MbPBX10
WLCyaWpmkrDKp+xPL4foQNn9a/6SFBnb/qb1oy+NDmzhAx9U9pKx8PSMPMcJ
OqyL8jcSNSdjzC/BuTp0Oizj9yuKuZAxu6pTORuZdAg8qeq105uMWZ09N3xi
gQ47N7fKe98nY6aCC7KPuHQ4rdmprhFBxgzirh6nEmaAUTQafC2GjGEHbj6a
o8yAUYTmFuWXZEyr43aFsvAM1F8ts730nIztvRHAPi02A37YsRda4WRsp/h9
teerZiBjZnNoYhAZU8oKO1+P951H/qrwUzzJmIJJRLxg3QwMA2fW1omMbRh5
3r5XbgZaWa4PKvTJmFTwa1F3hRlgOVQz6UpkTHzTW72ErTNg8GYmkrGUjImU
pfj+VJ6BNq/ftR0DJIzikJknvGsGxlaNr8ouImH8+Tyazp4ZKBYlTz18TMIW
or/I39w3A9ZPdPruOJAwxu6vNh8OzsCjN67nY7eSsInmiie9MAO2kzLzrEki
1resmWNkNAN3ZPbFfbtOxLrft6n7m87A4ctSG8/sJGI/D/+6+MliBq4PLvV9
OULAau4MdcrazQDNc+2H/RYEjLpubIX1qRkQnPhclS4QQHHBtH7omRlQ+Bh9
YsRWANn0xU+MizNQnpOSZbTIgxiXVRE1vjNgWhs6v1SwCBFE6Rqu/wzMf7or
krl3EcLiN/B335uBZYIc+Z1ubPDv2nY57tEMPNNP3dPwdR5cTXWMrsfNwMnW
gudBBkzYu/cSYX0ZrpeuZ8e76VHY2eKxz6JiBix+D2+UxOdOpaveV+9Xz4DV
rvWY3/5h2JB2t2e6eQby7H/E7rk3AOQNLwsr/86A76bphhOOHdBKrvK4SmSA
mu9zGc7QZ3SUFk6KEGKA0ZGHO4tOl6PKRtvoPGEG7JcOcd2cV4O+PJ/4wlzF
AAk5s5U+vBYUt01S4KvAgJACcCPf+4OkRHsj4rYy4K7aXivihj70lJ6qUKbM
gLLQsOzVV/pRUNFBA+IeBnyodx5mzAyi80fPPXmgxwB2M0vCM5CG+napyn8w
ZIDssrFrBg9Hkb3kfG79UQa8/C2WvvLBGDL9E/ZT7DgDNo66cuedJ1B1+XG3
XbYM0FRZs7NHexJBityChSMDSFrJXiA2hdSvfVwf7cKAvzP2R/c9mkYZ1ney
Pl9ggM7YaPbJDXSkuN8AOi8zgD50sUrzCh3FbxBvWfBgwHKH5PuahXQkTew+
K+PFgNSfxZdteHQU8e8d8+BtBuQmubS/0J5BIvVXQk79x4Cv9keYPK8ZdC97
39qAuwxo3P+h7cmHGcSNIqYn4nMYSbXM3LxzBnndajhY8ZAB2mFKokaCGTTl
8Lxp8AkDonzW+tzfxEAXsNOnhaIYIHKr6auEDgP1K26f2RrDgDsXIqm84wxk
LzwbZBTLgImmHZI2bgz0c7JU0j2eAQGcDuYOTwYyaw1JeZTEANFD73We+zBQ
dYHF/qwUBvwUuePy7jYDwWuZ+uZ0Biw+ue92xYuBCgOGHOjZDOgYUKsVucxA
6i7Zk6s+MeDLu6/3o08xUIaRT8CeLwyIuHZSeIsJAymqHl51ogT3hyr5rt0M
FL9K9J03YgAhMHeiXpKBpFnte19+w88T90Hv+tkZFNGdUF1Ug9e7i5Q01jiD
hNFF298NDGj9a7jGNmkGBb3bM8b9zgBu5FetkBu4Xg94fnI/GXDD94HKSwzX
63KNGNbFAIHrZ+GPwrheFpEJZ3oYIK+2nbHQTEcXNBx23+tjwNzUvqmoCDqy
508dr6YxgHy29rGjMB39HCgcHplgQGyroKDw7jQyqwnyEZ5hwL7wP9PxY1MI
i5CKM2UzoF1N+cXVjEm0RUFnsFV4Fo5vqjUJYIwhSeW1Z7LEZqHqsrFahMEY
Iqkzeh+smgUP//DMtBejqFc3pVt73SyIIvnlEuo0FHNmRWuK0izEbeiM+XTs
H1rytpfqazgL5vuR4stfvYiZVqhz4ugs7H37w/OH6x80kBtVuuvYLCiXuFf8
Zf5GZVSDwiGbWVAYIe65K/sL3erLzjF3m4XkCbtMtZQ25EYLVd3uPgs0wzCL
SJtWdJx+NoN8dRYeJ+7o/0+sBakRpFMLvWaBzlUN1djUhGjyAfEK92chjexs
MzfxDXVss9vAC52FQrqPRUsDfr937YntfDwL1LWfU5f5IZQII88fR89CX9eA
gceXLyjcsHz1+Zc4337xr08l8tGdY68jdeNw3O/K1ZcvcpHd6WNPWO9mYeO3
Hd1f9ZOR0fnty1tSZyGw5YtObnoc0rxGfpiRMQuEY2a1JP9IpHjrz5KQHNzW
+aPlIn8HSQR8CXb+hNu1J/dFZbkC4UEk6eAX3OYs1U+8/gCmwi8FrinB83vA
P8MTPIOeGH3+dBmODz9VIIe9xucK+Tv1FbOA/afgy1F+C4UpbHZyNW5vH/J9
szsZUrLbbgXU4/mRd02UdaVAdEHWnF0znt97UbdTGz9AUNmDG3tbcZyvnB63
LAM8qs/MrOjA+X/qBVVHZoJT88Fro7/w/VJKokxKs8C0Y83ktz+z4PwraFNZ
aDZo9U67x/fjuLldy+/5bFAarqP5/MPjm9+0vCeSA1JT79ysR3F+3QJiUXk2
UFj/DalOzkJi2oNH7+WygcE7eXbZDM5X5HXtuUIW9Amp9w0w8fx6Ch8sNGdA
s5io09cFfP8ldQFntqRD6Zrh3y+4eLw+Vd3729IgQ5Zq50nA586stBNane9h
5+fqlYkUJvS9Oykus5gEuaZNVU3LmEAtH51cHZQAe4ba/DiiuD2RhSpPvYQC
v+7d21fh62XYM0efRMD+1f0jNmuYQLjK0iDtDISS9JE3wetwe+gaJbL5GKL+
Ygr3bcL5RXZrVY1FI73rHCS2lQnYp2OmPR8TUPUykvdBZSZs3J0oZu7/HjXs
WzkQo84ED44kT/lrLup4vr3YTI8J4nue7Wvv/4rsVNU8/AyZsEFa7N7vLCrq
qdTc+uEoEypXbb+t4VmB+mf1oijHmeDmuv+GtWg1mrB0ci9xYcIvo+mnueea
0LVRl42jF5hw4ozosgcHviNG4KUOqStM+N2HLlwM+YHmc3wOe3oxYSzwhdxJ
61ZEWvFMZnsIEzK1ZcT7ytvR/fevftiEMWFpUnp+fUQHWnYoMSQ4nAmWrS+s
Ttt1IrHLWYy/MUxIXv3HdXV7F4og56eJvWZCdFSxDT/kF5J4Xex0MIEJXCfj
z8pq3WhtfU19TCoTOsw8xRZdf6PYM82BlRlMeL164M1/M7+RLPunJiOHCZde
XsEonj0oMeL3hHw+E9a6FX9ZMtKDFJQGkswKcX0VvCOIFn/Qe0Sz9Stlgqxs
va1X5h+kdHJ6xQcqE5Q9gjqGOX9Q+tRcZUclExYfth/8e6gXqYZwfSl1eD3P
FtlPXO9FubLk3epNTDAUy+9IfNGL1D8Lj5xuYcKuqTUnorN70WdT8TdP2pmg
hD3OOFfQi/YPSVmX/GJC1y6OaB6OF/vJCo/+wevl+nSvIr7+0GpFJDXABFvb
+XD3a72Imq7sdWSYCS9vfj6zb18vOnx4t4rnGK5X6h263tQfVPVrX3/CFBNW
PHuYeCz6DzK6rvOiicGEn3bj6zZu/4Pql+mbcVhMWAjNcbub2YPMEo+St3Pw
el/7t9JArgf92GdVZCPA+Vqu7Df0/42svtteCybPAT/v8WeXxm7U7nZ6y8el
c2D/bM+W+8u6kS3f9fff5XOQ68ohxqj/QhZFd/6rXonbER5JIfZdyPDmM/ms
1fh6jTVxGZ6dSHOMes53/Rwsm4l8++ZGO9r5vlPojDzuv7su5T/Hn2iL81Sq
4WbcDtlPKtRoQ5Id6yckVeaAeWFR/03RDyQaqR7O2TkHaf1SomJ1zYhsaqw2
oD4HhdOCyCeERsQo976ZozUHRoMrZIWlqtGPrBausckc9CV4kT8056HaC7R4
NfM5wFIyRH/av0doswCTtpqDwFalvnslYSj71Y77Q3ZzQN05k3WhOxUe338g
FnBxDi5YHpTSP1kNRqcOyeWHzkF1Y8j2ptN/AFt7nBr7eA4KVg+t3VX7F/a1
uZ+9GzEHu5ZnqK1f3w9bjV+mmL+cg5+nhwJcIwaBojG7czQV54v1ETr8lAZU
0Q8gVzMHiiWMrStMZqCwBvVTGuZgYstFB9uRGcgJ6rg33jwHXw7P7T1zjwHx
C+Tawo45cF3Vq88umIU7Q04W1sNzUHxSe73ZUhbcTPBiHBibA97Nf29ePGfB
JfvH0Run5uAFr+jLvk3zYP+jqGtyDtdDTdugdtcC7C+VPBMqxIKwN0urr21Z
hJyy6VMOwiwYTZC46v5iEbaW19vvFGOBrmyg0FMhDkhWBx7/KckCOlafSm3n
wKNaB8vUtSwIWYD24H1cIDVomvtuYEHP2QbT/mguTH+fMNyoyAIrTUXo1uWB
W2vNkdltLNhtHHZ/byQPen4m6VarsKD4i2F50m8eWHf+p/NqFwuu6i/TWbKJ
D/W/bA9e3oOvD7A21z3DB92ePfthHws4vc3H98XxobB3hYbEQRbEauk2Nbbw
YVf/6O5/OiyImjl+YoQogJTByp2Fh1lgYin1+coOAcgOJ6g8MmBBY7XKiKGl
AKJpvkpOJizI9avaeNpDAMvHT2zZbc4C81WHf715KICgSTUFihULEvVCWqbj
BMCeXi7feYIFwSZC6w+nC8CDMbw+3Y4Fs7RbcvfyBDDMLF/73ykW2KpiSUkf
BXBqPm6NxRkWlC7c+hGZJYCf7FsSm11Z8NIvTVsvSQAmXKuVrAssuDChNJoe
IYByvqpo3WUW/PihYFrmI4D9RGHhOA98P0e1jt+0F0AOeUjo2k0cZ3ddrtIQ
wNYliHTYB4/HWxeUISKAN8tiBZJ3WCDHOEFR+MUHyeVe3JEAFtTEmY1vecuH
R2IW7OJ7LCjDGIWfz/KBJK7CevKABd5J9X4tsny4LbFk1vkRC5a0zv7wbeUB
XbJ/es9T3OaU/ssP5MF56dKJJc9Y0P3gj0+wEg96170Y/RXDgg5h/d/TdVxo
kDMbDIhnQeXqHztL2Bw4vEmpzyqJBUkZsfG7QjlQuJn8Z0sKC8y8an9dEOdA
ilJRR0MWrk+j1+i5FYsgqxLdFp+Hx3svU2oQzIZo1Ws/rn9mgbYWwUqNuQBB
6lvqpb/i55qenOpeMQ/svYSaMSoLTtH04mkb58Fj3+9vXytxfTz0y2pus8BJ
O/LruUYW3K15vksSf3e0DHi5Ob/xehbk92yUZ0CeUVdW0F8WmPqpfOiyngGl
o5/STwyyYND17v3xe3SQsriYzBljQb+qQtj1rEmYsWt/YbjIgri2qsZ3McPA
He9pvMLH9bxnLiF4PgTL/IeI0aR5YISVGwQ+GYCNSbOX+kTmYYPjpWPvmnrA
fGwVdnv9POzffeHcNt0aSPc1p6Vrz0NzgLeW7/ouVCBqI9uCzYMNati9OqEH
lcefspo/Mg+iCYUprRF9qKvicqme2TyUjHq/frES73eXP4roOYXjNSqOYlOT
6Ozrmv0rAubBd27k/nHbeXRV9fuVvffm4U2K8BoX6wV0G3Uk2T+YB40L6he+
GbNRxOA/0dSn85D7xsHl0jYOivOa1G16hudfMta8ZwUXpS6d8559MQ8DNXnv
j05zUZkKpR8S8fz+Lf/kncBH9V+XS7klz8PXu8O01VcFqP3Y6qOP0+Zh43re
CZH1BOrEDYXPXbnzMCxV/+VjF4G6IKQ8xs+fhy/jn0e3qBOp5Je75bcUzcOa
KsUT/Q+IVJlS7OH18nngnd4w9GMbibrV3KjsRdU8PN6k79J5nUTd3Xds9mvd
PGgadgzVfyFRtT1PKg01zYPFcQ3hF2wS1Yhy+pRI6zxIP6zwU9pHph6PcYtS
65gH5zNfZi97kKmnla7W2HTPwzSxRMv6PZnqXuzFvdM7D/2/lNUb2slUb9P/
dr8bmAed9jVdVUQKNag32K1ueB5uPKMd1dhOoT7xePx6emwelqvWtYqaUqgv
SdE/1kzPg4Py29+YO4WaHP1aSHt2Hp+ffpJq7lGouVvfaZ2dn4e4rHdrYl5S
qCWF6ddCOfMQKqa1JiWNQq02+ZicLZgHQuO5A/RPFGprT9Gvn+QFiFefYlwt
plCtoloWPy1dAInahLhtpThuOLr+2fIFmLA8a5ZVhOM8wiHPlQsQLfbenf+R
Qm37uNbJcvUCMLVjj8rg/McvqAWoSS+AQ1j+AeIrCvWnrFHiyvUL0NhB88i/
j+Ntp8un5BaAYJMvr3kVx0NvDTQpLMDo2LDbQysc13lKztq6AIo1u+0+qlOo
7bMpio+VF2Dtad/FzysoVJsPZfqXdi7Ar7YZndhhMrXDqcPNRH0BEsgzwm7F
ZKqN5NSD7Zp4voGvdmwKw/E6oQ/LtBagAx10+XmCTO3cqzFerYvv76jbK5N+
EtV2zFQ0RX8BwvUH4ja/JVG7ElxU7xsvwADDu3TjKdwWib6mZ7kAVutmpL7W
Eam21IwIhRML0F3b5njbl0j95fUtj2i3AHKEI83PthGp3X2MWeS8AD3r/f22
3iJQ7WNE1iS4LECf8ZrTFesI1O6jCpr+F/D8ftpcWuopQL8LLH20PRZg4/EU
uSe/eajncS63MGABgkcFvUaui8jxcK3sy3sLoFn2t9HvNhv1zP/VufVgAZrD
NUJPhS6gP2dX3tV4ugC1u/mc+RgW6t1/Vehj/ALQuu3ELP9joP4hlRUZXxcg
JadfewQG0bB2qvwbzgK8f2xZ67ZrADh3x32+CxZA1r9HgpU+BOI1u1qJFDYU
FBMzLDaNgJZlYbCbKG7PTDkSueMQ7lo3ukuWDUt3oYO3MhnwLl1M7+wmNnSv
Yc5qNOFz57RlXPQWNoRy8oVWjjJh4Ha3OVuVDTrcqxakVfg7ED7+qUKHDaxY
e71BGQ6YtO0SmzvMhiFJzsozYlxwWnvTbZshG6gaQd+XsrkQmsRd+/gYG4Dg
l8ku5sObEcyzzJoNlCXPo3rx79fHHfcb6CfZsPd86fKIXQSsp0DM/4QzG+71
1PQRGQRshmPZ+cCFDZqJl12VzIjYEt0YteILbLDuMFBSSiZi60O6H05cZgNN
Zb54ikXE1BrkBuWusyFmcOlvd30Spi9+TtvSiw1yT6S9Hz8lYfYnUp/fu80G
I9cPWUfaSVjw311GtLtsyCo9EKFnTcZeKd58KxPChiYWJcHzERnLvli4aBrG
hnW2QtLCiIx9y+ZaB4Sz4crb78b8STLWNYtl5UWxwemTYqPJWgo2uf/+kqEY
NsRK7LlFO0TBSP51p6Ves6GIdPtiqxMFk/4mVmSUwIZPaw2XCvlRsB3LrCT8
3rFhWHdw8b8oCqZrFnMpK5UN9Q6me7XfUzCbqO7KvxlsGHsWT4NPFOxSp5yc
RC4bZv+tjQwrpWCBG87dOpLPBgnlylG5cgr2/EzqD+9CNtjolU4TcDs9ZXz7
h1Kcb92Gvxq4f9n4rnu/qWxYtv2JWuVHCtamdrNHrIoNGx/4xXxKpmA0r0IN
rI4Nwa7TbFE8H24xN9yziQ35W8VudftSsFUEXVpyCxvcsEN2205TsK3693U7
29kgpc2TIgAFOxhWFyvczYZsXQczTxkKZvFdjHmwF8//o2zJ4xky5ippZXZ1
gA0a3i8Pnq4kY752MSmJw2zI+7C7fDGKjD2N7xa0juH84S+OXT9FxpIH5eyE
ptnQ+OzDXPtmMtZ8JXW5+zxer7689uJkEjb4cdwljsMGtfQgZbfTJGxhfldZ
s4ANQcVPyk5IkTCFoEKPPcsW4UOD2fKzt4lYwYpyRSvRRXB67PEB20bETF7X
dXmIL8Irdmb+cAsBu5HfjWWvXYSOA2XJdFkCVjnMFd++fRFUXObNJrbxwPaG
UJWh6iJoa2ttF7HhwqRA7Lbb7kVAcrtrvAI4ILVOvv/dgUV4eveKmjKu6/mj
unlyJouQ4vtO9q8CC7idxq6HzBchQ+ThlYP4HBLhYrXO0WoRIjPl4v/qMKHw
v3N3X9kvwjWtKKcllgwQyb1vKXlpEezHn9BWUicgU7J+RvjxIhQ8KUk7GfYL
sLet75UiFmFh8EWp/PN2aFf9bWcYvQhy565vtHjfAnyDifLguEWIXvkXfD59
g2O3V0QJMnF/sjZD3ewzGhKSNpDLWwTRouh87yUVyCdKflH78yI4b3jRudSs
DiVmqJ31/boIobsIur+/tSHGHyv1uaZFEDjc8ae/7UMh7g7Dq1sX4fTlqsen
tAeQzPy5WPWORQhPltL3bRpEeuJeJI/eRdgVcUzg3zqMuuL+KwgfWIRWkbtv
m/Rp6PL2EPes4UUQs4+wfJU9iqIPv2gdm1oED40b3a9PTyCl7wkhwrOLcFOo
t+lE6iT66pCmpTSP87+9LvdscAoN3yxKchUswpXbpdHn4ujIl1hhE0zmAO+A
2JMcpRm0Irxe5N1SDpzQuejZmz2D9qX+9uxbyYHerDURr9MYCDvJlChczYHg
rZwIL8lZZLJU7NNTaQ4IJeZl1vjOIusvW6zPr+eA3SnHltDfs8jxvM6sjjwH
ZEa/XMrTZCJX6ZPPpDZz4HNkr9vBx0x0tebanqmtHFCISlFR6GGiwG1vb7zZ
yYF3To82c9zn0MPOotVe6hxIf06NHP8wh6IetH4y1eTA3mfUgxqDc+j1vnFr
RS0ObGYWjnRLsVDyCJnJOcSBnJh7TX1HWCjrxYboNl0OeHeZPDO9wkIFhhp7
M/Q5wBBqNt4SwULUebOfQcYcuHbI8MKNLBaqS3W7aW/GAX0lZg1WxUKtJwMk
1S05oCo4nPCyk4V6lr7MFz7BAfKV93ceDLHQvy+5x/ttOfCaKaK7foKFps7X
MQsdOSD/miJzboqF5qUHoiOcObAl85nftXEWItQu7r3ggucf/H6d1SALCfus
bocLHKhw1umX7WAhCaUdXtKXOXDb6sTM8DcWWt91ZM30NQ5MeZ17VpHJQoqh
pz5X3+DAtqK0PTV4/qr7vU/E3+JAma+SnagHC2nSwue8/PC54Irzm3QTFoKX
qc/N8Hu2d3fpu5KNLGRkRNXYco8DBuq14vaMOWS10NXODeHAEaetd9+iOeSQ
NuP1MwzXw9kwMDt0DrnYikhlhnMgSXrcP95sDl1dtrngXhQH3Fdcqnu6Yg4F
XjjOUo/lgOuP8ruzwUz0cO2VGJF4DliY7fJJ0WKiqNr7mgNvOXDAbrrg98Qs
Slb64h35gQO/yZfenTCcRVld36UuZnFg4uP29X3TDFQQSivA8vC51+e8nc9z
BqqlrZufLuTA/LpLrue6ZtBk2p1b5rUc+Kqy84u6Lh2xbJ9Lb23kQLmMncmV
zGlEEM7+wvvOgYdbhApHWqeQxMW/85mdHNhOSPK8IDWJNLcf9lk+wgGPg3P7
lgeOooAPS2/XCnGh7ZbGfOnGAbRh1NRyVpgL1atPttI39aNipajtciu4EPn5
k/99xT7ESt3QfUOKC1NNGWFnnHrQlZTdB+W3cSE6+5lVVM1PJDLsvdpEhQtG
xbyrTxmtKG1L6fjNXVxQ+7E1wn1LCxpKNoirx+f4WrWz9CnjBuTwzoHnZcQF
wqe1zIHzpWhhILE90ZQLETfPVx81KUAxCsNZDRZcwAoDMugOuaj1rYfTJjsu
BN6k7Yw2jUYe/Z81TU/h6z2Gx3TXW8KKTZwVt87geGxZ0/q452CceB81XsTX
E3u4lquyYfhv/Yv5Kzi/oLcg7v4nCJYX91Dw5EJu0D3+tbovoHD6hJGZNxcs
VlwS2LWVADU+dqOPL84fs+F0ZhICp96/C0n+uP/rhpyLr8uBK7ulpSmICx7D
pznpht9g35ucu5sf4fs/1li91KAafvYw7cyfcmEZMVJx8kUNeG7QUr/9jAtp
R90EzxpqQdwxQCT5BRe6fk+9JvXXQfbryoHm11xI3OLva9pVD6a/hUvYCVyg
/bmsG5XXAGMyx54pJnNhI0ZNIl5phFD76EvH0rhwvHvnoXaRJtgS+0vPN5ML
G/jhPscfNUHFL7kN73O5MPSo9FTbVBM4r3Nhfs/nwpGjQu4fNZqBb/uhcbGQ
C8EPdjg5OTdD3Mup5C1fucAUXytsca0ZtLr2/GdRzoW47VorRM81Q5f07RN+
VVzI9GlKVdBuBu+TZaop+Fwubsl22cVpgtUvyEtamrjwWIg12JXYBLkdRr2c
Fi40upmE/lBtAnOp8IKtHbh/gbZqa1IjTJxoC7fs5kJPXtTPd4RGCHu+9vyd
Xi7cvPfVco1RAyi1n4LUAS4ovnk6I7hdD9WS76Rbh7nwM/21nMGLOiBGq9Zu
m8brE2y8ORbXN77NM9FqFs//6awg5k41aK8u9Plvngv8bbapjRZV4BN1eHub
gAsFKp8HVzVUwHTEyTB/cR647HEpO3O0GEjMTPOzkjzY4ZKROnj7C0ieJK02
WMuDSorupbex+aAlm/VabCMPLm8Mcdb3yoLgD6SsuF08oNrN/hs8ex9iRG2v
B+7hQZrq+xyzWRv04VqWhss+HtRmn6WsW/EINWvYlqkADwasnqdzvyahtRVZ
34vNeRDXNzLlPZyPlLeQo+OteOBDsHtan/wFHQq1tQ2y4cGyIBFPvkUxOmtO
7jd24sGG+3v0zl5C6Gae7XvVszxoDQw0o41R0QPJ7Iur3Hig2bUm23x1Bcrs
tmV0XeHBklrZu6u1KlHZoeyC0us8EO1FbR81q1BLItkv0QvnF3wqIW+uRkNk
Owi+zYP8pTaf9/CrEcstm3zhPx5IchYFXjU1aFk9ufboXR4cb/Slkf1r0XpV
u8e77vPAo318leymOrQzItti9UMe9GXeLl2aW4ewWfKa+cc8oMXqiqxSrkdW
Nna/uiN40PhI/vCT8HrkWpT9piyaB4q9NuJdPfXIZwPlbNJLXI9l5Krjkg0o
LMBua0gcD5g92hFX9zaguIHssYuJPHgc01/yUrsB5ehTcsyS8fy+jQ6Y72hA
FWl2N3an8eBCls7WNeQG9HN5zr41mbheX3lOPtR6NHyVwl3IwfNpXme+wqUe
sVvsqD2f8HpGH63zmqxDoho5wdQvuB63D/+zcaxDci8pxskleH0Tlsmey61F
ahw7sVDEAwvFJ94nRmuQnlNOy6VvPBAvM0pmLKlBNuWUmGM1PFgbO7NZWLga
XVC0t9/TwIPAQ3vtr09XIt8HOXLS3/H8+OczxIq/oSdjlMHFVrxPDNKMrL9Q
gRLN7FN7O3iwkLEzK55DRR9zcy5VdOPxj/rkrvlXhipXC6ml9PKAfoRzau/r
EtTpbc98OIDr3zKqUbmuEHG1hf6zHOPBxtC+WePruWhFor2uxhQPnIXaY9nP
09Amcq7QOgYPMOunFe7FCcigzj68j80Dgr2rYWmiN0SeyE24JswHgtjf8YH7
BbDfSD0uRQy3R4Vcm6tKoU8r/+WfVXzo23rX91l8OezcWBh5VIYPaVkGOgzX
WqgfQ/e2qfDhh/dGslR4G1ACv5//a8oHPUsf/7gVA5DhaekiZckHmayb15u3
DYKVa5uz2Qk+iDD2nvlPbwgSTTrtSk7xQSzlskxf4DAcWvP36IurfDDWXlx9
QHgcvNOndh2L4MO4hfnnKc4MyL7x2BESzQcJnsxHg/sMqHzKUPr6kg+hPe9X
5YnOgoQXa5PKWz7MWQaO0SSZUHTeR+7sez58sd7eYvqcCc72izKvPvBh2V07
GbrEHOQAf/XSj3xYM+mIbRFigY16oLhOAR+Cj44HWtxmAV+RJOaFz6XmiRri
U6MsMBVZsmSwgg+qec/eFKF5mOU+IMnU4PrIfsZCFBcgdlpYYNHAB+d680TS
fXxO/ym2UNaGz7X5q7Mt97Phac1T5lwnHzIdS/zq8blRs3jVzI4ePrh+fO4G
XWzozXw2ea6PD4m6RY4hGxfhfsKasdghPrwwO/rU+9wi7Ih6MdxC48OOS3pB
tMRF+Bm8bnDZJB8GBn+sL+haBL9br//CDB82hDt+KhbB+0x32R7vOT6g9k0b
2/A+ss4xoSuLzQdyp13NH7xv8zi2qX2Ix4ey8NkPxXc4IH34Xct6kgCCj/y8
fjQG77P2bmm2WiIAm9uv/W/gfYzrttT6hyIC+FL3b0a6gAOiMttrqCsEsPWU
SIl8KQfyRTO+zUsIQOKdedKNEg44CHZQd0oLYMT4sTX/EweCDtyQtlovgMnQ
73P89xxIu1F01UteABfzRbosIznwPUtQ9XKzAGylAy1pXhxgjejLlm4TQKbI
+7jP1hzYoPD45l8VPL/Irb3ZyhzQc2xtIKkJoDneUaVhcRHcY9Zu3rpXAOTI
7RHkykWI+OHka7xfABOv9SStQ/C5SOR9y2VtAX7eh1GB7iL8OTKuFIEJwCeA
lqDKYgMlYHfgpyMCGDDUqivE527loludHUYCMH5IdXAwYYPF7Nedi6YC+Jjw
PFhmbAFuqVJCZC0F4PkpLYAXtACVbyP2utgJYP+9ShWbxHkY+93x6MEpASSL
JiYPKc7DKinZwfQzAogpVPevTWKBU9iHyJmLAkCXdAO7wuYguHKaJnlVACa/
I7pU55iQwdfA9nvi63V5Y8p2TFjwrJjy9xXA4ZLt34JXzIJc1jKDJH8BxGlV
lMo4M0B/xPxNVZAA2JsHG+szZiDK4fdR0UcCsP7r2ElQp8OOI8y0V68FkCRf
v7OSMwpW/lqErwkC2Li1eGueEQ1uFwae7HsngKmkANtjj4eheofYkm2ZOO53
cr08ewCc12w9l18qABmlGc9LtA54PnxS9vsfAVA11en8zxWodGP8TUa/AEoP
6W4fFmlAA/ZDDWuGBeBf4U3clN+C1L57+DpO4XhaKGWpTDeq//Kwc5QvgDNn
ue6Y1z8UUPnHiCROwH4V0NSixxnIdDbUnb6KgH1gJNjd6ZhFMgp7H/euJmBn
z82g+DImKggI+14sTcAupCd3Fd5noQmtfTY35AnY0BWHzkujbFR8ceDWmU0E
TNrgorpZ4SIKffnk1bHNBOyuZJV1ZRAHbWYN9qhsI2B+FuUd2cI8ZJ8XcW5o
JwErqMr7pdctQEp9B++3qhGwpw46YeYYgTq3YiSFqk7AFH8dP/8kgkCNuHxo
LE6TgIlEVLZNbyNSnV7Tlj/aT8CUQtpp41eJ1B31z1RvaxGw2LsPrDM+Eqk1
28Y8TugQMJMA+o0daiRqtM3zKD2MgAldPijWeJFEPXsfy999mIDlMJ42jiWQ
qGr54+3yRwhYST/V+3YricofiJkXMyBgI9Uqzy4SydTGVYfXcQ1xfvLXa1k7
yNRX2KTWmDEB64mvVNx/nEx1u/bSsesoASuuiX3Ju0Wm7o3X8682I2AhS1bf
Y7wgU0lNUwn5x3B721cP0Xwy9QfnVXmSJQHTZDOqdBvJ1Hhl/cEIawKmTPxY
/rCPTL1kR6cEnCBgmAMW2EMnU/eHvt565SQBaybF8dR5ZOqSLwZGDnYE7ETb
J+kHQhTqz38zF40dcD3jLka0CVOoSZJvHu07heP5jislRShUDz2jrC2nCZiN
353N+kso1EOes82rzxCw685nj7jwyVSRt/F04jkCVj/j2XaNQaZ2fTeWoLsQ
sOGkqg3nB8jUFD5zT68bAfNmt540aSZTb6omnmi8QMBa+2ipMgVk6mHHo7eK
3fH6s1w2dL8iU1c+Yr1Mu0zAfNLzcx/dJlN7it4Wx1wlYDzl9aZ7TpCp6TTT
nmAPAhYqcqi8HdfTR3qB5+lJwJ4VX2/yIZCpBgbv5M/cxONPdktv/kGiSnqZ
6x7zJmCBKw+r9bwmUfvfsc8e8iFgjKWlTzLPkah3iBYp6+4QsA3Ji1eLRohU
EzVOzVJ/AlbdSLJZnkykrj2dMjoXgPN3nTqS4Eikfirl7mi9h+//ykx4eQWB
Gjieak69T8COXrqoedmDQDWXsfbIfkDAtvh/8oqUIVDHbn34FPaIgC37aNQg
U8dHQVPu15OeELDft64bPV/gIRnXHbuKnxIwW84yIY+NPGRilZM++oyAqUXO
n19hz0HpOz6/NYojYHK31qh0+s6jw++8TzvHEzA9UsDwjhss1L1uv6xPIgFb
0sZe/951DoksLXmZmkzAbvt+8hYcmEXu/dSnS7Lw8+76UvPusUlEsg0yk8sh
YGPRGX1CM2MotllvuWYejuu6OSs8oqH6kuoQ188EbPfqAMbtjEGkHNP4X+VX
nH+zYU2TfRsaM+m6FNRMwCJTG0JsA9ohqPzV9tgfBOxfl9pJhxfdILPfYSSv
lYD5J+5pvJn+F0y29J7t7yBgMJxHvdU7BOmCQTvsL85voelsUDgFh73fS9v2
EzBXrR+5eU/p0D3h1n5tEM9Hv3bZCzQDIt2jFgkjuI392a+zmgnu+dOG/GkC
Rv9sErIVf89JKnlCUgwC5vRcS/9JBBti33p+U2USMFPNB+0yrxahPnxO59QC
AXMhbYvIwue6s0JfuDcX8fdKQi9g/xMeLPr5FD/m4vf5vNXYnB8flC9yNEoJ
REznfGntagUCVvG3dLaNRMT0L/zZ8jKcgNnb+OeNU4hYft1/ZibzBCxMj6i6
XpiIOT9MSu0sJWIKxRVj6suJ2NysgcP9dSSsWC04zUSMiFndfz0i5EnCRmWX
KvquImKsr5Q6NSkypp3y4+TV1USssb/HuNORjIXvjH10dg0Rk4rUXfc6gYz1
FZxDNtJEbF5pXfa1XjKmDqqzJuuImG+0xCXjdRQsuIa1FdYTsbQ7G9/KWlCw
zmNU+z2yRGyrUGHkQBAFU+56GL5NHs/rcavH0zwKdsfZumL9JiLWMp/ntqGH
gjXTNrBWbiZiu5TORwaRhLBN14e3U7YQsW+aMktKFYWwm+ycUwtbidiYtmTr
t8NCWPXd25ETSkTM/XIY57mjELZWRK+qT5mIiVorB+3yFMLco0TZP3cQsY69
50+H3xPCSmU6dtTtJGKlt0ND8iKEsJXvEpy/qhGxrgO3h16+EsLOqlyMzlMn
YjeW2J3WjxfC8j+p177fS8QWNjS3F+L2Em0u55UmETM9vE6OFSuE2VZW7Qrf
j+PReBWeCWHppk/PBWkRsaDP/KO9IUIY76ftC29tIrYz/1raM28hzOKUQoO7
DhGr1ftD3XZWCEv6N853wnCcaqySZCyEMa98Vrc+jOeXVu6+XFUIM2T5uxke
IWJLDtVMXBYVwmL9jWIPGhCxvsV7S1pGKNjEEonmXUZErKyOOnMYUTCdp7+J
iib4fvPe1zVHUbAI6fcaa02JmKfw4Qd3z1IwDaX9bwgWRCxcQrrzGYuMheYS
W5iWRGzPbHX4qhIy1r2/gTJqTcR63hReZfiRMX9jp8stJ4mYzWW5IoVZEvaj
ZVtilR0RO2Hv/yzmAwnbbD/TVuRAxOI5opcLHElYrXvwwaTTREwlNXDUpIiI
ycyaXYs5Q8R8xizTR88SsSt+0u/CzhGxq9FDz0PxcyrxOF3kxnkituL0980K
5gTMIevHL71rRMzD/8z1qqs8yNaIFdt/nYg5iN+qPYDfF0LZOd0dN4iY1+bg
5H14v5jczEqTvEXEVM+TXqfg/djU9Aaff/5EbCNr/x47XRbcVb8o9SCciIXo
EhYP5E5AdG/0resRRGyWdjPMLm8MUsKoXQ5R+PkRT5ytyaVB/YD0a7UYIvYh
pzbmWOYQSDyrlu9+g+9fbJxx4sgvSJrdvF01C79f1iEWn6mFKD/hWJh0DhH7
8ehSVgvnG6o+6jdOzCNiavyLGrfvNaCxd61ZHflETPlk1a48pXa05/hd9UD8
XsZcauz8k9OPDAhZz9zLiJiinNfwUtdBZJvZxTxOxe3mI003Jf6hOxS1L9sr
iZhuroHa7+M0VJnfe7CtAddti+GDsmtTqMNZ5M3XJpwvYUlnW+80oolq8lO/
EzFJex2fxbd0JOr6hHqnDa/nu+PRhfMzSG5V0abz7URsh+GYZU4sA6l9HQqy
7CRi/7o59jr7Z9HxNdr6W3/jenp6htecZSK38vMp4n/+/z/Y+MOYaSbyufJs
KaeXiBXGSPumes+huKqxuu8DROzj1KFzxvj7n31dSqV4iIhFBoxiJTQWosoe
fpw8jN+HpcF9arbz6J/XK/PbY0Qs7oCP9KLiAlrYVJVzboKIsTO+DmkFLSCR
Zrq4+RQReyl6sc/u1wLa4LvBcz8dv8/kNfcsldlo51ajNgUG/p5EOv2Q9WIj
rPXGXjEmEQtb0XSitIiNrPwTns/PEbEM9+PbdyywkYtyA6t/noiRznmOXFFb
RN4drJONbCKWcHkk995ZvL8LUigq4BAxPzVRpevhiyh2p7nMWx4RC42uvHIw
fxFldt/2eyTA4zmtkhttW0RlIe97vIgkzDZe1zRochH9UG855EwmYRe2VfmL
EzlooJcbbyJEwhwvv02PX8FBzDAlgsZSEpatHbbzgBQHLdl3/Iy8MO5PS2ia
lMb9lWOc9iwnYWqW3JeqqzkIyXU5GIqRMDlVO5t3SzkoTuJ/FVx3PJbfG369
e1JWlCKjhJbkG8W501QqlZCQhIzKKGU2EJIoVEKSkESZGannTVZCVsjeZO89
fs/vr/dzf84597iu676fc/55156/wEcE6EyfNp+ax5yohrq2q4lg1HF0d0DT
PKYz/+qspwAR6vrpj5W/zmM7hlu1XwgRYZL7Zqvri3mM3bHx5Ic1RPi8fmHE
2WYe+/fn8nEM/w7ktcGxMyrzWOHP2KPV64jQF3H7gAzPPBb9tfdQ73oiiP2M
shD6MYfdSdlyYEGcCC0zDhmH785hBrE2wCdJhPKIhLCW3XOY8sskNSlpIrwj
zDaSemcxgccjqv9tIsLzzYGPWoJmsdKbN3ZflCOC0pWxtwaNM1i8ZYbiDQUi
2J0gbTnjNIM9MJzZ7rONCJW8P3d/WDWDqR90lfukSIStJ919VZSmsU8CnuIr
qkTw3qG6Z+n4JOZPKxATUCPC/VxGwvafE5jlAnXtZkSERfHAx0cOTGASnX6C
pw4Q4YDNHe2pbeNYUGoQ4/VxItTyLglNV49g1+NqqGkniIBl5q/mix/GjocJ
k4tO4fW8fl6h7DyEkT3ClofP4nMs3gHpCQ5gjqejJ9TxuXb3bS3lkEoPpj+a
0txyFedPcsYCU/iLKXVNNIxfx7+rfIyverW12Or63fVUe7y+8osqJt41WAmW
XbXNkQi+F1PGq2Z/Y/sCvxfdcSeCSdXBuJ9HvmIinqSCoLtEiOJP150mZmBT
tw7lxd0nwr269teGte+xj8Y/c8sfEIFgEHRS7/0DJL6tMmVDAL5fLaLy+QMM
fd61TobvCa4f9qrh5ZY8pKViHrrylAiy83vOxrUXIJeDc3fanhFBu9VI51Do
L7T62IHxihd4fWZXjmkfL0fxpx6bf39JBImSswRX+wpUa7BRK/oVEbr28W/T
aa1C10xssKDXRHBw3cTm8NQgskWGoucbIvSfrrB2EvyDwmxWYm+8JQJz8IqH
m2gt2mmvKWoWi+vLdmcueVUdKr4V7K/zjgjSlyJTeGbrkLFb88pB/Lvh5L64
xaqyHvn72PfIJBEh0n7XY0v9BiT1+Mt54U9EuPpF+TuF2ohygihl1BQi0E/P
za+JbUTaoadgJpUIs1E/H3/c3YR6X71M603H6+XXLW3ObEJ33nZuqv+M23bh
C9/km5Hg+61hxVlEkCzSP2j3tBl9+Hibk51DhMRgzlvBf81II/37vfe5OD+x
PrXVii3obzZr8uU3nB936omG6y3IDjt3xY9LhBI0z3f+VQuiFrxucMkjQkez
2ccH31rQq5J/J2zyiRCv3SUTVtWClCp2fb9QiOv95LWSmr8tqOSPu5JWMRGS
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
gLy51WYaY2hTVfWf1UZ0CG2+aPXxyyjie/9VdMmYDlFtsStr7XH+774z6jOh
w4WY23eyN46in1tdu7+Z0aH43mim8r9hlEo235JgQQeLa1ceVG8dRmGNJ689
s8TjlwwfJlgNoasPJadsrtJh1X35Izo/BtA5E7aK3nU6tEye/fGuox+p/zft
pmFHh82GrA+ds/8QX/dPsuhNXI96YZ6PmH0oFewFC11xfL96lTsU4veVNRf0
U9zpoLUxIq4sqgN5Dh+MiLhLhyMXdhsdvNGOdCJEpG940vH7w9S7N8QWNDOD
7ZJ4hOvP7L0n4Uk1ShDmCux+jOdHmcp8+LwCGe/mTmgG0mHQ3NOcu/4Xynfg
pt0IxvW3ZfnxnPFX9GSIu6sonA4Sh/Zf4vX6jMl2ft91PRHvvxjmuJxnG9bI
kyfg+RHn2/GtlLlGBxYgkTfxIpkON675FPMRu7BJo7y07+l4fitSt8vv9WLc
+rxdQl/pENRLVre6Pozpl//YlVtGh62XnTZB+RTGGvohUPmbDl+OiETsD5nG
vrHyJ7or6fBe8+zdl7ozmLRmfhpfLR3Wtl/1NPw9i9VdyQ+WrqfDc9bNi6cf
zGF+3vk3VBro4G0fejBZeR4b/ZG/63IL3h9qP3uK/Rawtx35Ak5tdOhX03IR
2LqI6fIUTPh34P24xqH3389FLFe9IO1zDz5PElJ0LceXMFujguBffXRIb1Xy
THBfxiTdCm609eP6POu8kkhcwXyzC3YxR/D+yBl2VZ5bwfbWFwiIj+H1dm/z
2bmbwB2eLpjYNYHPhz2fXp6wJnDfCBVWH52igwHpa2tDOIGro1SYZjRDh9Sn
L14X/CRwaWcLgx3mcP5SjhAXJgjcHPvCGz4LdIgu2LHWai0P99qTwrMRS3Qw
qb70b3kfD1fiU+GulBU6qNyNuZJ4gYdbXVYoUMjDgFvDR3xNb/FwvQcLJxpI
DBCJjkUCj3m4Kqyi6hEKAybsjX1TXvNwB7cUpZHpDBDrOGG58yMP9/XRomBR
JgPCpBWnfLJ4uGeuFN3YxmaA6nba+Q/feLgU76KzB3gZIGcmUBvE5eFmxRTt
0l/FgG1mMSXK+PqmP78favIzoLnhpoc0fj6YUt+qKsgA9D3V4DTun6DctltB
mAF2dfa/sqN4uNct+h6tF2HA8JNJhQuBPNym56PtvGsZcM1RKXuXCw9Xs2j2
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

          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{0.6870210173999567, 
        3.7634240633999525`}, {-2.6389653702907774`, 2.8009648551982753`}}, 
       "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0.6870210173999582, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.6870210173999582, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    InterpretationBox[{
      TagBox[{{
         TagBox[{
           Directive[
            PointSize[0.009166666666666668], 
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            AbsolutePointSize[3]], 
           PointBox[CompressedData["
1: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
HX2YDohrNs9PVQr+qb279WmuCPwHcM7eFg==
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{
            Annotation[{
              Directive[
               PointSize[0.009166666666666668], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0], 
               AbsolutePointSize[3]], 
              Point[CompressedData["
1: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
HX2YDohrNs9PVQr+qb279WmuCPwHcM7eFg==
               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{0.6229292872749584, 
              3.7634240633999525`}, {-2.62171, 2.80614}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0.6229292872749584, 0}, 
             "ImageSize" -> {360, 60}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> Rational[1, 6], 
             "DefaultStyle" -> {
               Directive[
                PointSize[0.009166666666666668], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                AbsolutePointSize[3]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0.6229292872749584, 
             3.7634240633999525`}, {-2.62171, 2.80614}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0.6229292872749584, 0}, "ImageSize" -> {360, 60},
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            Rational[1, 6], "DefaultStyle" -> {
              Directive[
               PointSize[0.009166666666666668], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0], 
               AbsolutePointSize[3]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]], Selectable -> False]}, 
     
     Annotation[{{
        Annotation[{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0], 
           AbsolutePointSize[3]], 
          Point[CompressedData["
1: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
HX2YDohrNs9PVQr+qb279WmuCPwHcM7eFg==
           "]]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{0.6229292872749584, 3.7634240633999525`}, {-2.62171,
           2.80614}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0.6229292872749584, 0}, "ImageSize" -> {360, 60}, 
         "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
         Rational[1, 6], "DefaultStyle" -> {
           Directive[
            PointSize[0.009166666666666668], 
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            AbsolutePointSize[3]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListPlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{430.44140625, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.6870210173999567, 
   3.7634240633999525`}, {-2.6389653702907774`, 2.8009648551982753`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[57]=",
 CellID->111112318,ExpressionUUID->"2993489f-3b6b-4838-a3cf-fbb4c3ae80c4"]
}, Open  ]],

Cell["This plot shows the quality of the nonlinear fit.", "Text",
 CellID->2069466037,ExpressionUUID->"90391520-ceef-42ff-9d24-2206aa5cf771"],

Cell[CellGroupData[{

Cell["References ", "ReferenceSection",
 CellID->1029887083,ExpressionUUID->"87a292de-bf08-4934-adbd-01ebbe86510f"],

Cell[TextData[{
 "Wolszczan, A. & Frail, D., 1992, ",
 StyleBox["Nature",
  FontSlant->"Italic"],
 ", 255:145, \[OpenCurlyDoubleQuote]A Planetary System around the Millisecond \
Pulsar PSR1257+12\[CloseCurlyDoubleQuote]; "
}], "Reference",
 CellID->2007977671,ExpressionUUID->"40de6768-0a05-450a-818c-f2e37df826a0"],

Cell[TextData[{
 "Wolszczan, A., 1994, ",
 StyleBox["Science",
  FontSlant->"Italic"],
 ", ",
 StyleBox["264",
  FontWeight->"Bold"],
 ":538, \[OpenCurlyDoubleQuote]Confirmation of Earth-Mass Planets Orbiting \
the Millisecond Pulsar PSR B1257+12\[CloseCurlyDoubleQuote]."
}], "Reference",
 CellID->375203892,ExpressionUUID->"a986bb20-a165-49f4-b696-728393f26e20"],

Cell[TextData[{
 ButtonBox["Spectral Analysis of Unevenly Sampled Data",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://numerical.recipes/book.html"], None},
  ButtonNote->"Section 13-8"],
 " in Numerical Recipes: The Art of Scientific Computing, Third Edition, by \
W.H. Press, S.A. Teukolsky, W.T. Vetterling, and B.P. Flannery. Version 3.04 \
(2011)."
}], "Reference",
 CellID->1298787108,ExpressionUUID->"4e3bcd38-9719-4aff-baca-0cb144f12d3e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 796},
WindowMargins->{{331, Automatic}, {Automatic, 50}},
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "BookToolsStyles.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"dad14235-2001-4d94-9646-2dff082c3d65"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "pulsar PSR1257+12"->{
  Cell[1467, 42, 12416, 221, 156, "Text",ExpressionUUID->"dc70f6f1-4826-434a-bd95-3cb32a038b26",
   CellTags->{"pulsar PSR1257+12", "timing residuals", "Alex Wolszczan"},
   CellID->1207958768]},
 "timing residuals"->{
  Cell[1467, 42, 12416, 221, 156, "Text",ExpressionUUID->"dc70f6f1-4826-434a-bd95-3cb32a038b26",
   CellTags->{"pulsar PSR1257+12", "timing residuals", "Alex Wolszczan"},
   CellID->1207958768],
  Cell[13886, 265, 11974, 211, 61, "Text",ExpressionUUID->"056147d0-b82f-441c-9026-acbd99b4ae72",
   CellTags->{"timing residuals", "Alex Wolszczan"},
   CellID->199620186]},
 "Alex Wolszczan"->{
  Cell[1467, 42, 12416, 221, 156, "Text",ExpressionUUID->"dc70f6f1-4826-434a-bd95-3cb32a038b26",
   CellTags->{"pulsar PSR1257+12", "timing residuals", "Alex Wolszczan"},
   CellID->1207958768],
  Cell[13886, 265, 11974, 211, 61, "Text",ExpressionUUID->"056147d0-b82f-441c-9026-acbd99b4ae72",
   CellTags->{"timing residuals", "Alex Wolszczan"},
   CellID->199620186]},
 "residuals"->{
  Cell[221168, 4318, 131, 2, 55, "Subsection",ExpressionUUID->"507b4ba3-1ac6-43c6-be33-5d4b1c126ee9",
   CellTags->"residuals",
   CellID->2140473852]},
 "Fourier"->{
  Cell[241482, 4749, 856, 19, 130, "Text",ExpressionUUID->"a32ab72a-724d-4845-8948-8d8096ab841e",
   CellGroupingRules->{"SectionGrouping", 55},
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->1896280380],
  Cell[242487, 4776, 2380, 71, 130, "Text",ExpressionUUID->"d3adde84-2020-40af-98e4-211857ebff13",
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->2127025180]},
 "astronomical time-series data"->{
  Cell[241482, 4749, 856, 19, 130, "Text",ExpressionUUID->"a32ab72a-724d-4845-8948-8d8096ab841e",
   CellGroupingRules->{"SectionGrouping", 55},
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->1896280380],
  Cell[242487, 4776, 2380, 71, 130, "Text",ExpressionUUID->"d3adde84-2020-40af-98e4-211857ebff13",
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->2127025180]},
 "spectral analysis"->{
  Cell[241482, 4749, 856, 19, 130, "Text",ExpressionUUID->"a32ab72a-724d-4845-8948-8d8096ab841e",
   CellGroupingRules->{"SectionGrouping", 55},
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->1896280380],
  Cell[242487, 4776, 2380, 71, 130, "Text",ExpressionUUID->"d3adde84-2020-40af-98e4-211857ebff13",
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->2127025180]},
 "irregularly sampled data"->{
  Cell[241482, 4749, 856, 19, 130, "Text",ExpressionUUID->"a32ab72a-724d-4845-8948-8d8096ab841e",
   CellGroupingRules->{"SectionGrouping", 55},
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->1896280380],
  Cell[242487, 4776, 2380, 71, 130, "Text",ExpressionUUID->"d3adde84-2020-40af-98e4-211857ebff13",
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->2127025180]},
 "interpolation"->{
  Cell[241482, 4749, 856, 19, 130, "Text",ExpressionUUID->"a32ab72a-724d-4845-8948-8d8096ab841e",
   CellGroupingRules->{"SectionGrouping", 55},
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->1896280380],
  Cell[242487, 4776, 2380, 71, 130, "Text",ExpressionUUID->"d3adde84-2020-40af-98e4-211857ebff13",
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->2127025180]},
 "resampling"->{
  Cell[241482, 4749, 856, 19, 130, "Text",ExpressionUUID->"a32ab72a-724d-4845-8948-8d8096ab841e",
   CellGroupingRules->{"SectionGrouping", 55},
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->1896280380],
  Cell[242487, 4776, 2380, 71, 130, "Text",ExpressionUUID->"d3adde84-2020-40af-98e4-211857ebff13",
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->2127025180]},
 "linear least-squares"->{
  Cell[241482, 4749, 856, 19, 130, "Text",ExpressionUUID->"a32ab72a-724d-4845-8948-8d8096ab841e",
   CellGroupingRules->{"SectionGrouping", 55},
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->1896280380],
  Cell[242487, 4776, 2380, 71, 130, "Text",ExpressionUUID->"d3adde84-2020-40af-98e4-211857ebff13",
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->2127025180]},
 "spectral energy"->{
  Cell[241482, 4749, 856, 19, 130, "Text",ExpressionUUID->"a32ab72a-724d-4845-8948-8d8096ab841e",
   CellGroupingRules->{"SectionGrouping", 55},
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->1896280380],
  Cell[242487, 4776, 2380, 71, 130, "Text",ExpressionUUID->"d3adde84-2020-40af-98e4-211857ebff13",
   CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
   CellID->2127025180],
  Cell[247900, 4947, 263, 8, 38, "CodeText",ExpressionUUID->"4e317bbe-b769-43b3-93bc-c92f00c34fe7",
   CellTags->"spectral energy",
   CellID->1529351766]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"pulsar PSR1257+12", 714443, 13203},
 {"timing residuals", 714662, 13207},
 {"Alex Wolszczan", 715053, 13214},
 {"residuals", 715439, 13221},
 {"Fourier", 715606, 13225},
 {"astronomical time-series data", 716299, 13233},
 {"spectral analysis", 716980, 13241},
 {"irregularly sampled data", 717668, 13249},
 {"interpolation", 718345, 13257},
 {"resampling", 719019, 13265},
 {"linear least-squares", 719703, 13273},
 {"spectral energy", 720382, 13281}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 212, 6, 108, "Section",ExpressionUUID->"4637abc1-4cce-4a45-806d-62668f94d5db",
 CounterAssignments->{{"Section", 0}},
 CellID->1419792089],
Cell[791, 30, 673, 10, 178, "Text",ExpressionUUID->"f3fa4cbb-a299-4427-9b56-ae62508f0d86",
 CellID->2000098685],
Cell[1467, 42, 12416, 221, 156, "Text",ExpressionUUID->"dc70f6f1-4826-434a-bd95-3cb32a038b26",
 CellTags->{"pulsar PSR1257+12", "timing residuals", "Alex Wolszczan"},
 CellID->1207958768],
Cell[13886, 265, 11974, 211, 61, "Text",ExpressionUUID->"056147d0-b82f-441c-9026-acbd99b4ae72",
 CellTags->{"timing residuals", "Alex Wolszczan"},
 CellID->199620186],
Cell[CellGroupData[{
Cell[25885, 480, 104, 1, 55, "Subsection",ExpressionUUID->"e9b5a951-2579-4854-ae59-127d81fed41e",
 CellID->647009488],
Cell[25992, 483, 247, 6, 38, "CodeText",ExpressionUUID->"87c9f90e-0a42-40de-b273-0e1b35a58f69",
 CellID->1578760055],
Cell[26242, 491, 322, 8, 25, "Input",ExpressionUUID->"2177b5b7-5d37-4140-8da3-4a70429db2d0",
 CellID->2059785700],
Cell[CellGroupData[{
Cell[26589, 503, 12464, 211, 29, "Input",ExpressionUUID->"cb227241-3c3e-4971-9f3d-d03e5c1d7f57",
 CellID->1381870260],
Cell[39056, 716, 117929, 2263, 601, "Output",ExpressionUUID->"d9de6b24-5406-447b-a3e3-e93c8788bf36",
 CellID->649567894]
}, Open  ]],
Cell[157000, 2982, 330, 15, 38, "CodeText",ExpressionUUID->"2c0ad3be-0a13-4abb-9c4b-ce7af43b4d18",
 CellID->1076366161],
Cell[CellGroupData[{
Cell[157355, 3001, 267, 7, 25, "Input",ExpressionUUID->"7394376f-ef79-46f5-bac1-24e66502f2a0",
 CellID->83825599],
Cell[157625, 3010, 18280, 365, 164, "Output",ExpressionUUID->"c362a924-5c77-4a2d-919f-620622efe16c",
 CellID->1628216757]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175954, 3381, 109, 1, 55, "Subsection",ExpressionUUID->"53d7de91-8bae-47f9-8277-5fa314e6a1d4",
 CellID->1894587400],
Cell[176066, 3384, 257, 9, 38, "CodeText",ExpressionUUID->"8f71f078-25a9-4913-803b-a86612420ecf",
 CellID->1590397731],
Cell[CellGroupData[{
Cell[176348, 3397, 437, 12, 25, "Input",ExpressionUUID->"1969b396-1224-467a-bd03-857698e2f82f",
 CellID->85710708],
Cell[176788, 3411, 23435, 458, 68, "Output",ExpressionUUID->"a40c3039-abc7-4e70-9939-d085191ddb81",
 CellID->593429452]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[200272, 3875, 109, 1, 55, "Subsection",ExpressionUUID->"e0b6b4b0-7540-49ee-90a8-4f963df4403b",
 CellID->2041193480],
Cell[200384, 3878, 467, 16, 59, "CodeText",ExpressionUUID->"781beb6c-cfd8-4420-b47d-4720e729c7c9",
 CellID->287557535],
Cell[CellGroupData[{
Cell[200876, 3898, 580, 15, 44, "Input",ExpressionUUID->"2a3106a1-e304-4aab-8242-1583109c501d",
 CellID->1141284995],
Cell[201459, 3915, 18052, 351, 68, "Output",ExpressionUUID->"0269daff-80cb-4ce9-bbbd-40a85a4e6c38",
 CellID->598035552]
}, Open  ]],
Cell[219526, 4269, 295, 9, 38, "CodeText",ExpressionUUID->"8a1d4ebe-345c-4e38-b42d-feb7e980ea37",
 CellID->1896839114],
Cell[CellGroupData[{
Cell[219846, 4282, 171, 3, 25, "Input",ExpressionUUID->"06b7732a-888e-48ef-bc80-c8dc627533b5",
 CellID->780249283],
Cell[220020, 4287, 594, 10, 73, "Output",ExpressionUUID->"2536d865-2c69-4b7f-8dae-1bfce3e610b6",
 CellID->2046647581]
}, Open  ]],
Cell[220629, 4300, 145, 1, 38, "CodeText",ExpressionUUID->"61827152-b906-44e0-86f3-ab710883b2cd",
 CellID->1902909659],
Cell[CellGroupData[{
Cell[220799, 4305, 171, 3, 25, "Input",ExpressionUUID->"84bf50f5-b154-48ab-b26f-ebdfa0b44ad2",
 CellID->1876167689],
Cell[220973, 4310, 146, 2, 36, "Output",ExpressionUUID->"3cb01138-babd-46c8-b9d7-1ddf57e69416",
 CellID->1849392225]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[221168, 4318, 131, 2, 55, "Subsection",ExpressionUUID->"507b4ba3-1ac6-43c6-be33-5d4b1c126ee9",
 CellTags->"residuals",
 CellID->2140473852],
Cell[221302, 4322, 177, 6, 38, "CodeText",ExpressionUUID->"a7910346-7732-4c42-b899-4f3159fff143",
 CellID->297976020],
Cell[CellGroupData[{
Cell[221504, 4332, 440, 12, 25, "Input",ExpressionUUID->"ffb77d30-c5e6-4008-accc-4255417af032",
 CellID->151103336],
Cell[221947, 4346, 18965, 381, 163, "Output",ExpressionUUID->"76c7e798-827a-4799-8cd1-ef47cb47c888",
 CellID->77555049]
}, Open  ]],
Cell[240927, 4730, 392, 11, 83, "Text",ExpressionUUID->"a7cc8fcc-b6d4-46d7-832c-442ec8ceceb1",
 CellID->1285255358]
}, Open  ]],
Cell[CellGroupData[{
Cell[241356, 4746, 123, 1, 55, "Subsection",ExpressionUUID->"ce4e2951-e9db-42b7-9b5d-981c53b6ba81",
 CellID->274623367],
Cell[241482, 4749, 856, 19, 130, "Text",ExpressionUUID->"a32ab72a-724d-4845-8948-8d8096ab841e",
 CellGroupingRules->{"SectionGrouping", 55},
 CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
 CellID->1896280380]
}, Open  ]],
Cell[CellGroupData[{
Cell[242375, 4773, 109, 1, 55, "Subsection",ExpressionUUID->"bcaf1db0-4b35-4c10-91a1-014ec13132e5",
 CellID->1048980303],
Cell[242487, 4776, 2380, 71, 130, "Text",ExpressionUUID->"d3adde84-2020-40af-98e4-211857ebff13",
 CellTags->{"Fourier", "astronomical time-series data", "spectral analysis", "irregularly sampled data", "interpolation", "resampling", "linear least-squares", "spectral energy"},
 CellID->2127025180]
}, Open  ]],
Cell[CellGroupData[{
Cell[244904, 4852, 113, 1, 55, "Subsection",ExpressionUUID->"16b2cbd9-da23-4d2b-bf84-dd912d04771a",
 CellID->1899412298],
Cell[245020, 4855, 475, 13, 60, "Text",ExpressionUUID->"997446fc-befb-4886-bd74-e2646dcd3e3f",
 CellID->1078079831],
Cell[245498, 4870, 96, 1, 36, "Text",ExpressionUUID->"c5044735-2ab4-4093-911b-30ae8d9249df",
 CellID->968189878],
Cell[245597, 4873, 1051, 32, 75, "DisplayFormula",ExpressionUUID->"e0e52837-2626-4e73-9bd3-6ea84850fb64",
 CellID->883686227],
Cell[246651, 4907, 1246, 38, 63, "Text",ExpressionUUID->"f0e20b57-125e-44d0-a273-667da4e85413",
 CellID->117514537],
Cell[247900, 4947, 263, 8, 38, "CodeText",ExpressionUUID->"4e317bbe-b769-43b3-93bc-c92f00c34fe7",
 CellTags->"spectral energy",
 CellID->1529351766],
Cell[248166, 4957, 950, 28, 68, "Input",ExpressionUUID->"9c274a24-d7d6-4c17-ae8c-c6443d86e2d7",
 CellID->583360219],
Cell[249119, 4987, 1546, 43, 137, "Text",ExpressionUUID->"8c74e1df-787c-44f0-a14a-99fbe026615e",
 CellID->865956175],
Cell[250668, 5032, 308, 8, 38, "CodeText",ExpressionUUID->"1eef7c0e-3bec-4f77-b515-3a5c86a5ec20",
 CellID->1272352178],
Cell[CellGroupData[{
Cell[251001, 5044, 349, 8, 25, "Input",ExpressionUUID->"68782f08-4e7d-4627-be1b-74b40e0389e4",
 CellID->1928382467],
Cell[251353, 5054, 140412, 2347, 257, "Output",ExpressionUUID->"7053606a-39e1-4514-ad78-c7bab8234e20",
 CellID->1819824977]
}, Open  ]],
Cell[391780, 7404, 144, 1, 36, "Text",ExpressionUUID->"69a1aa88-9ccf-44d3-a952-8dd553acc4b6",
 CellID->628757506]
}, Open  ]],
Cell[CellGroupData[{
Cell[391961, 7410, 119, 1, 55, "Subsection",ExpressionUUID->"5a07e955-bebf-4d16-b57e-50b24447c50b",
 CellID->1907860102],
Cell[392083, 7413, 539, 15, 61, "CodeText",ExpressionUUID->"0f57c5fd-75a8-44ba-a817-9102f744371f",
 CellID->1326400957],
Cell[CellGroupData[{
Cell[392647, 7432, 449, 12, 25, "Input",ExpressionUUID->"ce59a062-c11c-47c8-a0fa-36704873b784",
 CellID->1940628439],
Cell[393099, 7446, 34857, 625, 68, "Output",ExpressionUUID->"d5de4c1a-e2c5-4d3a-8fe0-614a1f14e43b",
 CellID->181792935]
}, Open  ]],
Cell[CellGroupData[{
Cell[427993, 8076, 259, 6, 25, "Input",ExpressionUUID->"95badd3e-9e78-4550-985b-637ca2b82780",
 CellID->1017446427],
Cell[428255, 8084, 14494, 290, 68, "Output",ExpressionUUID->"ebb4402d-8df7-4a3f-bc3c-d5d90d271686",
 CellID->479867532]
}, Open  ]],
Cell[442764, 8377, 194, 6, 38, "CodeText",ExpressionUUID->"8340c5e0-7ef3-4d17-b005-5ebc07806c42",
 CellID->1206343479],
Cell[CellGroupData[{
Cell[442983, 8387, 568, 14, 43, "Input",ExpressionUUID->"30f1687b-3d39-428c-bb18-754448646490",
 CellID->621740226],
Cell[443554, 8403, 100444, 1697, 208, "Output",ExpressionUUID->"75e84ae3-d06e-4b41-a531-9214e0a83c06",
 CellID->274438569]
}, Open  ]],
Cell[544013, 10103, 223, 6, 38, "CodeText",ExpressionUUID->"981431ec-5a78-458d-bd21-9b8ffcabfed7",
 CellID->274174176],
Cell[CellGroupData[{
Cell[544261, 10113, 302, 8, 25, "Input",ExpressionUUID->"6febb00c-c23d-490a-86d5-f2edf8161a5f",
 CellID->1692953217],
Cell[544566, 10123, 183, 4, 36, "Output",ExpressionUUID->"fbb1cd62-3564-4905-847b-c501daf254d6",
 CellID->1260485455]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[544798, 10133, 105, 1, 55, "Subsection",ExpressionUUID->"9aa7f9d3-5f43-4573-87bb-dc24b0e21af4",
 CellID->1275686346],
Cell[544906, 10136, 562, 15, 60, "Text",ExpressionUUID->"61bc4213-15bf-4f70-8767-43e491fbee13",
 CellID->2131169221],
Cell[545471, 10153, 564, 18, 38, "CodeText",ExpressionUUID->"a0e3d140-a96d-4907-aacb-d8b1dc60e1cb",
 CellID->52864530],
Cell[CellGroupData[{
Cell[546060, 10175, 413, 12, 50, "Input",ExpressionUUID->"d8591536-d686-425c-bec0-78d614e12e1f",
 CellID->681349034],
Cell[546476, 10189, 207, 4, 40, "Output",ExpressionUUID->"d0d8c1ec-b3f6-4ae4-aef0-68064aa8a7bd",
 CellID->323323476]
}, Open  ]],
Cell[CellGroupData[{
Cell[546720, 10198, 413, 12, 50, "Input",ExpressionUUID->"087f6132-7ea3-4e8d-ba71-82adf17ab301",
 CellID->779202950],
Cell[547136, 10212, 207, 4, 40, "Output",ExpressionUUID->"d04d4165-9f11-4635-95e8-383492100c3f",
 CellID->301921404]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[547392, 10222, 111, 1, 55, "Subsection",ExpressionUUID->"4e895a6b-89d1-4689-b58e-7f6d18d33228",
 CellID->1197501646],
Cell[547506, 10225, 689, 20, 60, "Text",ExpressionUUID->"847af846-83f2-4f64-8794-78bb113e6c5f",
 CellID->193424638],
Cell[548198, 10247, 2078, 68, 80, "CodeText",ExpressionUUID->"14580d8c-b285-4480-be71-00bf461b2b56",
 CellID->1745132955],
Cell[CellGroupData[{
Cell[550301, 10319, 1145, 34, 43, "Input",ExpressionUUID->"b522af8d-a62e-4a34-bf4f-03c7fd645754",
 CellID->117923959],
Cell[551449, 10355, 7564, 142, 53, "Output",ExpressionUUID->"7692d0be-4448-42bf-9205-818384913f1e",
 CellID->1858649290]
}, Open  ]],
Cell[559028, 10500, 128, 1, 38, "CodeText",ExpressionUUID->"f33a41f3-f329-4e94-98da-26d7806c7dd6",
 CellID->1580430759],
Cell[CellGroupData[{
Cell[559181, 10505, 179, 3, 25, "Input",ExpressionUUID->"61967b81-589c-42fa-830b-21ca2596ffb0",
 CellID->74536770],
Cell[559363, 10510, 635, 14, 54, "Output",ExpressionUUID->"c0240513-fd3f-491b-bce0-ea26c21ca2c6",
 CellID->45644662]
}, Open  ]],
Cell[560013, 10527, 516, 14, 60, "Text",ExpressionUUID->"8db8deab-bcd8-47c8-896f-62e5b39bfcb4",
 CellID->1849275283],
Cell[560532, 10543, 172, 3, 38, "CodeText",ExpressionUUID->"1d18c32a-01d5-431b-98db-8eeda70297cf",
 CellID->238858350],
Cell[CellGroupData[{
Cell[560729, 10550, 393, 12, 25, "Input",ExpressionUUID->"03c4ad79-d8d0-4093-9c5b-b901c7af7624",
 CellID->845352207],
Cell[561125, 10564, 214, 5, 36, "Output",ExpressionUUID->"e9de03ce-aa35-4524-9885-98a5c7f67c24",
 CellID->1153184523]
}, Open  ]],
Cell[561354, 10572, 153, 1, 38, "CodeText",ExpressionUUID->"f594766f-713e-4bbb-90cc-40d67c5ac56b",
 CellID->1096771470],
Cell[CellGroupData[{
Cell[561532, 10577, 496, 13, 25, "Input",ExpressionUUID->"fd72f8ae-e458-4207-a946-f2188d36ce15",
 CellID->1585954089],
Cell[562031, 10592, 150504, 2552, 284, "Output",ExpressionUUID->"2993489f-3b6b-4838-a3cf-fbb4c3ae80c4",
 CellID->111112318]
}, Open  ]],
Cell[712550, 13147, 141, 1, 36, "Text",ExpressionUUID->"90391520-ceef-42ff-9d24-2206aa5cf771",
 CellID->2069466037],
Cell[CellGroupData[{
Cell[712716, 13152, 115, 1, 69, "ReferenceSection",ExpressionUUID->"87a292de-bf08-4934-adbd-01ebbe86510f",
 CellID->1029887083],
Cell[712834, 13155, 315, 7, 44, "Reference",ExpressionUUID->"40de6768-0a05-450a-818c-f2e37df826a0",
 CellID->2007977671],
Cell[713152, 13164, 364, 10, 44, "Reference",ExpressionUUID->"a986bb20-a165-49f4-b696-728393f26e20",
 CellID->375203892],
Cell[713519, 13176, 458, 10, 44, "Reference",ExpressionUUID->"4e3bcd38-9719-4aff-baca-0cb144f12d3e",
 CellID->1298787108]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

